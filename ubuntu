commit eea29f2c816b83f2e58f10afdda6352d6de5fcd6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Apr 9 12:11:24 2024 +0200

    UBUNTU: Ubuntu-6.8.0-24.24
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f35dc47e88112e2d4001fee024cffb0b3146c048
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Apr 9 12:01:18 2024 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060654
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 80613540f76ad58b88686b759ec25d25b570b85a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Apr 9 11:59:26 2024 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5ed0f4222bc3b1f6125e7073a87301a37153aca0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Apr 9 11:45:40 2024 +0200

    UBUNTU: [Packaging] update dependencies for rtla
    
    BugLink: https://bugs.launchpad.net/bugs/2059080
    
    List the architectures where the build dependencies for rtla are needed
    to make sure that we don't introduce potential unresolved dependencies.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 168e7b6ca98325ef7253b7112ed5b861c1bb519b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Apr 8 15:16:57 2024 +0200

    UBUNTU: Ubuntu-6.8.0-23.23
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 504edf33cb9d33ab55736cf5d6cd894b9aa0e000
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Apr 8 15:15:34 2024 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060530
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ac08ec5624b9505243e400bd096bb5631bafe56f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Apr 8 15:13:52 2024 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8e01692a0532e569f55d3b9ad2fd34a4555be5c5
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Apr 8 15:10:54 2024 +0200

    UBUNTU: debian.master/dkms-versions -- update from kernel-versions (main/d2024.04.02)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 99408800697aa412fea791dd32f61035695b2709
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Apr 4 20:25:06 2024 +0200

    Linux 6.8.4
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    Link: https://lore.kernel.org/r/20240403175125.754099419@linuxfoundation.org
    Tested-by: Ronald Warsow <rwarsow@gmx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Luna Jernberg <droidbittin@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Mark Brown <broonie@kernel.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8edbc5908e49c3cf1288613e00182cfb9bcfe9f0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:27 2024 +0200

    Revert "workqueue.c: Increase workqueue name length"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 43f0cec175f92c7a01e43d5d6f276262670a97ed which is commit
    31c89007285d365aa36f71d8fb0701581c770a27 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 26494260dc9a55199a9a7621e611ae82c95a9fb9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:25 2024 +0200

    Revert "workqueue: Move pwq->max_active to wq->max_active"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 0c4ce23e6323e52d0590e78825cd3c63323d7a52 which is commit
    a045a272d887575da17ad86d6573e82871b50c27 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit aea8658231f80b3ad31f31129210c7e298bbe78e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:23 2024 +0200

    Revert "workqueue: Factor out pwq_is_empty()"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 70abdc2f6c906ffea699f6e0e08fcbd9437e6bcc which is commit
    afa87ce85379e2d93863fce595afdb5771a84004 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 288c3a7bdb2ad3ef7c9f8d8d2c2f6035eebf2e5a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:22 2024 +0200

    Revert "workqueue: Replace pwq_activate_inactive_work() with [__]pwq_activate_work()"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit f4505c2033ad25839f6fd9be6fc474b8306c44eb which is commit
    4c6380305d21e36581b451f7337a36c93b64e050 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 891e2c796bca2dc0f32497922f72e14a2bcb74f0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:20 2024 +0200

    Revert "workqueue: Move nr_active handling into helpers"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 6584970ff38fc8f875c683dbb47bb38d4132a528 which is
    commit 1c270b79ce0b8290f146255ea9057243f6dd3c17 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eb70bcea598108b892b2775948ed89a4f9991e38
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:19 2024 +0200

    Revert "workqueue: Make wq_adjust_max_active() round-robin pwqs while activating"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit ddb232dc0f1339f9ed506730fd6bee6f5e3dcb37 which is
    commit c5404d4e6df6faba1007544b5f4e62c7c14416dd upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c9b4340d96f4e2239fdaf1056bdf43e5e8674f97
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:17 2024 +0200

    Revert "workqueue: RCU protect wq->dfl_pwq and implement accessors for it"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 3fb5dbc8bb3759ad0a82d6bf5ed32866c0410a79 which is commit
    9f66cff212bb3c1cd25996aaa0dfd0c9e9d8baab upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ce89c538f3cb50f64c4d894972e661f982add004
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:16 2024 +0200

    Revert "workqueue: Introduce struct wq_node_nr_active"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 7a5cd14a4900e0017142ad479ba8e34671822fc6 which is
    commit 91ccc6e7233bb10a9c176aa4cc70d6f432a441a5 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a6cad409b792173628012e7c48c963f4550874b4
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:14 2024 +0200

    Revert "workqueue: Implement system-wide nr_active enforcement for unbound workqueues"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 843288afd3cc6f3342659c6cf81fc47684d25563 which is commit
    5797b1c18919cd9c289ded7954383e499f729ce0 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 40b0aeb24375c7ced5aba75c8ebd13f084574d90
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:29:12 2024 +0200

    Revert "workqueue: Don't call cpumask_test_cpu() with -1 CPU in wq_update_node_max_active()"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit 9fc557d489f8163c1aabcb89114b8eba960f4097 which is commit
    15930da42f8981dc42c19038042947b475b19f47 upstream.
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Audra Mitchell <audra@redhat.com>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 02e401cf90c47a7c89329601164e5f58d4bb7ffe
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 16:26:42 2024 +0200

    Revert "workqueue: Shorten events_freezable_power_efficient name"
    
    BugLink: https://bugs.launchpad.net/bugs/2060533
    
    This reverts commit fb89c8fa412f6caa34316c140e861bd3c4d7e83a which is
    commit 8318d6a6362f5903edb4c904a8dd447e59be4ad1 upstream
    
    The workqueue patches backported to 6.8.y caused some reported
    regressions, so revert them for now.
    
    Reported-by: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Link: https://lore.kernel.org/all/ce4c2f67-c298-48a0-87a3-f933d646c73b@leemhuis.info/
    Cc: Audra Mitchell <audra@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e934f1bb90645eccadd752e02a58b6ad18d945bb
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Apr 8 14:59:52 2024 +0200

    UBUNTU: [Config] updateconfigs following v6.8.3 import
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 93e4d6e2b14575abcaf075a5e47d0314662d383b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 3 15:32:51 2024 +0200

    Linux 6.8.3
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    Link: https://lore.kernel.org/r/20240401152549.131030308@linuxfoundation.org
    Tested-by: Ronald Warsow <rwarsow@gmx.de>
    Tested-by: SeongJae Park <sj@kernel.org>
    Tested-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Justin M. Forbes <jforbes@fedoraproject.org>
    Tested-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f765b62543cc3935245dca96baf7e622be609bcc
Author: Vitaly Prosyak <vitaly.prosyak@amd.com>
Date:   Thu Mar 14 22:39:26 2024 -0400

    drm/sched: fix null-ptr-deref in init entity
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f34e8bb7d6c6626933fe993e03ed59ae85e16abb upstream.
    
    The bug can be triggered by sending an amdgpu_cs_wait_ioctl
    to the AMDGPU DRM driver on any ASICs with valid context.
    The bug was reported by Joonkyo Jung <joonkyoj@yonsei.ac.kr>.
    For example the following code:
    
        static void Syzkaller2(int fd)
        {
            union drm_amdgpu_ctx arg1;
            union drm_amdgpu_wait_cs arg2;
    
            arg1.in.op = AMDGPU_CTX_OP_ALLOC_CTX;
            ret = drmIoctl(fd, 0x140106442 /* amdgpu_ctx_ioctl */, &arg1);
    
            arg2.in.handle = 0x0;
            arg2.in.timeout = 0x2000000000000;
            arg2.in.ip_type = AMD_IP_VPE /* 0x9 */;
            arg2->in.ip_instance = 0x0;
            arg2.in.ring = 0x0;
            arg2.in.ctx_id = arg1.out.alloc.ctx_id;
    
            drmIoctl(fd, 0xc0206449 /* AMDGPU_WAIT_CS * /, &arg2);
        }
    
    The ioctl AMDGPU_WAIT_CS without previously submitted job could be assumed that
    the error should be returned, but the following commit 1decbf6bb0b4dc56c9da6c5e57b994ebfc2be3aa
    modified the logic and allowed to have sched_rq equal to NULL.
    
    As a result when there is no job the ioctl AMDGPU_WAIT_CS returns success.
    The change fixes null-ptr-deref in init entity and the stack below demonstrates
    the error condition:
    
    [  +0.000007] BUG: kernel NULL pointer dereference, address: 0000000000000028
    [  +0.007086] #PF: supervisor read access in kernel mode
    [  +0.005234] #PF: error_code(0x0000) - not-present page
    [  +0.005232] PGD 0 P4D 0
    [  +0.002501] Oops: 0000 [#1] PREEMPT SMP KASAN NOPTI
    [  +0.005034] CPU: 10 PID: 9229 Comm: amd_basic Tainted: G    B   W    L     6.7.0+ #4
    [  +0.007797] Hardware name: ASUS System Product Name/ROG STRIX B550-F GAMING (WI-FI), BIOS 1401 12/03/2020
    [  +0.009798] RIP: 0010:drm_sched_entity_init+0x2d3/0x420 [gpu_sched]
    [  +0.006426] Code: 80 00 00 00 00 00 00 00 e8 1a 81 82 e0 49 89 9c 24 c0 00 00 00 4c 89 ef e8 4a 80 82 e0 49 8b 5d 00 48 8d 7b 28 e8 3d 80 82 e0 <48> 83 7b 28 00 0f 84 28 01 00 00 4d 8d ac 24 98 00 00 00 49 8d 5c
    [  +0.019094] RSP: 0018:ffffc90014c1fa40 EFLAGS: 00010282
    [  +0.005237] RAX: 0000000000000001 RBX: 0000000000000000 RCX: ffffffff8113f3fa
    [  +0.007326] RDX: fffffbfff0a7889d RSI: 0000000000000008 RDI: ffffffff853c44e0
    [  +0.007264] RBP: ffffc90014c1fa80 R08: 0000000000000001 R09: fffffbfff0a7889c
    [  +0.007266] R10: ffffffff853c44e7 R11: 0000000000000001 R12: ffff8881a719b010
    [  +0.007263] R13: ffff88810d412748 R14: 0000000000000002 R15: 0000000000000000
    [  +0.007264] FS:  00007ffff7045540(0000) GS:ffff8883cc900000(0000) knlGS:0000000000000000
    [  +0.008236] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  +0.005851] CR2: 0000000000000028 CR3: 000000011912e000 CR4: 0000000000350ef0
    [  +0.007175] Call Trace:
    [  +0.002561]  <TASK>
    [  +0.002141]  ? show_regs+0x6a/0x80
    [  +0.003473]  ? __die+0x25/0x70
    [  +0.003124]  ? page_fault_oops+0x214/0x720
    [  +0.004179]  ? preempt_count_sub+0x18/0xc0
    [  +0.004093]  ? __pfx_page_fault_oops+0x10/0x10
    [  +0.004590]  ? srso_return_thunk+0x5/0x5f
    [  +0.004000]  ? vprintk_default+0x1d/0x30
    [  +0.004063]  ? srso_return_thunk+0x5/0x5f
    [  +0.004087]  ? vprintk+0x5c/0x90
    [  +0.003296]  ? drm_sched_entity_init+0x2d3/0x420 [gpu_sched]
    [  +0.005807]  ? srso_return_thunk+0x5/0x5f
    [  +0.004090]  ? _printk+0xb3/0xe0
    [  +0.003293]  ? __pfx__printk+0x10/0x10
    [  +0.003735]  ? asm_sysvec_apic_timer_interrupt+0x1b/0x20
    [  +0.005482]  ? do_user_addr_fault+0x345/0x770
    [  +0.004361]  ? exc_page_fault+0x64/0xf0
    [  +0.003972]  ? asm_exc_page_fault+0x27/0x30
    [  +0.004271]  ? add_taint+0x2a/0xa0
    [  +0.003476]  ? drm_sched_entity_init+0x2d3/0x420 [gpu_sched]
    [  +0.005812]  amdgpu_ctx_get_entity+0x3f9/0x770 [amdgpu]
    [  +0.009530]  ? finish_task_switch.isra.0+0x129/0x470
    [  +0.005068]  ? __pfx_amdgpu_ctx_get_entity+0x10/0x10 [amdgpu]
    [  +0.010063]  ? __kasan_check_write+0x14/0x20
    [  +0.004356]  ? srso_return_thunk+0x5/0x5f
    [  +0.004001]  ? mutex_unlock+0x81/0xd0
    [  +0.003802]  ? srso_return_thunk+0x5/0x5f
    [  +0.004096]  amdgpu_cs_wait_ioctl+0xf6/0x270 [amdgpu]
    [  +0.009355]  ? __pfx_amdgpu_cs_wait_ioctl+0x10/0x10 [amdgpu]
    [  +0.009981]  ? srso_return_thunk+0x5/0x5f
    [  +0.004089]  ? srso_return_thunk+0x5/0x5f
    [  +0.004090]  ? __srcu_read_lock+0x20/0x50
    [  +0.004096]  drm_ioctl_kernel+0x140/0x1f0 [drm]
    [  +0.005080]  ? __pfx_amdgpu_cs_wait_ioctl+0x10/0x10 [amdgpu]
    [  +0.009974]  ? __pfx_drm_ioctl_kernel+0x10/0x10 [drm]
    [  +0.005618]  ? srso_return_thunk+0x5/0x5f
    [  +0.004088]  ? __kasan_check_write+0x14/0x20
    [  +0.004357]  drm_ioctl+0x3da/0x730 [drm]
    [  +0.004461]  ? __pfx_amdgpu_cs_wait_ioctl+0x10/0x10 [amdgpu]
    [  +0.009979]  ? __pfx_drm_ioctl+0x10/0x10 [drm]
    [  +0.004993]  ? srso_return_thunk+0x5/0x5f
    [  +0.004090]  ? __kasan_check_write+0x14/0x20
    [  +0.004356]  ? srso_return_thunk+0x5/0x5f
    [  +0.004090]  ? _raw_spin_lock_irqsave+0x99/0x100
    [  +0.004712]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
    [  +0.005063]  ? __pfx_arch_do_signal_or_restart+0x10/0x10
    [  +0.005477]  ? srso_return_thunk+0x5/0x5f
    [  +0.004000]  ? preempt_count_sub+0x18/0xc0
    [  +0.004237]  ? srso_return_thunk+0x5/0x5f
    [  +0.004090]  ? _raw_spin_unlock_irqrestore+0x27/0x50
    [  +0.005069]  amdgpu_drm_ioctl+0x7e/0xe0 [amdgpu]
    [  +0.008912]  __x64_sys_ioctl+0xcd/0x110
    [  +0.003918]  do_syscall_64+0x5f/0xe0
    [  +0.003649]  ? noist_exc_debug+0xe6/0x120
    [  +0.004095]  entry_SYSCALL_64_after_hwframe+0x6e/0x76
    [  +0.005150] RIP: 0033:0x7ffff7b1a94f
    [  +0.003647] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 <41> 89 c0 3d 00 f0 ff ff 77 1f 48 8b 44 24 18 64 48 2b 04 25 28 00
    [  +0.019097] RSP: 002b:00007fffffffe0a0 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [  +0.007708] RAX: ffffffffffffffda RBX: 000055555558b360 RCX: 00007ffff7b1a94f
    [  +0.007176] RDX: 000055555558b360 RSI: 00000000c0206449 RDI: 0000000000000003
    [  +0.007326] RBP: 00000000c0206449 R08: 000055555556ded0 R09: 000000007fffffff
    [  +0.007176] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fffffffe5d8
    [  +0.007238] R13: 0000000000000003 R14: 000055555555cba8 R15: 00007ffff7ffd040
    [  +0.007250]  </TASK>
    
    v2: Reworked check to guard against null ptr deref and added helpful comments
        (Christian)
    
    Cc: Christian Koenig <christian.koenig@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Luben Tuikov <ltuikov89@gmail.com>
    Cc: Bas Nieuwenhuizen <bas@basnieuwenhuizen.nl>
    Cc: Joonkyo Jung <joonkyoj@yonsei.ac.kr>
    Cc: Dokyung Song <dokyungs@yonsei.ac.kr>
    Cc: <jisoo.jang@yonsei.ac.kr>
    Cc: <yw9865@yonsei.ac.kr>
    Signed-off-by: Vitaly Prosyak <vitaly.prosyak@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Fixes: 56e449603f0a ("drm/sched: Convert the GPU scheduler to variable number of run-queues")
    Link: https://patchwork.freedesktop.org/patch/msgid/20240315023926.343164-1-vitaly.prosyak@amd.com
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 513928f297cc040bac7dbad3889774a97f52c0ef
Author: Vitaly Prosyak <vitaly.prosyak@amd.com>
Date:   Wed Mar 6 14:57:48 2024 -0500

    drm/amdgpu: fix use-after-free bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 22207fd5c80177b860279653d017474b2812af5e upstream.
    
    The bug can be triggered by sending a single amdgpu_gem_userptr_ioctl
    to the AMDGPU DRM driver on any ASICs with an invalid address and size.
    The bug was reported by Joonkyo Jung <joonkyoj@yonsei.ac.kr>.
    For example the following code:
    
    static void Syzkaller1(int fd)
    {
            struct drm_amdgpu_gem_userptr arg;
            int ret;
    
            arg.addr = 0xffffffffffff0000;
            arg.size = 0x80000000; /*2 Gb*/
            arg.flags = 0x7;
            ret = drmIoctl(fd, 0xc1186451/*amdgpu_gem_userptr_ioctl*/, &arg);
    }
    
    Due to the address and size are not valid there is a failure in
    amdgpu_hmm_register->mmu_interval_notifier_insert->__mmu_interval_notifier_insert->
    check_shl_overflow, but we even the amdgpu_hmm_register failure we still call
    amdgpu_hmm_unregister into  amdgpu_gem_object_free which causes access to a bad address.
    The following stack is below when the issue is reproduced when Kazan is enabled:
    
    [  +0.000014] Hardware name: ASUS System Product Name/ROG STRIX B550-F GAMING (WI-FI), BIOS 1401 12/03/2020
    [  +0.000009] RIP: 0010:mmu_interval_notifier_remove+0x327/0x340
    [  +0.000017] Code: ff ff 49 89 44 24 08 48 b8 00 01 00 00 00 00 ad de 4c 89 f7 49 89 47 40 48 83 c0 22 49 89 47 48 e8 ce d1 2d 01 e9 32 ff ff ff <0f> 0b e9 16 ff ff ff 4c 89 ef e8 fa 14 b3 ff e9 36 ff ff ff e8 80
    [  +0.000014] RSP: 0018:ffffc90002657988 EFLAGS: 00010246
    [  +0.000013] RAX: 0000000000000000 RBX: 1ffff920004caf35 RCX: ffffffff8160565b
    [  +0.000011] RDX: dffffc0000000000 RSI: 0000000000000004 RDI: ffff8881a9f78260
    [  +0.000010] RBP: ffffc90002657a70 R08: 0000000000000001 R09: fffff520004caf25
    [  +0.000010] R10: 0000000000000003 R11: ffffffff8161d1d6 R12: ffff88810e988c00
    [  +0.000010] R13: ffff888126fb5a00 R14: ffff88810e988c0c R15: ffff8881a9f78260
    [  +0.000011] FS:  00007ff9ec848540(0000) GS:ffff8883cc880000(0000) knlGS:0000000000000000
    [  +0.000012] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  +0.000010] CR2: 000055b3f7e14328 CR3: 00000001b5770000 CR4: 0000000000350ef0
    [  +0.000010] Call Trace:
    [  +0.000006]  <TASK>
    [  +0.000007]  ? show_regs+0x6a/0x80
    [  +0.000018]  ? __warn+0xa5/0x1b0
    [  +0.000019]  ? mmu_interval_notifier_remove+0x327/0x340
    [  +0.000018]  ? report_bug+0x24a/0x290
    [  +0.000022]  ? handle_bug+0x46/0x90
    [  +0.000015]  ? exc_invalid_op+0x19/0x50
    [  +0.000016]  ? asm_exc_invalid_op+0x1b/0x20
    [  +0.000017]  ? kasan_save_stack+0x26/0x50
    [  +0.000017]  ? mmu_interval_notifier_remove+0x23b/0x340
    [  +0.000019]  ? mmu_interval_notifier_remove+0x327/0x340
    [  +0.000019]  ? mmu_interval_notifier_remove+0x23b/0x340
    [  +0.000020]  ? __pfx_mmu_interval_notifier_remove+0x10/0x10
    [  +0.000017]  ? kasan_save_alloc_info+0x1e/0x30
    [  +0.000018]  ? srso_return_thunk+0x5/0x5f
    [  +0.000014]  ? __kasan_kmalloc+0xb1/0xc0
    [  +0.000018]  ? srso_return_thunk+0x5/0x5f
    [  +0.000013]  ? __kasan_check_read+0x11/0x20
    [  +0.000020]  amdgpu_hmm_unregister+0x34/0x50 [amdgpu]
    [  +0.004695]  amdgpu_gem_object_free+0x66/0xa0 [amdgpu]
    [  +0.004534]  ? __pfx_amdgpu_gem_object_free+0x10/0x10 [amdgpu]
    [  +0.004291]  ? do_syscall_64+0x5f/0xe0
    [  +0.000023]  ? srso_return_thunk+0x5/0x5f
    [  +0.000017]  drm_gem_object_free+0x3b/0x50 [drm]
    [  +0.000489]  amdgpu_gem_userptr_ioctl+0x306/0x500 [amdgpu]
    [  +0.004295]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
    [  +0.004270]  ? srso_return_thunk+0x5/0x5f
    [  +0.000014]  ? __this_cpu_preempt_check+0x13/0x20
    [  +0.000015]  ? srso_return_thunk+0x5/0x5f
    [  +0.000013]  ? sysvec_apic_timer_interrupt+0x57/0xc0
    [  +0.000020]  ? srso_return_thunk+0x5/0x5f
    [  +0.000014]  ? asm_sysvec_apic_timer_interrupt+0x1b/0x20
    [  +0.000022]  ? drm_ioctl_kernel+0x17b/0x1f0 [drm]
    [  +0.000496]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
    [  +0.004272]  ? drm_ioctl_kernel+0x190/0x1f0 [drm]
    [  +0.000492]  drm_ioctl_kernel+0x140/0x1f0 [drm]
    [  +0.000497]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
    [  +0.004297]  ? __pfx_drm_ioctl_kernel+0x10/0x10 [drm]
    [  +0.000489]  ? srso_return_thunk+0x5/0x5f
    [  +0.000011]  ? __kasan_check_write+0x14/0x20
    [  +0.000016]  drm_ioctl+0x3da/0x730 [drm]
    [  +0.000475]  ? __pfx_amdgpu_gem_userptr_ioctl+0x10/0x10 [amdgpu]
    [  +0.004293]  ? __pfx_drm_ioctl+0x10/0x10 [drm]
    [  +0.000506]  ? __pfx_rpm_resume+0x10/0x10
    [  +0.000016]  ? srso_return_thunk+0x5/0x5f
    [  +0.000011]  ? __kasan_check_write+0x14/0x20
    [  +0.000010]  ? srso_return_thunk+0x5/0x5f
    [  +0.000011]  ? _raw_spin_lock_irqsave+0x99/0x100
    [  +0.000015]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
    [  +0.000014]  ? srso_return_thunk+0x5/0x5f
    [  +0.000013]  ? srso_return_thunk+0x5/0x5f
    [  +0.000011]  ? srso_return_thunk+0x5/0x5f
    [  +0.000011]  ? preempt_count_sub+0x18/0xc0
    [  +0.000013]  ? srso_return_thunk+0x5/0x5f
    [  +0.000010]  ? _raw_spin_unlock_irqrestore+0x27/0x50
    [  +0.000019]  amdgpu_drm_ioctl+0x7e/0xe0 [amdgpu]
    [  +0.004272]  __x64_sys_ioctl+0xcd/0x110
    [  +0.000020]  do_syscall_64+0x5f/0xe0
    [  +0.000021]  entry_SYSCALL_64_after_hwframe+0x6e/0x76
    [  +0.000015] RIP: 0033:0x7ff9ed31a94f
    [  +0.000012] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 <41> 89 c0 3d 00 f0 ff ff 77 1f 48 8b 44 24 18 64 48 2b 04 25 28 00
    [  +0.000013] RSP: 002b:00007fff25f66790 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [  +0.000016] RAX: ffffffffffffffda RBX: 000055b3f7e133e0 RCX: 00007ff9ed31a94f
    [  +0.000012] RDX: 000055b3f7e133e0 RSI: 00000000c1186451 RDI: 0000000000000003
    [  +0.000010] RBP: 00000000c1186451 R08: 0000000000000000 R09: 0000000000000000
    [  +0.000009] R10: 0000000000000008 R11: 0000000000000246 R12: 00007fff25f66ca8
    [  +0.000009] R13: 0000000000000003 R14: 000055b3f7021ba8 R15: 00007ff9ed7af040
    [  +0.000024]  </TASK>
    [  +0.000007] ---[ end trace 0000000000000000 ]---
    
    v2: Consolidate any error handling into amdgpu_hmm_register
        which applied to kfd_bo also. (Christian)
    v3: Improve syntax and comment (Christian)
    
    Cc: Christian Koenig <christian.koenig@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Felix Kuehling <felix.kuehling@amd.com>
    Cc: Joonkyo Jung <joonkyoj@yonsei.ac.kr>
    Cc: Dokyung Song <dokyungs@yonsei.ac.kr>
    Cc: <jisoo.jang@yonsei.ac.kr>
    Cc: <yw9865@yonsei.ac.kr>
    Signed-off-by: Vitaly Prosyak <vitaly.prosyak@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7a5eff74d8d07f441436be56c38ca027035d1555
Author: Natanael Copa <ncopa@alpinelinux.org>
Date:   Thu Mar 28 11:59:13 2024 +0100

    tools/resolve_btfids: fix build with musl libc
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 62248b22d01e96a4d669cde0d7005bd51ebf9e76 upstream.
    
    Include the header that defines u32.
    This fixes build of 6.6.23 and 6.1.83 kernels for Alpine Linux, which
    uses musl libc. I assume that GNU libc indirecly pulls in linux/types.h.
    
    Fixes: 9707ac4fe2f5 ("tools/resolve_btfids: Refactor set sorting with types from btf_ids.h")
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218647
    Cc: stable@vger.kernel.org
    Signed-off-by: Natanael Copa <ncopa@alpinelinux.org>
    Tested-by: Greg Thelen <gthelen@google.com>
    Link: https://lore.kernel.org/r/20240328110103.28734-1-ncopa@alpinelinux.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 39a75e9cfc9cba38ad355d446c030c74b2ea6315
Author: Kevin Loughlin <kevinloughlin@google.com>
Date:   Wed Mar 13 12:15:46 2024 +0000

    x86/sev: Skip ROM range scans and validation for SEV-SNP guests
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 0f4a1e80989aca185d955fcd791d7750082044a2 upstream.
    
    SEV-SNP requires encrypted memory to be validated before access.
    Because the ROM memory range is not part of the e820 table, it is not
    pre-validated by the BIOS. Therefore, if a SEV-SNP guest kernel wishes
    to access this range, the guest must first validate the range.
    
    The current SEV-SNP code does indeed scan the ROM range during early
    boot and thus attempts to validate the ROM range in probe_roms().
    However, this behavior is neither sufficient nor necessary for the
    following reasons:
    
    * With regards to sufficiency, if EFI_CONFIG_TABLES are not enabled and
      CONFIG_DMI_SCAN_MACHINE_NON_EFI_FALLBACK is set, the kernel will
      attempt to access the memory at SMBIOS_ENTRY_POINT_SCAN_START (which
      falls in the ROM range) prior to validation.
    
      For example, Project Oak Stage 0 provides a minimal guest firmware
      that currently meets these configuration conditions, meaning guests
      booting atop Oak Stage 0 firmware encounter a problematic call chain
      during dmi_setup() -> dmi_scan_machine() that results in a crash
      during boot if SEV-SNP is enabled.
    
    * With regards to necessity, SEV-SNP guests generally read garbage
      (which changes across boots) from the ROM range, meaning these scans
      are unnecessary. The guest reads garbage because the legacy ROM range
      is unencrypted data but is accessed via an encrypted PMD during early
      boot (where the PMD is marked as encrypted due to potentially mapping
      actually-encrypted data in other PMD-contained ranges).
    
    In one exceptional case, EISA probing treats the ROM range as
    unencrypted data, which is inconsistent with other probing.
    
    Continuing to allow SEV-SNP guests to use garbage and to inconsistently
    classify ROM range encryption status can trigger undesirable behavior.
    For instance, if garbage bytes appear to be a valid signature, memory
    may be unnecessarily reserved for the ROM range. Future code or other
    use cases may result in more problematic (arbitrary) behavior that
    should be avoided.
    
    While one solution would be to overhaul the early PMD mapping to always
    treat the ROM region of the PMD as unencrypted, SEV-SNP guests do not
    currently rely on data from the ROM region during early boot (and even
    if they did, they would be mostly relying on garbage data anyways).
    
    As a simpler solution, skip the ROM range scans (and the otherwise-
    necessary range validation) during SEV-SNP guest early boot. The
    potential SEV-SNP guest crash due to lack of ROM range validation is
    thus avoided by simply not accessing the ROM range.
    
    In most cases, skip the scans by overriding problematic x86_init
    functions during sme_early_init() to SNP-safe variants, which can be
    likened to x86_init overrides done for other platforms (ex: Xen); such
    overrides also avoid the spread of cc_platform_has() checks throughout
    the tree.
    
    In the exceptional EISA case, still use cc_platform_has() for the
    simplest change, given (1) checks for guest type (ex: Xen domain status)
    are already performed here, and (2) these checks occur in a subsys
    initcall instead of an x86_init function.
    
      [ bp: Massage commit message, remove "we"s. ]
    
    Fixes: 9704c07bf9f7 ("x86/kernel: Validate ROM memory before accessing when SEV-SNP is active")
    Signed-off-by: Kevin Loughlin <kevinloughlin@google.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: <stable@kernel.org>
    Link: https://lore.kernel.org/r/20240313121546.2964854-1-kevinloughlin@google.com
    Signed-off-by: Kevin Loughlin <kevinloughlin@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 04394d1e2156bda4595a19923f6fb40b9487af89
Author: Sandipan Das <sandipan.das@amd.com>
Date:   Mon Mar 25 13:17:53 2024 +0530

    perf/x86/amd/core: Update and fix stalled-cycles-* events for Zen 2 and later
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit c7b2edd8377be983442c1344cb940cd2ac21b601 upstream.
    
    AMD processors based on Zen 2 and later microarchitectures do not
    support PMCx087 (instruction pipe stalls) which is used as the backing
    event for "stalled-cycles-frontend" and "stalled-cycles-backend".
    
    Use PMCx0A9 (cycles where micro-op queue is empty) instead to count
    frontend stalls and remove the entry for backend stalls since there
    is no direct replacement.
    
    Signed-off-by: Sandipan Das <sandipan.das@amd.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Ian Rogers <irogers@google.com>
    Fixes: 3fe3331bb285 ("perf/x86/amd: Add event map for AMD Family 17h")
    Link: https://lore.kernel.org/r/03d7fc8fa2a28f9be732116009025bdec1b3ec97.1711352180.git.sandipan.das@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6579a1ab4888a27668e53ae9cc4f41f3b033d545
Author: Xingui Yang <yangxingui@huawei.com>
Date:   Thu Mar 7 14:14:13 2024 +0000

    scsi: libsas: Fix disk not being scanned in after being removed
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 8e68a458bcf5b5cb9c3624598bae28f08251601f upstream.
    
    As of commit d8649fc1c5e4 ("scsi: libsas: Do discovery on empty PHY to
    update PHY info"), do discovery will send a new SMP_DISCOVER and update
    phy->phy_change_count. We found that if the disk is reconnected and phy
    change_count changes at this time, the disk scanning process will not be
    triggered.
    
    Therefore, call sas_set_ex_phy() to update the PHY info with the results of
    the last query. And because the previous phy info will be used when calling
    sas_unregister_devs_sas_addr(), sas_unregister_devs_sas_addr() should be
    called before sas_set_ex_phy().
    
    Fixes: d8649fc1c5e4 ("scsi: libsas: Do discovery on empty PHY to update PHY info")
    Signed-off-by: Xingui Yang <yangxingui@huawei.com>
    Link: https://lore.kernel.org/r/20240307141413.48049-3-yangxingui@huawei.com
    Reviewed-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6bfc124501f03a1e07bdc1e106d93117fb2aa386
Author: Xingui Yang <yangxingui@huawei.com>
Date:   Thu Mar 7 14:14:12 2024 +0000

    scsi: libsas: Add a helper sas_get_sas_addr_and_dev_type()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit a57345279fd311ba679b8083feb0eec5272c7729 upstream.
    
    Add a helper to get attached_sas_addr and device type from disc_resp.
    
    Suggested-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Xingui Yang <yangxingui@huawei.com>
    Link: https://lore.kernel.org/r/20240307141413.48049-2-yangxingui@huawei.com
    Reviewed-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7d6b5f4c377c70b20dabe8d4a7ff425d892570e2
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Mon Mar 4 14:06:48 2024 +0500

    scsi: lpfc: Correct size for wqe for memset()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 28d41991182c210ec1654f8af2e140ef4cc73f20 upstream.
    
    The wqe is of type lpfc_wqe128. It should be memset with the same type.
    
    Fixes: 6c621a2229b0 ("scsi: lpfc: Separate NVMET RQ buffer posting from IO resources SGL/iocbq/context")
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Link: https://lore.kernel.org/r/20240304090649.833953-1-usama.anjum@collabora.com
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Justin Tee <justintee8345@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 45478c6ffa421ef259e932635bc95da27a9c840f
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Mon Mar 4 14:11:19 2024 +0500

    scsi: lpfc: Correct size for cmdwqe/rspwqe for memset()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 16cc2ba71b9f6440805aef7f92ba0f031f79b765 upstream.
    
    The cmdwqe and rspwqe are of type lpfc_wqe128. They should be memset() with
    the same type.
    
    Fixes: 61910d6a5243 ("scsi: lpfc: SLI path split: Refactor CT paths")
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Link: https://lore.kernel.org/r/20240304091119.847060-1-usama.anjum@collabora.com
    Reviewed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2503af3e9c839d3570f84cbd4b9a62ff96c3d883
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Tue Mar 12 13:50:08 2024 +0200

    usb: dwc3: pci: Drop duplicate ID
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f121531703ae442edc1dde4b56803680628bc5b7 upstream.
    
    Intel Arrow Lake CPU uses the Meteor Lake ID with this
    controller (the controller that's part of the Intel Arrow
    Lake chipset (PCH) does still have unique PCI ID).
    
    Fixes: de4b5b28c87c ("usb: dwc3: pci: add support for the Intel Arrow Lake-H")
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/20240312115008.1748637-1-heikki.krogerus@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 52c858f730f56332d5509be77422ee6dbc535273
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Tue Mar 12 07:27:57 2024 -0700

    Revert "x86/bugs: Use fixed addressing for VERW operand"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 532a0c57d7ff75e8f07d4e25cba4184989e2a241 upstream.
    
    This was reverts commit 8009479ee919b9a91674f48050ccbff64eafedaa.
    
    It was originally in x86/urgent, but was deemed wrong so got zapped.
    But in the meantime, x86/urgent had been merged into x86/apic to
    resolve a conflict.  I didn't notice the merge so didn't zap it
    from x86/apic and it managed to make it up with the x86/apic
    material.
    
    The reverted commit is known to cause some KASAN problems.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d29a1d41fc0a928cd217627533528de74a473958
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Feb 26 15:52:33 2024 -0800

    x86/bugs: Use fixed addressing for VERW operand
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 8009479ee919b9a91674f48050ccbff64eafedaa upstream.
    
    The macro used for MDS mitigation executes VERW with relative
    addressing for the operand. This was necessary in earlier versions of
    the series. Now it is unnecessary and creates a problem for backports
    on older kernels that don't support relocations in alternatives.
    Relocation support was added by commit 270a69c4485d ("x86/alternative:
    Support relocations in alternatives").  Also asm for fixed addressing
    is much cleaner than relative RIP addressing.
    
    Simplify the asm by using fixed addressing for VERW operand.
    
    [ dhansen: tweak changelog ]
    
    Closes: https://lore.kernel.org/lkml/20558f89-299b-472e-9a96-171403a83bd6@suse.com/
    Fixes: baf8361e5455 ("x86/bugs: Add asm helpers for executing VERW")
    Reported-by: Nikolay Borisov <nik.borisov@suse.com>
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lore.kernel.org/all/20240226-verw-arg-fix-v1-1-7b37ee6fd57d%40linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e8bdd7f3e83b96dae4c746bd3b0654e13d2c43c9
Author: Hamza Mahfooz <hamza.mahfooz@amd.com>
Date:   Thu Mar 21 16:09:21 2024 -0400

    drm/amd/display: fix IPX enablement
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 1202f794cdaa4f0ba6a456bc034f2db6cfcf5579 upstream.
    
    We need to re-enable idle power optimizations after entering PSR. Since,
    we get kicked out of idle power optimizations before entering PSR
    (entering PSR requires us to write to DCN registers, which isn't allowed
    while we are in IPS).
    
    Fixes: a9b1a4f684b3 ("drm/amd/display: Add more checks for exiting idle in DC")
    Tested-by: Mark Broadworth <mark.broadworth@amd.com>
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9457e724cf824ca92aed1b45f1753a14547f338
Author: Baoquan He <bhe@redhat.com>
Date:   Mon Mar 25 09:50:50 2024 +0800

    crash: use macro to add crashk_res into iomem early for specific arch
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 32fbe5246582af4f611ccccee33fd6e559087252 upstream.
    
    There are regression reports[1][2] that crashkernel region on x86_64 can't
    be added into iomem tree sometime.  This causes the later failure of kdump
    loading.
    
    This happened after commit 4a693ce65b18 ("kdump: defer the insertion of
    crashkernel resources") was merged.
    
    Even though, these reported issues are proved to be related to other
    component, they are just exposed after above commmit applied, I still
    would like to keep crashk_res and crashk_low_res being added into iomem
    early as before because the early adding has been always there on x86_64
    and working very well.  For safety of kdump, Let's change it back.
    
    Here, add a macro HAVE_ARCH_ADD_CRASH_RES_TO_IOMEM_EARLY to limit that
    only ARCH defining the macro can have the early adding
    crashk_res/_low_res into iomem. Then define
    HAVE_ARCH_ADD_CRASH_RES_TO_IOMEM_EARLY on x86 to enable it.
    
    Note: In reserve_crashkernel_low(), there's a remnant of crashk_low_res
    handling which was mistakenly added back in commit 85fcde402db1 ("kexec:
    split crashkernel reservation code out from crash_core.c").
    
    [1]
    [PATCH V2] x86/kexec: do not update E820 kexec table for setup_data
    https://lore.kernel.org/all/Zfv8iCL6CT2JqLIC@darkstar.users.ipa.redhat.com/T/#u
    
    [2]
    Question about Address Range Validation in Crash Kernel Allocation
    https://lore.kernel.org/all/4eeac1f733584855965a2ea62fa4da58@huawei.com/T/#u
    
    Link: https://lkml.kernel.org/r/ZgDYemRQ2jxjLkq+@MiWiFi-R3L-srv
    Fixes: 4a693ce65b18 ("kdump: defer the insertion of crashkernel resources")
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Huacai Chen <chenhuacai@loongson.cn>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Jiri Bohac <jbohac@suse.cz>
    Cc: Li Huafei <lihuafei1@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d96532665d16a61fe7a7f602b6edcdddf07fd3c5
Author: Borislav Petkov (AMD) <bp@alien8.de>
Date:   Thu Mar 28 13:59:05 2024 +0100

    x86/bugs: Fix the SRSO mitigation on Zen3/4
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 4535e1a4174c4111d92c5a9a21e542d232e0fcaa upstream.
    
    The original version of the mitigation would patch in the calls to the
    untraining routines directly.  That is, the alternative() in UNTRAIN_RET
    will patch in the CALL to srso_alias_untrain_ret() directly.
    
    However, even if commit e7c25c441e9e ("x86/cpu: Cleanup the untrain
    mess") meant well in trying to clean up the situation, due to micro-
    architectural reasons, the untraining routine srso_alias_untrain_ret()
    must be the target of a CALL instruction and not of a JMP instruction as
    it is done now.
    
    Reshuffle the alternative macros to accomplish that.
    
    Fixes: e7c25c441e9e ("x86/cpu: Cleanup the untrain mess")
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e725d9718772027268439ea0db9892e67e65a4d7
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Feb 27 22:11:26 2024 +0530

    scsi: qla2xxx: Delay I/O Abort on PCI error
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 591c1fdf2016d118b8fbde427b796fac13f3f070 upstream.
    
    Currently when PCI error is detected, I/O is aborted manually through the
    ABORT IOCB mechanism which is not guaranteed to succeed.
    
    Instead, wait for the OS or system to notify driver to wind down I/O
    through the pci_error_handlers api.  Set eeh_busy flag to pause all traffic
    and wait for I/O to drain.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-11-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e25328035ee8661ab24b2747c42623cbe09d3380
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Tue Feb 27 22:11:25 2024 +0530

    scsi: qla2xxx: Change debug message during driver unload
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit b5a30840727a3e41d12a336d19f6c0716b299161 upstream.
    
    Upon driver unload, purge_mbox flag is set and the heartbeat monitor thread
    detects this flag and does not send the mailbox command down to FW with a
    debug message "Error detected: purge[1] eeh[0] cmd=0x0, Exiting".  This
    being not a real error, change the debug message.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-10-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f9a4dd6430200b2f9b98928949a8481550e422d7
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Tue Feb 27 22:11:24 2024 +0530

    scsi: qla2xxx: Fix double free of fcport
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 82f522ae0d97119a43da53e0f729275691b9c525 upstream.
    
    The server was crashing after LOGO because fcport was getting freed twice.
    
     -----------[ cut here ]-----------
     kernel BUG at mm/slub.c:371!
     invalid opcode: 0000 1 SMP PTI
     CPU: 35 PID: 4610 Comm: bash Kdump: loaded Tainted: G OE --------- - - 4.18.0-425.3.1.el8.x86_64 #1
     Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021
     RIP: 0010:set_freepointer.part.57+0x0/0x10
     RSP: 0018:ffffb07107027d90 EFLAGS: 00010246
     RAX: ffff9cb7e3150000 RBX: ffff9cb7e332b9c0 RCX: ffff9cb7e3150400
     RDX: 0000000000001f37 RSI: 0000000000000000 RDI: ffff9cb7c0005500
     RBP: fffff693448c5400 R08: 0000000080000000 R09: 0000000000000009
     R10: 0000000000000000 R11: 0000000000132af0 R12: ffff9cb7c0005500
     R13: ffff9cb7e3150000 R14: ffffffffc06990e0 R15: ffff9cb7ea85ea58
     FS: 00007ff6b79c2740(0000) GS:ffff9cb8f7ec0000(0000) knlGS:0000000000000000
     CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 000055b426b7d700 CR3: 0000000169c18002 CR4: 00000000007706e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     PKRU: 55555554
     Call Trace:
     kfree+0x238/0x250
     qla2x00_els_dcmd_sp_free+0x20/0x230 [qla2xxx]
     ? qla24xx_els_dcmd_iocb+0x607/0x690 [qla2xxx]
     qla2x00_issue_logo+0x28c/0x2a0 [qla2xxx]
     ? qla2x00_issue_logo+0x28c/0x2a0 [qla2xxx]
     ? kernfs_fop_write+0x11e/0x1a0
    
    Remove one of the free calls and add check for valid fcport. Also use
    function qla2x00_free_fcport() instead of kfree().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-9-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a5f70f3c2b90d9485a2f5598d7afd707dff4f08c
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Tue Feb 27 22:11:23 2024 +0530

    scsi: qla2xxx: Fix double free of the ha->vp_map pointer
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit e288285d47784fdcf7c81be56df7d65c6f10c58b upstream.
    
    Coverity scan reported potential risk of double free of the pointer
    ha->vp_map.  ha->vp_map was freed in qla2x00_mem_alloc(), and again freed
    in function qla2x00_mem_free(ha).
    
    Assign NULL to vp_map and kfree take care of NULL.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-8-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 904bd5fa3b26274ee678e427a146c2ddbd41b0d6
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Feb 27 22:11:22 2024 +0530

    scsi: qla2xxx: Fix command flush on cable pull
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit a27d4d0e7de305def8a5098a614053be208d1aa1 upstream.
    
    System crash due to command failed to flush back to SCSI layer.
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000000
     PGD 0 P4D 0
     Oops: 0000 [#1] SMP NOPTI
     CPU: 27 PID: 793455 Comm: kworker/u130:6 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-372.9.1.el8.x86_64 #1
     Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021
     Workqueue: nvme-wq nvme_fc_connect_ctrl_work [nvme_fc]
     RIP: 0010:__wake_up_common+0x4c/0x190
     Code: 24 10 4d 85 c9 74 0a 41 f6 01 04 0f 85 9d 00 00 00 48 8b 43 08 48 83 c3 08 4c 8d 48 e8 49 8d 41 18 48 39 c3 0f 84 f0 00 00 00 <49> 8b 41 18 89 54 24 08 31 ed 4c 8d 70 e8 45 8b 29 41 f6 c5 04 75
     RSP: 0018:ffff95f3e0cb7cd0 EFLAGS: 00010086
     RAX: 0000000000000000 RBX: ffff8b08d3b26328 RCX: 0000000000000000
     RDX: 0000000000000001 RSI: 0000000000000003 RDI: ffff8b08d3b26320
     RBP: 0000000000000001 R08: 0000000000000000 R09: ffffffffffffffe8
     R10: 0000000000000000 R11: ffff95f3e0cb7a60 R12: ffff95f3e0cb7d20
     R13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000
     FS:  0000000000000000(0000) GS:ffff8b2fdf6c0000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000000 CR3: 0000002f1e410002 CR4: 00000000007706e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     PKRU: 55555554
     Call Trace:
      __wake_up_common_lock+0x7c/0xc0
      qla_nvme_ls_req+0x355/0x4c0 [qla2xxx]
     qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae1407ca000 from port 21:32:00:02:ac:07:ee:b8 loop_id 0x02 s_id 01:02:00 logout 1 keep 0 els_logo 0
     ? __nvme_fc_send_ls_req+0x260/0x380 [nvme_fc]
     qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:00:02:ac:07:ee:b8 state transitioned from ONLINE to LOST - portid=010200.
      ? nvme_fc_send_ls_req.constprop.42+0x1a/0x45 [nvme_fc]
     qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320002ac07eeb8. rport ffff8ae598122000 roles 1
     ? nvme_fc_connect_ctrl_work.cold.63+0x1e3/0xa7d [nvme_fc]
     qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae14801e000 from port 21:32:01:02:ad:f7:ee:b8 loop_id 0x04 s_id 01:02:01 logout 1 keep 0 els_logo 0
      ? __switch_to+0x10c/0x450
     ? process_one_work+0x1a7/0x360
     qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:01:02:ad:f7:ee:b8 state transitioned from ONLINE to LOST - portid=010201.
      ? worker_thread+0x1ce/0x390
      ? create_worker+0x1a0/0x1a0
     qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320102adf7eeb8. rport ffff8ae3b2312800 roles 70
      ? kthread+0x10a/0x120
     qla2xxx [0000:12:00.1]-2112:3: qla_nvme_unregister_remote_port: unregister remoteport on ffff8ae14801e000 21320102adf7eeb8
      ? set_kthread_struct+0x40/0x40
     qla2xxx [0000:12:00.1]-2110:3: remoteport_delete of ffff8ae14801e000 21320102adf7eeb8 completed.
      ? ret_from_fork+0x1f/0x40
     qla2xxx [0000:12:00.1]-f086:3: qlt_free_session_done: waiting for sess ffff8ae14801e000 logout
    
    The system was under memory stress where driver was not able to allocate an
    SRB to carry out error recovery of cable pull.  The failure to flush causes
    upper layer to start modifying scsi_cmnd.  When the system frees up some
    memory, the subsequent cable pull trigger another command flush. At this
    point the driver access a null pointer when attempting to DMA unmap the
    SGL.
    
    Add a check to make sure commands are flush back on session tear down to
    prevent the null pointer access.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-7-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 63274968bd83fa1efa689fda3ddd7054ccb14acb
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Feb 27 22:11:21 2024 +0530

    scsi: qla2xxx: NVME|FCP prefer flag not being honored
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 69aecdd410106dc3a8f543a4f7ec6379b995b8d0 upstream.
    
    Changing of [FCP|NVME] prefer flag in flash has no effect on driver. For
    device that supports both FCP + NVMe over the same connection, driver
    continues to connect to this device using the previous successful login
    mode.
    
    On completion of flash update, adapter will be reset. Driver will
    reset the prefer flag based on setting from flash.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-6-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a90817301bb72b6f96569bfcd854f92de7c0a4b7
Author: Bikash Hazarika <bhazarika@marvell.com>
Date:   Tue Feb 27 22:11:20 2024 +0530

    scsi: qla2xxx: Update manufacturer detail
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 688fa069fda6fce24d243cddfe0c7024428acb74 upstream.
    
    Update manufacturer detail from "Marvell Semiconductor, Inc." to
    "Marvell".
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Bikash Hazarika <bhazarika@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-5-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 06d3809fd4d05f9d13ad80559ea1982fb7760d70
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Feb 27 22:11:19 2024 +0530

    scsi: qla2xxx: Split FCE|EFT trace control
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 76a192e1a566e15365704b9f8fb3b70825f85064 upstream.
    
    Current code combines the allocation of FCE|EFT trace buffers and enables
    the features all in 1 step.
    
    Split this step into separate steps in preparation for follow-on patch to
    allow user to have a choice to enable / disable FCE trace feature.
    
    Cc: stable@vger.kernel.org
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-4-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 48e945d52c7928a975af7f90d637bfaed2eb3fc6
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Feb 27 22:11:18 2024 +0530

    scsi: qla2xxx: Fix N2N stuck connection
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 881eb861ca3877300570db10abbf11494e48548d upstream.
    
    Disk failed to rediscover after chip reset error injection. The chip reset
    happens at the time when a PLOGI is being sent. This causes a flag to be
    left on which blocks the retry. Clear the blocking flag.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-3-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4664ace945cb7497dddb871c2cb58663594ce641
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Feb 27 22:11:17 2024 +0530

    scsi: qla2xxx: Prevent command send on chip reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 4895009c4bb72f71f2e682f1e7d2c2d96e482087 upstream.
    
    Currently IOCBs are allowed to push through while chip reset could be in
    progress. During chip reset the outstanding_cmds array is cleared
    twice. Once when any command on this array is returned as failed and
    secondly when the array is initialize to zero. If a command is inserted on
    to the array between these intervals, then the command will be lost.  Check
    for chip reset before sending IOCB.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20240227164127.36465-2-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f0783d292d7488f9be2d4ce784728c2987dd5653
Author: Christian A. Ehrhardt <lk@c--e.de>
Date:   Wed Mar 20 08:39:26 2024 +0100

    usb: typec: ucsi: Clear UCSI_CCI_RESET_COMPLETE before reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 3de4f996a0b5412aa451729008130a488f71563e upstream.
    
    Check the UCSI_CCI_RESET_COMPLETE complete flag before starting
    another reset. Use a UCSI_SET_NOTIFICATION_ENABLE command to clear
    the flag if it is set.
    
    Signed-off-by: Christian A. Ehrhardt <lk@c--e.de>
    Cc: stable <stable@kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Tested-by: Neil Armstrong <neil.armstrong@linaro.org> # on SM8550-QRD
    Link: https://lore.kernel.org/r/20240320073927.1641788-6-lk@c--e.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ba8033d06726f96c49d4dacebd5cbceb0ba5becb
Author: Christian A. Ehrhardt <lk@c--e.de>
Date:   Wed Mar 20 08:39:25 2024 +0100

    usb: typec: ucsi_acpi: Refactor and fix DELL quirk
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 6aaceb7d9cd00f3e065dc4b054ecfe52c5253b03 upstream.
    
    Some DELL systems don't like UCSI_ACK_CC_CI commands with the
    UCSI_ACK_CONNECTOR_CHANGE but not the UCSI_ACK_COMMAND_COMPLETE
    bit set. The current quirk still leaves room for races because
    it requires two consecutive ACK commands to be sent.
    
    Refactor and significantly simplify the quirk to fix this:
    Send a dummy command and bundle the connector change ack with the
    command completion ack in a single UCSI_ACK_CC_CI command.
    This removes the need to probe for the quirk.
    
    While there define flag bits for struct ucsi_acpi->flags in ucsi_acpi.c
    and don't re-use definitions from ucsi.h for struct ucsi->flags.
    
    Fixes: f3be347ea42d ("usb: ucsi_acpi: Quirk to ack a connector change ack cmd")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian A. Ehrhardt <lk@c--e.de>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Tested-by: Neil Armstrong <neil.armstrong@linaro.org> # on SM8550-QRD
    Link: https://lore.kernel.org/r/20240320073927.1641788-5-lk@c--e.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a9f37583c19819a2f4e9c4362199d45ab7b23b9
Author: Christian A. Ehrhardt <lk@c--e.de>
Date:   Wed Mar 20 08:39:24 2024 +0100

    usb: typec: ucsi: Ack unsupported commands
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 6b5c85ddeea77d18c4b69e3bda60e9374a20c304 upstream.
    
    If a command completes the OPM must send an ack. This applies
    to unsupported commands, too.
    
    Send the required ACK for unsupported commands.
    
    Signed-off-by: Christian A. Ehrhardt <lk@c--e.de>
    Cc: stable <stable@kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Tested-by: Neil Armstrong <neil.armstrong@linaro.org> # on SM8550-QRD
    Link: https://lore.kernel.org/r/20240320073927.1641788-4-lk@c--e.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dd671336e58b8e1fb03927063f96112bc56c7e54
Author: Christian A. Ehrhardt <lk@c--e.de>
Date:   Wed Mar 20 08:39:22 2024 +0100

    usb: typec: ucsi: Clear EVENT_PENDING under PPM lock
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 15b2e71b4653b3e13df34695a29ebeee237c5af2 upstream.
    
    Suppose we sleep on the PPM lock after clearing the EVENT_PENDING
    bit because the thread for another connector is executing a command.
    In this case the command completion of the other command will still
    report the connector change for our connector.
    
    Clear the EVENT_PENDING bit under the PPM lock to avoid another
    useless call to ucsi_handle_connector_change() in this case.
    
    Fixes: c9aed03a0a68 ("usb: ucsi: Add missing ppm_lock")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Christian A. Ehrhardt <lk@c--e.de>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Tested-by: Neil Armstrong <neil.armstrong@linaro.org> # on SM8550-QRD
    Link: https://lore.kernel.org/r/20240320073927.1641788-2-lk@c--e.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a7139530d68be62175c09f9e286009d3c3ee3cd8
Author: Kyle Tso <kyletso@google.com>
Date:   Tue Mar 19 15:43:09 2024 +0800

    usb: typec: Return size of buffer if pd_set operation succeeds
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 53f5094fdf5deacd99b8655df692e9278506724d upstream.
    
    The attribute writing should return the number of bytes used from the
    buffer on success.
    
    Fixes: a7cff92f0635 ("usb: typec: USB Power Delivery helpers for ports and partners")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kyle Tso <kyletso@google.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20240319074309.3306579-1-kyletso@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3e12a01924e6710e95c4f462f58e679aaedeb5ae
Author: Kyle Tso <kyletso@google.com>
Date:   Tue Mar 12 01:23:06 2024 +0800

    usb: typec: tcpm: Update PD of Type-C port upon pd_set
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 17af5050dead6cbcca12c1fcd17e0bb8bb284eae upstream.
    
    The PD of Type-C port needs to be updated in pd_set. Unlink the Type-C
    port device to the old PD before linking it to a new one.
    
    Fixes: cd099cde4ed2 ("usb: typec: tcpm: Support multiple capabilities")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kyle Tso <kyletso@google.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20240311172306.3911309-1-kyletso@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 08857f1a2d7876f015b4bfefbc0fe8072a20e85b
Author: Kyle Tso <kyletso@google.com>
Date:   Mon Mar 11 22:45:00 2024 +0800

    usb: typec: tcpm: Correct port source pdo array in pd_set callback
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 893cd9469c68a89a34956121685617dbb37497b1 upstream.
    
    In tcpm_pd_set, the array of port source capabilities is port->src_pdo,
    not port->snk_pdo.
    
    Fixes: cd099cde4ed2 ("usb: typec: tcpm: Support multiple capabilities")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kyle Tso <kyletso@google.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20240311144500.3694849-1-kyletso@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec15069bbaac230bc1c5454d697c0ad2c8bb640c
Author: Xu Yang <xu.yang_2@nxp.com>
Date:   Mon Mar 11 14:52:19 2024 +0800

    usb: typec: tcpm: fix double-free issue in tcpm_port_unregister_pd()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit b63f90487bdf93a4223ce7853d14717e9d452856 upstream.
    
    When unregister pd capabilitie in tcpm, KASAN will capture below double
    -free issue. The root cause is the same capabilitiy will be kfreed twice,
    the first time is kfreed by pd_capabilities_release() and the second time
    is explicitly kfreed by tcpm_port_unregister_pd().
    
    [    3.988059] BUG: KASAN: double-free in tcpm_port_unregister_pd+0x1a4/0x3dc
    [    3.995001] Free of addr ffff0008164d3000 by task kworker/u16:0/10
    [    4.001206]
    [    4.002712] CPU: 2 PID: 10 Comm: kworker/u16:0 Not tainted 6.8.0-rc5-next-20240220-05616-g52728c567a55 #53
    [    4.012402] Hardware name: Freescale i.MX8QXP MEK (DT)
    [    4.017569] Workqueue: events_unbound deferred_probe_work_func
    [    4.023456] Call trace:
    [    4.025920]  dump_backtrace+0x94/0xec
    [    4.029629]  show_stack+0x18/0x24
    [    4.032974]  dump_stack_lvl+0x78/0x90
    [    4.036675]  print_report+0xfc/0x5c0
    [    4.040289]  kasan_report_invalid_free+0xa0/0xc0
    [    4.044937]  __kasan_slab_free+0x124/0x154
    [    4.049072]  kfree+0xb4/0x1e8
    [    4.052069]  tcpm_port_unregister_pd+0x1a4/0x3dc
    [    4.056725]  tcpm_register_port+0x1dd0/0x2558
    [    4.061121]  tcpci_register_port+0x420/0x71c
    [    4.065430]  tcpci_probe+0x118/0x2e0
    
    To fix the issue, this will remove kree() from tcpm_port_unregister_pd().
    
    Fixes: cd099cde4ed2 ("usb: typec: tcpm: Support multiple capabilities")
    cc: stable@vger.kernel.org
    Suggested-by: Aisheng Dong <aisheng.dong@nxp.com>
    Signed-off-by: Xu Yang <xu.yang_2@nxp.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20240311065219.777037-1-xu.yang_2@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ac3522765b2282063a6c6b5da46b5c66e04a1aeb
Author: Krishna Kurapati <quic_kriskura@quicinc.com>
Date:   Fri Mar 1 09:39:14 2024 +0530

    usb: typec: ucsi: Fix race between typec_switch and role_switch
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f5e9bda03aa50ffad36eccafe893d004ef213c43 upstream.
    
    When orientation switch is enabled in ucsi glink, there is a xhci
    probe failure seen when booting up in host mode in reverse
    orientation.
    
    During bootup the following things happen in multiple drivers:
    
    a) DWC3 controller driver initializes the core in device mode when the
    dr_mode is set to DRD. It relies on role_switch call to change role to
    host.
    
    b) QMP driver initializes the lanes to TYPEC_ORIENTATION_NORMAL as a
    normal routine. It relies on the typec_switch_set call to get notified
    of orientation changes.
    
    c) UCSI core reads the UCSI_GET_CONNECTOR_STATUS via the glink and
    provides initial role switch to dwc3 controller.
    
    When booting up in host mode with orientation TYPEC_ORIENTATION_REVERSE,
    then we see the following things happening in order:
    
    a) UCSI gives initial role as host to dwc3 controller ucsi_register_port.
    Upon receiving this notification, the dwc3 core needs to program GCTL from
    PRTCAP_DEVICE to PRTCAP_HOST and as part of this change, it asserts GCTL
    Core soft reset and waits for it to be  completed before shifting it to
    host. Only after the reset is done will the dwc3_host_init be invoked and
    xhci is probed. DWC3 controller expects that the usb phy's are stable
    during this process i.e., the phy init is already done.
    
    b) During the 100ms wait for GCTL core soft reset, the actual notification
    from PPM is received by ucsi_glink via pmic glink for changing role to
    host. The pmic_glink_ucsi_notify routine first sends the orientation
    change to QMP and then sends role to dwc3 via ucsi framework. This is
    happening exactly at the time GCTL core soft reset is being processed.
    
    c) When QMP driver receives typec switch to TYPEC_ORIENTATION_REVERSE, it
    then re-programs the phy at the instant GCTL core soft reset has been
    asserted by dwc3 controller due to which the QMP PLL lock fails in
    qmp_combo_usb_power_on.
    
    d) After the 100ms of GCTL core soft reset is completed, the dwc3 core
    goes for initializing the host mode and invokes xhci probe. But at this
    point the QMP is non-responsive and as a result, the xhci plat probe fails
    during xhci_reset.
    
    Fix this by passing orientation switch to available ucsi instances if
    their gpio configuration is available before ucsi_register is invoked so
    that by the time, the pmic_glink_ucsi_notify provides typec_switch to QMP,
    the lane is already configured and the call would be a NOP thus not racing
    with role switch.
    
    Cc: stable@vger.kernel.org
    Fixes: c6165ed2f425 ("usb: ucsi: glink: use the connector orientation GPIO to provide switch events")
    Suggested-by: Wesley Cheng <quic_wcheng@quicinc.com>
    Signed-off-by: Krishna Kurapati <quic_kriskura@quicinc.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20240301040914.458492-1-quic_kriskura@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4ee49c34629fbfcb4939f573dd4df598af6ef1e5
Author: yuan linyu <yuanlinyu@hihonor.com>
Date:   Fri Mar 15 10:01:44 2024 +0800

    usb: udc: remove warning when queue disabled ep
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 2a587a035214fa1b5ef598aea0b81848c5b72e5e upstream.
    
    It is possible trigger below warning message from mass storage function,
    
    WARNING: CPU: 6 PID: 3839 at drivers/usb/gadget/udc/core.c:294 usb_ep_queue+0x7c/0x104
    pc : usb_ep_queue+0x7c/0x104
    lr : fsg_main_thread+0x494/0x1b3c
    
    Root cause is mass storage function try to queue request from main thread,
    but other thread may already disable ep when function disable.
    
    As there is no function failure in the driver, in order to avoid effort
    to fix warning, change WARN_ON_ONCE() in usb_ep_queue() to pr_debug().
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: yuan linyu <yuanlinyu@hihonor.com>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20240315020144.2715575-1-yuanlinyu@hihonor.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 06a0b7b7d23d74519fca13d275ee0e57e2ec6c4a
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Wed Mar 13 09:22:13 2024 +0000

    usb: dwc2: gadget: LPM flow fix
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 5d69a3b54e5a630c90d82a4c2bdce3d53dc78710 upstream.
    
    Added functionality to exit from L1 state by device initiation
    using remote wakeup signaling, in case when function driver queuing
    request while core in L1 state.
    
    Fixes: 273d576c4d41 ("usb: dwc2: gadget: Add functionality to exit from LPM L1 state")
    Fixes: 88b02f2cb1e1 ("usb: dwc2: Add core state checking")
    CC: stable@vger.kernel.org
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/b4d9de5382375dddbf7ef6049d9a82066ad87d5d.1710166393.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3ff1cc3fb808e3f31fde0ca0b3df1fd830ee41b9
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Wed Mar 13 09:22:01 2024 +0000

    usb: dwc2: gadget: Fix exiting from clock gating
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 31f42da31417bec88158f3cf62d19db836217f1e upstream.
    
    Added exiting from the clock gating mode on USB Reset Detect interrupt
    if core in the clock gating mode.
    Added new condition to check core in clock gating mode or no.
    
    Fixes: 9b4965d77e11 ("usb: dwc2: Add exit clock gating from session request interrupt")
    Fixes: 5d240efddc7f ("usb: dwc2: Add exit clock gating from wakeup interrupt")
    Fixes: 16c729f90bdf ("usb: dwc2: Allow exit clock gating in urb enqueue")
    Fixes: 401411bbc4e6 ("usb: dwc2: Add exit clock gating before removing driver")
    CC: stable@vger.kernel.org
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/cbcc2ccd37e89e339130797ed68ae4597db773ac.1708938774.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8dcdfb68c34b898cd414e2ea2e5b9a2a950242fb
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Wed Mar 13 09:21:32 2024 +0000

    usb: dwc2: host: Fix ISOC flow in DDMA mode
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit b258e42688501cadb1a6dd658d6f015df9f32d8f upstream.
    
    Fixed ISOC completion flow in DDMA mode. Added isoc
    descriptor actual length value and update urb's start_frame
    value.
    Fixed initialization of ISOC DMA descriptors flow.
    
    Fixes: 56f5b1cff22a ("staging: Core files for the DWC2 driver")
    Fixes: 20f2eb9c4cf8 ("staging: dwc2: add microframe scheduler from downstream Pi kernel")
    Fixes: c17b337c1ea4 ("usb: dwc2: host: program descriptor for next frame")
    Fixes: dc4c76e7b22c ("staging: HCD descriptor DMA support for the DWC2 driver")
    Fixes: 762d3a1a9cd7 ("usb: dwc2: host: process all completed urbs")
    CC: stable@vger.kernel.org
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/a8b1e1711cc6cabfb45d92ede12e35445c66f06c.1708944698.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit db66cd9b83d7ed7454712ddb6efac25e2b7193e4
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Wed Mar 13 09:21:11 2024 +0000

    usb: dwc2: host: Fix hibernation flow
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 3c7b9856a82227db01a20171d2e24c7ce305d59b upstream.
    
    Added to backup/restore registers HFLBADDR, HCCHARi, HCSPLTi,
    HCTSIZi, HCDMAi and HCDMABi.
    
    Fixes: 58e52ff6a6c3 ("usb: dwc2: Move register save and restore functions")
    Fixes: d17ee77b3044 ("usb: dwc2: add controller hibernation support")
    CC: stable@vger.kernel.org
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/c2d10ee6098b9b009a8e94191e046004747d3bdd.1708945444.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 10e18b2aecd345dda403458b2d0ee400252b2812
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Wed Mar 13 09:21:21 2024 +0000

    usb: dwc2: host: Fix remote wakeup from hibernation
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit bae2bc73a59c200db53b6c15fb26bb758e2c6108 upstream.
    
    Starting from core v4.30a changed order of programming
    GPWRDN_PMUACTV to 0 in case of exit from hibernation on
    remote wakeup signaling from device.
    
    Fixes: c5c403dc4336 ("usb: dwc2: Add host/device hibernation functions")
    CC: stable@vger.kernel.org
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/99385ec55ce73445b6fbd0f471c9bd40eb1c9b9e.1708939799.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e76653f14f462bca165eca8acdc0c71955dde942
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Mar 15 13:06:33 2024 -0400

    USB: core: Fix deadlock in port "disable" sysfs attribute
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f4d1960764d8a70318b02f15203a1be2b2554ca1 upstream.
    
    The show and store callback routines for the "disable" sysfs attribute
    file in port.c acquire the device lock for the port's parent hub
    device.  This can cause problems if another process has locked the hub
    to remove it or change its configuration:
    
            Removing the hub or changing its configuration requires the
            hub interface to be removed, which requires the port device
            to be removed, and device_del() waits until all outstanding
            sysfs attribute callbacks for the ports have returned.  The
            lock can't be released until then.
    
            But the disable_show() or disable_store() routine can't return
            until after it has acquired the lock.
    
    The resulting deadlock can be avoided by calling
    sysfs_break_active_protection().  This will cause the sysfs core not
    to wait for the attribute's callback routine to return, allowing the
    removal to proceed.  The disadvantage is that after making this call,
    there is no guarantee that the hub structure won't be deallocated at
    any moment.  To prevent this, we have to acquire a reference to it
    first by calling hub_get().
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/f7a8c135-a495-4ce6-bd49-405a45e7ea9a@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6d843509f5643777c2f10692879a191b7c90b716
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Mar 15 13:04:50 2024 -0400

    USB: core: Add hub_get() and hub_put() routines
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ee113b860aa169e9a4d2c167c95d0f1961c6e1b8 upstream.
    
    Create hub_get() and hub_put() routines to encapsulate the kref_get()
    and kref_put() calls in hub.c.  The new routines will be used by the
    next patch in this series.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/604da420-ae8a-4a9e-91a4-2d511ff404fb@rowland.harvard.edu
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e263ed6c95af404f59f78c5a61bbe0d507db0290
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Mar 12 11:48:23 2024 -0400

    USB: core: Fix deadlock in usb_deauthorize_interface()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 80ba43e9f799cbdd83842fc27db667289b3150f5 upstream.
    
    Among the attribute file callback routines in
    drivers/usb/core/sysfs.c, the interface_authorized_store() function is
    the only one which acquires a device lock on an ancestor device: It
    calls usb_deauthorize_interface(), which locks the interface's parent
    USB device.
    
    The will lead to deadlock if another process already owns that lock
    and tries to remove the interface, whether through a configuration
    change or because the device has been disconnected.  As part of the
    removal procedure, device_del() waits for all ongoing sysfs attribute
    callbacks to complete.  But usb_deauthorize_interface() can't complete
    until the device lock has been released, and the lock won't be
    released until the removal has finished.
    
    The mechanism provided by sysfs to prevent this kind of deadlock is
    to use the sysfs_break_active_protection() function, which tells sysfs
    not to wait for the attribute callback.
    
    Reported-and-tested by: Yue Sun <samsun1006219@gmail.com>
    Reported by: xingwei lee <xrivendell7@gmail.com>
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/linux-usb/CAEkJfYO6jRVC8Tfrd_R=cjO0hguhrV31fDPrLrNOOHocDkPoAA@mail.gmail.com/#r
    Fixes: 310d2b4124c0 ("usb: interface authorization: SysFS part of USB interface authorization")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/1c37eea1-9f56-4534-b9d8-b443438dc869@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6f2a98a5f0657f13137bd6b04a259aaa13513ac2
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Mar 8 02:40:25 2024 +0000

    usb: dwc3: Properly set system wakeup
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f9aa41130ac69d13a53ce2a153ca79c70d43f39c upstream.
    
    If the device is configured for system wakeup, then make sure that the
    xHCI driver knows about it and make sure to permit wakeup only at the
    appropriate time.
    
    For host mode, if the controller goes through the dwc3 code path, then a
    child xHCI platform device is created. Make sure the platform device
    also inherits the wakeup setting for xHCI to enable remote wakeup.
    
    For device mode, make sure to disable system wakeup if no gadget driver
    is bound. We may experience unwanted system wakeup due to the wakeup
    signal from the controller PMU detecting connection/disconnection when
    in low power (D3). E.g. In the case of Steam Deck, the PCI PME prevents
    the system staying in suspend.
    
    Cc: stable@vger.kernel.org
    Reported-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Closes: https://lore.kernel.org/linux-usb/70a7692d-647c-9be7-00a6-06fc60f77294@igalia.com/T/#mf00d6669c2eff7b308d1162acd1d66c09f0853c7
    Fixes: d07e8819a03d ("usb: dwc3: add xHCI Host support")
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Tested-by: Sanath S <Sanath.S@amd.com>
    Tested-by: Guilherme G. Piccoli <gpiccoli@igalia.com> # Steam Deck
    Link: https://lore.kernel.org/r/667cfda7009b502e08462c8fb3f65841d103cc0a.1709865476.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 26aa46656b01bba152764f31fccf989478f13094
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Mar 25 13:58:08 2024 +0100

    genirq: Introduce IRQF_COND_ONESHOT and use it in pinctrl-amd
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit c2ddeb29612f7ca84ed10c6d4f3ac99705135447 upstream.
    
    There is a problem when a driver requests a shared interrupt line to run a
    threaded handler on it without IRQF_ONESHOT set if that flag has been set
    already for the IRQ in question by somebody else.  Namely, the request
    fails which usually leads to a probe failure even though the driver might
    have worked just fine with IRQF_ONESHOT, but it does not want to use it by
    default.  Currently, the only way to handle this is to try to request the
    IRQ without IRQF_ONESHOT, but with IRQF_PROBE_SHARED set and if this fails,
    try again with IRQF_ONESHOT set.  However, this is a bit cumbersome and not
    very clean.
    
    When commit 7a36b901a6eb ("ACPI: OSL: Use a threaded interrupt handler for
    SCI") switched the ACPI subsystem over to using a threaded interrupt
    handler for the SCI, it had to use IRQF_ONESHOT for it because that's
    required due to the way the SCI handler works (it needs to walk all of the
    enabled GPEs before the interrupt line can be unmasked). The SCI interrupt
    line is not shared with other users very often due to the SCI handling
    overhead, but on sone systems it is shared and when the other user of it
    attempts to install a threaded handler, a flags mismatch related to
    IRQF_ONESHOT may occur.
    
    As it turned out, that happened to the pinctrl-amd driver and so commit
    4451e8e8415e ("pinctrl: amd: Add IRQF_ONESHOT to the interrupt request")
    attempted to address the issue by adding IRQF_ONESHOT to the interrupt
    flags in that driver, but this is now causing an IRQF_ONESHOT-related
    mismatch to occur on another system which cannot boot as a result of it.
    
    Clearly, pinctrl-amd can work with IRQF_ONESHOT if need be, but it should
    not set that flag by default, so it needs a way to indicate that to the
    interrupt subsystem.
    
    To that end, introdcuce a new interrupt flag, IRQF_COND_ONESHOT, which will
    only have effect when the IRQ line is shared and IRQF_ONESHOT has been set
    for it already, in which case it will be promoted to the latter.
    
    This is sufficient for drivers sharing the interrupt line with the SCI as
    it is requested by the ACPI subsystem before any drivers are probed, so
    they will always see IRQF_ONESHOT set for the interrupt in question.
    
    Fixes: 4451e8e8415e ("pinctrl: amd: Add IRQF_ONESHOT to the interrupt request")
    Reported-by: Francisco Ayala Le Brun <francisco@videowindow.eu>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: 6.8+ <stable@vger.kernel.org> # 6.8+
    Closes: https://lore.kernel.org/lkml/CAN-StX1HqWqi+YW=t+V52-38Mfp5fAz7YHx4aH-CQjgyNiKx3g@mail.gmail.com/
    Link: https://lore.kernel.org/r/12417336.O9o76ZdvQC@kreacher
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 44e700d39fc753d6e4d945626015f9dfb84b7b14
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Wed Mar 13 21:07:43 2024 +0300

    staging: vc04_services: fix information leak in create_component()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f37e76abd614b68987abc8e5c22d986013349771 upstream.
    
    The m.u.component_create.pid field is for debugging and in the mainline
    kernel it's not used anything.  However, it still needs to be set to
    something to prevent disclosing uninitialized stack data.  Set it to
    zero.
    
    Fixes: 7b3ad5abf027 ("staging: Import the BCM2835 MMAL-based V4L2 camera driver.")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/2d972847-9ebd-481b-b6f9-af390f5aabd3@moroto.mountain
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a016bfa3315f328635813962c2e86abaac4e608
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Mar 13 17:36:56 2024 +0100

    staging: vc04_services: changen strncpy() to strscpy_pad()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ef25725b7f8aaffd7756974d3246ec44fae0a5cf upstream.
    
    gcc-14 warns about this strncpy() that results in a non-terminated
    string for an overflow:
    
    In file included from include/linux/string.h:369,
                     from drivers/staging/vc04_services/vchiq-mmal/mmal-vchiq.c:20:
    In function 'strncpy',
        inlined from 'create_component' at drivers/staging/vc04_services/vchiq-mmal/mmal-vchiq.c:940:2:
    include/linux/fortify-string.h:108:33: error: '__builtin_strncpy' specified bound 128 equals destination size [-Werror=stringop-truncation]
    
    Change it to strscpy_pad(), which produces a properly terminated and
    zero-padded string.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/20240313163712.224585-1-arnd@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8525dfafdeafc5f72ff9b0171ba343e6db1fe305
Author: Guilherme G. Piccoli <gpiccoli@igalia.com>
Date:   Wed Mar 13 08:21:20 2024 -0300

    scsi: core: Fix unremoved procfs host directory regression
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f23a4d6e07570826fe95023ca1aa96a011fa9f84 upstream.
    
    Commit fc663711b944 ("scsi: core: Remove the /proc/scsi/${proc_name}
    directory earlier") fixed a bug related to modules loading/unloading, by
    adding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led
    to a potential duplicate call to the hostdir_rm() routine, since it's also
    called from scsi_host_dev_release(). That triggered a regression report,
    which was then fixed by commit be03df3d4bfe ("scsi: core: Fix a procfs host
    directory removal regression"). The fix just dropped the hostdir_rm() call
    from dev_release().
    
    But it happens that this proc directory is created on scsi_host_alloc(),
    and that function "pairs" with scsi_host_dev_release(), while
    scsi_remove_host() pairs with scsi_add_host(). In other words, it seems the
    reason for removing the proc directory on dev_release() was meant to cover
    cases in which a SCSI host structure was allocated, but the call to
    scsi_add_host() didn't happen. And that pattern happens to exist in some
    error paths, for example.
    
    Syzkaller causes that by using USB raw gadget device, error'ing on
    usb-storage driver, at usb_stor_probe2(). By checking that path, we can see
    that the BadDevice label leads to a scsi_host_put() after a SCSI host
    allocation, but there's no call to scsi_add_host() in such path. That leads
    to messages like this in dmesg (and a leak of the SCSI host proc
    structure):
    
    usb-storage 4-1:87.51: USB Mass Storage device detected
    proc_dir_entry 'scsi/usb-storage' already registered
    WARNING: CPU: 1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0 fs/proc/generic.c:376
    
    The proper fix seems to still call scsi_proc_hostdir_rm() on dev_release(),
    but guard that with the state check for SHOST_CREATED; there is even a
    comment in scsi_host_dev_release() detailing that: such conditional is
    meant for cases where the SCSI host was allocated but there was no calls to
    {add,remove}_host(), like the usb-storage case.
    
    This is what we propose here and with that, the error path of usb-storage
    does not trigger the warning anymore.
    
    Reported-by: syzbot+c645abf505ed21f931b5@syzkaller.appspotmail.com
    Fixes: be03df3d4bfe ("scsi: core: Fix a procfs host directory removal regression")
    Cc: stable@vger.kernel.org
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: John Garry <john.g.garry@oracle.com>
    Cc: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Link: https://lore.kernel.org/r/20240313113006.2834799-1-gpiccoli@igalia.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f19013999c0c76030d221d17764d5cd38392c280
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Tue Mar 19 16:12:09 2024 +0900

    scsi: sd: Fix TCG OPAL unlock on system resume
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 0c76106cb97548810214def8ee22700bbbb90543 upstream.
    
    Commit 3cc2ffe5c16d ("scsi: sd: Differentiate system and runtime start/stop
    management") introduced the manage_system_start_stop scsi_device flag to
    allow libata to indicate to the SCSI disk driver that nothing should be
    done when resuming a disk on system resume. This change turned the
    execution of sd_resume() into a no-op for ATA devices on system
    resume. While this solved deadlock issues during device resume, this change
    also wrongly removed the execution of opal_unlock_from_suspend().  As a
    result, devices with TCG OPAL locking enabled remain locked and
    inaccessible after a system resume from sleep.
    
    To fix this issue, introduce the SCSI driver resume method and implement it
    with the sd_resume() function calling opal_unlock_from_suspend(). The
    former sd_resume() function is renamed to sd_resume_common() and modified
    to call the new sd_resume() function. For non-ATA devices, this result in
    no functional changes.
    
    In order for libata to explicitly execute sd_resume() when a device is
    resumed during system restart, the function scsi_resume_device() is
    introduced. libata calls this function from the revalidation work executed
    on devie resume, a state that is indicated with the new device flag
    ATA_DFLAG_RESUMING. Doing so, locked TCG OPAL enabled devices are unlocked
    on resume, allowing normal operation.
    
    Fixes: 3cc2ffe5c16d ("scsi: sd: Differentiate system and runtime start/stop management")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=218538
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Link: https://lore.kernel.org/r/20240319071209.1179257-1-dlemoal@kernel.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9cbded61c4b92e652f29a758fd9c42e1e65c3f86
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Feb 18 15:56:34 2024 +0200

    scsi: ufs: qcom: Provide default cycles_in_1us value
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 81e2c1a0f8d3f62f4c9e80b20270aa3481c40524 upstream.
    
    The MSM8996 DT doesn't provide frequency limits for the core_clk_unipro
    clock, which results in miscalculation of the cycles_in_1us value.  Provide
    the backwards-compatible default to support existing MSM8996 DT files.
    
    Fixes: b4e13e1ae95e ("scsi: ufs: qcom: Add multiple frequency support for MAX_CORE_CLK_1US_CYCLES")
    Cc: Nitin Rawat <quic_nitirawa@quicinc.com>
    Cc: stable@vger.kernel.org # 6.7.x
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20240218-msm8996-fix-ufs-v3-1-40aab49899a3@linaro.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7be368e0db6e952a79da0e55d322bbe96c6d2574
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue Mar 26 17:42:38 2024 +0800

    ALSA: sh: aica: reorder cleanup operations to avoid UAF bugs
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 051e0840ffa8ab25554d6b14b62c9ab9e4901457 upstream.
    
    The dreamcastcard->timer could schedule the spu_dma_work and the
    spu_dma_work could also arm the dreamcastcard->timer.
    
    When the snd_pcm_substream is closing, the aica_channel will be
    deallocated. But it could still be dereferenced in the worker
    thread. The reason is that del_timer() will return directly
    regardless of whether the timer handler is running or not and
    the worker could be rescheduled in the timer handler. As a result,
    the UAF bug will happen. The racy situation is shown below:
    
          (Thread 1)                 |      (Thread 2)
    snd_aicapcm_pcm_close()          |
     ...                             |  run_spu_dma() //worker
                                     |    mod_timer()
      flush_work()                   |
      del_timer()                    |  aica_period_elapsed() //timer
      kfree(dreamcastcard->channel)  |    schedule_work()
                                     |  run_spu_dma() //worker
      ...                            |    dreamcastcard->channel-> //USE
    
    In order to mitigate this bug and other possible corner cases,
    call mod_timer() conditionally in run_spu_dma(), then implement
    PCM sync_stop op to cancel both the timer and worker. The sync_stop
    op will be called from PCM core appropriately when needed.
    
    Fixes: 198de43d758c ("[ALSA] Add ALSA support for the SEGA Dreamcast PCM device")
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Message-ID: <20240326094238.95442-1-duoming@zju.edu.cn>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a646197dcc5069fb6480e2ee949900e8c20ec2f8
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Mar 13 11:37:31 2024 +0000

    btrfs: fix extent map leak in unexpected scenario at unpin_extent_cache()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8a565ec04d6c43f330e7401e5af3458431b29bc6 ]
    
    At unpin_extent_cache() if we happen to find an extent map with an
    unexpected start offset, we jump to the 'out' label and never release the
    reference we added to the extent map through the call to
    lookup_extent_mapping(), therefore resulting in a leak. So fix this by
    moving the free_extent_map() under the 'out' label.
    
    Fixes: c03c89f821e5 ("btrfs: handle errors returned from unpin_extent_cache()")
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3dd0b7b9f61d532f6e29353d998b669fb59bd03e
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Fri Mar 15 06:31:15 2024 -0400

    ring-buffer: Make wake once of ring_buffer_wait() more robust
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b70f2938242a028f8e9473781ede175486a59dc8 ]
    
    The default behavior of ring_buffer_wait() when passed a NULL "cond"
    parameter is to exit the function the first time it is woken up. The
    current implementation uses a counter that starts at zero and when it is
    greater than one it exits the wait_event_interruptible().
    
    But this relies on the internal working of wait_event_interruptible() as
    that code basically has:
    
      if (cond)
        return;
      prepare_to_wait();
      if (!cond)
        schedule();
      finish_wait();
    
    That is, cond is called twice before it sleeps. The default cond of
    ring_buffer_wait() needs to account for that and wait for its counter to
    increment twice before exiting.
    
    Instead, use the seq/atomic_inc logic that is used by the tracing code
    that calls this function. Add an atomic_t seq to rb_irq_work and when cond
    is NULL, have the default callback take a descriptor as its data that
    holds the rbwork and the value of the seq when it started.
    
    The wakeups will now increment the rbwork->seq and the cond callback will
    simply check if that number is different, and no longer have to rely on
    the implementation of wait_event_interruptible().
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240315063115.6cb5d205@gandalf.local.home
    
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Fixes: 7af9ded0c2ca ("ring-buffer: Use wait_event_interruptible() in ring_buffer_wait()")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 483b1760812ad7521539f6aae6b3d47803332f26
Author: Brett Creeley <brett.creeley@amd.com>
Date:   Fri Mar 8 10:21:48 2024 -0800

    vfio/pds: Make sure migration file isn't accessed after reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 457f7308254756b6e4b8fc3876cb770dcf0e7cc7 ]
    
    It's possible the migration file is accessed after reset when it has
    been cleaned up, especially when it's initiated by the device. This is
    because the driver doesn't rip out the filep when cleaning up it only
    frees the related page structures and sets its local struct
    pds_vfio_lm_file pointer to NULL. This can cause a NULL pointer
    dereference, which is shown in the example below during a restore after
    a device initiated reset:
    
    BUG: kernel NULL pointer dereference, address: 000000000000000c
    PF: supervisor read access in kernel mode
    PF: error_code(0x0000) - not-present page
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP NOPTI
    RIP: 0010:pds_vfio_get_file_page+0x5d/0xf0 [pds_vfio_pci]
    [...]
    Call Trace:
     <TASK>
     pds_vfio_restore_write+0xf6/0x160 [pds_vfio_pci]
     vfs_write+0xc9/0x3f0
     ? __fget_light+0xc9/0x110
     ksys_write+0xb5/0xf0
     __x64_sys_write+0x1a/0x20
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    [...]
    
    Add a disabled flag to the driver's struct pds_vfio_lm_file that gets
    set during cleanup. Then make sure to check the flag when the migration
    file is accessed via its file_operations. By default this flag will be
    false as the memory for struct pds_vfio_lm_file is kzalloc'd, which means
    the struct pds_vfio_lm_file is enabled and accessible. Also, since the
    file_operations and driver's migration file cleanup happen under the
    protection of the same pds_vfio_lm_file.lock, using this flag is thread
    safe.
    
    Fixes: 8512ed256334 ("vfio/pds: Always clear the save/restore FDs on reset")
    Reviewed-by: Shannon Nelson <shannon.nelson@amd.com>
    Signed-off-by: Brett Creeley <brett.creeley@amd.com>
    Link: https://lore.kernel.org/r/20240308182149.22036-2-brett.creeley@amd.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f83be88dc021de9622b7450404eaa29d201b881b
Author: Weitao Wang <WeitaoWang-oc@zhaoxin.com>
Date:   Thu Mar 7 02:08:14 2024 +0800

    USB: UAS: return ENODEV when submit urbs fail with device not attached
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit cd5432c712351a3d5f82512908f5febfca946ca6 upstream.
    
    In the scenario of entering hibernation with udisk in the system, if the
    udisk was gone or resume fail in the thaw phase of hibernation. Its state
    will be set to NOTATTACHED. At this point, usb_hub_wq was already freezed
    and can't not handle disconnect event. Next, in the poweroff phase of
    hibernation, SYNCHRONIZE_CACHE SCSI command will be sent to this udisk
    when poweroff this scsi device, which will cause uas_submit_urbs to be
    called to submit URB for sense/data/cmd pipe. However, these URBs will
    submit fail as device was set to NOTATTACHED state. Then, uas_submit_urbs
    will return a value SCSI_MLQUEUE_DEVICE_BUSY to the caller. That will lead
    the SCSI layer go into an ugly loop and system fail to go into hibernation.
    
    On the other hand, when we specially check for -ENODEV in function
    uas_queuecommand_lck, returning DID_ERROR to SCSI layer will cause device
    poweroff fail and system shutdown instead of entering hibernation.
    
    To fix this issue, let uas_submit_urbs to return original generic error
    when submitting URB failed. At the same time, we need to translate -ENODEV
    to DID_NOT_CONNECT for the SCSI layer.
    
    Suggested-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Weitao Wang <WeitaoWang-oc@zhaoxin.com>
    Link: https://lore.kernel.org/r/20240306180814.4897-1-WeitaoWang-oc@zhaoxin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4ef93dd25a5a4f863027a6b9ac59d45a79fb26ea
Author: Yongzhi Liu <hyperlyzcs@gmail.com>
Date:   Mon Mar 11 20:57:48 2024 +0800

    usb: misc: ljca: Fix double free in error handling path
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 7c9631969287a5366bc8e39cd5abff154b35fb80 upstream.
    
    When auxiliary_device_add() returns error and then calls
    auxiliary_device_uninit(), callback function ljca_auxdev_release
    calls kfree(auxdev->dev.platform_data) to free the parameter data
    of the function ljca_new_client_device. The callers of
    ljca_new_client_device shouldn't call kfree() again
    in the error handling path to free the platform data.
    
    Fix this by cleaning up the redundant kfree() in all callers and
    adding kfree() the passed in platform_data on errors which happen
    before auxiliary_device_init() succeeds .
    
    Fixes: acd6199f195d ("usb: Add support for Intel LJCA device")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Yongzhi Liu <hyperlyzcs@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20240311125748.28198-1-hyperlyzcs@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 35c01160f26ff46ce4a0083c72a061d4102fe71c
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 14 12:50:48 2024 +0100

    usb: cdc-wdm: close race between read and workqueue
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 339f83612f3a569b194680768b22bf113c26a29d upstream.
    
    wdm_read() cannot race with itself. However, in
    service_outstanding_interrupt() it can race with the
    workqueue, which can be triggered by error handling.
    
    Hence we need to make sure that the WDM_RESPONDING
    flag is not just only set but tested.
    
    Fixes: afba937e540c9 ("USB: CDC WDM driver")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Link: https://lore.kernel.org/r/20240314115132.3907-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a7b07b54aef2ba8836cd0e4901e1b71ef2647a38
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Thu Mar 14 10:26:27 2024 +0100

    Revert "usb: phy: generic: Get the vbus supply"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit fdada0db0b2ae2addef4ccafe50937874dbeeebe upstream.
    
    This reverts commit 75fd6485cccef269ac9eb3b71cf56753341195ef.
    This patch was applied twice by accident, causing probe failures.
    Revert the accident.
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Fixes: 75fd6485ccce ("usb: phy: generic: Get the vbus supply")
    Cc: stable <stable@kernel.org>
    Reviewed-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20240314092628.1869414-1-alexander.stein@ew.tq-group.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 13d38b64bc8857e8f0af2c5439472de7262faf0f
Author: Ezra Buehler <ezra.buehler@husqvarnagroup.com>
Date:   Thu Jan 25 22:01:07 2024 +0200

    mtd: spinand: Add support for 5-byte IDs
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 34a956739d295de6010cdaafeed698ccbba87ea4 upstream.
    
    E.g. ESMT chips will return an identification code with a length of 5
    bytes. In order to prevent ambiguity, flash chips would actually need to
    return IDs that are up to 17 or more bytes long due to JEDEC's
    continuation scheme. I understand that if a manufacturer ID is located
    in bank N of JEDEC's database (there are currently 16 banks), N - 1
    continuation codes (7Fh) need to be added to the identification code
    (comprising of manufacturer ID and device ID). However, most flash chip
    manufacturers don't seem to implement this (correctly).
    
    Signed-off-by: Ezra Buehler <ezra.buehler@husqvarnagroup.com>
    Reviewed-by: Martin Kurbanov <mmkurbanov@salutedevices.com>
    Tested-by: Martin Kurbanov <mmkurbanov@salutedevices.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240125200108.24374-2-ezra@easyb.ch
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b2c79441d9bb5ea673593f591e016d31e554e05
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Tue Mar 26 12:43:17 2024 -0400

    Bluetooth: hci_sync: Fix not checking error on hci_cmd_sync_cancel_sync
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 1c3366abdbe884be62e5a7502b4db758aa3974c6 upstream.
    
    hci_cmd_sync_cancel_sync shall check the error passed to it since it
    will be propagated using req_result which is __u32 it needs to be
    properly set to a positive value if it was passed as negative othertise
    IS_ERR will not trigger as -(errno) would be converted to a positive
    value.
    
    Fixes: 63298d6e752f ("Bluetooth: hci_core: Cancel request on command timeout")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Reported-and-tested-by: Thorsten Leemhuis <linux@leemhuis.info>
    Closes: https://lore.kernel.org/all/08275279-7462-4f4a-a0ee-8aa015f829bc@leemhuis.info/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 09c175bb68de216ad00ff06f7bedee4780db45b7
Author: Roman Li <roman.li@amd.com>
Date:   Wed Mar 13 18:35:13 2024 -0400

    drm/amd/display: Fix bounds check for dcn35 DcfClocks
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 2f10d4a51bbcd938f1f02f16c304ad1d54717b96 upstream.
    
    [Why]
    NumFclkLevelsEnabled is used for DcfClocks bounds check
    instead of designated NumDcfClkLevelsEnabled.
    That can cause array index out-of-bounds access.
    
    [How]
    Use designated variable for dcn35 DcfClocks bounds check.
    
    Fixes: a8edc9cc0b14 ("drm/amd/display: Fix array-index-out-of-bounds in dcn35_clkmgr")
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Sun peng Li <sunpeng.li@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Roman Li <roman.li@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit efaa4c7662c8ed58e917dccf5d87244e9f9e53f3
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Mar 18 14:58:47 2024 +0100

    drm/i915/gt: Reset queue_priority_hint on parking
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 4a3859ea5240365d21f6053ee219bb240d520895 upstream.
    
    Originally, with strict in order execution, we could complete execution
    only when the queue was empty. Preempt-to-busy allows replacement of an
    active request that may complete before the preemption is processed by
    HW. If that happens, the request is retired from the queue, but the
    queue_priority_hint remains set, preventing direct submission until
    after the next CS interrupt is processed.
    
    This preempt-to-busy race can be triggered by the heartbeat, which will
    also act as the power-management barrier and upon completion allow us to
    idle the HW. We may process the completion of the heartbeat, and begin
    parking the engine before the CS event that restores the
    queue_priority_hint, causing us to fail the assertion that it is MIN.
    
    <3>[  166.210729] __engine_park:283 GEM_BUG_ON(engine->sched_engine->queue_priority_hint != (-((int)(~0U >> 1)) - 1))
    <0>[  166.210781] Dumping ftrace buffer:
    <0>[  166.210795] ---------------------------------
    ...
    <0>[  167.302811] drm_fdin-1097      2..s1. 165741070us : trace_ports: 0000:00:02.0 rcs0: promote { ccid:20 1217:2 prio 0 }
    <0>[  167.302861] drm_fdin-1097      2d.s2. 165741072us : execlists_submission_tasklet: 0000:00:02.0 rcs0: preempting last=1217:2, prio=0, hint=2147483646
    <0>[  167.302928] drm_fdin-1097      2d.s2. 165741072us : __i915_request_unsubmit: 0000:00:02.0 rcs0: fence 1217:2, current 0
    <0>[  167.302992] drm_fdin-1097      2d.s2. 165741073us : __i915_request_submit: 0000:00:02.0 rcs0: fence 3:4660, current 4659
    <0>[  167.303044] drm_fdin-1097      2d.s1. 165741076us : execlists_submission_tasklet: 0000:00:02.0 rcs0: context:3 schedule-in, ccid:40
    <0>[  167.303095] drm_fdin-1097      2d.s1. 165741077us : trace_ports: 0000:00:02.0 rcs0: submit { ccid:40 3:4660* prio 2147483646 }
    <0>[  167.303159] kworker/-89       11..... 165741139us : i915_request_retire.part.0: 0000:00:02.0 rcs0: fence c90:2, current 2
    <0>[  167.303208] kworker/-89       11..... 165741148us : __intel_context_do_unpin: 0000:00:02.0 rcs0: context:c90 unpin
    <0>[  167.303272] kworker/-89       11..... 165741159us : i915_request_retire.part.0: 0000:00:02.0 rcs0: fence 1217:2, current 2
    <0>[  167.303321] kworker/-89       11..... 165741166us : __intel_context_do_unpin: 0000:00:02.0 rcs0: context:1217 unpin
    <0>[  167.303384] kworker/-89       11..... 165741170us : i915_request_retire.part.0: 0000:00:02.0 rcs0: fence 3:4660, current 4660
    <0>[  167.303434] kworker/-89       11d..1. 165741172us : __intel_context_retire: 0000:00:02.0 rcs0: context:1216 retire runtime: { total:56028ns, avg:56028ns }
    <0>[  167.303484] kworker/-89       11..... 165741198us : __engine_park: 0000:00:02.0 rcs0: parked
    <0>[  167.303534]   <idle>-0         5d.H3. 165741207us : execlists_irq_handler: 0000:00:02.0 rcs0: semaphore yield: 00000040
    <0>[  167.303583] kworker/-89       11..... 165741397us : __intel_context_retire: 0000:00:02.0 rcs0: context:1217 retire runtime: { total:325575ns, avg:0ns }
    <0>[  167.303756] kworker/-89       11..... 165741777us : __intel_context_retire: 0000:00:02.0 rcs0: context:c90 retire runtime: { total:0ns, avg:0ns }
    <0>[  167.303806] kworker/-89       11..... 165742017us : __engine_park: __engine_park:283 GEM_BUG_ON(engine->sched_engine->queue_priority_hint != (-((int)(~0U >> 1)) - 1))
    <0>[  167.303811] ---------------------------------
    <4>[  167.304722] ------------[ cut here ]------------
    <2>[  167.304725] kernel BUG at drivers/gpu/drm/i915/gt/intel_engine_pm.c:283!
    <4>[  167.304731] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
    <4>[  167.304734] CPU: 11 PID: 89 Comm: kworker/11:1 Tainted: G        W          6.8.0-rc2-CI_DRM_14193-gc655e0fd2804+ #1
    <4>[  167.304736] Hardware name: Intel Corporation Rocket Lake Client Platform/RocketLake S UDIMM 6L RVP, BIOS RKLSFWI1.R00.3173.A03.2204210138 04/21/2022
    <4>[  167.304738] Workqueue: i915-unordered retire_work_handler [i915]
    <4>[  167.304839] RIP: 0010:__engine_park+0x3fd/0x680 [i915]
    <4>[  167.304937] Code: 00 48 c7 c2 b0 e5 86 a0 48 8d 3d 00 00 00 00 e8 79 48 d4 e0 bf 01 00 00 00 e8 ef 0a d4 e0 31 f6 bf 09 00 00 00 e8 03 49 c0 e0 <0f> 0b 0f 0b be 01 00 00 00 e8 f5 61 fd ff 31 c0 e9 34 fd ff ff 48
    <4>[  167.304940] RSP: 0018:ffffc9000059fce0 EFLAGS: 00010246
    <4>[  167.304942] RAX: 0000000000000200 RBX: 0000000000000000 RCX: 0000000000000006
    <4>[  167.304944] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000009
    <4>[  167.304946] RBP: ffff8881330ca1b0 R08: 0000000000000001 R09: 0000000000000001
    <4>[  167.304947] R10: 0000000000000001 R11: 0000000000000001 R12: ffff8881330ca000
    <4>[  167.304948] R13: ffff888110f02aa0 R14: ffff88812d1d0205 R15: ffff88811277d4f0
    <4>[  167.304950] FS:  0000000000000000(0000) GS:ffff88844f780000(0000) knlGS:0000000000000000
    <4>[  167.304952] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    <4>[  167.304953] CR2: 00007fc362200c40 CR3: 000000013306e003 CR4: 0000000000770ef0
    <4>[  167.304955] PKRU: 55555554
    <4>[  167.304957] Call Trace:
    <4>[  167.304958]  <TASK>
    <4>[  167.305573]  ____intel_wakeref_put_last+0x1d/0x80 [i915]
    <4>[  167.305685]  i915_request_retire.part.0+0x34f/0x600 [i915]
    <4>[  167.305800]  retire_requests+0x51/0x80 [i915]
    <4>[  167.305892]  intel_gt_retire_requests_timeout+0x27f/0x700 [i915]
    <4>[  167.305985]  process_scheduled_works+0x2db/0x530
    <4>[  167.305990]  worker_thread+0x18c/0x350
    <4>[  167.305993]  kthread+0xfe/0x130
    <4>[  167.305997]  ret_from_fork+0x2c/0x50
    <4>[  167.306001]  ret_from_fork_asm+0x1b/0x30
    <4>[  167.306004]  </TASK>
    
    It is necessary for the queue_priority_hint to be lower than the next
    request submission upon waking up, as we rely on the hint to decide when
    to kick the tasklet to submit that first request.
    
    Fixes: 22b7a426bbe1 ("drm/i915/execlists: Preempt-to-busy")
    Closes: https://gitlab.freedesktop.org/drm/intel/issues/10154
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v5.4+
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240318135906.716055-2-janusz.krzysztofik@linux.intel.com
    (cherry picked from commit 98850e96cf811dc2d0a7d0af491caff9f5d49c1e)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c4e37e4825a48d747de322fe19e390b87a24e66
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Mar 25 19:57:38 2024 +0200

    drm/i915: Pre-populate the cursor physical dma address
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 582dc04b0658ef3b90aeb49cbdd9747c2f1eccc3 upstream.
    
    Calling i915_gem_object_get_dma_address() from the vblank
    evade critical section triggers might_sleep().
    
    While we know that we've already pinned the framebuffer
    and thus i915_gem_object_get_dma_address() will in fact
    not sleep in this case, it seems reasonable to keep the
    unconditional might_sleep() for maximum coverage.
    
    So let's instead pre-populate the dma address during
    fb pinning, which all happens before we enter the
    vblank evade critical section.
    
    We can use u32 for the dma address as this class of
    hardware doesn't support >32bit addresses.
    
    Cc: stable@vger.kernel.org
    Fixes: 0225a90981c8 ("drm/i915: Make cursor plane registers unlocked")
    Reported-by: Borislav Petkov <bp@alien8.de>
    Closes: https://lore.kernel.org/intel-gfx/20240227100342.GAZd2zfmYcPS_SndtO@fat_crate.local/
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240325175738.3440-1-ville.syrjala@linux.intel.com
    Tested-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Chaitanya Kumar Borah <chaitanya.kumar.borah@intel.com>
    (cherry picked from commit c1289a5c3594cf04caa94ebf0edeb50c62009f1f)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 92be2bef892414909ce0979e2acd2683cb9bae0a
Author: Jonathon Hall <jonathon.hall@puri.sm>
Date:   Wed Mar 13 09:54:25 2024 -0400

    drm/i915: Do not match JSL in ehl_combo_pll_div_frac_wa_needed()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit e41d769f1a7a1dc533c35ef7b366be3dbf432a1c upstream.
    
    Since commit 0c65dc062611 ("drm/i915/jsl: s/JSL/JASPERLAKE for
    platform/subplatform defines"), boot freezes on a Jasper Lake tablet
    (Librem 11), usually with graphical corruption on the eDP display,
    but sometimes just a black screen.  This commit was included in 6.6 and
    later.
    
    That commit was intended to refactor EHL and JSL macros, but the change
    to ehl_combo_pll_div_frac_wa_needed() started matching JSL incorrectly
    when it was only intended to match EHL.
    
    It replaced:
            return ((IS_PLATFORM(i915, INTEL_ELKHARTLAKE) &&
                     IS_JSL_EHL_DISPLAY_STEP(i915, STEP_B0, STEP_FOREVER)) ||
    with:
            return (((IS_ELKHARTLAKE(i915) || IS_JASPERLAKE(i915)) &&
                     IS_DISPLAY_STEP(i915, STEP_B0, STEP_FOREVER)) ||
    
    Remove IS_JASPERLAKE() to fix the regression.
    
    Signed-off-by: Jonathon Hall <jonathon.hall@puri.sm>
    Cc: stable@vger.kernel.org
    Fixes: 0c65dc062611 ("drm/i915/jsl: s/JSL/JASPERLAKE for platform/subplatform defines")
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240313135424.3731410-1-jonathon.hall@puri.sm
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    (cherry picked from commit 1ef48859317b2a77672dea8682df133abf9c44ed)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 530d6e4eec4728b82faf305c3ac0fcc4c1112a9c
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Mar 6 06:08:05 2024 +0200

    drm/i915/dsb: Fix DSB vblank waits when using VRR
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f12751168f1a49ebb84b8056cf038973c53b284f upstream.
    
    Looks like the undelayed vblank gets signalled exactly when
    the active period ends. That is a problem for DSB+VRR when
    we are already in vblank and expect DSB to start executing
    as soon as we send the push. Instead of starting, the DSB
    just keeps on waiting for the undelayed vblank which won't
    signal until the end of the next frame's active period,
    which is far too late.
    
    The end result is that DSB won't have even started
    executing by the time the flips/etc. have completed.
    We then wait for an extra 1ms, after which we terminate
    the DSB and report a timeout:
    [drm] *ERROR* [CRTC:80:pipe A] DSB 0 timed out waiting for idle (current head=0xfedf4000, head=0x0, tail=0x1080)
    
    To fix this let's configure DSB to use the so called VRR
    "safe window" instead of the undelayed vblank to trigger
    the DSB vblank logic, when VRR is enabled.
    
    Cc: stable@vger.kernel.org
    Fixes: 34d8311f4a1c ("drm/i915/dsb: Re-instate DSB for LUT updates")
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/9927
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240306040806.21697-3-ville.syrjala@linux.intel.com
    Reviewed-by: Animesh Manna <animesh.manna@intel.com>
    (cherry picked from commit 41429d9b68367596eb3d6d5961e6295c284622a7)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 220066a782d3f878482214e04cd0f51dea9481ed
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Mar 5 10:36:59 2024 +0200

    drm/i915/dsi: Go back to the previous INIT_OTP/DISPLAY_ON order, mostly
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 18846627ef1210dcd55d65342b055ea97a46ffff upstream.
    
    Reinstate commit 88b065943cb5 ("drm/i915/dsi: Do display on
    sequence later on icl+"), for the most part. Turns out some
    machines (eg. Chuwi Minibook X) really do need that updated order.
    It is also the order the Windows driver uses.
    
    However we can't just undo the revert since that would again
    break Lenovo 82TQ. After staring at the VBT sequences for both
    machines I've concluded that the Lenovo 82TQ sequences look
    somewhat broken:
     - INIT_OTP is not present at all
     - what should be in INIT_OTP is found in DISPLAY_ON
     - what should be in DISPLAY_ON is found in BACKLIGHT_ON
       (along with the actual backlight stuff)
    
    The Chuwi Minibook X on the other hand has a full complement
    of sequences in its VBT.
    
    So let's try to deal with the broken sequences in the
    Lenovo 82TQ VBT by simply swapping the (non-existent)
    INIT_OTP sequence with the DISPLAY_ON sequence. Thus we
    execute DISPLAY_ON when intending to execute INIT_OTP,
    and execute nothing at all when intending to execute
    DISPLAY_ON. That should be 100% equivalent to the
    revert, for such broken VBTs.
    
    Cc: stable@vger.kernel.org
    Fixes: 6992eb815d08 ("Revert "drm/i915/dsi: Do display on sequence later on icl+"")
    References: https://gitlab.freedesktop.org/drm/intel/-/issues/10071
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/10334
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240305083659.8396-1-ville.syrjala@linux.intel.com
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    (cherry picked from commit 94ae4612ea336bfc3c12b3fc68467c6711a4f39b)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1539fc1a52dfaeeec6c5983225d66e654c3fae8a
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Mar 6 06:08:04 2024 +0200

    drm/i915/vrr: Generate VRR "safe window" for DSB
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f7d3b9277ff7eb8e84e6f8554d1c2dd78278a572 upstream.
    
    Looks like TRANS_CHICKEN bit 31 means something totally different
    depending on the platform:
    TGL: generate VRR "safe window" for DSB
    ADL/DG2: make TRANS_SET_CONTEXT_LATENCY effective with VRR
    
    So far we've only set this on ADL/DG2, but when using DSB+VRR
    we also need to set it on TGL.
    
    And a quick test on MTL says it doesn't need this bit for either
    of those purposes, even though it's still documented as valid
    in bspec.
    
    Cc: stable@vger.kernel.org
    Fixes: 34d8311f4a1c ("drm/i915/dsb: Re-instate DSB for LUT updates")
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/9927
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240306040806.21697-2-ville.syrjala@linux.intel.com
    Reviewed-by: Animesh Manna <animesh.manna@intel.com>
    (cherry picked from commit 810e4519a1b34b5a0ff0eab32e5b184f533c5ee9)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 48be5df0940c3d6d525c04cd1bf70a2caf614f17
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Mar 19 11:24:42 2024 +0200

    drm/i915/bios: Tolerate devdata==NULL in intel_bios_encoder_supports_dp_dual_mode()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 32e39bab59934bfd3f37097d4dd85ac5eb0fd549 upstream.
    
    If we have no VBT, or the VBT didn't declare the encoder
    in question, we won't have the 'devdata' for the encoder.
    Instead of oopsing just bail early.
    
    We won't be able to tell whether the port is DP++ or not,
    but so be it.
    
    Cc: stable@vger.kernel.org
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/10464
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240319092443.15769-1-ville.syrjala@linux.intel.com
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    (cherry picked from commit 26410896206342c8a80d2b027923e9ee7d33b733)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3ec3b3530a6ae6b56c6af1e31561b84c05fa4faa
Author: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
Date:   Tue Mar 5 15:35:06 2024 +0100

    drm/i915/vma: Fix UAF on destroy against retire race
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 0e45882ca829b26b915162e8e86dbb1095768e9e upstream.
    
    Object debugging tools were sporadically reporting illegal attempts to
    free a still active i915 VMA object when parking a GT believed to be idle.
    
    [161.359441] ODEBUG: free active (active state 0) object: ffff88811643b958 object type: i915_active hint: __i915_vma_active+0x0/0x50 [i915]
    [161.360082] WARNING: CPU: 5 PID: 276 at lib/debugobjects.c:514 debug_print_object+0x80/0xb0
    ...
    [161.360304] CPU: 5 PID: 276 Comm: kworker/5:2 Not tainted 6.5.0-rc1-CI_DRM_13375-g003f860e5577+ #1
    [161.360314] Hardware name: Intel Corporation Rocket Lake Client Platform/RocketLake S UDIMM 6L RVP, BIOS RKLSFWI1.R00.3173.A03.2204210138 04/21/2022
    [161.360322] Workqueue: i915-unordered __intel_wakeref_put_work [i915]
    [161.360592] RIP: 0010:debug_print_object+0x80/0xb0
    ...
    [161.361347] debug_object_free+0xeb/0x110
    [161.361362] i915_active_fini+0x14/0x130 [i915]
    [161.361866] release_references+0xfe/0x1f0 [i915]
    [161.362543] i915_vma_parked+0x1db/0x380 [i915]
    [161.363129] __gt_park+0x121/0x230 [i915]
    [161.363515] ____intel_wakeref_put_last+0x1f/0x70 [i915]
    
    That has been tracked down to be happening when another thread is
    deactivating the VMA inside __active_retire() helper, after the VMA's
    active counter has been already decremented to 0, but before deactivation
    of the VMA's object is reported to the object debugging tool.
    
    We could prevent from that race by serializing i915_active_fini() with
    __active_retire() via ref->tree_lock, but that wouldn't stop the VMA from
    being used, e.g. from __i915_vma_retire() called at the end of
    __active_retire(), after that VMA has been already freed by a concurrent
    i915_vma_destroy() on return from the i915_active_fini().  Then, we should
    rather fix the issue at the VMA level, not in i915_active.
    
    Since __i915_vma_parked() is called from __gt_park() on last put of the
    GT's wakeref, the issue could be addressed by holding the GT wakeref long
    enough for __active_retire() to complete before that wakeref is released
    and the GT parked.
    
    I believe the issue was introduced by commit d93939730347 ("drm/i915:
    Remove the vma refcount") which moved a call to i915_active_fini() from
    a dropped i915_vma_release(), called on last put of the removed VMA kref,
    to i915_vma_parked() processing path called on last put of a GT wakeref.
    However, its visibility to the object debugging tool was suppressed by a
    bug in i915_active that was fixed two weeks later with commit e92eb246feb9
    ("drm/i915/active: Fix missing debug object activation").
    
    A VMA associated with a request doesn't acquire a GT wakeref by itself.
    Instead, it depends on a wakeref held directly by the request's active
    intel_context for a GT associated with its VM, and indirectly on that
    intel_context's engine wakeref if the engine belongs to the same GT as the
    VMA's VM.  Those wakerefs are released asynchronously to VMA deactivation.
    
    Fix the issue by getting a wakeref for the VMA's GT when activating it,
    and putting that wakeref only after the VMA is deactivated.  However,
    exclude global GTT from that processing path, otherwise the GPU never goes
    idle.  Since __i915_vma_retire() may be called from atomic contexts, use
    async variant of wakeref put.  Also, to avoid circular locking dependency,
    take care of acquiring the wakeref before VM mutex when both are needed.
    
    v7: Add inline comments with justifications for:
        - using untracked variants of intel_gt_pm_get/put() (Nirmoy),
        - using async variant of _put(),
        - not getting the wakeref in case of a global GTT,
        - always getting the first wakeref outside vm->mutex.
    v6: Since __i915_vma_active/retire() callbacks are not serialized, storing
        a wakeref tracking handle inside struct i915_vma is not safe, and
        there is no other good place for that.  Use untracked variants of
        intel_gt_pm_get/put_async().
    v5: Replace "tile" with "GT" across commit description (Rodrigo),
      - avoid mentioning multi-GT case in commit description (Rodrigo),
      - explain why we need to take a temporary wakeref unconditionally inside
        i915_vma_pin_ww() (Rodrigo).
    v4: Refresh on top of commit 5e4e06e4087e ("drm/i915: Track gt pm
        wakerefs") (Andi),
      - for more easy backporting, split out removal of former insufficient
        workarounds and move them to separate patches (Nirmoy).
      - clean up commit message and description a bit.
    v3: Identify root cause more precisely, and a commit to blame,
      - identify and drop former workarounds,
      - update commit message and description.
    v2: Get the wakeref before VM mutex to avoid circular locking dependency,
      - drop questionable Fixes: tag.
    
    Fixes: d93939730347 ("drm/i915: Remove the vma refcount")
    Closes: https://gitlab.freedesktop.org/drm/intel/issues/8875
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Cc: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Cc: Nirmoy Das <nirmoy.das@intel.com>
    Cc: Andi Shyti <andi.shyti@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: stable@vger.kernel.org # v5.19+
    Reviewed-by: Nirmoy Das <nirmoy.das@intel.com>
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240305143747.335367-6-janusz.krzysztofik@linux.intel.com
    (cherry picked from commit f3c71b2ded5c4367144a810ef25f998fd1d6c381)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7674e7d1d563c13abb24165f5651c8707c66f147
Author: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
Date:   Mon Mar 11 21:34:58 2024 +0100

    drm/i915/hwmon: Fix locking inversion in sysfs getter
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit b212b79768ccde74429f872c37618c543fa11333 upstream.
    
    In i915 hwmon sysfs getter path we now take a hwmon_lock, then acquire an
    rpm wakeref.  That results in lock inversion:
    
    <4> [197.079335] ======================================================
    <4> [197.085473] WARNING: possible circular locking dependency detected
    <4> [197.091611] 6.8.0-rc7-Patchwork_129026v7-gc4dc92fb1152+ #1 Not tainted
    <4> [197.098096] ------------------------------------------------------
    <4> [197.104231] prometheus-node/839 is trying to acquire lock:
    <4> [197.109680] ffffffff82764d80 (fs_reclaim){+.+.}-{0:0}, at: __kmalloc+0x9a/0x350
    <4> [197.116939]
    but task is already holding lock:
    <4> [197.122730] ffff88811b772a40 (&hwmon->hwmon_lock){+.+.}-{3:3}, at: hwm_energy+0x4b/0x100 [i915]
    <4> [197.131543]
    which lock already depends on the new lock.
    ...
    <4> [197.507922] Chain exists of:
      fs_reclaim --> &gt->reset.mutex --> &hwmon->hwmon_lock
    <4> [197.518528]  Possible unsafe locking scenario:
    <4> [197.524411]        CPU0                    CPU1
    <4> [197.528916]        ----                    ----
    <4> [197.533418]   lock(&hwmon->hwmon_lock);
    <4> [197.537237]                                lock(&gt->reset.mutex);
    <4> [197.543376]                                lock(&hwmon->hwmon_lock);
    <4> [197.549682]   lock(fs_reclaim);
    ...
    <4> [197.632548] Call Trace:
    <4> [197.634990]  <TASK>
    <4> [197.637088]  dump_stack_lvl+0x64/0xb0
    <4> [197.640738]  check_noncircular+0x15e/0x180
    <4> [197.652968]  check_prev_add+0xe9/0xce0
    <4> [197.656705]  __lock_acquire+0x179f/0x2300
    <4> [197.660694]  lock_acquire+0xd8/0x2d0
    <4> [197.673009]  fs_reclaim_acquire+0xa1/0xd0
    <4> [197.680478]  __kmalloc+0x9a/0x350
    <4> [197.689063]  acpi_ns_internalize_name.part.0+0x4a/0xb0
    <4> [197.694170]  acpi_ns_get_node_unlocked+0x60/0xf0
    <4> [197.720608]  acpi_ns_get_node+0x3b/0x60
    <4> [197.724428]  acpi_get_handle+0x57/0xb0
    <4> [197.728164]  acpi_has_method+0x20/0x50
    <4> [197.731896]  acpi_pci_set_power_state+0x43/0x120
    <4> [197.736485]  pci_power_up+0x24/0x1c0
    <4> [197.740047]  pci_pm_default_resume_early+0x9/0x30
    <4> [197.744725]  pci_pm_runtime_resume+0x2d/0x90
    <4> [197.753911]  __rpm_callback+0x3c/0x110
    <4> [197.762586]  rpm_callback+0x58/0x70
    <4> [197.766064]  rpm_resume+0x51e/0x730
    <4> [197.769542]  rpm_resume+0x267/0x730
    <4> [197.773020]  rpm_resume+0x267/0x730
    <4> [197.776498]  rpm_resume+0x267/0x730
    <4> [197.779974]  __pm_runtime_resume+0x49/0x90
    <4> [197.784055]  __intel_runtime_pm_get+0x19/0xa0 [i915]
    <4> [197.789070]  hwm_energy+0x55/0x100 [i915]
    <4> [197.793183]  hwm_read+0x9a/0x310 [i915]
    <4> [197.797124]  hwmon_attr_show+0x36/0x120
    <4> [197.800946]  dev_attr_show+0x15/0x60
    <4> [197.804509]  sysfs_kf_seq_show+0xb5/0x100
    
    Acquire the wakeref before the lock and hold it as long as the lock is
    also held.  Follow that pattern across the whole source file where similar
    lock inversion can happen.
    
    v2: Keep hardware read under the lock so the whole operation of updating
        energy from hardware is still atomic (Guenter),
      - instead, acquire the rpm wakeref before the lock and hold it as long
        as the lock is held,
      - use the same aproach for other similar places across the i915_hwmon.c
        source file (Rodrigo).
    
    Fixes: 1b44019a93e2 ("drm/i915/guc: Disable PL1 power limit when loading GuC firmware")
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: <stable@vger.kernel.org> # v6.5+
    Reviewed-by: Ashutosh Dixit <ashutosh.dixit@intel.com>
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240311203500.518675-2-janusz.krzysztofik@linux.intel.com
    (cherry picked from commit 71b218771426ea84c0e0148a2b7ac52c1f76e792)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5d7282791ace324dd4cfd40570dd27a24fe728fb
Author: Xi Liu <xi.liu@amd.com>
Date:   Tue Feb 27 13:39:00 2024 -0500

    drm/amd/display: Set DCN351 BB and IP the same as DCN35
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 0ccc2b30f4feadc0b1a282dbcc06e396382e5d74 upstream.
    
    [WHY & HOW]
    DCN351 and DCN35 should use the same bounding box and IP settings.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Jun Lei <jun.lei@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Xi Liu <xi.liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2f187c15fdb4006b22fe089d4a0e0b58ac853c6f
Author: George Shen <george.shen@amd.com>
Date:   Fri Feb 16 19:37:03 2024 -0500

    drm/amd/display: Remove MPC rate control logic from DCN30 and above
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit edfa93d87fc46913868481fe8ed3fb62c891ffb5 upstream.
    
    [Why]
    MPC flow rate control is not needed for DCN30 and above. Current logic
    that uses it can result in underflow for certain edge cases (such as
    DSC N422 + ODM combine + 422 left edge pixel).
    
    [How]
    Remove MPC flow rate control logic and programming for DCN30 and above.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Wenjing Liu <wenjing.liu@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: George Shen <george.shen@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bf47c29efb6070aee096e4dad50518040dbfbb88
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Thu Mar 7 17:07:37 2024 -0500

    drm/amdgpu: fix deadlock while reading mqd from debugfs
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 8678b1060ae2b75feb60b87e5b75e17374e3c1c5 upstream.
    
    An errant disk backup on my desktop got into debugfs and triggered the
    following deadlock scenario in the amdgpu debugfs files. The machine
    also hard-resets immediately after those lines are printed (although I
    wasn't able to reproduce that part when reading by hand):
    
    [ 1318.016074][ T1082] ======================================================
    [ 1318.016607][ T1082] WARNING: possible circular locking dependency detected
    [ 1318.017107][ T1082] 6.8.0-rc7-00015-ge0c8221b72c0 #17 Not tainted
    [ 1318.017598][ T1082] ------------------------------------------------------
    [ 1318.018096][ T1082] tar/1082 is trying to acquire lock:
    [ 1318.018585][ T1082] ffff98c44175d6a0 (&mm->mmap_lock){++++}-{3:3}, at: __might_fault+0x40/0x80
    [ 1318.019084][ T1082]
    [ 1318.019084][ T1082] but task is already holding lock:
    [ 1318.020052][ T1082] ffff98c4c13f55f8 (reservation_ww_class_mutex){+.+.}-{3:3}, at: amdgpu_debugfs_mqd_read+0x6a/0x250 [amdgpu]
    [ 1318.020607][ T1082]
    [ 1318.020607][ T1082] which lock already depends on the new lock.
    [ 1318.020607][ T1082]
    [ 1318.022081][ T1082]
    [ 1318.022081][ T1082] the existing dependency chain (in reverse order) is:
    [ 1318.023083][ T1082]
    [ 1318.023083][ T1082] -> #2 (reservation_ww_class_mutex){+.+.}-{3:3}:
    [ 1318.024114][ T1082]        __ww_mutex_lock.constprop.0+0xe0/0x12f0
    [ 1318.024639][ T1082]        ww_mutex_lock+0x32/0x90
    [ 1318.025161][ T1082]        dma_resv_lockdep+0x18a/0x330
    [ 1318.025683][ T1082]        do_one_initcall+0x6a/0x350
    [ 1318.026210][ T1082]        kernel_init_freeable+0x1a3/0x310
    [ 1318.026728][ T1082]        kernel_init+0x15/0x1a0
    [ 1318.027242][ T1082]        ret_from_fork+0x2c/0x40
    [ 1318.027759][ T1082]        ret_from_fork_asm+0x11/0x20
    [ 1318.028281][ T1082]
    [ 1318.028281][ T1082] -> #1 (reservation_ww_class_acquire){+.+.}-{0:0}:
    [ 1318.029297][ T1082]        dma_resv_lockdep+0x16c/0x330
    [ 1318.029790][ T1082]        do_one_initcall+0x6a/0x350
    [ 1318.030263][ T1082]        kernel_init_freeable+0x1a3/0x310
    [ 1318.030722][ T1082]        kernel_init+0x15/0x1a0
    [ 1318.031168][ T1082]        ret_from_fork+0x2c/0x40
    [ 1318.031598][ T1082]        ret_from_fork_asm+0x11/0x20
    [ 1318.032011][ T1082]
    [ 1318.032011][ T1082] -> #0 (&mm->mmap_lock){++++}-{3:3}:
    [ 1318.032778][ T1082]        __lock_acquire+0x14bf/0x2680
    [ 1318.033141][ T1082]        lock_acquire+0xcd/0x2c0
    [ 1318.033487][ T1082]        __might_fault+0x58/0x80
    [ 1318.033814][ T1082]        amdgpu_debugfs_mqd_read+0x103/0x250 [amdgpu]
    [ 1318.034181][ T1082]        full_proxy_read+0x55/0x80
    [ 1318.034487][ T1082]        vfs_read+0xa7/0x360
    [ 1318.034788][ T1082]        ksys_read+0x70/0xf0
    [ 1318.035085][ T1082]        do_syscall_64+0x94/0x180
    [ 1318.035375][ T1082]        entry_SYSCALL_64_after_hwframe+0x46/0x4e
    [ 1318.035664][ T1082]
    [ 1318.035664][ T1082] other info that might help us debug this:
    [ 1318.035664][ T1082]
    [ 1318.036487][ T1082] Chain exists of:
    [ 1318.036487][ T1082]   &mm->mmap_lock --> reservation_ww_class_acquire --> reservation_ww_class_mutex
    [ 1318.036487][ T1082]
    [ 1318.037310][ T1082]  Possible unsafe locking scenario:
    [ 1318.037310][ T1082]
    [ 1318.037838][ T1082]        CPU0                    CPU1
    [ 1318.038101][ T1082]        ----                    ----
    [ 1318.038350][ T1082]   lock(reservation_ww_class_mutex);
    [ 1318.038590][ T1082]                                lock(reservation_ww_class_acquire);
    [ 1318.038839][ T1082]                                lock(reservation_ww_class_mutex);
    [ 1318.039083][ T1082]   rlock(&mm->mmap_lock);
    [ 1318.039328][ T1082]
    [ 1318.039328][ T1082]  *** DEADLOCK ***
    [ 1318.039328][ T1082]
    [ 1318.040029][ T1082] 1 lock held by tar/1082:
    [ 1318.040259][ T1082]  #0: ffff98c4c13f55f8 (reservation_ww_class_mutex){+.+.}-{3:3}, at: amdgpu_debugfs_mqd_read+0x6a/0x250 [amdgpu]
    [ 1318.040560][ T1082]
    [ 1318.040560][ T1082] stack backtrace:
    [ 1318.041053][ T1082] CPU: 22 PID: 1082 Comm: tar Not tainted 6.8.0-rc7-00015-ge0c8221b72c0 #17 3316c85d50e282c5643b075d1f01a4f6365e39c2
    [ 1318.041329][ T1082] Hardware name: Gigabyte Technology Co., Ltd. B650 AORUS PRO AX/B650 AORUS PRO AX, BIOS F20 12/14/2023
    [ 1318.041614][ T1082] Call Trace:
    [ 1318.041895][ T1082]  <TASK>
    [ 1318.042175][ T1082]  dump_stack_lvl+0x4a/0x80
    [ 1318.042460][ T1082]  check_noncircular+0x145/0x160
    [ 1318.042743][ T1082]  __lock_acquire+0x14bf/0x2680
    [ 1318.043022][ T1082]  lock_acquire+0xcd/0x2c0
    [ 1318.043301][ T1082]  ? __might_fault+0x40/0x80
    [ 1318.043580][ T1082]  ? __might_fault+0x40/0x80
    [ 1318.043856][ T1082]  __might_fault+0x58/0x80
    [ 1318.044131][ T1082]  ? __might_fault+0x40/0x80
    [ 1318.044408][ T1082]  amdgpu_debugfs_mqd_read+0x103/0x250 [amdgpu 8fe2afaa910cbd7654c8cab23563a94d6caebaab]
    [ 1318.044749][ T1082]  full_proxy_read+0x55/0x80
    [ 1318.045042][ T1082]  vfs_read+0xa7/0x360
    [ 1318.045333][ T1082]  ksys_read+0x70/0xf0
    [ 1318.045623][ T1082]  do_syscall_64+0x94/0x180
    [ 1318.045913][ T1082]  ? do_syscall_64+0xa0/0x180
    [ 1318.046201][ T1082]  ? lockdep_hardirqs_on+0x7d/0x100
    [ 1318.046487][ T1082]  ? do_syscall_64+0xa0/0x180
    [ 1318.046773][ T1082]  ? do_syscall_64+0xa0/0x180
    [ 1318.047057][ T1082]  ? do_syscall_64+0xa0/0x180
    [ 1318.047337][ T1082]  ? do_syscall_64+0xa0/0x180
    [ 1318.047611][ T1082]  entry_SYSCALL_64_after_hwframe+0x46/0x4e
    [ 1318.047887][ T1082] RIP: 0033:0x7f480b70a39d
    [ 1318.048162][ T1082] Code: 91 ba 0d 00 f7 d8 64 89 02 b8 ff ff ff ff eb b2 e8 18 a3 01 00 0f 1f 84 00 00 00 00 00 80 3d a9 3c 0e 00 00 74 17 31 c0 0f 05 <48> 3d 00 f0 ff ff 77 5b c3 66 2e 0f 1f 84 00 00 00 00 00 53 48 83
    [ 1318.048769][ T1082] RSP: 002b:00007ffde77f5c68 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
    [ 1318.049083][ T1082] RAX: ffffffffffffffda RBX: 0000000000000800 RCX: 00007f480b70a39d
    [ 1318.049392][ T1082] RDX: 0000000000000800 RSI: 000055c9f2120c00 RDI: 0000000000000008
    [ 1318.049703][ T1082] RBP: 0000000000000800 R08: 000055c9f2120a94 R09: 0000000000000007
    [ 1318.050011][ T1082] R10: 0000000000000000 R11: 0000000000000246 R12: 000055c9f2120c00
    [ 1318.050324][ T1082] R13: 0000000000000008 R14: 0000000000000008 R15: 0000000000000800
    [ 1318.050638][ T1082]  </TASK>
    
    amdgpu_debugfs_mqd_read() holds a reservation when it calls
    put_user(), which may fault and acquire the mmap_sem. This violates
    the established locking order.
    
    Bounce the mqd data through a kernel buffer to get put_user() out of
    the illegal section.
    
    Fixes: 445d85e3c1df ("drm/amdgpu: add debugfs interface for reading MQDs")
    Cc: stable@vger.kernel.org # v6.5+
    Reviewed-by: Shashank Sharma <shashank.sharma@amd.com>
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 80565e6be4945db2e8d79d2c3e6356158e76e3d8
Author: Eric Huang <jinhuieric.huang@amd.com>
Date:   Wed Mar 20 15:53:47 2024 -0400

    drm/amdkfd: fix TLB flush after unmap for GFX9.4.2
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 1210e2f1033dc56b666c9f6dfb761a2d3f9f5d6c upstream.
    
    TLB flush after unmap accidentially was removed on
    gfx9.4.2. It is to add it back.
    
    Signed-off-by: Eric Huang <jinhuieric.huang@amd.com>
    Reviewed-by: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d4b5e40c3c98ff74dfbbf57a699d290d2d9666e
Author: Jocelyn Falempe <jfalempe@redhat.com>
Date:   Tue Mar 12 10:35:12 2024 +0100

    drm/vmwgfx: Create debugfs ttm_resource_manager entry only if needed
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 4be9075fec0a639384ed19975634b662bfab938f upstream.
    
    The driver creates /sys/kernel/debug/dri/0/mob_ttm even when the
    corresponding ttm_resource_manager is not allocated.
    This leads to a crash when trying to read from this file.
    
    Add a check to create mob_ttm, system_mob_ttm, and gmr_ttm debug file
    only when the corresponding ttm_resource_manager is allocated.
    
    crash> bt
    PID: 3133409  TASK: ffff8fe4834a5000  CPU: 3    COMMAND: "grep"
     #0 [ffffb954506b3b20] machine_kexec at ffffffffb2a6bec3
     #1 [ffffb954506b3b78] __crash_kexec at ffffffffb2bb598a
     #2 [ffffb954506b3c38] crash_kexec at ffffffffb2bb68c1
     #3 [ffffb954506b3c50] oops_end at ffffffffb2a2a9b1
     #4 [ffffb954506b3c70] no_context at ffffffffb2a7e913
     #5 [ffffb954506b3cc8] __bad_area_nosemaphore at ffffffffb2a7ec8c
     #6 [ffffb954506b3d10] do_page_fault at ffffffffb2a7f887
     #7 [ffffb954506b3d40] page_fault at ffffffffb360116e
        [exception RIP: ttm_resource_manager_debug+0x11]
        RIP: ffffffffc04afd11  RSP: ffffb954506b3df0  RFLAGS: 00010246
        RAX: ffff8fe41a6d1200  RBX: 0000000000000000  RCX: 0000000000000940
        RDX: 0000000000000000  RSI: ffffffffc04b4338  RDI: 0000000000000000
        RBP: ffffb954506b3e08   R8: ffff8fee3ffad000   R9: 0000000000000000
        R10: ffff8fe41a76a000  R11: 0000000000000001  R12: 00000000ffffffff
        R13: 0000000000000001  R14: ffff8fe5bb6f3900  R15: ffff8fe41a6d1200
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
     #8 [ffffb954506b3e00] ttm_resource_manager_show at ffffffffc04afde7 [ttm]
     #9 [ffffb954506b3e30] seq_read at ffffffffb2d8f9f3
        RIP: 00007f4c4eda8985  RSP: 00007ffdbba9e9f8  RFLAGS: 00000246
        RAX: ffffffffffffffda  RBX: 000000000037e000  RCX: 00007f4c4eda8985
        RDX: 000000000037e000  RSI: 00007f4c41573000  RDI: 0000000000000003
        RBP: 000000000037e000   R8: 0000000000000000   R9: 000000000037fe30
        R10: 0000000000000000  R11: 0000000000000246  R12: 00007f4c41573000
        R13: 0000000000000003  R14: 00007f4c41572010  R15: 0000000000000003
        ORIG_RAX: 0000000000000000  CS: 0033  SS: 002b
    
    Signed-off-by: Jocelyn Falempe <jfalempe@redhat.com>
    Fixes: af4a25bbe5e7 ("drm/vmwgfx: Add debugfs entries for various ttm resource managers")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Zack Rusin <zack.rusin@broadcom.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240312093551.196609-1-jfalempe@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 63254364d53d3206e57063d69979d3388f7d7f6a
Author: Chris Bainbridge <chris.bainbridge@gmail.com>
Date:   Sat Mar 16 12:05:59 2024 +0000

    drm/dp: Fix divide-by-zero regression on DP MST unplug with nouveau
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 9cbd1dae842737bfafa4b10a87909fa209dde250 upstream.
    
    Fix a regression when using nouveau and unplugging a StarTech MSTDP122DP
    DisplayPort 1.2 MST hub (the same regression does not appear when using
    a Cable Matters DisplayPort 1.4 MST hub). Trace:
    
     divide error: 0000 [#1] PREEMPT SMP PTI
     CPU: 7 PID: 2962 Comm: Xorg Not tainted 6.8.0-rc3+ #744
     Hardware name: Razer Blade/DANA_MB, BIOS 01.01 08/31/2018
     RIP: 0010:drm_dp_bw_overhead+0xb4/0x110 [drm_display_helper]
     Code: c6 b8 01 00 00 00 75 61 01 c6 41 0f af f3 41 0f af f1 c1 e1 04 48 63 c7 31 d2 89 ff 48 8b 5d f8 c9 48 0f af f1 48 8d 44 06 ff <48> f7 f7 31 d2 31 c9 31 f6 31 ff 45 31 c0 45 31 c9 45 31 d2 45 31
     RSP: 0018:ffffb2c5c211fa30 EFLAGS: 00010206
     RAX: ffffffffffffffff RBX: 0000000000000000 RCX: 0000000000f59b00
     RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
     RBP: ffffb2c5c211fa48 R08: 0000000000000001 R09: 0000000000000020
     R10: 0000000000000004 R11: 0000000000000000 R12: 0000000000023b4a
     R13: ffff91d37d165800 R14: ffff91d36fac6d80 R15: ffff91d34a764010
     FS:  00007f4a1ca3fa80(0000) GS:ffff91d6edbc0000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000559491d49000 CR3: 000000011d180002 CR4: 00000000003706f0
     Call Trace:
      <TASK>
      ? show_regs+0x6d/0x80
      ? die+0x37/0xa0
      ? do_trap+0xd4/0xf0
      ? do_error_trap+0x71/0xb0
      ? drm_dp_bw_overhead+0xb4/0x110 [drm_display_helper]
      ? exc_divide_error+0x3a/0x70
      ? drm_dp_bw_overhead+0xb4/0x110 [drm_display_helper]
      ? asm_exc_divide_error+0x1b/0x20
      ? drm_dp_bw_overhead+0xb4/0x110 [drm_display_helper]
      ? drm_dp_calc_pbn_mode+0x2e/0x70 [drm_display_helper]
      nv50_msto_atomic_check+0xda/0x120 [nouveau]
      drm_atomic_helper_check_modeset+0xa87/0xdf0 [drm_kms_helper]
      drm_atomic_helper_check+0x19/0xa0 [drm_kms_helper]
      nv50_disp_atomic_check+0x13f/0x2f0 [nouveau]
      drm_atomic_check_only+0x668/0xb20 [drm]
      ? drm_connector_list_iter_next+0x86/0xc0 [drm]
      drm_atomic_commit+0x58/0xd0 [drm]
      ? __pfx___drm_printfn_info+0x10/0x10 [drm]
      drm_atomic_connector_commit_dpms+0xd7/0x100 [drm]
      drm_mode_obj_set_property_ioctl+0x1c5/0x450 [drm]
      ? __pfx_drm_connector_property_set_ioctl+0x10/0x10 [drm]
      drm_connector_property_set_ioctl+0x3b/0x60 [drm]
      drm_ioctl_kernel+0xb9/0x120 [drm]
      drm_ioctl+0x2d0/0x550 [drm]
      ? __pfx_drm_connector_property_set_ioctl+0x10/0x10 [drm]
      nouveau_drm_ioctl+0x61/0xc0 [nouveau]
      __x64_sys_ioctl+0xa0/0xf0
      do_syscall_64+0x76/0x140
      ? do_syscall_64+0x85/0x140
      ? do_syscall_64+0x85/0x140
      entry_SYSCALL_64_after_hwframe+0x6e/0x76
     RIP: 0033:0x7f4a1cd1a94f
     Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 <41> 89 c0 3d 00 f0 ff ff 77 1f 48 8b 44 24 18 64 48 2b 04 25 28 00
     RSP: 002b:00007ffd2f1df520 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
     RAX: ffffffffffffffda RBX: 00007ffd2f1df5b0 RCX: 00007f4a1cd1a94f
     RDX: 00007ffd2f1df5b0 RSI: 00000000c01064ab RDI: 000000000000000f
     RBP: 00000000c01064ab R08: 000056347932deb8 R09: 000056347a7d99c0
     R10: 0000000000000000 R11: 0000000000000246 R12: 000056347938a220
     R13: 000000000000000f R14: 0000563479d9f3f0 R15: 0000000000000000
      </TASK>
     Modules linked in: rfcomm xt_conntrack nft_chain_nat xt_MASQUERADE nf_nat nf_conntrack_netlink nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xfrm_user xfrm_algo xt_addrtype nft_compat nf_tables nfnetlink br_netfilter bridge stp llc ccm cmac algif_hash overlay algif_skcipher af_alg bnep binfmt_misc snd_sof_pci_intel_cnl snd_sof_intel_hda_common snd_soc_hdac_hda snd_sof_pci snd_sof_xtensa_dsp snd_sof_intel_hda snd_sof snd_sof_utils snd_soc_acpi_intel_match snd_soc_acpi snd_soc_core snd_compress snd_sof_intel_hda_mlink snd_hda_ext_core iwlmvm intel_rapl_msr intel_rapl_common intel_tcc_cooling x86_pkg_temp_thermal intel_powerclamp mac80211 coretemp kvm_intel snd_hda_codec_hdmi kvm snd_hda_codec_realtek snd_hda_codec_generic uvcvideo libarc4 snd_hda_intel snd_intel_dspcfg snd_hda_codec iwlwifi videobuf2_vmalloc videobuf2_memops uvc irqbypass btusb videobuf2_v4l2 snd_seq_midi crct10dif_pclmul hid_multitouch crc32_pclmul snd_seq_midi_event btrtl snd_hwdep videodev polyval_clmulni polyval_generic snd_rawmidi
      ghash_clmulni_intel aesni_intel btintel crypto_simd snd_hda_core cryptd snd_seq btbcm ee1004 8250_dw videobuf2_common btmtk rapl nls_iso8859_1 mei_hdcp thunderbolt bluetooth intel_cstate wmi_bmof intel_wmi_thunderbolt cfg80211 snd_pcm mc snd_seq_device i2c_i801 r8169 ecdh_generic snd_timer i2c_smbus ecc snd mei_me intel_lpss_pci mei ahci intel_lpss soundcore realtek libahci idma64 intel_pch_thermal i2c_hid_acpi i2c_hid acpi_pad sch_fq_codel msr parport_pc ppdev lp parport efi_pstore ip_tables x_tables autofs4 dm_crypt raid10 raid456 libcrc32c async_raid6_recov async_memcpy async_pq async_xor xor async_tx raid6_pq raid1 raid0 joydev input_leds hid_generic usbhid hid nouveau i915 drm_ttm_helper gpu_sched drm_gpuvm drm_exec i2c_algo_bit drm_buddy ttm drm_display_helper drm_kms_helper cec rc_core drm nvme nvme_core mxm_wmi xhci_pci xhci_pci_renesas video wmi pinctrl_cannonlake mac_hid
     ---[ end trace 0000000000000000 ]---
    
    Fix this by avoiding the divide if bpp is 0.
    
    Fixes: c1d6a22b7219 ("drm/dp: Add helpers to calculate the link BW overhead")
    Cc: stable@vger.kernel.org
    Acked-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Chris Bainbridge <chris.bainbridge@gmail.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/ZfWLJwYikw2K7B6c@debian.local
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 82b2706b118d8955fc4aa18ca9584aeff69a4b53
Author: Matthew Auld <matthew.auld@intel.com>
Date:   Thu Mar 21 11:06:30 2024 +0000

    drm/xe/query: fix gt_id bounds check
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 45c30b2923e5c53e0ef057a8a525b0456adde18e upstream.
    
    The user provided gt_id should always be less than the
    XE_MAX_GT_PER_TILE.
    
    Fixes: 7793d00d1bf5 ("drm/xe: Correlate engine and cpu timestamps with better accuracy")
    Signed-off-by: Matthew Auld <matthew.auld@intel.com>
    Cc: Nirmoy Das <nirmoy.das@intel.com>
    Cc: <stable@vger.kernel.org> # v6.8+
    Reviewed-by: Nirmoy Das <nirmoy.das@intel.com>
    Acked-by: Himal Prasad Ghimiray <himal.prasad.ghimiray@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240321110629.334701-2-matthew.auld@intel.com
    (cherry picked from commit 4b275f502a0d3668195762fb55fa00e659ad1b0b)
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5c8f7e460c8bc3ef629fccb9b3cf3e8725421dc3
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Mon Mar 25 20:06:19 2024 +0100

    net: phy: qcom: at803x: fix kernel panic with at8031_probe
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 6a4aee277740d04ac0fd54cfa17cc28261932ddc upstream.
    
    On reworking and splitting the at803x driver, in splitting function of
    at803x PHYs it was added a NULL dereference bug where priv is referenced
    before it's actually allocated and then is tried to write to for the
    is_1000basex and is_fiber variables in the case of at8031, writing on
    the wrong address.
    
    Fix this by correctly setting priv local variable only after
    at803x_probe is called and actually allocates priv in the phydev struct.
    
    Reported-by: William Wortel <wwortel@dorpstraat.com>
    Cc: <stable@vger.kernel.org>
    Fixes: 25d2ba94005f ("net: phy: at803x: move specific at8031 probe mode check to dedicated probe")
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20240325190621.2665-1-ansuelsmth@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e26e09917136a2678bed4e7be7b1975a242a4180
Author: Herve Codina <herve.codina@bootlin.com>
Date:   Mon Mar 25 09:25:05 2024 +0100

    net: wan: framer: Add missing static inline qualifiers
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ea2c09283b44d1a3732a195a9b257d56779c8863 upstream.
    
    Compilation with CONFIG_GENERIC_FRAMER disabled lead to the following
    warnings:
      framer.h:184:16: warning: no previous prototype for function 'framer_get' [-Wmissing-prototypes]
      184 | struct framer *framer_get(struct device *dev, const char *con_id)
      framer.h:184:1: note: declare 'static' if the function is not intended to be used outside of this translation unit
      184 | struct framer *framer_get(struct device *dev, const char *con_id)
      framer.h:189:6: warning: no previous prototype for function 'framer_put' [-Wmissing-prototypes]
      189 | void framer_put(struct device *dev, struct framer *framer)
      framer.h:189:1: note: declare 'static' if the function is not intended to be used outside of this translation unit
      189 | void framer_put(struct device *dev, struct framer *framer)
    
    Add missing 'static inline' qualifiers for these functions.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202403241110.hfJqeJRu-lkp@intel.com/
    Fixes: 82c944d05b1a ("net: wan: Add framer framework support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Herve Codina <herve.codina@bootlin.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 37250e368227a974af18f4f6190ca9abc515967d
Author: Claus Hansen Ries <chr@terma.com>
Date:   Thu Mar 21 13:08:59 2024 +0000

    net: ll_temac: platform_get_resource replaced by wrong function
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 3a38a829c8bc27d78552c28e582eb1d885d07d11 upstream.
    
    The function platform_get_resource was replaced with
    devm_platform_ioremap_resource_byname and is called using 0 as name.
    
    This eventually ends up in platform_get_resource_byname in the call
    stack, where it causes a null pointer in strcmp.
    
            if (type == resource_type(r) && !strcmp(r->name, name))
    
    It should have been replaced with devm_platform_ioremap_resource.
    
    Fixes: bd69058f50d5 ("net: ll_temac: Use devm_platform_ioremap_resource_byname()")
    Signed-off-by: Claus Hansen Ries <chr@terma.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Simon Horman <horms@kernel.org>
    Link: https://lore.kernel.org/r/cca18f9c630a41c18487729770b492bb@terma.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 904a5499b43916e0a4a12c9a8925aa2022c00bae
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Wed Mar 6 13:01:04 2024 +0800

    nouveau/dmem: handle kcalloc() allocation failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 16e87fe23d4af6df920406494ced5c0f4354567b upstream.
    
    The kcalloc() in nouveau_dmem_evict_chunk() will return null if
    the physical memory has run out. As a result, if we dereference
    src_pfns, dst_pfns or dma_addrs, the null pointer dereference bugs
    will happen.
    
    Moreover, the GPU is going away. If the kcalloc() fails, we could not
    evict all pages mapping a chunk. So this patch adds a __GFP_NOFAIL
    flag in kcalloc().
    
    Finally, as there is no need to have physically contiguous memory,
    this patch switches kcalloc() to kvcalloc() in order to avoid
    failing allocations.
    
    CC: <stable@vger.kernel.org> # v6.1
    Fixes: 249881232e14 ("nouveau/dmem: evict device private memory during release")
    Suggested-by: Danilo Krummrich <dakr@redhat.com>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: Danilo Krummrich <dakr@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240306050104.11259-1-duoming@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d08b9595efc96597de408d7a7ec87fda79f494ec
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Mon Mar 25 23:24:24 2024 +0100

    Revert "thermal: core: Don't update trip points inside the hysteresis range"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f67cf45deedb118af302534643627ce59074e8eb upstream.
    
    It has been reported the commit cf3986f8c01d3 introduced a regression
    when the temperature is wavering in the hysteresis region. The
    mitigation stops leading to an uncontrolled temperature increase until
    reaching the critical trip point.
    
    Here what happens:
    
     * 'throttle' is when the current temperature is greater than the trip
       point temperature
     * 'target' is the mitigation level
     * 'passive' is positive when there is a mitigation, zero otherwise
     * these values are computed in the step_wise governor
    
    Configuration:
    
     trip point 1: temp=95°C, hyst=5°C (passive)
     trip point 2: temp=115°C, hyst=0°C (critical)
     governor: step_wise
    
     1. The temperature crosses the way up the trip point 1 at 95°C
    
       - trend=raising
       - throttle=1, target=1
       - passive=1
       - set_trips: low=90°C, high=115°C
    
     2. The temperature decreases but stays in the hysteresis region at
        93°C
    
       - trend=dropping
       - throttle=0, target=0
       - passive=1
    
       Before cf3986f8c01d3
       - set_trips: low=90°C, high=95°C
    
       After cf3986f8c01d3
       - set_trips: low=90°C, high=115°C
    
     3. The temperature increases a bit but stays in the hysteresis region
        at 94°C (so below the trip point 1 temp 95°C)
    
       - trend=raising
       - throttle=0, target=0
       - passive=1
    
       Before cf3986f8c01d3
       - set_trips: low=90°C, high=95°C
    
       After cf3986f8c01d3
       - set_trips: low=90°C, high=115°C
    
     4. The temperature decreases but stays in the hysteresis region at
        93°C
    
       - trend=dropping
       - throttle=0, target=THERMAL_NO_TARGET
       - passive=0
    
       Before cf3986f8c01d3
       - set_trips: low=90°C, high=95°C
    
       After cf3986f8c01d3
       - set_trips: low=90°C, high=115°C
    
    At this point, the 'passive' value is zero, there is no mitigation,
    the temperature is in the hysteresis region, the next trip point is
    115°C. As 'passive' is zero, the timer to monitor the thermal zone is
    disabled. Consequently if the temperature continues to increase, no
    mitigation will happen and it will reach the 115°C trip point and
    reboot.
    
    Before the optimization, the high boundary would have been 95°C, thus
    triggering the mitigation again and rearming the polling timer.
    
    The optimization make sense but given the current implementation of
    the step_wise governor collaborating via this 'passive' flag with the
    core framework it can not work.
    
    From a higher perspective it seems like there is a problem between the
    governor which sets a variable to be used by the core framework. That
    sounds akward and it would make much more sense if the core framework
    controls the governor and not the opposite. But as the devil hides in
    the details, there are some subtilities to be addressed before.
    
    Elaborating those would be out of the scope this changelog. So let's
    stay simple and revert the change first to fixup all broken mobile
    platforms.
    
    This reverts commit cf3986f8c01d3 ("thermal: core: Don't update trip
    points inside the hysteresis range") and takes a conflict with commit
    0c0c4740c9d26 ("0c0c4740c9d2 thermal: trip: Use for_each_trip() in
    __thermal_zone_set_trips()") in drivers/thermal/thermal_trip.c into
    account.
    
    Fixes: cf3986f8c01d3 ("thermal: core: Don't update trip points inside the hysteresis range")
    Reported-by: Manaf Meethalavalappu Pallikunhi <quic_manafm@quicinc.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Acked-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Cc: 6.7+ <stable@vger.kernel.org> # 6.7+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 723ba1b2e9c200835fea4549761f11a4e903b1e1
Author: Ye Zhang <ye.zhang@rock-chips.com>
Date:   Thu Mar 21 18:21:00 2024 +0800

    thermal: devfreq_cooling: Fix perf state when calculate dfc res_util
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit a26de34b3c77ae3a969654d94be49e433c947e3b upstream.
    
    The issue occurs when the devfreq cooling device uses the EM power model
    and the get_real_power() callback is provided by the driver.
    
    The EM power table is sorted ascending，can't index the table by cooling
    device state，so convert cooling state to performance state by
    dfc->max_state - dfc->capped_state.
    
    Fixes: 615510fe13bd ("thermal: devfreq_cooling: remove old power model and use EM")
    Cc: 5.11+ <stable@vger.kernel.org> # 5.11+
    Signed-off-by: Ye Zhang <ye.zhang@rock-chips.com>
    Reviewed-by: Dhruva Gole <d-gole@ti.com>
    Reviewed-by: Lukasz Luba <lukasz.luba@arm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit aa029f50999f0065bd591e165db8d02407d8a1d3
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Thu Mar 28 09:43:40 2024 +0900

    block: Do not force full zone append completion in req_bio_endio()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 55251fbdf0146c252ceff146a1bb145546f3e034 upstream.
    
    This reverts commit 748dc0b65ec2b4b7b3dbd7befcc4a54fdcac7988.
    
    Partial zone append completions cannot be supported as there is no
    guarantees that the fragmented data will be written sequentially in the
    same manner as with a full command. Commit 748dc0b65ec2 ("block: fix
    partial zone append completion handling in req_bio_endio()") changed
    req_bio_endio() to always advance a partially failed BIO by its full
    length, but this can lead to incorrect accounting. So revert this
    change and let low level device drivers handle this case by always
    failing completely zone append operations. With this revert, users will
    still see an IO error for a partially completed zone append BIO.
    
    Fixes: 748dc0b65ec2 ("block: fix partial zone append completion handling in req_bio_endio()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20240328004409.594888-2-dlemoal@kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b0d6c983ae10d7da42011075ca71e2dfdae1fd30
Author: Liming Sun <limings@nvidia.com>
Date:   Tue Mar 19 12:16:16 2024 -0400

    sdhci-of-dwcmshc: disable PM runtime in dwcmshc_remove()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 03749309909935070253accab314288d332a204d upstream.
    
    This commit disables PM runtime in dwcmshc_remove() to avoid the
    error message below when reloading the sdhci-of-dwcmshc.ko
    
      sdhci-dwcmshc MLNXBF30:00: Unbalanced pm_runtime_enable!
    
    Fixes: 48fe8fadbe5e ("mmc: sdhci-of-dwcmshc: Add runtime PM operations")
    Reviewed-by: David Thompson <davthompson@nvidia.com>
    Signed-off-by: Liming Sun <limings@nvidia.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/b9155963ffb12d18375002bf9ac9a3f98b727fc8.1710854108.git.limings@nvidia.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0c7b648799f3428befddb556a5ac05c4e6e72adf
Author: Mikko Rapeli <mikko.rapeli@linaro.org>
Date:   Wed Mar 13 15:37:44 2024 +0200

    mmc: core: Avoid negative index with array access
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit cf55a7acd1ed38afe43bba1c8a0935b51d1dc014 upstream.
    
    Commit 4d0c8d0aef63 ("mmc: core: Use mrq.sbc in close-ended ffu") assigns
    prev_idata = idatas[i - 1], but doesn't check that the iterator i is
    greater than zero. Let's fix this by adding a check.
    
    Fixes: 4d0c8d0aef63 ("mmc: core: Use mrq.sbc in close-ended ffu")
    Link: https://lore.kernel.org/all/20231129092535.3278-1-avri.altman@wdc.com/
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikko Rapeli <mikko.rapeli@linaro.org>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Tested-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Link: https://lore.kernel.org/r/20240313133744.2405325-2-mikko.rapeli@linaro.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a70827fa30cbadc50866c1844c99a7521b07e188
Author: Mikko Rapeli <mikko.rapeli@linaro.org>
Date:   Wed Mar 13 15:37:43 2024 +0200

    mmc: core: Initialize mmc_blk_ioc_data
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 0cdfe5b0bf295c0dee97436a8ed13336933a0211 upstream.
    
    Commit 4d0c8d0aef63 ("mmc: core: Use mrq.sbc in close-ended ffu") adds
    flags uint to struct mmc_blk_ioc_data, but it does not get initialized for
    RPMB ioctls which now fails.
    
    Let's fix this by always initializing the struct and flags to zero.
    
    Fixes: 4d0c8d0aef63 ("mmc: core: Use mrq.sbc in close-ended ffu")
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218587
    Link: https://lore.kernel.org/all/20231129092535.3278-1-avri.altman@wdc.com/
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikko Rapeli <mikko.rapeli@linaro.org>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Tested-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Link: https://lore.kernel.org/r/20240313133744.2405325-1-mikko.rapeli@linaro.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 830b88f898d8560dbdc078027add3683ef757d89
Author: Romain Naour <romain.naour@skf.com>
Date:   Sat Mar 16 00:44:44 2024 +0100

    mmc: sdhci-omap: re-tuning is needed after a pm transition to support emmc HS200 mode
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit f9e2a5b00a35f2c064dc679808bc8db5cc779ed6 upstream.
    
    "PM runtime functions" was been added in sdhci-omap driver in commit
    f433e8aac6b9 ("mmc: sdhci-omap: Implement PM runtime functions") along
    with "card power off and enable aggressive PM" in commit 3edf588e7fe0
    ("mmc: sdhci-omap: Allow SDIO card power off and enable aggressive PM").
    
    Since then, the sdhci-omap driver doesn't work using mmc-hs200 mode
    due to the tuning values being lost during a pm transition.
    
    As for the sdhci_am654 driver, request a new tuning sequence before
    suspend (sdhci_omap_runtime_suspend()), otherwise the device will
    trigger cache flush error:
    
      mmc1: cache flush error -110 (ETIMEDOUT)
      mmc1: error -110 doing aggressive suspend
    
    followed by I/O errors produced by fdisk -l /dev/mmcblk1boot1:
    
      I/O error, dev mmcblk1boot0, sector 64384 op 0x0:(READ) flags 0x80700 phys_seg 1
      prio class 2
      I/O error, dev mmcblk1boot1, sector 64384 op 0x0:(READ) flags 0x80700 phys_seg 1
      prio class 2
      I/O error, dev mmcblk1boot1, sector 64384 op 0x0:(READ) flags 0x0 phys_seg 1
      prio class 2
      Buffer I/O error on dev mmcblk1boot1, logical block 8048, async page read
      I/O error, dev mmcblk1boot0, sector 64384 op 0x0:(READ) flags 0x0 phys_seg 1
      prio class 2
      Buffer I/O error on dev mmcblk1boot0, logical block 8048, async page read
    
    Don't re-tune if auto retuning is supported in HW (when SDHCI_TUNING_MODE_3
    is available).
    
    Link: https://lore.kernel.org/all/2e5f1997-564c-44e4-b357-6343e0dae7ab@smile.fr
    Fixes: f433e8aac6b9 ("mmc: sdhci-omap: Implement PM runtime functions")
    Signed-off-by: Romain Naour <romain.naour@skf.com>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240315234444.816978-1-romain.naour@smile.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 214a369b0b746db0426d6a7d8a342e8d54f0d3cd
Author: Edward Liaw <edliaw@google.com>
Date:   Mon Mar 25 19:40:52 2024 +0000

    selftests/mm: fix ARM related issue with fork after pthread_create
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 8c864371b2a15a23ce35aa7e2bd241baaad6fbe8 upstream.
    
    Following issue was observed while running the uffd-unit-tests selftest
    on ARM devices. On x86_64 no issues were detected:
    
    pthread_create followed by fork caused deadlock in certain cases wherein
    fork required some work to be completed by the created thread.  Used
    synchronization to ensure that created thread's start function has started
    before invoking fork.
    
    [edliaw@google.com: refactored to use atomic_bool]
    Link: https://lkml.kernel.org/r/20240325194100.775052-1-edliaw@google.com
    Fixes: 760aee0b71e3 ("selftests/mm: add tests for RO pinning vs fork()")
    Signed-off-by: Lokesh Gidra <lokeshgidra@google.com>
    Signed-off-by: Edward Liaw <edliaw@google.com>
    Cc: Peter Xu <peterx@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 171c415e3bfa488d2a5171ca909f09905ba5f1e0
Author: Edward Liaw <edliaw@google.com>
Date:   Thu Mar 21 23:20:21 2024 +0000

    selftests/mm: sigbus-wp test requires UFFD_FEATURE_WP_HUGETLBFS_SHMEM
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 105840ebd76d8dbc1a7d734748ae320076f3201e upstream.
    
    The sigbus-wp test requires the UFFD_FEATURE_WP_HUGETLBFS_SHMEM flag for
    shmem and hugetlb targets.  Otherwise it is not backwards compatible with
    kernels <5.19 and fails with EINVAL.
    
    Link: https://lkml.kernel.org/r/20240321232023.2064975-1-edliaw@google.com
    Fixes: 73c1ea939b65 ("selftests/mm: move uffd sig/events tests into uffd unit tests")
    Signed-off-by: Edward Liaw <edliaw@google.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Peter Xu <peterx@redhat.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0d4811ba39e4afd26dbeb656b46376c0fb319771
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Fri Mar 15 05:55:56 2024 -0400

    mm: cachestat: fix two shmem bugs
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit d5d39c707a4cf0bcc84680178677b97aa2cb2627 upstream.
    
    When cachestat on shmem races with swapping and invalidation, there
    are two possible bugs:
    
    1) A swapin error can have resulted in a poisoned swap entry in the
       shmem inode's xarray. Calling get_shadow_from_swap_cache() on it
       will result in an out-of-bounds access to swapper_spaces[].
    
       Validate the entry with non_swap_entry() before going further.
    
    2) When we find a valid swap entry in the shmem's inode, the shadow
       entry in the swapcache might not exist yet: swap IO is still in
       progress and we're before __remove_mapping; swapin, invalidation,
       or swapoff have removed the shadow from swapcache after we saw the
       shmem swap entry.
    
       This will send a NULL to workingset_test_recent(). The latter
       purely operates on pointer bits, so it won't crash - node 0, memcg
       ID 0, eviction timestamp 0, etc. are all valid inputs - but it's a
       bogus test. In theory that could result in a false "recently
       evicted" count.
    
       Such a false positive wouldn't be the end of the world. But for
       code clarity and (future) robustness, be explicit about this case.
    
       Bail on get_shadow_from_swap_cache() returning NULL.
    
    Link: https://lkml.kernel.org/r/20240315095556.GC581298@cmpxchg.org
    Fixes: cf264e1329fb ("cachestat: implement cachestat syscall")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reported-by: Chengming Zhou <chengming.zhou@linux.dev>  [Bug #1]
    Reported-by: Jann Horn <jannh@google.com>               [Bug #2]
    Reviewed-by: Chengming Zhou <chengming.zhou@linux.dev>
    Reviewed-by: Nhat Pham <nphamcs@gmail.com>
    Cc: <stable@vger.kernel.org>                            [v6.5+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 261791c6297a7a60bcab4421c3e30b7b82851a16
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Mar 19 17:37:46 2024 -0700

    hexagon: vmlinux.lds.S: handle attributes section
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 549aa9678a0b3981d4821bf244579d9937650562 upstream.
    
    After the linked LLVM change, the build fails with
    CONFIG_LD_ORPHAN_WARN_LEVEL="error", which happens with allmodconfig:
    
      ld.lld: error: vmlinux.a(init/main.o):(.hexagon.attributes) is being placed in '.hexagon.attributes'
    
    Handle the attributes section in a similar manner as arm and riscv by
    adding it after the primary ELF_DETAILS grouping in vmlinux.lds.S, which
    fixes the error.
    
    Link: https://lkml.kernel.org/r/20240319-hexagon-handle-attributes-section-vmlinux-lds-s-v1-1-59855dab8872@kernel.org
    Fixes: 113616ec5b64 ("hexagon: select ARCH_WANT_LD_ORPHAN_WARN")
    Link: https://github.com/llvm/llvm-project/commit/31f4b329c8234fab9afa59494d7f8bdaeaefeaad
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Brian Cain <bcain@quicinc.com>
    Cc: Bill Wendling <morbo@google.com>
    Cc: Justin Stitt <justinstitt@google.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 53e449873b08a6fa23adf77447eb4be222a5298c
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Mar 20 11:26:07 2024 -0700

    exec: Fix NOMMU linux_binprm::exec in transfer_args_to_stack()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 2aea94ac14d1e0a8ae9e34febebe208213ba72f7 upstream.
    
    In NOMMU kernel the value of linux_binprm::p is the offset inside the
    temporary program arguments array maintained in separate pages in the
    linux_binprm::page. linux_binprm::exec being a copy of linux_binprm::p
    thus must be adjusted when that array is copied to the user stack.
    Without that adjustment the value passed by the NOMMU kernel to the ELF
    program in the AT_EXECFN entry of the aux array doesn't make any sense
    and it may break programs that try to access memory pointed to by that
    entry.
    
    Adjust linux_binprm::exec before the successful return from the
    transfer_args_to_stack().
    
    Cc: <stable@vger.kernel.org>
    Fixes: b6a2fea39318 ("mm: variable length argument support")
    Fixes: 5edc2a5123a7 ("binfmt_elf_fdpic: wire up AT_EXECFD, AT_EXECFN, AT_SECURE")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Link: https://lore.kernel.org/r/20240320182607.1472887-1-jcmvbkbc@gmail.com
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 337e85a2418c3cc4033d751a87b35fed3e340887
Author: Thomas Zimmermann <tzimmermann@suse.de>
Date:   Fri Mar 22 09:29:46 2024 +0100

    fbdev: Select I/O-memory framebuffer ops for SBus
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit a8eb93b42d7e068306ca07f51055cbcde893fea3 upstream.
    
    Framebuffer I/O on the Sparc Sbus requires read/write helpers for
    I/O memory. Select FB_IOMEM_FOPS accordingly.
    
    Reported-by: Nick Bowler <nbowler@draconx.ca>
    Closes: https://lore.kernel.org/lkml/5bc21364-41da-a339-676e-5bb0f4faebfb@draconx.ca/
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Fixes: 8813e86f6d82 ("fbdev: Remove default file-I/O implementations")
    Cc: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: Javier Martinez Canillas <javierm@redhat.com>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: linux-fbdev@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v6.8+
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240322083005.24269-1-tzimmermann@suse.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4f6667b2d38a43ff9f3db37e220ec49662d79c56
Author: Harry Wentland <harry.wentland@amd.com>
Date:   Tue Mar 12 11:21:32 2024 -0400

    Revert "drm/amd/display: Fix sending VSC (+ colorimetry) packets for DP/eDP displays without PSR"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 78aca9ee5e012e130dbfbd7191bc2302b0cf3b37 upstream.
    
    This causes flicker on a bunch of eDP panels. The info_packet code
    also caused regressions on other OSes that we haven't' seen on Linux
    yet, but that is likely due to the fact that we haven't had a chance
    to test those environments on Linux.
    
    We'll need to revisit this.
    
    This reverts commit 202260f64519e591b5cd99626e441b6559f571a3.
    
    Closes: https://gitlab.freedesktop.org/drm/amd/-/issues/3207
    Closes: https://gitlab.freedesktop.org/drm/amd/-/issues/3151
    Signed-off-by: Harry Wentland <harry.wentland@amd.com>
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 607d6a09b2995026ee3928cb4762174700b36833
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Mar 20 23:26:32 2024 +0200

    wifi: iwlwifi: mvm: handle debugfs names more carefully
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 19d82bdedaf2db0bfb3762dda714ea803065eed5 upstream.
    
    With debugfs=off, we can get here with the dbgfs_dir being
    an ERR_PTR(). Instead of checking for all this, which is
    often flagged as a mistake, simply handle the names here
    more carefully by printing them, then we don't need extra
    checks.
    
    Also, while checking, I noticed theoretically 'buf' is too
    small, so fix that size as well.
    
    Cc: stable@vger.kernel.org
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218422
    Fixes: c36235acb34f ("wifi: iwlwifi: mvm: rework debugfs handling")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240320232419.4dc1eb3dd015.I32f308b0356ef5bcf8d188dd98ce9b210e3ab9fd@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9f6b2a606d25d682f86711b8ef5a8a874ac083e
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Mar 19 10:10:20 2024 +0200

    wifi: iwlwifi: fw: don't always use FW dump trig
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 045a5b645dd59929b0e05375f493cde3a0318271 upstream.
    
    Since the dump_data (struct iwl_fwrt_dump_data) is a union,
    it's not safe to unconditionally access and use the 'trig'
    member, it might be 'desc' instead. Access it only if it's
    known to be 'trig' rather than 'desc', i.e. if ini-debug
    is present.
    
    Cc: stable@vger.kernel.org
    Fixes: 0eb50c674a1e ("iwlwifi: yoyo: send hcmd to fw after dump collection completes.")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240319100755.e2976bc58b29.I72fbd6135b3623227de53d8a2bb82776066cb72b@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea94660b962e460cb0c5b44e25a0d7dcb01b70a5
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Mar 14 11:09:52 2024 +0100

    wifi: iwlwifi: mvm: disable MLO for the time being
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 5f404005055304830bbbee0d66af2964fc48f29e upstream.
    
    MLO ended up not really fully stable yet, we want to make
    sure it works well with the ecosystem before enabling it.
    Thus, remove the flag, but set WIPHY_FLAG_DISABLE_WEXT so
    we don't get wireless extensions back until we enable MLO
    for this hardware.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240314110951.d6ad146df98d.I47127e4fdbdef89e4ccf7483641570ee7871d4e6@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e4aadc886970dbf32dbb22e189320b2ad72262e1
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Mar 14 11:09:51 2024 +0100

    wifi: cfg80211: add a flag to disable wireless extensions
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit be23b2d7c3b7c8bf57b1cf0bf890bd65df9d0186 upstream.
    
    Wireless extensions are already disabled if MLO is enabled,
    given that we cannot support MLO there with all the hard-
    coded assumptions about BSSID etc.
    
    However, the WiFi7 ecosystem is still stabilizing, and some
    devices may need MLO disabled while that happens. In that
    case, we might end up with a device that supports wext (but
    not MLO) in one kernel, and then breaks wext in the future
    (by enabling MLO), which is not desirable.
    
    Add a flag to let such drivers/devices disable wext even if
    MLO isn't yet enabled.
    
    Cc: stable@vger.kernel.org
    Link: https://msgid.link/20240314110951.b50f1dc4ec21.I656ddd8178eedb49dc5c6c0e70f8ce5807afb54f@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 66c273ffd6ecfeec017befe8948277bcddb4fec7
Author: Felix Fietkau <nbd@nbd.name>
Date:   Sat Mar 16 08:43:36 2024 +0100

    wifi: mac80211: check/clear fast rx for non-4addr sta VLAN changes
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 4f2bdb3c5e3189297e156b3ff84b140423d64685 upstream.
    
    When moving a station out of a VLAN and deleting the VLAN afterwards, the
    fast_rx entry still holds a pointer to the VLAN's netdev, which can cause
    use-after-free bugs. Fix this by immediately calling ieee80211_check_fast_rx
    after the VLAN change.
    
    Cc: stable@vger.kernel.org
    Reported-by: ranygh@riseup.net
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Link: https://msgid.link/20240316074336.40442-1-nbd@nbd.name
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 20683cbc2f27535858d140fcba6d981ee6a283b8
Author: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Date:   Wed Feb 28 12:13:27 2024 +0100

    btrfs: zoned: fix use-after-free in do_zone_finish()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 1ec17ef59168a1a6f1105f5dc517f783839a5302 upstream.
    
    Shinichiro reported the following use-after-free triggered by the device
    replace operation in fstests btrfs/070.
    
     BTRFS info (device nullb1): scrub: finished on devid 1 with status: 0
     ==================================================================
     BUG: KASAN: slab-use-after-free in do_zone_finish+0x91a/0xb90 [btrfs]
     Read of size 8 at addr ffff8881543c8060 by task btrfs-cleaner/3494007
    
     CPU: 0 PID: 3494007 Comm: btrfs-cleaner Tainted: G        W          6.8.0-rc5-kts #1
     Hardware name: Supermicro Super Server/X11SPi-TF, BIOS 3.3 02/21/2020
     Call Trace:
      <TASK>
      dump_stack_lvl+0x5b/0x90
      print_report+0xcf/0x670
      ? __virt_addr_valid+0x200/0x3e0
      kasan_report+0xd8/0x110
      ? do_zone_finish+0x91a/0xb90 [btrfs]
      ? do_zone_finish+0x91a/0xb90 [btrfs]
      do_zone_finish+0x91a/0xb90 [btrfs]
      btrfs_delete_unused_bgs+0x5e1/0x1750 [btrfs]
      ? __pfx_btrfs_delete_unused_bgs+0x10/0x10 [btrfs]
      ? btrfs_put_root+0x2d/0x220 [btrfs]
      ? btrfs_clean_one_deleted_snapshot+0x299/0x430 [btrfs]
      cleaner_kthread+0x21e/0x380 [btrfs]
      ? __pfx_cleaner_kthread+0x10/0x10 [btrfs]
      kthread+0x2e3/0x3c0
      ? __pfx_kthread+0x10/0x10
      ret_from_fork+0x31/0x70
      ? __pfx_kthread+0x10/0x10
      ret_from_fork_asm+0x1b/0x30
      </TASK>
    
     Allocated by task 3493983:
      kasan_save_stack+0x33/0x60
      kasan_save_track+0x14/0x30
      __kasan_kmalloc+0xaa/0xb0
      btrfs_alloc_device+0xb3/0x4e0 [btrfs]
      device_list_add.constprop.0+0x993/0x1630 [btrfs]
      btrfs_scan_one_device+0x219/0x3d0 [btrfs]
      btrfs_control_ioctl+0x26e/0x310 [btrfs]
      __x64_sys_ioctl+0x134/0x1b0
      do_syscall_64+0x99/0x190
      entry_SYSCALL_64_after_hwframe+0x6e/0x76
    
     Freed by task 3494056:
      kasan_save_stack+0x33/0x60
      kasan_save_track+0x14/0x30
      kasan_save_free_info+0x3f/0x60
      poison_slab_object+0x102/0x170
      __kasan_slab_free+0x32/0x70
      kfree+0x11b/0x320
      btrfs_rm_dev_replace_free_srcdev+0xca/0x280 [btrfs]
      btrfs_dev_replace_finishing+0xd7e/0x14f0 [btrfs]
      btrfs_dev_replace_by_ioctl+0x1286/0x25a0 [btrfs]
      btrfs_ioctl+0xb27/0x57d0 [btrfs]
      __x64_sys_ioctl+0x134/0x1b0
      do_syscall_64+0x99/0x190
      entry_SYSCALL_64_after_hwframe+0x6e/0x76
    
     The buggy address belongs to the object at ffff8881543c8000
      which belongs to the cache kmalloc-1k of size 1024
     The buggy address is located 96 bytes inside of
      freed 1024-byte region [ffff8881543c8000, ffff8881543c8400)
    
     The buggy address belongs to the physical page:
     page:00000000fe2c1285 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1543c8
     head:00000000fe2c1285 order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0
     flags: 0x17ffffc0000840(slab|head|node=0|zone=2|lastcpupid=0x1fffff)
     page_type: 0xffffffff()
     raw: 0017ffffc0000840 ffff888100042dc0 ffffea0019e8f200 dead000000000002
     raw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000
     page dumped because: kasan: bad access detected
    
     Memory state around the buggy address:
      ffff8881543c7f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff8881543c7f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     >ffff8881543c8000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                            ^
      ffff8881543c8080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      ffff8881543c8100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    This UAF happens because we're accessing stale zone information of a
    already removed btrfs_device in do_zone_finish().
    
    The sequence of events is as follows:
    
    btrfs_dev_replace_start
      btrfs_scrub_dev
       btrfs_dev_replace_finishing
        btrfs_dev_replace_update_device_in_mapping_tree <-- devices replaced
        btrfs_rm_dev_replace_free_srcdev
         btrfs_free_device                              <-- device freed
    
    cleaner_kthread
     btrfs_delete_unused_bgs
      btrfs_zone_finish
       do_zone_finish              <-- refers the freed device
    
    The reason for this is that we're using a cached pointer to the chunk_map
    from the block group, but on device replace this cached pointer can
    contain stale device entries.
    
    The staleness comes from the fact, that btrfs_block_group::physical_map is
    not a pointer to a btrfs_chunk_map but a memory copy of it.
    
    Also take the fs_info::dev_replace::rwsem to prevent
    btrfs_dev_replace_update_device_in_mapping_tree() from changing the device
    underneath us again.
    
    Note: btrfs_dev_replace_update_device_in_mapping_tree() is holding
    fs_info::mapping_tree_lock, but as this is a spinning read/write lock we
    cannot take it as the call to blkdev_zone_mgmt() requires a memory
    allocation which may not sleep.
    But btrfs_dev_replace_update_device_in_mapping_tree() is always called with
    the fs_info::dev_replace::rwsem held in write mode.
    
    Many thanks to Shinichiro for analyzing the bug.
    
    Reported-by: Shinichiro Kawasaki <shinichiro.kawasaki@wdc.com>
    CC: stable@vger.kernel.org # 6.8
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b6e128d6ccfd4f9904aece12935705f4d0a98f05
Author: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Date:   Mon Feb 26 16:39:13 2024 +0100

    btrfs: zoned: use zone aware sb location for scrub
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 74098a989b9c3370f768140b7783a7aaec2759b3 upstream.
    
    At the moment scrub_supers() doesn't grab the super block's location via
    the zoned device aware btrfs_sb_log_location() but via btrfs_sb_offset().
    
    This leads to checksum errors on 'scrub' as we're not accessing the
    correct location of the super block.
    
    So use btrfs_sb_log_location() for getting the super blocks location on
    scrub.
    
    Reported-by: WA AM <waautomata@gmail.com>
    Link: http://lore.kernel.org/linux-btrfs/CANU2Z0EvUzfYxczLgGUiREoMndE9WdQnbaawV5Fv5gNXptPUKw@mail.gmail.com
    CC: stable@vger.kernel.org # 5.15+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Naohiro Aota <naohiro.aota@wdc.com>
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3f50ef87665dc6acc0efa6eec281ba6faec0454b
Author: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Date:   Wed Feb 21 07:35:52 2024 -0800

    btrfs: zoned: don't skip block groups with 100% zone unusable
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit a8b70c7f8600bc77d03c0b032c0662259b9e615e upstream.
    
    Commit f4a9f219411f ("btrfs: do not delete unused block group if it may be
    used soon") changed the behaviour of deleting unused block-groups on zoned
    filesystems. Starting with this commit, we're using
    btrfs_space_info_used() to calculate the number of used bytes in a
    space_info. But btrfs_space_info_used() also accounts
    btrfs_space_info::bytes_zone_unusable as used bytes.
    
    So if a block group is 100% zone_unusable it is skipped from the deletion
    step.
    
    In order not to skip fully zone_unusable block-groups, also check if the
    block-group has bytes left that can be used on a zoned filesystem.
    
    Fixes: f4a9f219411f ("btrfs: do not delete unused block group if it may be used soon")
    CC: stable@vger.kernel.org # 6.1+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 240e5d2b7aa34db50271ddee1d858c88385ccdd3
Author: Tavian Barnes <tavianator@tavianator.com>
Date:   Fri Mar 15 21:14:29 2024 -0400

    btrfs: fix race in read_extent_buffer_pages()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ef1e68236b9153c27cb7cf29ead0c532870d4215 upstream.
    
    There are reports from tree-checker that detects corrupted nodes,
    without any obvious pattern so possibly an overwrite in memory.
    After some debugging it turns out there's a race when reading an extent
    buffer the uptodate status can be missed.
    
    To prevent concurrent reads for the same extent buffer,
    read_extent_buffer_pages() performs these checks:
    
        /* (1) */
        if (test_bit(EXTENT_BUFFER_UPTODATE, &eb->bflags))
            return 0;
    
        /* (2) */
        if (test_and_set_bit(EXTENT_BUFFER_READING, &eb->bflags))
            goto done;
    
    At this point, it seems safe to start the actual read operation. Once
    that completes, end_bbio_meta_read() does
    
        /* (3) */
        set_extent_buffer_uptodate(eb);
    
        /* (4) */
        clear_bit(EXTENT_BUFFER_READING, &eb->bflags);
    
    Normally, this is enough to ensure only one read happens, and all other
    callers wait for it to finish before returning.  Unfortunately, there is
    a racey interleaving:
    
        Thread A | Thread B | Thread C
        ---------+----------+---------
           (1)   |          |
                 |    (1)   |
           (2)   |          |
           (3)   |          |
           (4)   |          |
                 |    (2)   |
                 |          |    (1)
    
    When this happens, thread B kicks of an unnecessary read. Worse, thread
    C will see UPTODATE set and return immediately, while the read from
    thread B is still in progress.  This race could result in tree-checker
    errors like this as the extent buffer is concurrently modified:
    
        BTRFS critical (device dm-0): corrupted node, root=256
        block=8550954455682405139 owner mismatch, have 11858205567642294356
        expect [256, 18446744073709551360]
    
    Fix it by testing UPTODATE again after setting the READING bit, and if
    it's been set, skip the unnecessary read.
    
    Fixes: d7172f52e993 ("btrfs: use per-buffer locking for extent_buffer reading")
    Link: https://lore.kernel.org/linux-btrfs/CAHk-=whNdMaN9ntZ47XRKP6DBes2E5w7fi-0U3H2+PS18p+Pzw@mail.gmail.com/
    Link: https://lore.kernel.org/linux-btrfs/f51a6d5d7432455a6a858d51b49ecac183e0bbc9.1706312914.git.wqu@suse.com/
    Link: https://lore.kernel.org/linux-btrfs/c7241ea4-fcc6-48d2-98c8-b5ea790d6c89@gmx.com/
    CC: stable@vger.kernel.org # 6.5+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Tavian Barnes <tavianator@tavianator.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ minor update of changelog ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f79048588508e39c4d146bdc57997713c48e14fb
Author: Anand Jain <anand.jain@oracle.com>
Date:   Fri Mar 1 08:42:13 2024 +0800

    btrfs: validate device maj:min during open
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 9f7eb8405dcbc79c5434821e9e3e92abe187ee8e upstream.
    
    Boris managed to create a device capable of changing its maj:min without
    altering its device path.
    
    Only multi-devices can be scanned. A device that gets scanned and remains
    in the btrfs kernel cache might end up with an incorrect maj:min.
    
    Despite the temp-fsid feature patch did not introduce this bug, it could
    lead to issues if the above multi-device is converted to a single device
    with a stale maj:min. Subsequently, attempting to mount the same device
    with the correct maj:min might mistake it for another device with the same
    fsid, potentially resulting in wrongly auto-enabling the temp-fsid feature.
    
    To address this, this patch validates the device's maj:min at the time of
    device open and updates it if it has changed since the last scan.
    
    CC: stable@vger.kernel.org # 6.7+
    Fixes: a5b8a5f9f835 ("btrfs: support cloned-device mount capability")
    Reported-by: Boris Burkov <boris@bur.io>
    Co-developed-by: Boris Burkov <boris@bur.io>
    Reviewed-by: Boris Burkov <boris@bur.io>#
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4adc99539d120faad7fbf6958756d7ff294a644
Author: Carlos Maiolino <cem@kernel.org>
Date:   Wed Mar 20 13:39:59 2024 +0100

    tmpfs: fix race on handling dquot rbtree
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 0a69b6b3a026543bc215ccc866d0aea5579e6ce2 upstream.
    
    A syzkaller reproducer found a race while attempting to remove dquot
    information from the rb tree.
    
    Fetching the rb_tree root node must also be protected by the
    dqopt->dqio_sem, otherwise, giving the right timing, shmem_release_dquot()
    will trigger a warning because it couldn't find a node in the tree, when
    the real reason was the root node changing before the search starts:
    
    Thread 1                                Thread 2
    - shmem_release_dquot()                 - shmem_{acquire,release}_dquot()
    
    - fetch ROOT                            - Fetch ROOT
    
                                            - acquire dqio_sem
    - wait dqio_sem
    
                                            - do something, triger a tree rebalance
                                            - release dqio_sem
    
    - acquire dqio_sem
    - start searching for the node, but
      from the wrong location, missing
      the node, and triggering a warning.
    
    Link: https://lkml.kernel.org/r/20240320124011.398847-1-cem@kernel.org
    Fixes: eafc474e2029 ("shmem: prepare shmem quota infrastructure")
    Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
    Reported-by: Ubisectech Sirius <bugreport@ubisectech.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d9777064122fa9290910943a68d014a0038d5ce4
Author: Zev Weiss <zev@bewilderbeest.net>
Date:   Mon Feb 26 17:35:42 2024 -0800

    ARM: prctl: reject PR_SET_MDWE on pre-ARMv6
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 166ce846dc5974a266f6c2a2896dbef5425a6f21 upstream.
    
    On v5 and lower CPUs we can't provide MDWE protection, so ensure we fail
    any attempt to enable it via prctl(PR_SET_MDWE).
    
    Previously such an attempt would misleadingly succeed, leading to any
    subsequent mmap(PROT_READ|PROT_WRITE) or execve() failing unconditionally
    (the latter somewhat violently via force_fatal_sig(SIGSEGV) due to
    READ_IMPLIES_EXEC).
    
    Link: https://lkml.kernel.org/r/20240227013546.15769-6-zev@bewilderbeest.net
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Cc: <stable@vger.kernel.org>    [6.3+]
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Florent Revest <revest@chromium.org>
    Cc: Helge Deller <deller@gmx.de>
    Cc: "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Miguel Ojeda <ojeda@kernel.org>
    Cc: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Ondrej Mosnacek <omosnace@redhat.com>
    Cc: Rick Edgecombe <rick.p.edgecombe@intel.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sam James <sam@gentoo.org>
    Cc: Stefan Roesch <shr@devkernel.io>
    Cc: Yang Shi <yang@os.amperecomputing.com>
    Cc: Yin Fengwei <fengwei.yin@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bcfdf0b8cd0ee50444c9dfee86b921707a2d545f
Author: Zev Weiss <zev@bewilderbeest.net>
Date:   Mon Feb 26 17:35:41 2024 -0800

    prctl: generalize PR_SET_MDWE support check to be per-arch
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit d5aad4c2ca057e760a92a9a7d65bd38d72963f27 upstream.
    
    Patch series "ARM: prctl: Reject PR_SET_MDWE where not supported".
    
    I noticed after a recent kernel update that my ARM926 system started
    segfaulting on any execve() after calling prctl(PR_SET_MDWE).  After some
    investigation it appears that ARMv5 is incapable of providing the
    appropriate protections for MDWE, since any readable memory is also
    implicitly executable.
    
    The prctl_set_mdwe() function already had some special-case logic added
    disabling it on PARISC (commit 793838138c15, "prctl: Disable
    prctl(PR_SET_MDWE) on parisc"); this patch series (1) generalizes that
    check to use an arch_*() function, and (2) adds a corresponding override
    for ARM to disable MDWE on pre-ARMv6 CPUs.
    
    With the series applied, prctl(PR_SET_MDWE) is rejected on ARMv5 and
    subsequent execve() calls (as well as mmap(PROT_READ|PROT_WRITE)) can
    succeed instead of unconditionally failing; on ARMv6 the prctl works as it
    did previously.
    
    [0] https://lore.kernel.org/all/2023112456-linked-nape-bf19@gregkh/
    
    This patch (of 2):
    
    There exist systems other than PARISC where MDWE may not be feasible to
    support; rather than cluttering up the generic code with additional
    arch-specific logic let's add a generic function for checking MDWE support
    and allow each arch to override it as needed.
    
    Link: https://lkml.kernel.org/r/20240227013546.15769-4-zev@bewilderbeest.net
    Link: https://lkml.kernel.org/r/20240227013546.15769-5-zev@bewilderbeest.net
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Acked-by: Helge Deller <deller@gmx.de>  [parisc]
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Florent Revest <revest@chromium.org>
    Cc: "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Miguel Ojeda <ojeda@kernel.org>
    Cc: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Ondrej Mosnacek <omosnace@redhat.com>
    Cc: Rick Edgecombe <rick.p.edgecombe@intel.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sam James <sam@gentoo.org>
    Cc: Stefan Roesch <shr@devkernel.io>
    Cc: Yang Shi <yang@os.amperecomputing.com>
    Cc: Yin Fengwei <fengwei.yin@intel.com>
    Cc: <stable@vger.kernel.org>    [6.3+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9731080c8340d74c4674f8eaf4f178a0a7a97b54
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Mar 28 15:49:48 2024 +0100

    x86/efistub: Reinstate soft limit for initrd loading
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit decd347c2a75d32984beb8807d470b763a53b542 upstream.
    
    Commit
    
      8117961d98fb2 ("x86/efi: Disregard setup header of loaded image")
    
    dropped the memcopy of the image's setup header into the boot_params
    struct provided to the core kernel, on the basis that EFI boot does not
    need it and should rely only on a single protocol to interface with the
    boot chain. It is also a prerequisite for being able to increase the
    section alignment to 4k, which is needed to enable memory protections
    when running in the boot services.
    
    So only the setup_header fields that matter to the core kernel are
    populated explicitly, and everything else is ignored. One thing was
    overlooked, though: the initrd_addr_max field in the setup_header is not
    used by the core kernel, but it is used by the EFI stub itself when it
    loads the initrd, where its default value of INT_MAX is used as the soft
    limit for memory allocation.
    
    This means that, in the old situation, the initrd was virtually always
    loaded in the lower 2G of memory, but now, due to initrd_addr_max being
    0x0, the initrd may end up anywhere in memory. This should not be an
    issue principle, as most systems can deal with this fine. However, it
    does appear to tickle some problems in older UEFI implementations, where
    the memory ends up being corrupted, resulting in errors when unpacking
    the initramfs.
    
    So set the initrd_addr_max field to INT_MAX like it was before.
    
    Fixes: 8117961d98fb2 ("x86/efi: Disregard setup header of loaded image")
    Reported-by: Radek Podgorny <radek@podgorny.cz>
    Closes: https://lore.kernel.org/all/a99a831a-8ad5-4cb0-bff9-be637311f771@podgorny.cz
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4d7d02f20ee2c8037f9aa099d3f12b7066654460
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Mar 26 11:15:25 2024 +0100

    efi/libstub: Cast away type warning in use of max()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 61d130f261a3c15ae2c4b6f3ac3517d5d5b78855 upstream.
    
    Avoid a type mismatch warning in max() by switching to max_t() and
    providing the type explicitly.
    
    Fixes: 3cb4a4827596abc82e ("efi/libstub: fix efi_random_alloc() ...")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0cb447a0c15b919f2ce5a9d35ce3f0c679c1e586
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Sun Mar 24 17:10:53 2024 +0100

    x86/efistub: Add missing boot_params for mixed mode compat entry
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit d21f5a59ea773826cc489acb287811d690b703cc upstream.
    
    The pure EFI stub entry point does not take a struct boot_params from
    the boot loader, but creates it from scratch, and populates only the
    fields that still have meaning in this context (command line, initrd
    base and size, etc)
    
    The original mixed mode implementation used the EFI handover protocol
    instead, where the boot loader (i.e., GRUB) populates a boot_params
    struct and passes it to a special Linux specific EFI entry point that
    takes the boot_params pointer as its third argument.
    
    When the new mixed mode implementation was introduced, using a special
    32-bit PE entrypoint in the 64-bit kernel, it adopted the pure approach,
    and relied on the EFI stub to create the struct boot_params.  This is
    preferred because it makes the bootloader side much easier to implement,
    as it does not need any x86-specific knowledge on how struct boot_params
    and struct setup_header are put together. This mixed mode implementation
    was adopted by systemd-boot version 252 and later.
    
    When commit
    
      e2ab9eab324c ("x86/boot/compressed: Move 32-bit entrypoint code into .text section")
    
    refactored this code and moved it out of head_64.S, the fact that ESI
    was populated with the address of the base of the image was overlooked,
    and to simplify the code flow, ESI is now zeroed and stored to memory
    unconditionally in shared code, so that the NULL-ness of that variable
    can still be used later to determine which mixed mode boot protocol is
    in use.
    
    With ESI pointing to the base of the image, it can serve as a struct
    boot_params pointer for startup_32(), which only accesses the init_data
    and kernel_alignment fields (and the scratch field as a temporary
    stack). Zeroing ESI means that those accesses produce garbage now, even
    though things appear to work if the first page of memory happens to be
    zeroed, and the region right before LOAD_PHYSICAL_ADDR (== 16 MiB)
    happens to be free.
    
    The solution is to pass a special, temporary struct boot_params to
    startup_32() via ESI, one that is sufficient for getting it to create
    the page tables correctly and is discarded right after. This involves
    setting a minimal alignment of 4k, only to get the statically allocated
    page tables line up correctly, and setting init_size to the executable
    image size (_end - startup_32). This ensures that the page tables are
    covered by the static footprint of the PE image.
    
    Given that EFI boot no longer calls the decompressor and no longer pads
    the image to permit the decompressor to execute in place, the same
    temporary struct boot_params should be used in the EFI handover protocol
    based mixed mode implementation as well, to prevent the page tables from
    being placed outside of allocated memory.
    
    Fixes: e2ab9eab324c ("x86/boot/compressed: Move 32-bit entrypoint code into .text section")
    Cc: <stable@kernel.org> # v6.1+
    Closes: https://lore.kernel.org/all/20240321150510.GI8211@craftyguy.net/
    Reported-by: Clayton Craft <clayton@craftyguy.net>
    Tested-by: Clayton Craft <clayton@craftyguy.net>
    Tested-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f4d8cc8a677384eca22206480281dbdc35bd3b13
Author: John Sperbeck <jsperbeck@google.com>
Date:   Sun Mar 17 15:15:22 2024 -0700

    init: open /initrd.image with O_LARGEFILE
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 4624b346cf67400ef46a31771011fb798dd2f999 upstream.
    
    If initrd data is larger than 2Gb, we'll eventually fail to write to the
    /initrd.image file when we hit that limit, unless O_LARGEFILE is set.
    
    Link: https://lkml.kernel.org/r/20240317221522.896040-1-jsperbeck@google.com
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d913532dade1a44a0a9dda5dc1e5c806b74152d4
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Thu Mar 21 14:25:32 2024 -0400

    mm: zswap: fix writeback shinker GFP_NOIO/GFP_NOFS recursion
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 30fb6a8d9e3378919f378f9bf561142b4a6d2637 upstream.
    
    Kent forwards this bug report of zswap re-entering the block layer
    from an IO request allocation and locking up:
    
    [10264.128242] sysrq: Show Blocked State
    [10264.128268] task:kworker/20:0H   state:D stack:0     pid:143   tgid:143   ppid:2      flags:0x00004000
    [10264.128271] Workqueue: bcachefs_io btree_write_submit [bcachefs]
    [10264.128295] Call Trace:
    [10264.128295]  <TASK>
    [10264.128297]  __schedule+0x3e6/0x1520
    [10264.128303]  schedule+0x32/0xd0
    [10264.128304]  schedule_timeout+0x98/0x160
    [10264.128308]  io_schedule_timeout+0x50/0x80
    [10264.128309]  wait_for_completion_io_timeout+0x7f/0x180
    [10264.128310]  submit_bio_wait+0x78/0xb0
    [10264.128313]  swap_writepage_bdev_sync+0xf6/0x150
    [10264.128317]  zswap_writeback_entry+0xf2/0x180
    [10264.128319]  shrink_memcg_cb+0xe7/0x2f0
    [10264.128322]  __list_lru_walk_one+0xb9/0x1d0
    [10264.128325]  list_lru_walk_one+0x5d/0x90
    [10264.128326]  zswap_shrinker_scan+0xc4/0x130
    [10264.128327]  do_shrink_slab+0x13f/0x360
    [10264.128328]  shrink_slab+0x28e/0x3c0
    [10264.128329]  shrink_one+0x123/0x1b0
    [10264.128331]  shrink_node+0x97e/0xbc0
    [10264.128332]  do_try_to_free_pages+0xe7/0x5b0
    [10264.128333]  try_to_free_pages+0xe1/0x200
    [10264.128334]  __alloc_pages_slowpath.constprop.0+0x343/0xde0
    [10264.128337]  __alloc_pages+0x32d/0x350
    [10264.128338]  allocate_slab+0x400/0x460
    [10264.128339]  ___slab_alloc+0x40d/0xa40
    [10264.128345]  kmem_cache_alloc+0x2e7/0x330
    [10264.128348]  mempool_alloc+0x86/0x1b0
    [10264.128349]  bio_alloc_bioset+0x200/0x4f0
    [10264.128352]  bio_alloc_clone+0x23/0x60
    [10264.128354]  alloc_io+0x26/0xf0 [dm_mod 7e9e6b44df4927f93fb3e4b5c782767396f58382]
    [10264.128361]  dm_submit_bio+0xb8/0x580 [dm_mod 7e9e6b44df4927f93fb3e4b5c782767396f58382]
    [10264.128366]  __submit_bio+0xb0/0x170
    [10264.128367]  submit_bio_noacct_nocheck+0x159/0x370
    [10264.128368]  bch2_submit_wbio_replicas+0x21c/0x3a0 [bcachefs 85f1b9a7a824f272eff794653a06dde1a94439f2]
    [10264.128391]  btree_write_submit+0x1cf/0x220 [bcachefs 85f1b9a7a824f272eff794653a06dde1a94439f2]
    [10264.128406]  process_one_work+0x178/0x350
    [10264.128408]  worker_thread+0x30f/0x450
    [10264.128409]  kthread+0xe5/0x120
    
    The zswap shrinker resumes the swap_writepage()s that were intercepted
    by the zswap store. This will enter the block layer, and may even
    enter the filesystem depending on the swap backing file.
    
    Make it respect GFP_NOIO and GFP_NOFS.
    
    Link: https://lore.kernel.org/linux-mm/rc4pk2r42oyvjo4dc62z6sovquyllq56i5cdgcaqbd7wy3hfzr@n4nbxido3fme/
    Link: https://lkml.kernel.org/r/20240321182532.60000-1-hannes@cmpxchg.org
    Fixes: b5ba474f3f51 ("zswap: shrink zswap pool based on memory pressure")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reported-by: Kent Overstreet <kent.overstreet@linux.dev>
    Acked-by: Yosry Ahmed <yosryahmed@google.com>
    Reported-by: Jérôme Poulin <jeromepoulin@gmail.com>
    Reviewed-by: Nhat Pham <nphamcs@gmail.com>
    Reviewed-by: Chengming Zhou <chengming.zhou@linux.dev>
    Cc: stable@vger.kernel.org      [v6.8]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0a1a1265ad3de9e33148577c7f28e3a31d1a167f
Author: Gergo Koteles <soyer@irl.hu>
Date:   Tue Mar 26 17:18:46 2024 +0100

    ALSA: hda/tas2781: add locks to kcontrols
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 15bc3066d2378eef1b45254be9df23b0dd7f1667 upstream.
    
    The rcabin.profile_cfg_id, cur_prog, cur_conf, force_fwload_status
    variables are acccessible from multiple threads and therefore require
    locking.
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    CC: stable@vger.kernel.org
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Message-ID: <e35b867f6fe5fa1f869dd658a0a1f2118b737f57.1711469583.git.soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f6413eb5508f3f3882fa893f5589bae6cade6ba8
Author: Gergo Koteles <soyer@irl.hu>
Date:   Tue Mar 26 17:18:45 2024 +0100

    ALSA: hda/tas2781: remove digital gain kcontrol
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ae065d0ce9e36ca4efdfb9b96ce3395bd1c19372 upstream.
    
    The "Speaker Digital Gain" kcontrol controls the TAS2781_DVC_LVL (0x1A)
    register. Unfortunately the tas2563 does not have DVC_LVL, but has
    INT_MASK0 in 0x1A, which has been misused so far.
    
    Since commit c1947ce61ff4 ("ALSA: hda/realtek: tas2781: enable subwoofer
    volume control") the volume of the tas2781 amplifiers can be controlled
    by the master volume, so this digital gain kcontrol is not needed.
    
    Remove it.
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    CC: stable@vger.kernel.org
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Message-ID: <741fc21db994efd58f83e7aef38931204961e5b2.1711469583.git.soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a6c7a216f32e589983d124f3a69075bc09f25f95
Author: Chris Park <chris.park@amd.com>
Date:   Tue Mar 5 17:41:15 2024 -0500

    drm/amd/display: Prevent crash when disable stream
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 72d72e8fddbcd6c98e1b02d32cf6f2b04e10bd1c upstream.
    
    [Why]
    Disabling stream encoder invokes a function that no longer exists.
    
    [How]
    Check if the function declaration is NULL in disable stream encoder.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Charlene Liu <charlene.liu@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: Chris Park <chris.park@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 16c69e4c970c967c4ad457ebb031941830de7b97
Author: Tom Zanussi <tom.zanussi@linux.intel.com>
Date:   Thu Mar 21 16:08:45 2024 -0500

    crypto: iaa - Fix nr_cpus < nr_iaa case
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 5a7e89d3315d1be86aff8a8bf849023cda6547f7 upstream.
    
    If nr_cpus < nr_iaa, the calculated cpus_per_iaa will be 0, which
    causes a divide-by-0 in rebalance_wq_table().
    
    Make sure cpus_per_iaa is 1 in that case, and also in the nr_iaa == 0
    case, even though cpus_per_iaa is never used if nr_iaa == 0, for
    paranoia.
    
    Cc: <stable@vger.kernel.org> # v6.8+
    Reported-by: Jerry Snitselaar <jsnitsel@redhat.com>
    Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0e70600ad32ed3593c0683f4907f4e2e04330c84
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Jan 23 11:31:36 2024 +0200

    drm/i915: Suppress old PLL pipe_mask checks for MG/TC/TBT PLLs
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 33c7760226c79ee8de6c0646640963a8a7ee794a upstream.
    
    TC ports have both the MG/TC and TBT PLLs selected simultanously (so
    that we can switch from MG/TC to TBT as a fallback). This doesn't play
    well with the state checker that assumes that the old PLL shouldn't
    have the pipe in its pipe_mask anymore. Suppress that check for these
    PLLs to avoid spurious WARNs when you disconnect a TC port and a
    non-disabling modeset happens before actually disabling the port.
    
    v2: Only suppress when one of the PLLs is the TBT PLL and the
        other one is not
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/9816
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240123093137.9133-2-ville.syrjala@linux.intel.com
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 39a5d4a26458a43666eda9a9774dd31d96d5f86b
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Jan 23 11:31:35 2024 +0200

    drm/i915: Include the PLL name in the debug messages
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit d283ee5662c6bf2f3771a36b926f6988e6dddfc6 upstream.
    
    Make the log easier to parse by including the name of the PLL
    in the debug prints regarding said PLL.
    
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240123093137.9133-1-ville.syrjala@linux.intel.com
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4feb9f19bf9a523645a3dc796a7f260ab35c31c6
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Jan 18 16:24:36 2024 +0200

    drm/i915: Try to preserve the current shared_dpll for fastset on type-c ports
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ba407525f8247ee4c270369f3371b9994c27bfda upstream.
    
    Currently icl_compute_tc_phy_dplls() assumes that the active
    PLL will be the TC PLL (as opposed to the TBT PLL). The actual
    PLL will be selected during the modeset enable sequence, but
    we need to put *something* into the crtc_state->shared_dpll
    already during compute_config().
    
    The downside of assuming one PLL or the other is that we'll
    fail to fastset if the assumption doesn't match what was in
    use previously. So let's instead keep the same PLL that was
    in use previously (assuming there was one). This should allow
    fastset to work again when using TBT PLL, at least in the
    steady state.
    
    Now, assuming we want keep the same PLL may not be entirely
    correct either. But we should be covered by the type-c link
    reset handling which will force a full modeset by flagging
    connectors_changed=true which means the resulting modeset
    can't be converted into a fastset even if the full crtc state
    looks identical.
    
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Suraj Kandpal <suraj.kandpal@intel.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240118142436.25928-1-ville.syrjala@linux.intel.com
    Reviewed-by: Suraj Kandpal <suraj.kandpal@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9535d335857cc8067759048ef69f279ea86adc5d
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Nov 24 10:27:32 2023 +0200

    drm/i915: Replace a memset() with zero initialization
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 92b47c3b8b242a1f1b73d5c1181d5b678ac1382b upstream.
    
    Declaring a struct and immediately zeroing it with memset()
    seems a bit silly to me. Just zero initialize the struct
    when declaring it.
    
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231124082735.25470-2-ville.syrjala@linux.intel.com
    Reviewed-by: Mika Kahola <mika.kahola@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 49dd2467fa236444a9aaa08cd13781474cb99ed4
Author: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>
Date:   Thu Dec 21 19:51:42 2023 +0100

    mfd: intel-lpss: Introduce QUIRK_CLOCK_DIVIDER_UNITY for XPS 9530
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 1d8c51ed2ddcc4161e6496cf14fcd83921c50ec8 upstream.
    
    Some devices (eg. Dell XPS 9530, 2023) due to a firmware bug have a
    misconfigured clock divider, which should've been 1:1. This introduces
    quirk which conditionally re-configures the clock divider to 1:1.
    
    Signed-off-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20231221185142.9224-3-alex.vinarskis@gmail.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ce31f15ebfc74faea52610959d0b0f369b8e98e3
Author: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>
Date:   Thu Dec 21 19:51:41 2023 +0100

    mfd: intel-lpss: Switch to generalized quirk table
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit ac9538f6007e1c80f1b8a62db7ecc391b4d78ae5 upstream.
    
    Introduce generic quirk table, and port existing walkaround for select
    Microsoft devices to it. This is a preparation for
    QUIRK_CLOCK_DIVIDER_UNITY.
    
    Signed-off-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20231221185142.9224-2-alex.vinarskis@gmail.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 382a72dedd184ffc39a572a56a5d78ab8979751a
Author: Anand Jain <anand.jain@oracle.com>
Date:   Tue Feb 13 09:13:56 2024 +0800

    btrfs: do not skip re-registration for the mounted device
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit d565fffa68560ac540bf3d62cc79719da50d5e7a upstream.
    
    There are reports that since version 6.7 update-grub fails to find the
    device of the root on systems without initrd and on a single device.
    
    This looks like the device name changed in the output of
    /proc/self/mountinfo:
    
    6.5-rc5 working
    
      18 1 0:16 / / rw,noatime - btrfs /dev/sda8 ...
    
    6.7 not working:
    
      17 1 0:15 / / rw,noatime - btrfs /dev/root ...
    
    and "update-grub" shows this error:
    
      /usr/sbin/grub-probe: error: cannot find a device for / (is /dev mounted?)
    
    This looks like it's related to the device name, but grub-probe
    recognizes the "/dev/root" path and tries to find the underlying device.
    However there's a special case for some filesystems, for btrfs in
    particular.
    
    The generic root device detection heuristic is not done and it all
    relies on reading the device infos by a btrfs specific ioctl. This ioctl
    returns the device name as it was saved at the time of device scan (in
    this case it's /dev/root).
    
    The change in 6.7 for temp_fsid to allow several single device
    filesystem to exist with the same fsid (and transparently generate a new
    UUID at mount time) was to skip caching/registering such devices.
    
    This also skipped mounted device. One step of scanning is to check if
    the device name hasn't changed, and if yes then update the cached value.
    
    This broke the grub-probe as it always read the device /dev/root and
    couldn't find it in the system. A temporary workaround is to create a
    symlink but this does not survive reboot.
    
    The right fix is to allow updating the device path of a mounted
    filesystem even if this is a single device one.
    
    In the fix, check if the device's major:minor number matches with the
    cached device. If they do, then we can allow the scan to happen so that
    device_list_add() can take care of updating the device path. The file
    descriptor remains unchanged.
    
    This does not affect the temp_fsid feature, the UUID of the mounted
    filesystem remains the same and the matching is based on device major:minor
    which is unique per mounted filesystem.
    
    This covers the path when the device (that exists for all mounted
    devices) name changes, updating /dev/root to /dev/sdx. Any other single
    device with filesystem and is not mounted is still skipped.
    
    Note that if a system is booted and initial mount is done on the
    /dev/root device, this will be the cached name of the device. Only after
    the command "btrfs device scan" it will change as it triggers the
    rename.
    
    The fix was verified by users whose systems were affected.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=218353
    Link: https://lore.kernel.org/lkml/CAKLYgeJ1tUuqLcsquwuFqjDXPSJpEiokrWK2gisPKDZLs8Y2TQ@mail.gmail.com/
    Fixes: bc27d6f0aa0e ("btrfs: scan but don't register device on single device filesystem")
    CC: stable@vger.kernel.org # 6.7+
    Tested-by: Alex Romosan <aromosan@gmail.com>
    Tested-by: CHECK_1234543212345@protonmail.com
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3855c308245e3a5441ed14202f7eb931280a7f7a
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Mar 13 12:49:31 2024 +0000

    btrfs: fix warning messages not printing interval at unpin_extent_range()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4dc1d69c2b101eee0bf071187794ffed2f9c2596 ]
    
    At unpin_extent_range() we print warning messages that are supposed to
    print an interval in the form "[X, Y)", with the first element being an
    inclusive start offset and the second element being the exclusive end
    offset of a range. However we end up printing the range's length instead
    of the range's exclusive end offset, so fix that to avoid having confusing
    and non-sense messages in case we hit one of these unexpected scenarios.
    
    Fixes: 00deaf04df35 ("btrfs: log messages at unpin_extent_range() during unexpected cases")
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eec51e4b37b5bc8ef4b82475d6eeb8d5f3a4188a
Author: David Sterba <dsterba@suse.com>
Date:   Fri Jan 12 18:31:40 2024 +0100

    btrfs: handle errors returned from unpin_extent_cache()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c03c89f821e51325d0e592cf625cf5e0a26fa3a7 ]
    
    We've had numerous attempts to let function unpin_extent_cache() return
    void as it only returns 0. There are still error cases to handle so do
    that, in addition to the verbose messages. The only caller
    btrfs_finish_one_ordered() will now abort the transaction, previously it
    let it continue which could lead to further problems.
    
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 4dc1d69c2b10 ("btrfs: fix warning messages not printing interval at unpin_extent_range()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6cb5c690ebceebe39bad59ccc42d1aff6d0ff416
Author: Vitaly Chikunov <vt@altlinux.org>
Date:   Mon Mar 18 05:34:44 2024 +0300

    selftests/mm: Fix build with _FORTIFY_SOURCE
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8b65ef5ad4862904e476a8f3d4e4418c950ddb90 ]
    
    Add missing flags argument to open(2) call with O_CREAT.
    
    Some tests fail to compile if _FORTIFY_SOURCE is defined (to any valid
    value) (together with -O), resulting in similar error messages such as:
    
      In file included from /usr/include/fcntl.h:342,
                       from gup_test.c:1:
      In function 'open',
          inlined from 'main' at gup_test.c:206:10:
      /usr/include/bits/fcntl2.h:50:11: error: call to '__open_missing_mode' declared with attribute error: open with O_CREAT or O_TMPFILE in second argument needs 3 arguments
         50 |           __open_missing_mode ();
            |           ^~~~~~~~~~~~~~~~~~~~~~
    
    _FORTIFY_SOURCE is enabled by default in some distributions, so the
    tests are not built by default and are skipped.
    
    open(2) man-page warns about missing flags argument: "if it is not
    supplied, some arbitrary bytes from the stack will be applied as the
    file mode."
    
    Link: https://lkml.kernel.org/r/20240318023445.3192922-1-vt@altlinux.org
    Fixes: aeb85ed4f41a ("tools/testing/selftests/vm/gup_benchmark.c: allow user specified file")
    Fixes: fbe37501b252 ("mm: huge_memory: debugfs for file-backed THP split")
    Fixes: c942f5bd17b3 ("selftests: soft-dirty: add test for mprotect")
    Signed-off-by: Vitaly Chikunov <vt@altlinux.org>
    Reviewed-by: Zi Yan <ziy@nvidia.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Keith Busch <kbusch@kernel.org>
    Cc: Peter Xu <peterx@redhat.com>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e8902cdeff2877865df2dd58799949b99fef330c
Author: Zoltan HERPAI <wigyori@uid0.hu>
Date:   Wed Mar 20 09:36:02 2024 +0100

    pwm: img: fix pwm clock lookup
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9eb05877dbee03064d3d3483cd6702f610d5a358 ]
    
    22e8e19 has introduced a regression in the imgchip->pwm_clk lookup, whereas
    the clock name has also been renamed to "imgchip". This causes the driver
    failing to load:
    
    [    0.546905] img-pwm 18101300.pwm: failed to get imgchip clock
    [    0.553418] img-pwm: probe of 18101300.pwm failed with error -2
    
    Fix this lookup by reverting the clock name back to "pwm".
    
    Signed-off-by: Zoltan HERPAI <wigyori@uid0.hu>
    Link: https://lore.kernel.org/r/20240320083602.81592-1-wigyori@uid0.hu
    Fixes: 22e8e19a46f7 ("pwm: img: Rename variable pointing to driver private data")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4d59a4ce6879296ee6cecbabb17a3ad25360815c
Author: Oleksandr Tymoshenko <ovt@google.com>
Date:   Sat Mar 23 06:33:33 2024 +0000

    efi: fix panic in kdump kernel
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 62b71cd73d41ddac6b1760402bbe8c4932e23531 ]
    
    Check if get_next_variable() is actually valid pointer before
    calling it. In kdump kernel this method is set to NULL that causes
    panic during the kexec-ed kernel boot.
    
    Tested with QEMU and OVMF firmware.
    
    Fixes: bad267f9e18f ("efi: verify that variable services are supported")
    Signed-off-by: Oleksandr Tymoshenko <ovt@google.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9f6824358b8d94d5249a486128c576cad232e25d
Author: Adamos Ttofari <attofari@amazon.de>
Date:   Fri Mar 22 16:04:39 2024 -0700

    x86/fpu: Keep xfd_state in sync with MSR_IA32_XFD
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 10e4b5166df9ff7a2d5316138ca668b42d004422 ]
    
    Commit 672365477ae8 ("x86/fpu: Update XFD state where required") and
    commit 8bf26758ca96 ("x86/fpu: Add XFD state to fpstate") introduced a
    per CPU variable xfd_state to keep the MSR_IA32_XFD value cached, in
    order to avoid unnecessary writes to the MSR.
    
    On CPU hotplug MSR_IA32_XFD is reset to the init_fpstate.xfd, which
    wipes out any stale state. But the per CPU cached xfd value is not
    reset, which brings them out of sync.
    
    As a consequence a subsequent xfd_update_state() might fail to update
    the MSR which in turn can result in XRSTOR raising a #NM in kernel
    space, which crashes the kernel.
    
    To fix this, introduce xfd_set_state() to write xfd_state together
    with MSR_IA32_XFD, and use it in all places that set MSR_IA32_XFD.
    
    Fixes: 672365477ae8 ("x86/fpu: Update XFD state where required")
    Signed-off-by: Adamos Ttofari <attofari@amazon.de>
    Signed-off-by: Chang S. Bae <chang.seok.bae@intel.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20240322230439.456571-1-chang.seok.bae@intel.com
    
    Closes: https://lore.kernel.org/lkml/20230511152818.13839-1-attofari@amazon.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7fee56f0052b81fadd393c6ed97a57b03c9b9ceb
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Mar 22 19:56:39 2024 +0100

    x86/mpparse: Register APIC address only once
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit f2208aa12c27bfada3c15c550c03ca81d42dcac2 ]
    
    The APIC address is registered twice. First during the early detection and
    afterwards when actually scanning the table for APIC IDs. The APIC and
    topology core warn about the second attempt.
    
    Restrict it to the early detection call.
    
    Fixes: 81287ad65da5 ("x86/apic: Sanitize APIC address setup")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20240322185305.297774848@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5015fb73c3d6105fba78505f659eb35c2078006d
Author: KONDO KAZUMA(近藤　和真) <kazuma-kondo@nec.com>
Date:   Fri Mar 22 10:47:02 2024 +0000

    efi/libstub: fix efi_random_alloc() to allocate memory at alloc_min or higher address
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3cb4a4827596abc82e55b80364f509d0fefc3051 ]
    
    Following warning is sometimes observed while booting my servers:
      [    3.594838] DMA: preallocated 4096 KiB GFP_KERNEL pool for atomic allocations
      [    3.602918] swapper/0: page allocation failure: order:10, mode:0xcc1(GFP_KERNEL|GFP_DMA), nodemask=(null),cpuset=/,mems_allowed=0-1
      ...
      [    3.851862] DMA: preallocated 1024 KiB GFP_KERNEL|GFP_DMA pool for atomic allocation
    
    If 'nokaslr' boot option is set, the warning always happens.
    
    On x86, ZONE_DMA is small zone at the first 16MB of physical address
    space. When this problem happens, most of that space seems to be used by
    decompressed kernel. Thereby, there is not enough space at DMA_ZONE to
    meet the request of DMA pool allocation.
    
    The commit 2f77465b05b1 ("x86/efistub: Avoid placing the kernel below
    LOAD_PHYSICAL_ADDR") tried to fix this problem by introducing lower
    bound of allocation.
    
    But the fix is not complete.
    
    efi_random_alloc() allocates pages by following steps.
    1. Count total available slots ('total_slots')
    2. Select a slot ('target_slot') to allocate randomly
    3. Calculate a starting address ('target') to be included target_slot
    4. Allocate pages, which starting address is 'target'
    
    In step 1, 'alloc_min' is used to offset the starting address of memory
    chunk. But in step 3 'alloc_min' is not considered at all.  As the
    result, 'target' can be miscalculated and become lower than 'alloc_min'.
    
    When KASLR is disabled, 'target_slot' is always 0 and the problem
    happens everytime if the EFI memory map of the system meets the
    condition.
    
    Fix this problem by calculating 'target' considering 'alloc_min'.
    
    Cc: linux-efi@vger.kernel.org
    Cc: Tom Englund <tomenglund26@gmail.com>
    Cc: linux-kernel@vger.kernel.org
    Fixes: 2f77465b05b1 ("x86/efistub: Avoid placing the kernel below LOAD_PHYSICAL_ADDR")
    Signed-off-by: Kazuma Kondo <kazuma-kondo@nec.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 82d2cc6e282523fd186f9c5b0db6c6533e43f786
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Fri Mar 15 00:17:30 2024 +0900

    kprobes/x86: Use copy_from_kernel_nofault() to read from unsafe address
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4e51653d5d871f40f1bd5cf95cc7f2d8b33d063b ]
    
    Read from an unsafe address with copy_from_kernel_nofault() in
    arch_adjust_kprobe_addr() because this function is used before checking
    the address is in text or not. Syzcaller bot found a bug and reported
    the case if user specifies inaccessible data area,
    arch_adjust_kprobe_addr() will cause a kernel panic.
    
    [ mingo: Clarified the comment. ]
    
    Fixes: cc66bb914578 ("x86/ibt,kprobes: Cure sym+0 equals fentry woes")
    Reported-by: Qiang Zhang <zzqq0103.hey@gmail.com>
    Tested-by: Jinghao Jia <jinghao7@illinois.edu>
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/171042945004.154897.2221804961882915806.stgit@devnote2
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2fdbb51971baba69b072207a59e57aa843892321
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Tue Mar 5 18:39:21 2024 +0000

    irqchip/renesas-rzg2l: Prevent spurious interrupts when setting trigger type
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 853a6030303f8a8fa54929b68e5665d9b21aa405 ]
    
    RZ/G2L interrupt chips require that the interrupt is masked before changing
    the NMI, IRQ, TINT interrupt settings. Aside of that, after setting an edge
    trigger type it is required to clear the interrupt status register in order
    to avoid spurious interrupts.
    
    The current implementation fails to do either of that and therefore is
    prone to generate spurious interrupts when setting the trigger type.
    
    Address this by:
    
      - Ensuring that the interrupt is masked at the chip level across the
        update for the TINT chip
    
      - Clearing the interrupt status register after updating the trigger mode
        for edge type interrupts
    
    [ tglx: Massaged changelog and reverted the spin_lock_irqsave() change as
            the set_type() callback is always called with interrupts disabled. ]
    
    Fixes: 3fed09559cd8 ("irqchip: Add RZ/G2L IA55 Interrupt Controller driver")
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 45ec958354248be8f46acb4ce3a284ae7be28f71
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Tue Mar 5 18:39:20 2024 +0000

    irqchip/renesas-rzg2l: Rename rzg2l_irq_eoi()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b4b5cd61a6fdd92ede0dc39f0850a182affd1323 ]
    
    Rename rzg2l_irq_eoi()->rzg2l_clear_irq_int() and simplify the code by
    removing redundant priv local variable.
    
    Suggested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Stable-dep-of: 853a6030303f ("irqchip/renesas-rzg2l: Prevent spurious interrupts when setting trigger type")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1a10f3ea3e6be92f1c0d341fffef6a2a00336e90
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Tue Mar 5 18:39:19 2024 +0000

    irqchip/renesas-rzg2l: Rename rzg2l_tint_eoi()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7cb6362c63df233172eaecddaf9ce2ce2f769112 ]
    
    Rename rzg2l_tint_eoi()->rzg2l_clear_tint_int() and simplify the code by
    removing redundant priv and hw_irq local variables.
    
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Stable-dep-of: 853a6030303f ("irqchip/renesas-rzg2l: Prevent spurious interrupts when setting trigger type")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 55dc5520ffb536590685765c2fb9868005650c70
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Tue Mar 5 18:39:18 2024 +0000

    irqchip/renesas-rzg2l: Flush posted write in irq_eoi()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9eec61df55c51415409c7cc47e9a1c8de94a0522 ]
    
    The irq_eoi() callback of the RZ/G2L interrupt chip clears the relevant
    interrupt cause bit in the TSCR register by writing to it.
    
    This write is not sufficient because the write is posted and therefore not
    guaranteed to immediately clear the bit. Due to that delay the CPU can
    raise the just handled interrupt again.
    
    Prevent this by reading the register back which causes the posted write to
    be flushed to the hardware before the read completes.
    
    Fixes: 3fed09559cd8 ("irqchip: Add RZ/G2L IA55 Interrupt Controller driver")
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec9bac210cc3287fc128ec862c433653bfef816d
Author: John Ogness <john.ogness@linutronix.de>
Date:   Mon Feb 26 13:07:24 2024 +0106

    printk: Update @console_may_schedule in console_trylock_spinning()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8076972468584d4a21dab9aa50e388b3ea9ad8c7 ]
    
    console_trylock_spinning() may takeover the console lock from a
    schedulable context. Update @console_may_schedule to make sure it
    reflects a trylock acquire.
    
    Reported-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Closes: https://lore.kernel.org/lkml/20240222090538.23017-1-quic_mojha@quicinc.com
    Fixes: dbdda842fe96 ("printk: Add console owner and waiter logic to load balance console writes")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/875xybmo2z.fsf@jogness.linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 39c3fb5f53fdf7f5bae832d883750647411579a2
Author: Nicolin Chen <nicolinc@nvidia.com>
Date:   Fri Mar 8 15:28:28 2024 +0000

    iommu/dma: Force swiotlb_max_mapping_size on an untrusted device
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit afc5aa46ed560f01ceda897c053c6a40c77ce5c4 ]
    
    The swiotlb does not support a mapping size > swiotlb_max_mapping_size().
    On the other hand, with a 64KB PAGE_SIZE configuration, it's observed that
    an NVME device can map a size between 300KB~512KB, which certainly failed
    the swiotlb mappings, though the default pool of swiotlb has many slots:
        systemd[1]: Started Journal Service.
     => nvme 0000:00:01.0: swiotlb buffer is full (sz: 327680 bytes), total 32768 (slots), used 32 (slots)
        note: journal-offline[392] exited with irqs disabled
        note: journal-offline[392] exited with preempt_count 1
    
    Call trace:
    [    3.099918]  swiotlb_tbl_map_single+0x214/0x240
    [    3.099921]  iommu_dma_map_page+0x218/0x328
    [    3.099928]  dma_map_page_attrs+0x2e8/0x3a0
    [    3.101985]  nvme_prep_rq.part.0+0x408/0x878 [nvme]
    [    3.102308]  nvme_queue_rqs+0xc0/0x300 [nvme]
    [    3.102313]  blk_mq_flush_plug_list.part.0+0x57c/0x600
    [    3.102321]  blk_add_rq_to_plug+0x180/0x2a0
    [    3.102323]  blk_mq_submit_bio+0x4c8/0x6b8
    [    3.103463]  __submit_bio+0x44/0x220
    [    3.103468]  submit_bio_noacct_nocheck+0x2b8/0x360
    [    3.103470]  submit_bio_noacct+0x180/0x6c8
    [    3.103471]  submit_bio+0x34/0x130
    [    3.103473]  ext4_bio_write_folio+0x5a4/0x8c8
    [    3.104766]  mpage_submit_folio+0xa0/0x100
    [    3.104769]  mpage_map_and_submit_buffers+0x1a4/0x400
    [    3.104771]  ext4_do_writepages+0x6a0/0xd78
    [    3.105615]  ext4_writepages+0x80/0x118
    [    3.105616]  do_writepages+0x90/0x1e8
    [    3.105619]  filemap_fdatawrite_wbc+0x94/0xe0
    [    3.105622]  __filemap_fdatawrite_range+0x68/0xb8
    [    3.106656]  file_write_and_wait_range+0x84/0x120
    [    3.106658]  ext4_sync_file+0x7c/0x4c0
    [    3.106660]  vfs_fsync_range+0x3c/0xa8
    [    3.106663]  do_fsync+0x44/0xc0
    
    Since untrusted devices might go down the swiotlb pathway with dma-iommu,
    these devices should not map a size larger than swiotlb_max_mapping_size.
    
    To fix this bug, add iommu_dma_max_mapping_size() for untrusted devices to
    take into account swiotlb_max_mapping_size() v.s. iova_rcache_range() from
    the iommu_dma_opt_mapping_size().
    
    Fixes: 82612d66d51d ("iommu: Allow the dma-iommu api to use bounce buffers")
    Link: https://lore.kernel.org/r/ee51a3a5c32cf885b18f6416171802669f4a718a.1707851466.git.nicolinc@nvidia.com
    Signed-off-by: Nicolin Chen <nicolinc@nvidia.com>
    [will: Drop redundant is_swiotlb_active(dev) check]
    Signed-off-by: Will Deacon <will@kernel.org>
    Reviewed-by: Michael Kelley <mhklinux@outlook.com>
    Acked-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Nicolin Chen <nicolinc@nvidia.com>
    Tested-by: Michael Kelley <mhklinux@outlook.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3ee5cfd67bcb0525854b1efb8135cfc349282062
Author: Will Deacon <will@kernel.org>
Date:   Fri Mar 8 15:28:27 2024 +0000

    swiotlb: Fix alignment checks when both allocation and DMA masks are present
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 51b30ecb73b481d5fac6ccf2ecb4a309c9ee3310 ]
    
    Nicolin reports that swiotlb buffer allocations fail for an NVME device
    behind an IOMMU using 64KiB pages. This is because we end up with a
    minimum allocation alignment of 64KiB (for the IOMMU to map the buffer
    safely) but a minimum DMA alignment mask corresponding to a 4KiB NVME
    page (i.e. preserving the 4KiB page offset from the original allocation).
    If the original address is not 4KiB-aligned, the allocation will fail
    because swiotlb_search_pool_area() erroneously compares these unmasked
    bits with the 64KiB-aligned candidate allocation.
    
    Tweak swiotlb_search_pool_area() so that the DMA alignment mask is
    reduced based on the required alignment of the allocation.
    
    Fixes: 82612d66d51d ("iommu: Allow the dma-iommu api to use bounce buffers")
    Link: https://lore.kernel.org/r/cover.1707851466.git.nicolinc@nvidia.com
    Reported-by: Nicolin Chen <nicolinc@nvidia.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Reviewed-by: Michael Kelley <mhklinux@outlook.com>
    Tested-by: Nicolin Chen <nicolinc@nvidia.com>
    Tested-by: Michael Kelley <mhklinux@outlook.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 42dc25637a41931b0f0d20ea6c060b0ba35ad163
Author: Will Deacon <will@kernel.org>
Date:   Fri Mar 8 15:28:26 2024 +0000

    swiotlb: Honour dma_alloc_coherent() alignment in swiotlb_alloc()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cbf53074a528191df82b4dba1e3d21191102255e ]
    
    core-api/dma-api-howto.rst states the following properties of
    dma_alloc_coherent():
    
      | The CPU virtual address and the DMA address are both guaranteed to
      | be aligned to the smallest PAGE_SIZE order which is greater than or
      | equal to the requested size.
    
    However, swiotlb_alloc() passes zero for the 'alloc_align_mask'
    parameter of swiotlb_find_slots() and so this property is not upheld.
    Instead, allocations larger than a page are aligned to PAGE_SIZE,
    
    Calculate the mask corresponding to the page order suitable for holding
    the allocation and pass that to swiotlb_find_slots().
    
    Fixes: e81e99bacc9f ("swiotlb: Support aligned swiotlb buffers")
    Signed-off-by: Will Deacon <will@kernel.org>
    Reviewed-by: Michael Kelley <mhklinux@outlook.com>
    Reviewed-by: Petr Tesarik <petr.tesarik1@huawei-partners.com>
    Tested-by: Nicolin Chen <nicolinc@nvidia.com>
    Tested-by: Michael Kelley <mhklinux@outlook.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e819c5637f7eb8233a64147704744a43b66e4254
Author: Will Deacon <will@kernel.org>
Date:   Fri Mar 8 15:28:24 2024 +0000

    swiotlb: Fix double-allocation of slots due to broken alignment handling
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 04867a7a33324c9c562ee7949dbcaab7aaad1fb4 ]
    
    Commit bbb73a103fbb ("swiotlb: fix a braino in the alignment check fix"),
    which was a fix for commit 0eee5ae10256 ("swiotlb: fix slot alignment
    checks"), causes a functional regression with vsock in a virtual machine
    using bouncing via a restricted DMA SWIOTLB pool.
    
    When virtio allocates the virtqueues for the vsock device using
    dma_alloc_coherent(), the SWIOTLB search can return page-unaligned
    allocations if 'area->index' was left unaligned by a previous allocation
    from the buffer:
    
     # Final address in brackets is the SWIOTLB address returned to the caller
     | virtio-pci 0000:00:07.0: orig_addr 0x0 alloc_size 0x2000, iotlb_align_mask 0x800 stride 0x2: got slot 1645-1649/7168 (0x98326800)
     | virtio-pci 0000:00:07.0: orig_addr 0x0 alloc_size 0x2000, iotlb_align_mask 0x800 stride 0x2: got slot 1649-1653/7168 (0x98328800)
     | virtio-pci 0000:00:07.0: orig_addr 0x0 alloc_size 0x2000, iotlb_align_mask 0x800 stride 0x2: got slot 1653-1657/7168 (0x9832a800)
    
    This ends badly (typically buffer corruption and/or a hang) because
    swiotlb_alloc() is expecting a page-aligned allocation and so blindly
    returns a pointer to the 'struct page' corresponding to the allocation,
    therefore double-allocating the first half (2KiB slot) of the 4KiB page.
    
    Fix the problem by treating the allocation alignment separately to any
    additional alignment requirements from the device, using the maximum
    of the two as the stride to search the buffer slots and taking care
    to ensure a minimum of page-alignment for buffers larger than a page.
    
    This also resolves swiotlb allocation failures occuring due to the
    inclusion of ~PAGE_MASK in 'iotlb_align_mask' for large allocations and
    resulting in alignment requirements exceeding swiotlb_max_mapping_size().
    
    Fixes: bbb73a103fbb ("swiotlb: fix a braino in the alignment check fix")
    Fixes: 0eee5ae10256 ("swiotlb: fix slot alignment checks")
    Signed-off-by: Will Deacon <will@kernel.org>
    Reviewed-by: Michael Kelley <mhklinux@outlook.com>
    Reviewed-by: Petr Tesarik <petr.tesarik1@huawei-partners.com>
    Tested-by: Nicolin Chen <nicolinc@nvidia.com>
    Tested-by: Michael Kelley <mhklinux@outlook.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bf7e0615e539214dfdd38eb4ba443e6a41e5771b
Author: André Rösti <an.roesti@gmail.com>
Date:   Mon Mar 11 21:17:04 2024 +0000

    entry: Respect changes to system call number by trace_sys_enter()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fb13b11d53875e28e7fbf0c26b288e4ea676aa9f ]
    
    When a probe is registered at the trace_sys_enter() tracepoint, and that
    probe changes the system call number, the old system call still gets
    executed.  This worked correctly until commit b6ec41346103 ("core/entry:
    Report syscall correctly for trace and audit"), which removed the
    re-evaluation of the syscall number after the trace point.
    
    Restore the original semantics by re-evaluating the system call number
    after trace_sys_enter().
    
    The performance impact of this re-evaluation is minimal because it only
    takes place when a trace point is active, and compared to the actual trace
    point overhead the read from a cache hot variable is negligible.
    
    Fixes: b6ec41346103 ("core/entry: Report syscall correctly for trace and audit")
    Signed-off-by: André Rösti <an.roesti@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20240311211704.7262-1-an.roesti@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c06590eac427fe44fa7b047fd47d7c2df045eee5
Author: Yongqiang Liu <liuyongqiang13@huawei.com>
Date:   Thu Mar 7 13:05:09 2024 +0100

    ARM: 9359/1: flush: check if the folio is reserved for no-mapping addresses
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 0c66c6f4e21cb22220cbd8821c5c73fc157d20dc ]
    
    Since commit a4d5613c4dc6 ("arm: extend pfn_valid to take into account
    freed memory map alignment") changes the semantics of pfn_valid() to check
    presence of the memory map for a PFN. A valid page for an address which
    is reserved but not mapped by the kernel[1], the system crashed during
    some uio test with the following memory layout:
    
     node   0: [mem 0x00000000c0a00000-0x00000000cc8fffff]
     node   0: [mem 0x00000000d0000000-0x00000000da1fffff]
     the uio layout is：0xc0900000, 0x100000
    
    the crash backtrace like:
    
      Unable to handle kernel paging request at virtual address bff00000
      [...]
      CPU: 1 PID: 465 Comm: startapp.bin Tainted: G           O      5.10.0 #1
      Hardware name: Generic DT based system
      PC is at b15_flush_kern_dcache_area+0x24/0x3c
      LR is at __sync_icache_dcache+0x6c/0x98
      [...]
       (b15_flush_kern_dcache_area) from (__sync_icache_dcache+0x6c/0x98)
       (__sync_icache_dcache) from (set_pte_at+0x28/0x54)
       (set_pte_at) from (remap_pfn_range+0x1a0/0x274)
       (remap_pfn_range) from (uio_mmap+0x184/0x1b8 [uio])
       (uio_mmap [uio]) from (__mmap_region+0x264/0x5f4)
       (__mmap_region) from (__do_mmap_mm+0x3ec/0x440)
       (__do_mmap_mm) from (do_mmap+0x50/0x58)
       (do_mmap) from (vm_mmap_pgoff+0xfc/0x188)
       (vm_mmap_pgoff) from (ksys_mmap_pgoff+0xac/0xc4)
       (ksys_mmap_pgoff) from (ret_fast_syscall+0x0/0x5c)
      Code: e0801001 e2423001 e1c00003 f57ff04f (ee070f3e)
      ---[ end trace 09cf0734c3805d52 ]---
      Kernel panic - not syncing: Fatal exception
    
    So check if PG_reserved was set to solve this issue.
    
    [1]: https://lore.kernel.org/lkml/Zbtdue57RO0QScJM@linux.ibm.com/
    
    Fixes: a4d5613c4dc6 ("arm: extend pfn_valid to take into account freed memory map alignment")
    Suggested-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Yongqiang Liu <liuyongqiang13@huawei.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5382e52626c0d893ba248f99f5fb9e96150f8b59
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Feb 14 08:03:24 2024 +0100

    ARM: 9352/1: iwmmxt: Remove support for PJ4/PJ4B cores
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b9920fdd5a751df129808e7fa512e9928223ee05 ]
    
    PJ4 is a v7 core that incorporates a iWMMXt coprocessor. However, GCC
    does not support this combination (its iWMMXt configuration always
    implies v5te), and so there is no v6/v7 user space that actually makes
    use of this, beyond generic support for things like setjmp() that
    preserve/restore the iWMMXt register file using generic LDC/STC
    instructions emitted in assembler.  As [0] appears to imply, this logic
    is triggered for the init process at boot, and so most user threads will
    have a iWMMXt register context associated with it, even though it is
    never used.
    
    At this point, it is highly unlikely that such GCC support will ever
    materialize (and Clang does not implement support for iWMMXt to begin
    with).
    
    This means that advertising iWMMXt support on these cores results in
    context switch overhead without any associated benefit, and so it is
    better to simply ignore the iWMMXt unit on these systems. So rip out the
    support. Doing so also fixes the issue reported in [0] related to UNDEF
    handling of co-processor #0/#1 instructions issued from user space
    running in Thumb2 mode.
    
    The PJ4 cores are used in four platforms: Armada 370/xp, Dove (Cubox,
    d2plug), MMP2 (xo-1.75) and Berlin (Google TV). Out of these, only the
    first is still widely used, but that one actually doesn't have iWMMXt
    but instead has only VFPV3-D16, and so it is not impacted by this
    change.
    
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218427 [0]
    
    Fixes: 8bcba70cb5c22 ("ARM: entry: Disregard Thumb undef exception ...")
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Nicolas Pitre <nico@fluxnic.net>
    Reviewed-by: Jisheng Zhang <jszhang@kernel.org>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4d817e787d130848f2bed42f56b4930dc8b0611b
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Feb 18 18:41:37 2024 +0100

    clocksource/drivers/arm_global_timer: Fix maximum prescaler value
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b34b9547cee41575a4fddf390f615570759dc999 ]
    
    The prescaler in the "Global Timer Control Register bit assignments" is
    documented to use bits [15:8], which means that the maximum prescaler
    register value is 0xff.
    
    Fixes: 171b45a4a70e ("clocksource/drivers/arm_global_timer: Implement rate compensation whenever source clock changes")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20240218174138.1942418-2-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 75ee6d4bdc481ddbe8d619eb0ef1b15c1b08e91f
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Sat Feb 3 13:53:06 2024 +0100

    x86/sev: Fix position dependent variable references in startup code
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 1c811d403afd73f04bde82b83b24c754011bd0e8 upstream.
    
    The early startup code executes from a 1:1 mapping of memory, which
    differs from the mapping that the code was linked and/or relocated to
    run at. The latter mapping is not active yet at this point, and so
    symbol references that rely on it will fault.
    
    Given that the core kernel is built without -fPIC, symbol references are
    typically emitted as absolute, and so any such references occuring in
    the early startup code will therefore crash the kernel.
    
    While an attempt was made to work around this for the early SEV/SME
    startup code, by forcing RIP-relative addressing for certain global
    SEV/SME variables via inline assembly (see snp_cpuid_get_table() for
    example), RIP-relative addressing must be pervasively enforced for
    SEV/SME global variables when accessed prior to page table fixups.
    
    __startup_64() already handles this issue for select non-SEV/SME global
    variables using fixup_pointer(), which adjusts the pointer relative to a
    `physaddr` argument. To avoid having to pass around this `physaddr`
    argument across all functions needing to apply pointer fixups, introduce
    a macro RIP_RELATIVE_REF() which generates a RIP-relative reference to
    a given global variable. It is used where necessary to force
    RIP-relative accesses to global variables.
    
    For backporting purposes, this patch makes no attempt at cleaning up
    other occurrences of this pattern, involving either inline asm or
    fixup_pointer(). Those will be addressed later.
    
      [ bp: Call it "rip_rel_ref" everywhere like other code shortens
        "rIP-relative reference" and make the asm wrapper __always_inline. ]
    
    Co-developed-by: Kevin Loughlin <kevinloughlin@google.com>
    Signed-off-by: Kevin Loughlin <kevinloughlin@google.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: <stable@kernel.org>
    Link: https://lore.kernel.org/all/20240130220845.1978329-1-kevinloughlin@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0be63bb5f0336434036542fcbee3e68a3a2a4900
Author: Borislav Petkov (AMD) <bp@alien8.de>
Date:   Fri Feb 2 17:29:32 2024 +0100

    x86/Kconfig: Remove CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 29956748339aa8757a7e2f927a8679dd08f24bb6 upstream.
    
    It was meant well at the time but nothing's using it so get rid of it.
    
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Link: https://lore.kernel.org/r/20240202163510.GDZb0Zvj8qOndvFOiZ@fat_crate.local
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4575d3b8f19e22be0eed2dc5877e694f8bc1bafa
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Fri Mar 1 00:34:13 2024 +0200

    wifi: rtw88: 8821cu: Fix connection failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 605d7c0b05eecb985273b1647070497142c470d3 upstream.
    
    Clear bit 8 of REG_SYS_STATUS1 after MAC power on.
    
    Without this, some RTL8821CU and RTL8811CU cannot connect to any
    network:
    
    Feb 19 13:33:11 ideapad2 kernel: wlp3s0f3u2: send auth to
            90:55:de:__:__:__ (try 1/3)
    Feb 19 13:33:13 ideapad2 kernel: wlp3s0f3u2: send auth to
            90:55:de:__:__:__ (try 2/3)
    Feb 19 13:33:14 ideapad2 kernel: wlp3s0f3u2: send auth to
            90:55:de:__:__:__ (try 3/3)
    Feb 19 13:33:15 ideapad2 kernel: wlp3s0f3u2: authentication with
            90:55:de:__:__:__ timed out
    
    The RTL8822CU and RTL8822BU out-of-tree drivers do this as well, so do
    it for all three types of chips.
    
    Tested with RTL8811CU (Tenda U9 V2.0).
    
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/aeeefad9-27c8-4506-a510-ef9a9a8731a4@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit debc23f12d3bf46094d7f349cb011f71a0fba244
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 26 14:59:48 2024 -0700

    Fix memory leak in posix_clock_open()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 5b4cdd9c5676559b8a7c944ac5269b914b8c0bb8 upstream.
    
    If the clk ops.open() function returns an error, we don't release the
    pccontext we allocated for this clock.
    
    Re-organize the code slightly to make it all more obvious.
    
    Reported-by: Rohit Keshri <rkeshri@redhat.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Fixes: 60c6946675fc ("posix-clock: introduce posix_clock_context concept")
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Linus Torvalds <torvalds@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a986d99b250d1d5287a341e910b0003427887ae5
Author: Jiawei Wang <me@jwang.link>
Date:   Wed Mar 13 09:58:53 2024 +0800

    ASoC: amd: yc: Revert "add new YC platform variant (0x63) support"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 37bee1855d0e3b6dbeb8de71895f6f68cad137be upstream.
    
    This reverts commit 316a784839b21b122e1761cdca54677bb19a47fa,
    that enabled Yellow Carp (YC) driver for PCI revision id 0x63.
    
    Mukunda Vijendar [1] points out that revision 0x63 is Pink
    Sardine platform, not Yellow Carp. The YC driver should not
    be enabled for this platform. This patch prevents the YC
    driver from being incorrectly enabled.
    
    Link: https://lore.kernel.org/linux-sound/023092e1-689c-4b00-b93f-4092c3724fb6@amd.com/ [1]
    
    Signed-off-by: Jiawei Wang <me@jwang.link>
    Link: https://msgid.link/r/20240313015853.3573242-3-me@jwang.link
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec10e1503e186c5441715831225c628e61e54cf5
Author: Jiawei Wang <me@jwang.link>
Date:   Wed Mar 13 09:58:52 2024 +0800

    ASoC: amd: yc: Revert "Fix non-functional mic on Lenovo 21J2"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 861b3415e4dee06cc00cd1754808a7827b9105bf upstream.
    
    This reverts commit ed00a6945dc32462c2d3744a3518d2316da66fcc,
    which added a quirk entry to enable the Yellow Carp (YC)
    driver for the Lenovo 21J2 laptop.
    
    Although the microphone functioned with the YC driver, it
    resulted in incorrect driver usage. The Lenovo 21J2 is not a
    Yellow Carp platform, but a Pink Sardine platform, which
    already has an upstreamed driver.
    
    The microphone on the Lenovo 21J2 operates correctly with the
    CONFIG_SND_SOC_AMD_PS flag enabled and does not require the
    quirk entry. So this patch removes the quirk entry.
    
    Thanks to Mukunda Vijendar [1] for pointing this out.
    
    Link: https://lore.kernel.org/linux-sound/023092e1-689c-4b00-b93f-4092c3724fb6@amd.com/ [1]
    
    Signed-off-by: Jiawei Wang <me@jwang.link>
    Link: https://lore.kernel.org/linux-sound/023092e1-689c-4b00-b93f-4092c3724fb6@amd.com/ [1]
    Link: https://msgid.link/r/20240313015853.3573242-2-me@jwang.link
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Luca Stefani <luca.stefani.ge1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 158871d7cd62658e081f76a358ea026b3b168865
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Mar 22 17:03:58 2024 +0200

    x86/efistub: Call mixed mode boot services on the firmware's stack
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit cefcd4fe2e3aaf792c14c9e56dab89e3d7a65d02 upstream.
    
    Normally, the EFI stub calls into the EFI boot services using the stack
    that was live when the stub was entered. According to the UEFI spec,
    this stack needs to be at least 128k in size - this might seem large but
    all asynchronous processing and event handling in EFI runs from the same
    stack and so quite a lot of space may be used in practice.
    
    In mixed mode, the situation is a bit different: the bootloader calls
    the 32-bit EFI stub entry point, which calls the decompressor's 32-bit
    entry point, where the boot stack is set up, using a fixed allocation
    of 16k. This stack is still in use when the EFI stub is started in
    64-bit mode, and so all calls back into the EFI firmware will be using
    the decompressor's limited boot stack.
    
    Due to the placement of the boot stack right after the boot heap, any
    stack overruns have gone unnoticed. However, commit
    
      5c4feadb0011983b ("x86/decompressor: Move global symbol references to C code")
    
    moved the definition of the boot heap into C code, and now the boot
    stack is placed right at the base of BSS, where any overruns will
    corrupt the end of the .data section.
    
    While it would be possible to work around this by increasing the size of
    the boot stack, doing so would affect all x86 systems, and mixed mode
    systems are a tiny (and shrinking) fraction of the x86 installed base.
    
    So instead, record the firmware stack pointer value when entering from
    the 32-bit firmware, and switch to this stack every time a EFI boot
    service call is made.
    
    Cc: <stable@kernel.org> # v6.1+
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1ba16fd3da6f1595723f46398dd0958e4a1fef6b
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Mar 13 16:32:27 2024 -0700

    Revert "crypto: pkcs7 - remove sha1 support"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 203a6763ab699da0568fd2b76303d03bb121abd4 upstream.
    
    This reverts commit 16ab7cb5825fc3425c16ad2c6e53d827f382d7c6 because it
    broke iwd.  iwd uses the KEYCTL_PKEY_* UAPIs via its dependency libell,
    and apparently it is relying on SHA-1 signature support.  These UAPIs
    are fairly obscure, and their documentation does not mention which
    algorithms they support.  iwd really should be using a properly
    supported userspace crypto library instead.  Regardless, since something
    broke we have to revert the change.
    
    It may be possible that some parts of this commit can be reinstated
    without breaking iwd (e.g. probably the removal of MODULE_SIG_SHA1), but
    for now this just does a full revert to get things working again.
    
    Reported-by: Karel Balej <balejk@matfyz.cz>
    Closes: https://lore.kernel.org/r/CZSHRUIJ4RKL.34T4EASV5DNJM@matfyz.cz
    Cc: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Tested-by: Karel Balej <balejk@matfyz.cz>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0aab3d0bb72820078fbe3cc48f5280ef6fdf92bb
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Mar 1 01:04:11 2024 +0100

    netfilter: nf_tables: reject constant set with timeout
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 5f4fc4bd5cddb4770ab120ce44f02695c4505562 upstream.
    
    This set combination is weird: it allows for elements to be
    added/deleted, but once bound to the rule it cannot be updated anymore.
    Eventually, all elements expire, leading to an empty set which cannot
    be updated anymore. Reject this flags combination.
    
    Cc: stable@vger.kernel.org
    Fixes: 761da2935d6e ("netfilter: nf_tables: add set timeout API support")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0a6e973461cbaa18fb76872cc5fb4d36c7a6910a
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Tue Mar 5 14:34:24 2024 -0600

    drm/amd/display: Use freesync when `DRM_EDID_FEATURE_CONTINUOUS_FREQ` found
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 2f14c0c8cae8e9e3b603a3f91909baba66540027 upstream.
    
    The monitor shipped with the Framework 16 supports VRR [1], but it's not
    being advertised.
    
    This is because the detailed timing block doesn't contain
    `EDID_DETAIL_MONITOR_RANGE` which amdgpu looks for to find min and max
    frequencies.  This check however is superfluous for this case because
    update_display_info() calls drm_get_monitor_range() to get these ranges
    already.
    
    So if the `DRM_EDID_FEATURE_CONTINUOUS_FREQ` EDID feature is found then
    turn on freesync without extra checks.
    
    v2: squash in fix from Harry
    
    Closes: https://www.reddit.com/r/framework/comments/1b4y2i5/no_variable_refresh_rate_on_the_framework_16_on/
    Closes: https://www.reddit.com/r/framework/comments/1b6vzcy/framework_16_variable_refresh_rate/
    Closes: https://community.frame.work/t/resolved-no-vrr-freesync-with-amd-version/42338
    Link: https://gist.github.com/superm1/e8fbacfa4d0f53150231d3a3e0a13faf
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f167879361eea6207f0ea1add501cce8aba851c1
Author: Audra Mitchell <audra@redhat.com>
Date:   Thu Jan 25 14:05:32 2024 -0500

    workqueue: Shorten events_freezable_power_efficient name
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    commit 8318d6a6362f5903edb4c904a8dd447e59be4ad1 upstream.
    
    Since we have set the WQ_NAME_LEN to 32, decrease the name of
    events_freezable_power_efficient so that it does not trip the name length
    warning when the workqueue is created.
    
    Signed-off-by: Audra Mitchell <audra@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f1268f43090ba2f51da6f9c622015d4e170bee76
Author: Wenjing Liu <wenjing.liu@amd.com>
Date:   Mon Mar 4 11:20:27 2024 -0500

    drm/amd/display: Revert Remove pixle rate limit for subvp
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cf8c498694a443e28dc1222f3ab94677114a4724 ]
    
    This reverts commit 340383c734f8 ("drm/amd/display: Remove pixle rate
    limit for subvp")
    
    [why]
    The original commit causes a regression when subvp is applied
    on ODM required 8k60hz timing. The display shows black screen
    on boot. The issue can be recovered with hotplug. It also causes
    MPO to fail. We will temprarily revert this commit and investigate
    the root cause further.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Chaitanya Dhere <chaitanya.dhere@amd.com>
    Reviewed-by: Martin Leung <martin.leung@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: Wenjing Liu <wenjing.liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 909d87456482e38c6b07f2d851117834d84fee68
Author: Alvin Lee <alvin.lee2@amd.com>
Date:   Fri Feb 9 10:40:36 2024 -0500

    drm/amd/display: Remove pixle rate limit for subvp
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 340383c734f8a4e1663d26356b35fd8050851168 ]
    
    Subvp bugs related to 8K60 have been fixed, so remove the limit that
    blocks 8K60 timings from enabling SubVP.
    
    Reviewed-by: Nevenko Stupar <nevenko.stupar@amd.com>
    Reviewed-by: Chaitanya Dhere <chaitanya.dhere@amd.com>
    Acked-by: Rodrigo Siqueira <rodrigo.siqueira@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alvin Lee <alvin.lee2@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: cf8c498694a4 ("drm/amd/display: Revert Remove pixle rate limit for subvp")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4c9903dcb9b96ca068730e5a68b099f9446e3cb6
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 8 18:03:42 2024 +0200

    drm/bridge: lt8912b: do not return negative values from .get_modes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 171b711b26cce208bb628526b1b368aeec7b6fa4 ]
    
    The .get_modes() hooks aren't supposed to return negative error
    codes. Return 0 for no modes, whatever the reason.
    
    Cc: Adrien Grassein <adrien.grassein@gmail.com>
    Cc: stable@vger.kernel.org
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/dcdddcbcb64b6f6cdc55022ee50c10dee8ddbc3d.1709913674.git.jani.nikula@intel.com
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1fc90c175a0b0df30c61b2e37390216596fa4645
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Tue Jan 23 21:37:11 2024 +0200

    drm/bridge: lt8912b: clear the EDID property on failures
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 29e032296da5d6294378ffa8bad8e976c5aadbf5 ]
    
    If EDID read fails, clear the EDID property.
    
    Cc: Adrien Grassein <adrien.grassein@gmail.com>
    Cc: Andrzej Hajda <andrzej.hajda@intel.com>
    Cc: Neil Armstrong <neil.armstrong@linaro.org>
    Cc: Robert Foss <rfoss@kernel.org>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Jonas Karlman <jonas@kwiboo.se>
    Cc: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/2080adaadf4bba3d85f58c42c065caf9aad9a4ef.1706038510.git.jani.nikula@intel.com
    Stable-dep-of: 171b711b26cc ("drm/bridge: lt8912b: do not return negative values from .get_modes()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2663f96b693fa7cf721d438b355cdbd6248b9fef
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Tue Jan 23 21:37:10 2024 +0200

    drm/bridge: lt8912b: use drm_bridge_edid_read()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 60d1fe1a7f302cc1151b155ac2d134db59bb1420 ]
    
    Prefer using the struct drm_edid based functions.
    
    cc: Adrien Grassein <adrien.grassein@gmail.com>
    Cc: Andrzej Hajda <andrzej.hajda@intel.com>
    Cc: Neil Armstrong <neil.armstrong@linaro.org>
    Cc: Robert Foss <rfoss@kernel.org>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Jonas Karlman <jonas@kwiboo.se>
    Cc: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/32c9b52fe6fa7cbad6bfd0ff00041876977e02ea.1706038510.git.jani.nikula@intel.com
    Stable-dep-of: 171b711b26cc ("drm/bridge: lt8912b: do not return negative values from .get_modes()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c1eeb81125ba2bae176caa82c22805a934032179
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Tue Jan 23 21:37:07 2024 +0200

    drm/bridge: add ->edid_read hook and drm_bridge_edid_read()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d807ad80d811ba0c22adfd871e2a46491f80d6e2 ]
    
    Add new struct drm_edid based ->edid_read hook and
    drm_bridge_edid_read() function to call the hook.
    
    v2: Include drm/drm_edid.h
    
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/9d08d22eaffcb9c59a2b677e45d7e61fc689bc2f.1706038510.git.jani.nikula@intel.com
    Stable-dep-of: 171b711b26cc ("drm/bridge: lt8912b: do not return negative values from .get_modes()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 278ae439beb9627aa3a2d74bc0c96fc4ddc0a2c5
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:25 2024 -0700

    vfio/pci: Create persistent INTx handler
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 18c198c96a815c962adc2b9b77909eec0be7df4d ]
    
    A vulnerability exists where the eventfd for INTx signaling can be
    deconfigured, which unregisters the IRQ handler but still allows
    eventfds to be signaled with a NULL context through the SET_IRQS ioctl
    or through unmask irqfd if the device interrupt is pending.
    
    Ideally this could be solved with some additional locking; the igate
    mutex serializes the ioctl and config space accesses, and the interrupt
    handler is unregistered relative to the trigger, but the irqfd path
    runs asynchronous to those.  The igate mutex cannot be acquired from the
    atomic context of the eventfd wake function.  Disabling the irqfd
    relative to the eventfd registration is potentially incompatible with
    existing userspace.
    
    As a result, the solution implemented here moves configuration of the
    INTx interrupt handler to track the lifetime of the INTx context object
    and irq_type configuration, rather than registration of a particular
    trigger eventfd.  Synchronization is added between the ioctl path and
    eventfd_signal() wrapper such that the eventfd trigger can be
    dynamically updated relative to in-flight interrupts or irqfd callbacks.
    
    Cc:  <stable@vger.kernel.org>
    Fixes: 89e1f7d4c66d ("vfio: Add PCI device driver")
    Reported-by: Reinette Chatre <reinette.chatre@intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-5-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dd36c137c83853dbf8bb2d36e3149989d28f026a
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:24 2024 -0700

    vfio: Introduce interface to flush virqfd inject workqueue
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b620ecbd17a03cacd06f014a5d3f3a11285ce053 ]
    
    In order to synchronize changes that can affect the thread callback,
    introduce an interface to force a flush of the inject workqueue.  The
    irqfd pointer is only valid under spinlock, but the workqueue cannot
    be flushed under spinlock.  Therefore the flush work for the irqfd is
    queued under spinlock.  The vfio_irqfd_cleanup_wq workqueue is re-used
    for queuing this work such that flushing the workqueue is also ordered
    relative to shutdown.
    
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-4-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Stable-dep-of: 18c198c96a81 ("vfio/pci: Create persistent INTx handler")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5c66e50a744ecdc63af06a46c5d4480a92cbd989
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Feb 27 13:45:35 2024 +1030

    btrfs: qgroup: validate btrfs_qgroup_inherit parameter
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 86211eea8ae1676cc819d2b4fdc8d995394be07d ]
    
    [BUG]
    Currently btrfs can create subvolume with an invalid qgroup inherit
    without triggering any error:
    
      # mkfs.btrfs -O quota -f $dev
      # mount $dev $mnt
      # btrfs subvolume create -i 2/0 $mnt/subv1
      # btrfs qgroup show -prce --sync $mnt
      Qgroupid    Referenced    Exclusive   Path
      --------    ----------    ---------   ----
      0/5           16.00KiB     16.00KiB   <toplevel>
      0/256         16.00KiB     16.00KiB   subv1
    
    [CAUSE]
    We only do a very basic size check for btrfs_qgroup_inherit structure,
    but never really verify if the values are correct.
    
    Thus in btrfs_qgroup_inherit() function, we have to skip non-existing
    qgroups, and never return any error.
    
    [FIX]
    Fix the behavior and introduce extra checks:
    
    - Introduce early check for btrfs_qgroup_inherit structure
      Not only the size, but also all the qgroup ids would be verified.
    
      And the timing is very early, so we can return error early.
      This early check is very important for snapshot creation, as snapshot
      is delayed to transaction commit.
    
    - Drop support for btrfs_qgroup_inherit::num_ref_copies and
      num_excl_copies
      Those two members are used to specify to copy refr/excl numbers from
      other qgroups.
      This would definitely mark qgroup inconsistent, and btrfs-progs has
      dropped the support for them for a long time.
      It's time to drop the support for kernel.
    
    - Verify the supported btrfs_qgroup_inherit::flags
      Just in case we want to add extra flags for btrfs_qgroup_inherit.
    
    Now above subvolume creation would fail with -ENOENT other than silently
    ignore the non-existing qgroup.
    
    CC: stable@vger.kernel.org # 6.7+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 16fc96f4d0070f139ed40ed2a6380724ac6f75cf
Author: David Sterba <dsterba@suse.com>
Date:   Thu Sep 14 16:45:41 2023 +0200

    btrfs: add helper to get fs_info from struct inode pointer
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 41044b41ad2c8c8165a42ec6e9a4096826dcf153 ]
    
    Add a convenience helper to get a fs_info from a VFS inode pointer
    instead of open coding the chain or using btrfs_sb() that in some cases
    does one more pointer hop.  This is implemented as a macro (still with
    type checking) so we don't need full definitions of struct btrfs_inode,
    btrfs_root or btrfs_fs_info.
    
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 86211eea8ae1 ("btrfs: qgroup: validate btrfs_qgroup_inherit parameter")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d3b418aaeeeecb368cbe0697000ae862a26d083b
Author: David Sterba <dsterba@suse.com>
Date:   Thu Sep 14 16:24:43 2023 +0200

    btrfs: add helpers to get fs_info from page/folio pointers
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b33d2e535f9b2a1c4210cfc4843ac0dbacbeebcc ]
    
    Add convenience helpers to get a fs_info from a page or folio pointer
    instead of open coding the chain or using btrfs_sb() that in some cases
    does one more pointer hop.  This is implemented as a macro (still with
    type checking) so we don't need full definitions of struct page, folio,
    btrfs_root and btrfs_fs_info. The latter can't be static inlines as this
    would create loop between ctree.h <-> fs.h, or the headers would have to
    be restructured.
    
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 86211eea8ae1 ("btrfs: qgroup: validate btrfs_qgroup_inherit parameter")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f4d5ea91bd08ecbc2b39cf79a30e5d64e0f6c908
Author: David Sterba <dsterba@suse.com>
Date:   Wed Sep 13 16:11:29 2023 +0200

    btrfs: add helpers to get inode from page/folio pointers
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c8293894afa718653688b2fa98ab68317c875a00 ]
    
    Add convenience helpers to get a struct btrfs_inode from a page or folio
    pointer instead of open coding the chain or intermediate BTRFS_I. This
    is implemented as a macro (still with type checking) so we don't need
    full definitions of struct page or address_space.
    
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 86211eea8ae1 ("btrfs: qgroup: validate btrfs_qgroup_inherit parameter")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fd9a653ace6e812a0a115937d4b3a16031cd599b
Author: David Sterba <dsterba@suse.com>
Date:   Tue Jan 16 17:33:20 2024 +0100

    btrfs: replace sb::s_blocksize by fs_info::sectorsize
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4e00422ee62663e31e611d7de4d2c4aa3f8555f2 ]
    
    The block size stored in the super block is used by subsystems outside
    of btrfs and it's a copy of fs_info::sectorsize. Unify that to always
    use our sectorsize, with the exception of mount where we first need to
    use fixed values (4K) until we read the super block and can set the
    sectorsize.
    
    Replace all uses, in most cases it's fewer pointer indirections.
    
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 86211eea8ae1 ("btrfs: qgroup: validate btrfs_qgroup_inherit parameter")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 68876b028138b264227e707632b94d2991f9aa99
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Dec 14 16:13:29 2023 +0000

    btrfs: add set_folio_extent_mapped() helper
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit dfba9f47730604a46c284f6099a11c5686b6289d ]
    
    Turn set_page_extent_mapped() into a wrapper around this version.
    Saves a call to compound_head() for callers who already have a folio
    and removes a couple of users of page->mapping.
    
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 86211eea8ae1 ("btrfs: qgroup: validate btrfs_qgroup_inherit parameter")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bc2b2744d69e39b6db30ea0deff9e9ab2813a182
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Tue Jan 16 09:52:58 2024 -0500

    drm/amd/display: Add more checks for exiting idle in DC
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a9b1a4f684b32bcd33431b67acd6f4c275728380 ]
    
    [Why]
    Any interface that touches registers needs to wake up the system.
    
    [How]
    Add a new interface dc_exit_ips_for_hw_access that wraps the check
    for IPS support and insert it into the public DC interfaces that
    touch registers.
    
    We don't re-enter, since we expect that the enter/exit to have been done
    on the DM side.
    
    Cc: stable@vger.kernel.org # 6.1+
    Reviewed-by: Ovidiu Bunea <ovidiu.bunea@amd.com>
    Acked-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 46672df0c5124cf302b713669d4cff3881407812
Author: Aric Cyr <aric.cyr@amd.com>
Date:   Thu Nov 30 18:54:48 2023 -0500

    drm/amd/display: Unify optimize_required flags and VRR adjustments
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit dcbf438d48341dc60e08e3df92120a4aeb097c84 ]
    
    [why]
    There is only a single call to dc_post_update_surfaces_to_stream
    so there is no need to have two flags to control it. Unifying
    this to a single flag allows dc_stream_adjust_vmin_vmax to skip
    actual programming when there is no change required.
    
    [how]
    Remove wm_optimze_required flag and set only optimize_required in its
    place.  Then in dc_stream_adjust_vmin_vmax, check that the stream timing
    range matches the requested one and skip programming if they are equal.
    
    Reviewed-by: Alvin Lee <alvin.lee2@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Aric Cyr <aric.cyr@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: a9b1a4f684b3 ("drm/amd/display: Add more checks for exiting idle in DC")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8452f9615b5a709b4ddc9079d8c11bac678b0739
Author: Zack Rusin <zack.rusin@broadcom.com>
Date:   Fri Jan 5 08:51:05 2024 -0500

    drm/ttm: Make sure the mapped tt pages are decrypted when needed
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 71ce046327cfd3aef3f93d1c44e091395eb03f8f ]
    
    Some drivers require the mapped tt pages to be decrypted. In an ideal
    world this would have been handled by the dma layer, but the TTM page
    fault handling would have to be rewritten to able to do that.
    
    A side-effect of the TTM page fault handling is using a dma allocation
    per order (via ttm_pool_alloc_page) which makes it impossible to just
    trivially use dma_mmap_attrs. As a result ttm has to be very careful
    about trying to make its pgprot for the mapped tt pages match what
    the dma layer thinks it is. At the ttm layer it's possible to
    deduce the requirement to have tt pages decrypted by checking
    whether coherent dma allocations have been requested and the system
    is running with confidential computing technologies.
    
    This approach isn't ideal but keeping TTM matching DMAs expectations
    for the page properties is in general fragile, unfortunately proper
    fix would require a rewrite of TTM's page fault handling.
    
    Fixes vmwgfx with SEV enabled.
    
    v2: Explicitly include cc_platform.h
    v3: Use CC_ATTR_GUEST_MEM_ENCRYPT instead of CC_ATTR_MEM_ENCRYPT to
    limit the scope to guests and log when memory decryption is enabled.
    
    Signed-off-by: Zack Rusin <zack.rusin@broadcom.com>
    Fixes: 3bf3710e3718 ("drm/ttm: Add a generic TTM memcpy move for page-based iomem")
    Reviewed-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: linux-kernel@vger.kernel.org
    Cc: <stable@vger.kernel.org> # v5.14+
    Link: https://patchwork.freedesktop.org/patch/msgid/20230926040359.3040017-1-zack@kde.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 25fe843260937972c096502796bd2e45000dbe72
Author: Hector Martin <marcan@marcan.st>
Date:   Sat Jan 6 11:38:33 2024 +0100

    wifi: brcmfmac: Demote vendor-specific attach/detach messages to info
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 85da8f71aaa7b83ea7ef0e89182e0cd47e16d465 ]
    
    People are getting spooked by brcmfmac errors on their boot console.
    There's no reason for these messages to be errors.
    
    Cc: stable@vger.kernel.org # 6.2.x
    Fixes: d6a5c562214f ("wifi: brcmfmac: add support for vendor-specific firmware api")
    Signed-off-by: Hector Martin <marcan@marcan.st>
    [arend.vanspriel@broadcom.com: remove attach/detach vendor callbacks]
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240106103835.269149-2-arend.vanspriel@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a6748fd4511693fa768fb6501b80c5cae48f0a1a
Author: Hector Martin <marcan@marcan.st>
Date:   Wed Jan 3 10:57:04 2024 +0100

    wifi: brcmfmac: cfg80211: Use WSEC to set SAE password
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9f7861c56b51b84d30114e7fea9d744a9d5ba9b7 ]
    
    Using the WSEC command instead of sae_password seems to be the supported
    mechanism on newer firmware, and also how the brcmdhd driver does it.
    
    The existing firmware mechanism intended for (some) Cypress chips has
    been separated from the new firmware mechanism using the multi-vendor
    framework. Depending on the device it will select the appropriate
    firmware mechanism.
    
    This makes WPA3 work with iwd, or with wpa_supplicant pending a support
    patchset [2].
    
    [1] https://rachelbythebay.com/w/2023/11/06/wpa3/
    [2] http://lists.infradead.org/pipermail/hostap/2023-July/041653.html
    
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Neal Gompa <neal@gompa.dev>
    [arend.vanspriel@broadcom.com: use multi-vendor framework]
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240103095704.135651-5-arend.vanspriel@broadcom.com
    Stable-dep-of: 85da8f71aaa7 ("wifi: brcmfmac: Demote vendor-specific attach/detach messages to info")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a6985d6674666f37b7bb0df01bb07a6737c70639
Author: Arend van Spriel <arend.vanspriel@broadcom.com>
Date:   Wed Jan 3 10:57:02 2024 +0100

    wifi: brcmfmac: add per-vendor feature detection callback
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 14e1391b71027948cdbacdbea4bf8858c2068eb7 ]
    
    Adding a .feat_attach() callback allowing per-vendor overrides
    of the driver feature flags. In this patch the callback is only
    provided by BCA vendor to disable SAE feature as it has not been
    confirmed yet. BCA chips generally do not have the in-driver
    supplicant (idsup) feature so they rely on NL80211_CMD_EXTERNAL_AUTH
    to trigger user-space authentication.
    
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240103095704.135651-3-arend.vanspriel@broadcom.com
    Stable-dep-of: 85da8f71aaa7 ("wifi: brcmfmac: Demote vendor-specific attach/detach messages to info")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ce7669c62e9bedcd18e1f893a6c2a96a230fb978
Author: Anton Altaparmakov <anton@tuxera.com>
Date:   Thu Mar 14 14:26:56 2024 +0000

    x86/pm: Work around false positive kmemleak report in msr_build_context()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e3f269ed0accbb22aa8f25d2daffa23c3fccd407 ]
    
    Since:
    
      7ee18d677989 ("x86/power: Make restore_processor_context() sane")
    
    kmemleak reports this issue:
    
      unreferenced object 0xf68241e0 (size 32):
        comm "swapper/0", pid 1, jiffies 4294668610 (age 68.432s)
        hex dump (first 32 bytes):
          00 cc cc cc 29 10 01 c0 00 00 00 00 00 00 00 00  ....)...........
          00 42 82 f6 cc cc cc cc cc cc cc cc cc cc cc cc  .B..............
        backtrace:
          [<461c1d50>] __kmem_cache_alloc_node+0x106/0x260
          [<ea65e13b>] __kmalloc+0x54/0x160
          [<c3858cd2>] msr_build_context.constprop.0+0x35/0x100
          [<46635aff>] pm_check_save_msr+0x63/0x80
          [<6b6bb938>] do_one_initcall+0x41/0x1f0
          [<3f3add60>] kernel_init_freeable+0x199/0x1e8
          [<3b538fde>] kernel_init+0x1a/0x110
          [<938ae2b2>] ret_from_fork+0x1c/0x28
    
    Which is a false positive.
    
    Reproducer:
    
      - Run rsync of whole kernel tree (multiple times if needed).
      - start a kmemleak scan
      - Note this is just an example: a lot of our internal tests hit these.
    
    The root cause is similar to the fix in:
    
      b0b592cf0836 x86/pm: Fix false positive kmemleak report in msr_build_context()
    
    ie. the alignment within the packed struct saved_context
    which has everything unaligned as there is only "u16 gs;" at start of
    struct where in the past there were four u16 there thus aligning
    everything afterwards.  The issue is with the fact that Kmemleak only
    searches for pointers that are aligned (see how pointers are scanned in
    kmemleak.c) so when the struct members are not aligned it doesn't see
    them.
    
    Testing:
    
    We run a lot of tests with our CI, and after applying this fix we do not
    see any kmemleak issues any more whilst without it we see hundreds of
    the above report. From a single, simple test run consisting of 416 individual test
    cases on kernel 5.10 x86 with kmemleak enabled we got 20 failures due to this,
    which is quite a lot. With this fix applied we get zero kmemleak related failures.
    
    Fixes: 7ee18d677989 ("x86/power: Make restore_processor_context() sane")
    Signed-off-by: Anton Altaparmakov <anton@tuxera.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: "Rafael J. Wysocki" <rafael@kernel.org>
    Cc: stable@vger.kernel.org
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: https://lore.kernel.org/r/20240314142656.17699-1-anton@tuxera.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4fe70b0e4ffc127885ea9f9e411c209ea3546c74
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Mar 20 18:43:11 2024 +0100

    dm snapshot: fix lockup in dm_exception_table_exit
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6e7132ed3c07bd8a6ce3db4bb307ef2852b322dc ]
    
    There was reported lockup when we exit a snapshot with many exceptions.
    Fix this by adding "cond_resched" to the loop that frees the exceptions.
    
    Reported-by: John Pittman <jpittman@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 310ebcc2d4fb31478007d32479228a85aaf07215
Author: Leo Ma <hanghong.ma@amd.com>
Date:   Fri Jul 28 08:35:07 2023 -0400

    drm/amd/display: Fix noise issue on HDMI AV mute
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 69e3be6893a7e668660b05a966bead82bbddb01d ]
    
    [Why]
    When mode switching is triggered there is momentary noise visible on
    some HDMI TV or displays.
    
    [How]
    Wait for 2 frames to make sure we have enough time to send out AV mute
    and sink receives a full frame.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Wenjing Liu <wenjing.liu@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: Leo Ma <hanghong.ma@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 81a8dfb9067681cc6fb12fc6b1ec202af95e725c
Author: Allen Pan <allen.pan@amd.com>
Date:   Fri Feb 23 18:20:16 2024 -0500

    drm/amd/display: Add a dc_state NULL check in dc_state_release
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 334b56cea5d9df5989be6cf1a5898114fa70ad98 ]
    
    [How]
    Check wheather state is NULL before releasing it.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Charlene Liu <charlene.liu@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Allen Pan <allen.pan@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1fb20c094fecd16f3b9bd7594398f68782c0a9fe
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Wed Feb 14 13:29:51 2024 -0700

    drm/amd/display: Return the correct HDCP error code
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e64b3f55e458ce7e2087a0051f47edabf74545e7 ]
    
    [WHY & HOW]
    If the display is null when creating an HDCP session, return a proper
    error code.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit db09b2a67265ac55860dfd63fcc21c286470564c
Author: Wenjing Liu <wenjing.liu@amd.com>
Date:   Fri Feb 23 15:38:40 2024 -0500

    drm/amd/display: Implement wait_for_odm_update_pending_complete
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 2d7f3d1a5866705be2393150e1ffdf67030ab88d ]
    
    [WHY]
    Odm update is doubled buffered. We need to wait for ODM update to be
    completed before optimizing bandwidth or programming new udpates.
    
    [HOW]
    implement wait_for_odm_update_pending_complete function to wait for:
    1. odm configuration update is no longer pending in timing generator.
    2. no pending dpg pattern update for each active OPP.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Alvin Lee <alvin.lee2@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Wenjing Liu <wenjing.liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1a34a062ab1f8368b28ece664f36e3fcb91f393a
Author: Wenjing Liu <wenjing.liu@amd.com>
Date:   Fri Feb 23 15:17:39 2024 -0500

    drm/amd/display: Lock all enabled otg pipes even with no planes
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 94040c2cbb1a872ff779da06bf034ccfee0f9cba ]
    
    [WHY]
    On DCN32 we support dynamic ODM even when OTG is blanked. When ODM
    configuration is dynamically changed and the OTG is on blank pattern,
    we will need to reprogram OPP's test pattern based on new ODM
    configuration. Therefore we need to lock the OTG pipe to avoid temporary
    corruption when we are reprogramming OPP blank patterns.
    
    [HOW]
    Add a new interdependent update lock implementation to lock all enabled
    OTG pipes even when there is no plane on the OTG for DCN32.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Alvin Lee <alvin.lee2@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Wenjing Liu <wenjing.liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e772fc6ac7aa5f4bbee7933ed661f95465c548a1
Author: ChunTao Tso <chuntao.tso@amd.com>
Date:   Tue Feb 20 17:08:39 2024 +0800

    drm/amd/display: Amend coasting vtotal for replay low hz
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8e054b0f1e71531762b8ded7f66c1b4af734671b ]
    
    [WHY]
    The original coasting vtotal is 2 bytes, and it need to
    be amended to 4 bytes because low hz case.
    
    [HOW]
    Amend coasting vtotal from 2 bytes to 4 bytes.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Alvin Lee <alvin.lee2@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: ChunTao Tso <chuntao.tso@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3663f851d4701b6fc7232e233a6b91f228a83142
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Wed Feb 21 12:27:31 2024 -0500

    drm/amd/display: Fix idle check for shared firmware state
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3d066f9547dd58329b526db44f42c487a7974703 ]
    
    [WHY]
    We still had an instance of get_idle_state checking the PMFW scratch
    register instead of the actual idle allow signal.
    
    [HOW]
    Replace it with the SW state check for whether we had allowed idle
    through notify_idle.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Duncan Ma <duncan.ma@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d9e9d7e321448206c5dbd2bd8d7a3d37bfb9deaa
Author: Wenjing Liu <wenjing.liu@amd.com>
Date:   Wed Feb 21 16:55:04 2024 -0500

    drm/amd/display: Update odm when ODM combine is changed on an otg master pipe with no plane
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 86e9523fb0efce27095d3086473c739cce720d01 ]
    
    [WHY]
    When committing an update with ODM combine change when the plane is
    removing or already removed, we fail to detect odm change in pipe
    update flags. This has caused mismatch between new dc state and the
    actual hardware state, because we missed odm programming.
    
    [HOW]
    - Detect odm change even for otg master pipe without a plane.
    - Update odm config before calling program pipes for pipe with planes.
    
    The commit also updates blank pattern programming when odm is changed
    without plane. This is because number of OPP is changed when ODM
    combine is changed. Blank pattern is per OPP so we will need to
    reprogram OPP based on the new pipe topology.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Dillon Varone <dillon.varone@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Wenjing Liu <wenjing.liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b16fc6cb998c884f347eb42ba5d134c29ac51dd4
Author: Dillon Varone <dillon.varone@amd.com>
Date:   Wed Feb 21 13:21:20 2024 -0500

    drm/amd/display: Init DPPCLK from SMU on dcn32
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4f5b8d78ca43fcc695ba16c83ebfabbfe09506d6 ]
    
    [WHY & HOW]
    DPPCLK ranges should be obtained from the SMU when available.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Chaitanya Dhere <chaitanya.dhere@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Dillon Varone <dillon.varone@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 10d191cfa835fb5e15b83ba77df550e9448b59f0
Author: Josip Pavic <josip.pavic@amd.com>
Date:   Fri Feb 9 16:05:18 2024 -0500

    drm/amd/display: Allow dirty rects to be sent to dmub when abm is active
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7fb19d9510937121a1f285894cffd30bc96572e3 ]
    
    [WHY]
    It's beneficial for ABM to know when new frame data are available.
    
    [HOW]
    Add new condition to allow dirty rects to be sent to DMUB when ABM is
    active. ABM will use this as a signal that a new frame has arrived.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Anthony Koo <anthony.koo@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Josip Pavic <josip.pavic@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec9f39ce9600108b0dda8489230b0653ed5180a8
Author: Sohaib Nadeem <sohaib.nadeem@amd.com>
Date:   Wed Feb 14 13:51:16 2024 -0500

    drm/amd/display: Override min required DCFCLK in dml1_validate
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 26fbcb3da77efc77bd7327b7916338d773cca484 ]
    
    [WHY]:
    Increasing min DCFCLK addresses underflow issues that occur when phantom
    pipe is turned on for some Sub-Viewport configs
    
    [HOW]:
    dcn32_override_min_req_dcfclk is added to override DCFCLK value in
    dml1_validate when subviewport is being used.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Alvin Lee <alvin.lee2@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Sohaib Nadeem <sohaib.nadeem@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 59bd2e592d03570cf0c3482f8cd2136609e192b6
Author: Ma Jun <Jun.Ma2@amd.com>
Date:   Mon Mar 11 15:23:34 2024 +0800

    drm/amdgpu/pm: Check the validity of overdiver power limit
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e17718251addb31e1771fd28735ec410e6ca650a ]
    
    Check the validity of overdriver power limit before using it.
    
    Fixes: 7968e9748fbb ("drm/amdgpu/pm: Fix the power1_min_cap value")
    Signed-off-by: Ma Jun <Jun.Ma2@amd.com>
    Suggested-by: Lazar Lijo <lijo.lazar@amd.com>
    Suggested-by: Alex Deucher <Alexander.Deucher@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d6442d25b2e22830f7bb08341aa913fdd9cb24d
Author: Ma Jun <Jun.Ma2@amd.com>
Date:   Mon Mar 11 14:38:34 2024 +0800

    drm/amdgpu/pm: Fix NULL pointer dereference when get power limit
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 08ae9ef829b8055c2fdc8cfee37510c1f4721a07 ]
    
    Because powerplay_table initialization is skipped under
    sriov case, We check and set default lower and upper OD
    value if powerplay_table is NULL.
    
    Fixes: 7968e9748fbb ("drm/amdgpu/pm: Fix the power1_min_cap value")
    Signed-off-by: Ma Jun <Jun.Ma2@amd.com>
    Reported-by: Yin Zhenguo <zhenguo.yin@amd.com>
    Suggested-by: Lazar Lijo <lijo.lazar@amd.com>
    Suggested-by: Alex Deucher <Alexander.Deucher@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1e9152d09e914e0e9c9827f2fe7e542da9cc17d7
Author: Philip Yang <Philip.Yang@amd.com>
Date:   Mon Mar 11 18:07:34 2024 -0400

    drm/amdgpu: amdgpu_ttm_gart_bind set gtt bound flag
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6c6064cbe58b43533e3451ad6a8ba9736c109ac3 ]
    
    Otherwise after the GTT bo is released, the GTT and gart space is freed
    but amdgpu_ttm_backend_unbind will not clear the gart page table entry
    and leave valid mapping entry pointing to the stale system page. Then
    if GPU access the gart address mistakely, it will read undefined value
    instead page fault, harder to debug and reproduce the real issue.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Philip Yang <Philip.Yang@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit af1519a1059b22e9cfaa1f9b24224e54320982fd
Author: Swapnil Patel <swapnil.patel@amd.com>
Date:   Tue Feb 13 08:09:48 2024 -0500

    drm/amd/display: Change default size for dummy plane in DML2
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 75eb8f7df65c5e6eb22a5aff8deb60ce0b65de1a ]
    
    [WHY & HOW]
    Currently, to map dc states into dml_display_cfg,
    We create a dummy plane if the stream doesn't have any planes
    attached to it. This dummy plane uses max addersable width height.
    This results in certain mode validations failing when they shouldn't.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Chaitanya Dhere <chaitanya.dhere@amd.com>
    Acked-by: Alex Hung <alex.hung@amd.com>
    Signed-off-by: Swapnil Patel <swapnil.patel@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d74db13e04964983c2b2a872f3ea9b7fe300b802
Author: Conrad Kostecki <conikost@gentoo.org>
Date:   Wed Mar 13 22:46:50 2024 +0100

    ahci: asm1064: asm1166: don't limit reported ports
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6cd8adc3e18960f6e59d797285ed34ef473cc896 ]
    
    Previously, patches have been added to limit the reported count of SATA
    ports for asm1064 and asm1166 SATA controllers, as those controllers do
    report more ports than physically having.
    
    While it is allowed to report more ports than physically having in CAP.NP,
    it is not allowed to report more ports than physically having in the PI
    (Ports Implemented) register, which is what these HBAs do.
    (This is a AHCI spec violation.)
    
    Unfortunately, it seems that the PMP implementation in these ASMedia HBAs
    is also violating the AHCI and SATA-IO PMP specification.
    
    What these HBAs do is that they do not report that they support PMP
    (CAP.SPM (Supports Port Multiplier) is not set).
    
    Instead, they have decided to add extra "virtual" ports in the PI register
    that is used if a port multiplier is connected to any of the physical
    ports of the HBA.
    
    Enumerating the devices behind the PMP as specified in the AHCI and
    SATA-IO specifications, by using PMP READ and PMP WRITE commands to the
    physical ports of the HBA is not possible, you have to use the "virtual"
    ports.
    
    This is of course bad, because this gives us no way to detect the device
    and vendor ID of the PMP actually connected to the HBA, which means that
    we can not apply the proper PMP quirks for the PMP that is connected to
    the HBA.
    
    Limiting the port map will thus stop these controllers from working with
    SATA Port Multipliers.
    
    This patch reverts both patches for asm1064 and asm1166, so old behavior
    is restored and SATA PMP will work again, but it will also reintroduce the
    (minutes long) extra boot time for the ASMedia controllers that do not
    have a PMP connected (either on the PCIe card itself, or an external PMP).
    
    However, a longer boot time for some, is the lesser evil compared to some
    other users not being able to detect their drives at all.
    
    Fixes: 0077a504e1a4 ("ahci: asm1166: correct count of reported ports")
    Fixes: 9815e3961754 ("ahci: asm1064: correct count of reported ports")
    Cc: stable@vger.kernel.org
    Reported-by: Matt <cryptearth@googlemail.com>
    Signed-off-by: Conrad Kostecki <conikost@gentoo.org>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    [cassel: rewrote commit message]
    Signed-off-by: Niklas Cassel <cassel@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5a703ed580dd850a862d311d1ac59886beb5e277
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Mar 14 16:49:11 2024 -0600

    wireguard: selftests: set RISCV_ISA_FALLBACK on riscv{32,64}
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e995f5dd9a9cef818af32ec60fc38d68614afd12 ]
    
    This option is needed to continue booting with QEMU. Recent changes that
    made this optional meant that it gets unset in the test harness, and so
    WireGuard CI has been broken. Fix this by simply setting this option.
    
    Cc: stable@vger.kernel.org
    Fixes: 496ea826d1e1 ("RISC-V: provide Kconfig & commandline options to control parsing "riscv,isa"")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 40f88f8bc283929b0f1d228c01e1ed64ca2c2b5c
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Mar 14 16:49:10 2024 -0600

    wireguard: netlink: access device through ctx instead of peer
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 71cbd32e3db82ea4a74e3ef9aeeaa6971969c86f ]
    
    The previous commit fixed a bug that led to a NULL peer->device being
    dereferenced. It's actually easier and faster performance-wise to
    instead get the device from ctx->wg. This semantically makes more sense
    too, since ctx->wg->peer_allowedips.seq is compared with
    ctx->allowedips_seq, basing them both in ctx. This also acts as a
    defence in depth provision against freed peers.
    
    Cc: stable@vger.kernel.org
    Fixes: e7096c131e51 ("net: WireGuard secure network tunnel")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9009fd9b95f373ff2ab51b272148e6488ee86425
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Mar 14 16:49:09 2024 -0600

    wireguard: netlink: check for dangling peer via is_dead instead of empty list
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 55b6c738673871c9b0edae05d0c97995c1ff08c4 ]
    
    If all peers are removed via wg_peer_remove_all(), rather than setting
    peer_list to empty, the peer is added to a temporary list with a head on
    the stack of wg_peer_remove_all(). If a netlink dump is resumed and the
    cursored peer is one that has been removed via wg_peer_remove_all(), it
    will iterate from that peer and then attempt to dump freed peers.
    
    Fix this by instead checking peer->is_dead, which was explictly created
    for this purpose. Also move up the device_update_lock lockdep assertion,
    since reading is_dead relies on that.
    
    It can be reproduced by a small script like:
    
        echo "Setting config..."
        ip link add dev wg0 type wireguard
        wg setconf wg0 /big-config
        (
                while true; do
                        echo "Showing config..."
                        wg showconf wg0 > /dev/null
                done
        ) &
        sleep 4
        wg setconf wg0 <(printf "[Peer]\nPublicKey=$(wg genkey)\n")
    
    Resulting in:
    
        BUG: KASAN: slab-use-after-free in __lock_acquire+0x182a/0x1b20
        Read of size 8 at addr ffff88811956ec70 by task wg/59
        CPU: 2 PID: 59 Comm: wg Not tainted 6.8.0-rc2-debug+ #5
        Call Trace:
         <TASK>
         dump_stack_lvl+0x47/0x70
         print_address_description.constprop.0+0x2c/0x380
         print_report+0xab/0x250
         kasan_report+0xba/0xf0
         __lock_acquire+0x182a/0x1b20
         lock_acquire+0x191/0x4b0
         down_read+0x80/0x440
         get_peer+0x140/0xcb0
         wg_get_device_dump+0x471/0x1130
    
    Cc: stable@vger.kernel.org
    Fixes: e7096c131e51 ("net: WireGuard secure network tunnel")
    Reported-by: Lillian Berry <lillian@star-ark.net>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4eed024c390f813237727bbf49f62fc6c4e8b0e2
Author: Yuli Wang <wangyuli@uniontech.com>
Date:   Tue Mar 19 15:50:34 2024 +0800

    LoongArch/crypto: Clean up useless assignment operations
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fea1c949f6ca5059e12de00d0483645debc5b206 ]
    
    The LoongArch CRC32 hw acceleration is based on arch/mips/crypto/
    crc32-mips.c. While the MIPS code supports both MIPS32 and MIPS64,
    but LoongArch32 lacks the CRC instruction. As a result, the line
    "len -= sizeof(u32)" is unnecessary.
    
    Removing it can make context code style more unified and improve
    code readability.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: WANG Xuerui <git@xen0n.name>
    Suggested-by: Wentao Guan <guanwentao@uniontech.com>
    Signed-off-by: Yuli Wang <wangyuli@uniontech.com>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit edd42b07d7702908b7b1e8de7d95adce1c1b4a8e
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Tue Mar 19 15:50:34 2024 +0800

    LoongArch: Define the __io_aw() hook as mmiowb()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9c68ece8b2a5c5ff9b2fcaea923dd73efeb174cd ]
    
    Commit fb24ea52f78e0d595852e ("drivers: Remove explicit invocations of
    mmiowb()") remove all mmiowb() in drivers, but it says:
    
    "NOTE: mmiowb() has only ever guaranteed ordering in conjunction with
    spin_unlock(). However, pairing each mmiowb() removal in this patch with
    the corresponding call to spin_unlock() is not at all trivial, so there
    is a small chance that this change may regress any drivers incorrectly
    relying on mmiowb() to order MMIO writes between CPUs using lock-free
    synchronisation."
    
    The mmio in radeon_ring_commit() is protected by a mutex rather than a
    spinlock, but in the mutex fastpath it behaves similar to spinlock. We
    can add mmiowb() calls in the radeon driver but the maintainer says he
    doesn't like such a workaround, and radeon is not the only example of
    mutex protected mmio.
    
    So we should extend the mmiowb tracking system from spinlock to mutex,
    and maybe other locking primitives. This is not easy and error prone, so
    we solve it in the architectural code, by simply defining the __io_aw()
    hook as mmiowb(). And we no longer need to override queued_spin_unlock()
    so use the generic definition.
    
    Without this, we get such an error when run 'glxgears' on weak ordering
    architectures such as LoongArch:
    
    radeon 0000:04:00.0: ring 0 stalled for more than 10324msec
    radeon 0000:04:00.0: ring 3 stalled for more than 10240msec
    radeon 0000:04:00.0: GPU lockup (current fence id 0x000000000001f412 last fence id 0x000000000001f414 on ring 3)
    radeon 0000:04:00.0: GPU lockup (current fence id 0x000000000000f940 last fence id 0x000000000000f941 on ring 0)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    radeon 0000:04:00.0: scheduling IB failed (-35).
    [drm:radeon_gem_va_ioctl [radeon]] *ERROR* Couldn't update BO_VA (-35)
    
    Link: https://lore.kernel.org/dri-devel/29df7e26-d7a8-4f67-b988-44353c4270ac@amd.com/T/#t
    Link: https://lore.kernel.org/linux-arch/20240301130532.3953167-1-chenhuacai@loongson.cn/T/#t
    Cc: stable@vger.kernel.org
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6212237e6417911275648d7781e65a98ebdaad20
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Tue Mar 19 15:50:34 2024 +0800

    LoongArch: Change __my_cpu_offset definition to avoid mis-optimization
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c87e12e0e8c1241410e758e181ca6bf23efa5b5b ]
    
    From GCC commit 3f13154553f8546a ("df-scan: remove ad-hoc handling of
    global regs in asms"), global registers will no longer be forced to add
    to the def-use chain. Then current_thread_info(), current_stack_pointer
    and __my_cpu_offset may be lifted out of the loop because they are no
    longer treated as "volatile variables".
    
    This optimization is still correct for the current_thread_info() and
    current_stack_pointer usages because they are associated to a thread.
    However it is wrong for __my_cpu_offset because it is associated to a
    CPU rather than a thread: if the thread migrates to a different CPU in
    the loop, __my_cpu_offset should be changed.
    
    Change __my_cpu_offset definition to treat it as a "volatile variable",
    in order to avoid such a mis-optimization.
    
    Cc: stable@vger.kernel.org
    Reported-by: Xiaotian Wu <wuxiaotian@loongson.cn>
    Reported-by: Miao Wang <shankerwangmiao@gmail.com>
    Signed-off-by: Xing Li <lixing@loongson.cn>
    Signed-off-by: Hongchen Zhang <zhanghongchen@loongson.cn>
    Signed-off-by: Rui Wang <wangrui@loongson.cn>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6262173aca8d33456f5f130f47087d7e9fb04971
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Feb 13 14:54:25 2024 +0100

    virtio: reenable config if freezing device failed
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 310227f42882c52356b523e2f4e11690eebcd2ab ]
    
    Currently, we don't reenable the config if freezing the device failed.
    
    For example, virtio-mem currently doesn't support suspend+resume, and
    trying to freeze the device will always fail. Afterwards, the device
    will no longer respond to resize requests, because it won't get notified
    about config changes.
    
    Let's fix this by re-enabling the config if freezing fails.
    
    Fixes: 22b7050a024d ("virtio: defer config changed notifications")
    Cc: <stable@kernel.org>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Cc: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Message-Id: <20240213135425.795001-1-david@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 43f89c8986d31cffb6b8a196ec76e9221d499472
Author: Namjae Jeon <linkinjeon@kernel.org>
Date:   Tue Mar 19 08:40:48 2024 +0900

    ksmbd: fix potencial out-of-bounds when buffer offset is invalid
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c6cd2e8d2d9aa7ee35b1fa6a668e32a22a9753da ]
    
    I found potencial out-of-bounds when buffer offset fields of a few requests
    is invalid. This patch set the minimum value of buffer offset field to
    ->Buffer offset to validate buffer length.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit aa65333498fc8d41510061920eb9dc3e00f82373
Author: Alison Schofield <alison.schofield@intel.com>
Date:   Thu Mar 14 13:12:17 2024 -0700

    cxl/trace: Properly initialize cxl_poison region name
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6c871260965255a1c142fb77ccee58b172d1690b ]
    
    The TP_STRUCT__entry that gets assigned the region name, or an
    empty string if no region is present, is erroneously initialized
    to the cxl_region pointer. It needs to be properly initialized
    otherwise it's length is wrong and garbage chars can appear in
    the kernel trace output: /sys/kernel/tracing/trace
    
    The bad initialization was due in part to a naming conflict with
    the parameter: struct cxl_region *region. The field 'region' is
    already exposed externally as the region name, so changing that
    to something logical, like 'region_name' is not an option. Instead
    rename the internal only struct cxl_region to the commonly used
    'cxlr'.
    
    Impact is that tooling depending on that trace data can miss
    picking up a valid event when searching by region name. The
    TP_printk() output, if enabled, does emit the correct region
    names in the dmesg log.
    
    This was found during testing of the cxl-list option to report
    media-errors for a region.
    
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Jonathan Cameron <jonathan.cameron@huawei.com>
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Cc: stable@vger.kernel.org
    Fixes: ddf49d57b841 ("cxl/trace: Add TRACE support for CXL media-error records")
    Signed-off-by: Alison Schofield <alison.schofield@intel.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8bec0e6315566b157a87614e28b6d8c7344a41dd
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Wed Mar 13 09:34:54 2024 -0400

    net: hns3: tracing: fix hclgevf trace event strings
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3f9952e8d80cca2da3b47ecd5ad9ec16cfd1a649 ]
    
    The __string() and __assign_str() helper macros of the TRACE_EVENT() macro
    are going through some optimizations where only the source string of
    __string() will be used and the __assign_str() source will be ignored and
    later removed.
    
    To make sure that there's no issues, a new check is added between the
    __string() src argument and the __assign_str() src argument that does a
    strcmp() to make sure they are the same string.
    
    The hclgevf trace events have:
    
      __assign_str(devname, &hdev->nic.kinfo.netdev->name);
    
    Which triggers the warning:
    
    hclgevf_trace.h:34:39: error: passing argument 1 of ‘strcmp’ from incompatible pointer type [-Werror=incompatible-pointer-types]
       34 |                 __assign_str(devname, &hdev->nic.kinfo.netdev->name);
     [..]
    arch/x86/include/asm/string_64.h:75:24: note: expected ‘const char *’ but argument is of type ‘char (*)[16]’
       75 | int strcmp(const char *cs, const char *ct);
          |            ~~~~~~~~~~~~^~
    
    Because __assign_str() now has:
    
            WARN_ON_ONCE(__builtin_constant_p(src) ?                \
                         strcmp((src), __data_offsets.dst##_ptr_) : \
                         (src) != __data_offsets.dst##_ptr_);       \
    
    The problem is the '&' on hdev->nic.kinfo.netdev->name. That's because
    that name is:
    
            char                    name[IFNAMSIZ]
    
    Where passing an address '&' of a char array is not compatible with strcmp().
    
    The '&' is not necessary, remove it.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240313093454.3909afe7@gandalf.local.home
    
    Cc: netdev <netdev@vger.kernel.org>
    Cc: Yisen Zhuang <yisen.zhuang@huawei.com>
    Cc: Salil Mehta <salil.mehta@huawei.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Yufeng Mo <moyufeng@huawei.com>
    Cc: Huazhong Tan <tanhuazhong@huawei.com>
    Cc: stable@vger.kernel.org
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Jijie Shao <shaojijie@huawei.com>
    Fixes: d8355240cf8fb ("net: hns3: add trace event support for PF/VF mailbox")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab52dd82c724c6490563ba456a351c1ee1fff5b7
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Thu Feb 22 13:30:57 2024 -0500

    drm/i915: Add missing ; to __assign_str() macros in tracepoint code
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 0df4c388a1e310400a6e90fb10b286e2673756f0 ]
    
    I'm working on improving the __assign_str() and __string() macros to be
    more efficient, and removed some unneeded semicolons. This triggered a bug
    in the build as some of the __assign_str() macros in intel_display_trace
    was missing a terminating semicolon.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240222133057.2af72a19@gandalf.local.home
    
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: David Airlie <airlied@gmail.com>
    Cc: stable@vger.kernel.org
    Fixes: 2ceea5d88048b ("drm/i915: Print plane name in fbc tracepoints")
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Acked-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 141e3c8621a0a4a7031087aca3bc1c3b8609e832
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Thu Feb 22 12:28:28 2024 -0500

    NFSD: Fix nfsd_clid_class use of __string_len() macro
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9388a2aa453321bcf1ad2603959debea9e6ab6d4 ]
    
    I'm working on restructuring the __string* macros so that it doesn't need
    to recalculate the string twice. That is, it will save it off when
    processing __string() and the __assign_str() will not need to do the work
    again as it currently does.
    
    Currently __string_len(item, src, len) doesn't actually use "src", but my
    changes will require src to be correct as that is where the __assign_str()
    will get its value from.
    
    The event class nfsd_clid_class has:
    
      __string_len(name, name, clp->cl_name.len)
    
    But the second "name" does not exist and causes my changes to fail to
    build. That second parameter should be: clp->cl_name.data.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240222122828.3d8d213c@gandalf.local.home
    
    Cc: Neil Brown <neilb@suse.de>
    Cc: Olga Kornievskaia <kolga@netapp.com>
    Cc: Dai Ngo <Dai.Ngo@oracle.com>
    Cc: Tom Talpey <tom@talpey.com>
    Cc: stable@vger.kernel.org
    Fixes: d27b74a8675ca ("NFSD: Use new __string_len C macros for nfsd_clid_class")
    Acked-by: Chuck Lever <chuck.lever@oracle.com>
    Acked-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 864a3b3dd6976b95269301b694ca415a3ec70566
Author: Dragos Tatulea <dtatulea@nvidia.com>
Date:   Fri Mar 8 17:26:00 2024 +0200

    net: esp: fix bad handling of pages from page_pool
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c3198822c6cb9fb588e446540485669cc81c5d34 ]
    
    When the skb is reorganized during esp_output (!esp->inline), the pages
    coming from the original skb fragments are supposed to be released back
    to the system through put_page. But if the skb fragment pages are
    originating from a page_pool, calling put_page on them will trigger a
    page_pool leak which will eventually result in a crash.
    
    This leak can be easily observed when using CONFIG_DEBUG_VM and doing
    ipsec + gre (non offloaded) forwarding:
    
      BUG: Bad page state in process ksoftirqd/16  pfn:1451b6
      page:00000000de2b8d32 refcount:0 mapcount:0 mapping:0000000000000000 index:0x1451b6000 pfn:0x1451b6
      flags: 0x200000000000000(node=0|zone=2)
      page_type: 0xffffffff()
      raw: 0200000000000000 dead000000000040 ffff88810d23c000 0000000000000000
      raw: 00000001451b6000 0000000000000001 00000000ffffffff 0000000000000000
      page dumped because: page_pool leak
      Modules linked in: ip_gre gre mlx5_ib mlx5_core xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink iptable_nat nf_nat xt_addrtype br_netfilter rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm ib_uverbs ib_core overlay zram zsmalloc fuse [last unloaded: mlx5_core]
      CPU: 16 PID: 96 Comm: ksoftirqd/16 Not tainted 6.8.0-rc4+ #22
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       <TASK>
       dump_stack_lvl+0x36/0x50
       bad_page+0x70/0xf0
       free_unref_page_prepare+0x27a/0x460
       free_unref_page+0x38/0x120
       esp_ssg_unref.isra.0+0x15f/0x200
       esp_output_tail+0x66d/0x780
       esp_xmit+0x2c5/0x360
       validate_xmit_xfrm+0x313/0x370
       ? validate_xmit_skb+0x1d/0x330
       validate_xmit_skb_list+0x4c/0x70
       sch_direct_xmit+0x23e/0x350
       __dev_queue_xmit+0x337/0xba0
       ? nf_hook_slow+0x3f/0xd0
       ip_finish_output2+0x25e/0x580
       iptunnel_xmit+0x19b/0x240
       ip_tunnel_xmit+0x5fb/0xb60
       ipgre_xmit+0x14d/0x280 [ip_gre]
       dev_hard_start_xmit+0xc3/0x1c0
       __dev_queue_xmit+0x208/0xba0
       ? nf_hook_slow+0x3f/0xd0
       ip_finish_output2+0x1ca/0x580
       ip_sublist_rcv_finish+0x32/0x40
       ip_sublist_rcv+0x1b2/0x1f0
       ? ip_rcv_finish_core.constprop.0+0x460/0x460
       ip_list_rcv+0x103/0x130
       __netif_receive_skb_list_core+0x181/0x1e0
       netif_receive_skb_list_internal+0x1b3/0x2c0
       napi_gro_receive+0xc8/0x200
       gro_cell_poll+0x52/0x90
       __napi_poll+0x25/0x1a0
       net_rx_action+0x28e/0x300
       __do_softirq+0xc3/0x276
       ? sort_range+0x20/0x20
       run_ksoftirqd+0x1e/0x30
       smpboot_thread_fn+0xa6/0x130
       kthread+0xcd/0x100
       ? kthread_complete_and_exit+0x20/0x20
       ret_from_fork+0x31/0x50
       ? kthread_complete_and_exit+0x20/0x20
       ret_from_fork_asm+0x11/0x20
       </TASK>
    
    The suggested fix is to introduce a new wrapper (skb_page_unref) that
    covers page refcounting for page_pool pages as well.
    
    Cc: stable@vger.kernel.org
    Fixes: 6a5bcd84e886 ("page_pool: Allow drivers to hint on SKB recycling")
    Reported-and-tested-by: Anatoli N.Chechelnickiy <Anatoli.Chechelnickiy@m.interpipe.biz>
    Reported-by: Ian Kumlien <ian.kumlien@gmail.com>
    Link: https://lore.kernel.org/netdev/CAA85sZvvHtrpTQRqdaOx6gd55zPAVsqMYk_Lwh4Md5knTq7AyA@mail.gmail.com
    Signed-off-by: Dragos Tatulea <dtatulea@nvidia.com>
    Reviewed-by: Mina Almasry <almasrymina@google.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Acked-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a1d315dd948c0f3ad044140b770f4dea5d73ee02
Author: Namjae Jeon <linkinjeon@kernel.org>
Date:   Sat Mar 16 23:36:36 2024 +0900

    ksmbd: fix slab-out-of-bounds in smb_strndup_from_utf16()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a80a486d72e20bd12c335bcd38b6e6f19356b0aa ]
    
    If ->NameOffset of smb2_create_req is smaller than Buffer offset of
    smb2_create_req, slab-out-of-bounds read can happen from smb2_open.
    This patch set the minimum value of the name offset to the buffer offset
    to validate name length of smb2_create_req().
    
    Cc: stable@vger.kernel.org
    Reported-by: Xuanzhe Yu <yuxuanzhe@outlook.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d3c91736de210c1158b32f73e163c816b84aae57
Author: Borislav Petkov (AMD) <bp@alien8.de>
Date:   Fri Mar 15 22:42:27 2024 +0100

    x86/CPU/AMD: Update the Zenbleed microcode revisions
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5c84b051bd4e777cf37aaff983277e58c99618d5 ]
    
    Update them to the correct revision numbers.
    
    Fixes: 522b1d69219d ("x86/cpu/amd: Add a Zenbleed fix")
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: <stable@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bc2549c9468d0c0cd9baa7367d22bddda4f0eae9
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Mar 15 15:42:49 2024 -0600

    io_uring/waitid: always remove waitid entry for cancel all
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 2b35b8b43e07b1a6f06fdd84cf4b9eb24785896d ]
    
    We know the request is either being removed, or already in the process of
    being removed through task_work, so we can delete it from our waitid list
    upfront. This is important for remove all conditions, as we otherwise
    will find it multiple times and prevent cancelation progress.
    
    Remove the dead check in cancelation as well for the hash_node being
    empty or not. We already have a waitid reference check for ownership,
    so we don't need to check the list too.
    
    Cc: stable@vger.kernel.org
    Fixes: f31ecf671ddc ("io_uring: add IORING_OP_WAITID support")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 01eb7bcfa436a2073054c913d0e43cadad7b3d3b
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Mar 15 15:37:15 2024 -0600

    io_uring/futex: always remove futex entry for cancel all
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 30dab608c3cb99c2a05b76289fd05551703979ae ]
    
    We know the request is either being removed, or already in the process of
    being removed through task_work, so we can delete it from our futex list
    upfront. This is important for remove all conditions, as we otherwise
    will find it multiple times and prevent cancelation progress.
    
    Cc: stable@vger.kernel.org
    Fixes: 194bb58c6090 ("io_uring: add support for futex wake and wait")
    Fixes: 8f350194d5cf ("io_uring: add support for vectored futex waits")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 531ca38a98c02eee9e685a7199ffa868c6c9f128
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Mar 14 13:54:57 2024 +0100

    cpufreq: dt: always allocate zeroed cpumask
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d2399501c2c081eac703ca9597ceb83c7875a537 ]
    
    Commit 0499a78369ad ("ARM64: Dynamically allocate cpumasks and increase
    supported CPUs to 512") changed the handling of cpumasks on ARM 64bit,
    what resulted in the strange issues and warnings during cpufreq-dt
    initialization on some big.LITTLE platforms.
    
    This was caused by mixing OPPs between big and LITTLE cores, because
    OPP-sharing information between big and LITTLE cores is computed on
    cpumask, which in turn was not zeroed on allocation. Fix this by
    switching to zalloc_cpumask_var() call.
    
    Fixes: dc279ac6e5b4 ("cpufreq: dt: Refactor initialization to handle probe deferral properly")
    CC: stable@vger.kernel.org # v5.10+
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Christoph Lameter (Ampere) <cl@linux.com>
    Reviewed-by: Dhruva Gole <d-gole@ti.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a85a439a0960cf1dad68c7b61846966c0960c0cf
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Mar 7 12:53:14 2024 +0100

    mtd: rawnand: Constrain even more when continuous reads are enabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 78ffbefba8d7822b232585570b293de5bc397da6 ]
    
    As a matter of fact, continuous reads require additional handling at the
    operation level in order for them to work properly. The core helpers do
    have this additional logic now, but any time a controller implements its
    own page helper, this extra logic is "lost". This means we need another
    level of per-controller driver checks to ensure they can leverage
    continuous reads. This is for now unsupported, so in order to ensure
    continuous reads are enabled only when fully using the core page
    helpers, we need to add more initial checks.
    
    Also, as performance is not relevant during raw accesses, we also
    prevent these from enabling the feature.
    
    This should solve the issue seen with controllers such as the STM32 FMC2
    when in sequencer mode. In this case, the continuous read feature would
    be enabled but not leveraged, and most importantly not disabled, leading
    to further operations to fail.
    
    Reported-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Fixes: 003fe4b9545b ("mtd: rawnand: Support for sequential cache reads")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Tested-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Link: https://lore.kernel.org/linux-mtd/20240307115315.1942678-1-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2d3e8eb6c28c65f22d4dd069d77b044181f127a5
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Feb 23 12:55:45 2024 +0100

    mtd: rawnand: Ensure all continuous terms are always in sync
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6fb075fca63c3486612986eeff84ed4179644038 ]
    
    While crossing a LUN boundary, it is probably safer (and clearer) to
    keep all members of the continuous read structure aligned, including the
    pause page (which is the last page of the lun or the last page of the
    continuous read). Once these members properly in sync, we can use the
    rawnand_cap_cont_reads() helper everywhere to "prepare" the next
    continuous read if there is one.
    
    Fixes: bbcd80f53a5e ("mtd: rawnand: Prevent crossing LUN boundaries during sequential reads")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240223115545.354541-4-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 57f618f5d292366ab8ecbf81f0472a6b58dd2d32
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Feb 23 12:55:44 2024 +0100

    mtd: rawnand: Add a helper for calculating a page index
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit df9803bf5a91e3599f12b53c94722f2c4e144a86 ]
    
    For LUN crossing boundaries, it is handy to know what is the index of
    the last page in a LUN. This helper will soon be reused. At the same
    time I rename page_per_lun to ppl in the calling function to clarify the
    lines.
    
    Cc: stable@vger.kernel.org # v6.7
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240223115545.354541-3-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7a9094221da5c5654cee6ac80e5572c8352e98e4
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Feb 23 12:55:43 2024 +0100

    mtd: rawnand: Fix and simplify again the continuous read derivations
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c7ee7c8d4b60fe46d4861b1200bc1c7ab657960a ]
    
    We need to avoid the first page if we don't read it entirely.
    We need to avoid the last page if we don't read it entirely.
    While rather simple, this logic has been failed in the previous
    fix. This time I wrote about 30 unit tests locally to check each
    possible condition, hopefully I covered them all.
    
    Reported-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Closes: https://lore.kernel.org/linux-mtd/20240221175327.42f7076d@xps-13/T/#m399bacb10db8f58f6b1f0149a1df867ec086bb0a
    Suggested-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Fixes: 828f6df1bcba ("mtd: rawnand: Clarify conditions to enable continuous reads")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Tested-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Link: https://lore.kernel.org/linux-mtd/20240223115545.354541-2-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eaa3ae8187ca124aa2c98d95fdccc527a01a6827
Author: Eugene Korenevsky <ekorenevsky@astralinux.ru>
Date:   Fri Mar 1 17:53:44 2024 +0300

    cifs: open_cached_dir(): add FILE_READ_EA to desired access
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit f1b8224b4e6ed59e7e6f5c548673c67410098d8d ]
    
    Since smb2_query_eas() reads EA and uses cached directory,
    open_cached_dir() should request FILE_READ_EA access.
    
    Otherwise listxattr() and getxattr() will fail with EACCES
    (0xc0000022 STATUS_ACCESS_DENIED SMB status).
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=218543
    Cc: stable@vger.kernel.org
    Signed-off-by: Eugene Korenevsky <ekorenevsky@astralinux.ru>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fdd5e295a0a4ce82d425d3345c859d9a60091c1f
Author: Shyam Prasad N <sprasad@microsoft.com>
Date:   Wed Mar 13 10:40:40 2024 +0000

    cifs: reduce warning log level for server not advertising interfaces
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 16a57d7681110b25708c7042688412238e6f73a9 ]
    
    Several users have reported this log getting dumped too regularly to
    kernel log. The likely root cause has been identified, and it suggests
    that this situation is expected for some configurations
    (for example SMB2.1).
    
    Since the function returns appropriately even for such cases, it is
    fairly harmless to make this a debug log. When needed, the verbosity
    can be increased to capture this log.
    
    Cc: stable@vger.kernel.org
    Reported-by: Jan Čermák <sairon@sairon.cz>
    Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit de5ad13eda6863445c7be51b7061777c836b345e
Author: Shyam Prasad N <sprasad@microsoft.com>
Date:   Wed Mar 13 10:40:41 2024 +0000

    cifs: make sure server interfaces are requested only for SMB3+
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 13c0a74747cb7fdadf58c5d3a7d52cfca2d51736 ]
    
    Some code paths for querying server interfaces make a false
    assumption that it will only get called for SMB3+. Since this
    function now can get called from a generic code paths, the correct
    thing to do is to have specific handler for this functionality
    per SMB dialect, and call this handler.
    
    This change adds such a handler and implements this handler only
    for SMB 3.0 and 3.1.1.
    
    Cc: stable@vger.kernel.org
    Cc: Jan Čermák <sairon@sairon.cz>
    Reported-by: Paulo Alcantara <pc@manguebit.com>
    Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bb4ed23cd8997f49c990dee12a40d91361a9cbda
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Wed Mar 13 19:58:27 2024 +0900

    nilfs2: prevent kernel bug at submit_bh_wbc()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 269cdf353b5bdd15f1a079671b0f889113865f20 ]
    
    Fix a bug where nilfs_get_block() returns a successful status when
    searching and inserting the specified block both fail inconsistently.  If
    this inconsistent behavior is not due to a previously fixed bug, then an
    unexpected race is occurring, so return a temporary error -EAGAIN instead.
    
    This prevents callers such as __block_write_begin_int() from requesting a
    read into a buffer that is not mapped, which would cause the BUG_ON check
    for the BH_Mapped flag in submit_bh_wbc() to fail.
    
    Link: https://lkml.kernel.org/r/20240313105827.5296-3-konishi.ryusuke@gmail.com
    Fixes: 1f5abe7e7dbc ("nilfs2: replace BUG_ON and BUG calls triggerable from ioctl")
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit acf19143bdb233dc8ebcd159c31292ee9934bb98
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Wed Mar 13 19:58:26 2024 +0900

    nilfs2: fix failure to detect DAT corruption in btree and direct mappings
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit f2f26b4a84a0ef41791bd2d70861c8eac748f4ba ]
    
    Patch series "nilfs2: fix kernel bug at submit_bh_wbc()".
    
    This resolves a kernel BUG reported by syzbot.  Since there are two
    flaws involved, I've made each one a separate patch.
    
    The first patch alone resolves the syzbot-reported bug, but I think
    both fixes should be sent to stable, so I've tagged them as such.
    
    This patch (of 2):
    
    Syzbot has reported a kernel bug in submit_bh_wbc() when writing file data
    to a nilfs2 file system whose metadata is corrupted.
    
    There are two flaws involved in this issue.
    
    The first flaw is that when nilfs_get_block() locates a data block using
    btree or direct mapping, if the disk address translation routine
    nilfs_dat_translate() fails with internal code -ENOENT due to DAT metadata
    corruption, it can be passed back to nilfs_get_block().  This causes
    nilfs_get_block() to misidentify an existing block as non-existent,
    causing both data block lookup and insertion to fail inconsistently.
    
    The second flaw is that nilfs_get_block() returns a successful status in
    this inconsistent state.  This causes the caller __block_write_begin_int()
    or others to request a read even though the buffer is not mapped,
    resulting in a BUG_ON check for the BH_Mapped flag in submit_bh_wbc()
    failing.
    
    This fixes the first issue by changing the return value to code -EINVAL
    when a conversion using DAT fails with code -ENOENT, avoiding the
    conflicting condition that leads to the kernel bug described above.  Here,
    code -EINVAL indicates that metadata corruption was detected during the
    block lookup, which will be properly handled as a file system error and
    converted to -EIO when passing through the nilfs2 bmap layer.
    
    Link: https://lkml.kernel.org/r/20240313105827.5296-1-konishi.ryusuke@gmail.com
    Link: https://lkml.kernel.org/r/20240313105827.5296-2-konishi.ryusuke@gmail.com
    Fixes: c3a7abf06ce7 ("nilfs2: support contiguous lookup of blocks")
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Reported-by: syzbot+cfed5b56649bddf80d6e@syzkaller.appspotmail.com
    Closes: https://syzkaller.appspot.com/bug?extid=cfed5b56649bddf80d6e
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7331b74983c26f95977241bef226a3e3725274cf
Author: Sunmin Jeong <s_min.jeong@samsung.com>
Date:   Wed Mar 13 20:26:20 2024 +0900

    f2fs: truncate page cache before clearing flags when aborting atomic write
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 74b0ebcbdde4c7fe23c979e4cfc2fdbf349c39a3 ]
    
    In f2fs_do_write_data_page, FI_ATOMIC_FILE flag selects the target inode
    between the original inode and COW inode. When aborting atomic write and
    writeback occur simultaneously, invalid data can be written to original
    inode if the FI_ATOMIC_FILE flag is cleared meanwhile.
    
    To prevent the problem, let's truncate all pages before clearing the flag
    
    Atomic write thread              Writeback thread
      f2fs_abort_atomic_write
        clear_inode_flag(inode, FI_ATOMIC_FILE)
                                      __writeback_single_inode
                                        do_writepages
                                          f2fs_do_write_data_page
                                            - use dn of original inode
        truncate_inode_pages_final
    
    Fixes: 3db1de0e582c ("f2fs: change the current atomic write way")
    Cc: stable@vger.kernel.org #v5.19+
    Reviewed-by: Sungjong Seo <sj1557.seo@samsung.com>
    Reviewed-by: Yeongjin Gil <youngjin.gil@samsung.com>
    Signed-off-by: Sunmin Jeong <s_min.jeong@samsung.com>
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd3bbcc2ea47acbd954fc1e79716c6817fa91937
Author: Sunmin Jeong <s_min.jeong@samsung.com>
Date:   Wed Mar 13 20:26:19 2024 +0900

    f2fs: mark inode dirty for FI_ATOMIC_COMMITTED flag
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4bf78322346f6320313683dc9464e5423423ad5c ]
    
    In f2fs_update_inode, i_size of the atomic file isn't updated until
    FI_ATOMIC_COMMITTED flag is set. When committing atomic write right
    after the writeback of the inode, i_size of the raw inode will not be
    updated. It can cause the atomicity corruption due to a mismatch between
    old file size and new data.
    
    To prevent the problem, let's mark inode dirty for FI_ATOMIC_COMMITTED
    
    Atomic write thread                   Writeback thread
                                            __writeback_single_inode
                                              write_inode
                                                f2fs_update_inode
                                                  - skip i_size update
      f2fs_ioc_commit_atomic_write
        f2fs_commit_atomic_write
          set_inode_flag(inode, FI_ATOMIC_COMMITTED)
        f2fs_do_sync_file
          f2fs_fsync_node_pages
            - skip f2fs_update_inode since the inode is clean
    
    Fixes: 3db1de0e582c ("f2fs: change the current atomic write way")
    Cc: stable@vger.kernel.org #v5.19+
    Reviewed-by: Sungjong Seo <sj1557.seo@samsung.com>
    Reviewed-by: Yeongjin Gil <youngjin.gil@samsung.com>
    Signed-off-by: Sunmin Jeong <s_min.jeong@samsung.com>
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c10dba977993842212400de88395e6759028757
Author: Paul Moore <paul@paul-moore.com>
Date:   Wed Mar 13 21:37:48 2024 -0400

    lsm: handle the NULL buffer case in lsm_fill_user_ctx()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit eaf0e7a3d2711018789e9fdb89191d19aa139c47 ]
    
    Passing a NULL buffer into the lsm_get_self_attr() syscall is a valid
    way to quickly determine the minimum size of the buffer needed to for
    the syscall to return all of the LSM attributes to the caller.
    Unfortunately we/I broke that behavior in commit d7cf3412a9f6
    ("lsm: consolidate buffer size handling into lsm_fill_user_ctx()")
    such that it returned an error to the caller; this patch restores the
    original desired behavior of using the NULL buffer as a quick way to
    correctly size the attribute buffer.
    
    Cc: stable@vger.kernel.org
    Fixes: d7cf3412a9f6 ("lsm: consolidate buffer size handling into lsm_fill_user_ctx()")
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c52ff24afa8db6044fa7ffa256729306f373159a
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Mar 14 11:31:26 2024 -0400

    lsm: use 32-bit compatible data types in LSM syscalls
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a5a858f622a0aff5cdb5e271442cd01b2a01467f ]
    
    Change the size parameters in lsm_list_modules(), lsm_set_self_attr()
    and lsm_get_self_attr() from size_t to u32. This avoids the need to
    have different interfaces for 32 and 64 bit systems.
    
    Cc: stable@vger.kernel.org
    Fixes: a04a1198088a ("LSM: syscalls for current process attributes")
    Fixes: ad4aff9ec25f ("LSM: Create lsm_list_modules system call")
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Reported-and-reviewed-by: Dmitry V. Levin <ldv@strace.io>
    [PM: subject and metadata tweaks, syscall.h fixes]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 246895019af6e0ad06de6f172039689eac07ee46
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Mar 13 14:42:18 2024 -0700

    Revert "block/mq-deadline: use correct way to throttling write requests"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 256aab46e31683d76d45ccbedc287b4d3f3e322b ]
    
    The code "max(1U, 3 * (1U << shift)  / 4)" comes from the Kyber I/O
    scheduler. The Kyber I/O scheduler maintains one internal queue per hwq
    and hence derives its async_depth from the number of hwq tags. Using
    this approach for the mq-deadline scheduler is wrong since the
    mq-deadline scheduler maintains one internal queue for all hwqs
    combined. Hence this revert.
    
    Cc: stable@vger.kernel.org
    Cc: Damien Le Moal <dlemoal@kernel.org>
    Cc: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Cc: Zhiguo Niu <Zhiguo.Niu@unisoc.com>
    Fixes: d47f9717e5cf ("block/mq-deadline: use correct way to throttling write requests")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20240313214218.1736147-1-bvanassche@acm.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd0d67f7aba79849e3074c72c5dd41e18bdc44e0
Author: Qiang Zhang <qiang4.zhang@intel.com>
Date:   Tue Mar 12 16:04:23 2024 +0800

    memtest: use {READ,WRITE}_ONCE in memory scanning
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 82634d7e24271698e50a3ec811e5f50de790a65f ]
    
    memtest failed to find bad memory when compiled with clang.  So use
    {WRITE,READ}_ONCE to access memory to avoid compiler over optimization.
    
    Link: https://lkml.kernel.org/r/20240312080422.691222-1-qiang4.zhang@intel.com
    Signed-off-by: Qiang Zhang <qiang4.zhang@intel.com>
    Cc: Bill Wendling <morbo@google.com>
    Cc: Justin Stitt <justinstitt@google.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d2ce3344806a5b387ae580e3591f20138fff9f23
Author: Ley Foon Tan <leyfoon.tan@starfivetech.com>
Date:   Thu Mar 7 01:23:30 2024 +0800

    clocksource/drivers/timer-riscv: Clear timer interrupt on timer initialization
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8248ca30ef89f9cc74ace62ae1b9a22b5f16736c ]
    
    In the RISC-V specification, the stimecmp register doesn't have a default
    value. To prevent the timer interrupt from being triggered during timer
    initialization, clear the timer interrupt by writing stimecmp with a
    maximum value.
    
    Fixes: 9f7a8ff6391f ("RISC-V: Prefer sstc extension if available")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Ley Foon Tan <leyfoon.tan@starfivetech.com>
    Reviewed-by: Samuel Holland <samuel.holland@sifive.com>
    Tested-by: Samuel Holland <samuel.holland@sifive.com>
    Reviewed-by: Atish Patra <atishp@rivosinc.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20240306172330.255844-1-leyfoon.tan@starfivetech.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 512bce166948d419c0145124ec55c459b558a2ed
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 8 18:03:44 2024 +0200

    drm/vc4: hdmi: do not return negative values from .get_modes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit abf493988e380f25242c1023275c68bd3579c9ce ]
    
    The .get_modes() hooks aren't supposed to return negative error
    codes. Return 0 for no modes, whatever the reason.
    
    Cc: Maxime Ripard <mripard@kernel.org>
    Cc: stable@vger.kernel.org
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/dcda6d4003e2c6192987916b35c7304732800e08.1709913674.git.jani.nikula@intel.com
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b09b691b972b2cc0a6c352149f27c5e7d8e9cf0e
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 8 18:03:43 2024 +0200

    drm/imx/ipuv3: do not return negative values from .get_modes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c2da9ada64962fcd2e6395ed9987b9874ea032d3 ]
    
    The .get_modes() hooks aren't supposed to return negative error
    codes. Return 0 for no modes, whatever the reason.
    
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: stable@vger.kernel.org
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/311f6eec96d47949b16a670529f4d89fcd97aefa.1709913674.git.jani.nikula@intel.com
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit db045f37efcd76192fdad380fbf8691d807cce14
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 8 18:03:41 2024 +0200

    drm/exynos: do not return negative values from .get_modes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 13d5b040363c7ec0ac29c2de9cf661a24a8aa531 ]
    
    The .get_modes() hooks aren't supposed to return negative error
    codes. Return 0 for no modes, whatever the reason.
    
    Cc: Inki Dae <inki.dae@samsung.com>
    Cc: Seung-Woo Kim <sw0312.kim@samsung.com>
    Cc: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: stable@vger.kernel.org
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/d8665f620d9c252aa7d5a4811ff6b16e773903a2.1709913674.git.jani.nikula@intel.com
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a9c356918f6088f644cbb5e1940c2d75fa0b7c9e
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 8 18:03:40 2024 +0200

    drm/panel: do not return negative error codes from drm_panel_get_modes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fc4e97726530241d96dd7db72eb65979217422c9 ]
    
    None of the callers of drm_panel_get_modes() expect it to return
    negative error codes. Either they propagate the return value in their
    struct drm_connector_helper_funcs .get_modes() hook (which is also not
    supposed to return negative codes), or add it to other counts leading to
    bogus values.
    
    On the other hand, many of the struct drm_panel_funcs .get_modes() hooks
    do return negative error codes, so handle them gracefully instead of
    propagating further.
    
    Return 0 for no modes, whatever the reason.
    
    Cc: Neil Armstrong <neil.armstrong@linaro.org>
    Cc: Jessica Zhang <quic_jesszhan@quicinc.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: stable@vger.kernel.org
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Reviewed-by: Jessica Zhang <quic_jesszhan@quicinc.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/79f559b72d8c493940417304e222a4b04dfa19c4.1709913674.git.jani.nikula@intel.com
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit df15f3f30a5d36e9e51738edaefd98bccfd653a1
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 8 18:03:39 2024 +0200

    drm/probe-helper: warn about negative .get_modes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7af03e688792293ba33149fb8df619a8dff90e80 ]
    
    The .get_modes() callback is supposed to return the number of modes,
    never a negative error code. If a negative value is returned, it'll just
    be interpreted as a negative count, and added to previous calculations.
    
    Document the rules, but handle the negative values gracefully with an
    error message.
    
    Cc: stable@vger.kernel.org
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/50208c866facc33226a3c77b82bb96aeef8ef310.1709913674.git.jani.nikula@intel.com
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8fad81f7b8afb88a0acf1a510b3a94a9daa2999c
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Thu Feb 29 15:20:09 2024 +0100

    s390/zcrypt: fix reference counting on zcrypt card objects
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 50ed48c80fecbe17218afed4f8bed005c802976c ]
    
    Tests with hot-plugging crytpo cards on KVM guests with debug
    kernel build revealed an use after free for the load field of
    the struct zcrypt_card. The reason was an incorrect reference
    handling of the zcrypt card object which could lead to a free
    of the zcrypt card object while it was still in use.
    
    This is an example of the slab message:
    
        kernel: 0x00000000885a7512-0x00000000885a7513 @offset=1298. First byte 0x68 instead of 0x6b
        kernel: Allocated in zcrypt_card_alloc+0x36/0x70 [zcrypt] age=18046 cpu=3 pid=43
        kernel:  kmalloc_trace+0x3f2/0x470
        kernel:  zcrypt_card_alloc+0x36/0x70 [zcrypt]
        kernel:  zcrypt_cex4_card_probe+0x26/0x380 [zcrypt_cex4]
        kernel:  ap_device_probe+0x15c/0x290
        kernel:  really_probe+0xd2/0x468
        kernel:  driver_probe_device+0x40/0xf0
        kernel:  __device_attach_driver+0xc0/0x140
        kernel:  bus_for_each_drv+0x8c/0xd0
        kernel:  __device_attach+0x114/0x198
        kernel:  bus_probe_device+0xb4/0xc8
        kernel:  device_add+0x4d2/0x6e0
        kernel:  ap_scan_adapter+0x3d0/0x7c0
        kernel:  ap_scan_bus+0x5a/0x3b0
        kernel:  ap_scan_bus_wq_callback+0x40/0x60
        kernel:  process_one_work+0x26e/0x620
        kernel:  worker_thread+0x21c/0x440
        kernel: Freed in zcrypt_card_put+0x54/0x80 [zcrypt] age=9024 cpu=3 pid=43
        kernel:  kfree+0x37e/0x418
        kernel:  zcrypt_card_put+0x54/0x80 [zcrypt]
        kernel:  ap_device_remove+0x4c/0xe0
        kernel:  device_release_driver_internal+0x1c4/0x270
        kernel:  bus_remove_device+0x100/0x188
        kernel:  device_del+0x164/0x3c0
        kernel:  device_unregister+0x30/0x90
        kernel:  ap_scan_adapter+0xc8/0x7c0
        kernel:  ap_scan_bus+0x5a/0x3b0
        kernel:  ap_scan_bus_wq_callback+0x40/0x60
        kernel:  process_one_work+0x26e/0x620
        kernel:  worker_thread+0x21c/0x440
        kernel:  kthread+0x150/0x168
        kernel:  __ret_from_fork+0x3c/0x58
        kernel:  ret_from_fork+0xa/0x30
        kernel: Slab 0x00000372022169c0 objects=20 used=18 fp=0x00000000885a7c88 flags=0x3ffff00000000a00(workingset|slab|node=0|zone=1|lastcpupid=0x1ffff)
        kernel: Object 0x00000000885a74b8 @offset=1208 fp=0x00000000885a7c88
        kernel: Redzone  00000000885a74b0: bb bb bb bb bb bb bb bb                          ........
        kernel: Object   00000000885a74b8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
        kernel: Object   00000000885a74c8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
        kernel: Object   00000000885a74d8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
        kernel: Object   00000000885a74e8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
        kernel: Object   00000000885a74f8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
        kernel: Object   00000000885a7508: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 68 4b 6b 6b 6b a5  kkkkkkkkkkhKkkk.
        kernel: Redzone  00000000885a7518: bb bb bb bb bb bb bb bb                          ........
        kernel: Padding  00000000885a756c: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a              ZZZZZZZZZZZZ
        kernel: CPU: 0 PID: 387 Comm: systemd-udevd Not tainted 6.8.0-HF #2
        kernel: Hardware name: IBM 3931 A01 704 (KVM/Linux)
        kernel: Call Trace:
        kernel:  [<00000000ca5ab5b8>] dump_stack_lvl+0x90/0x120
        kernel:  [<00000000c99d78bc>] check_bytes_and_report+0x114/0x140
        kernel:  [<00000000c99d53cc>] check_object+0x334/0x3f8
        kernel:  [<00000000c99d820c>] alloc_debug_processing+0xc4/0x1f8
        kernel:  [<00000000c99d852e>] get_partial_node.part.0+0x1ee/0x3e0
        kernel:  [<00000000c99d94ec>] ___slab_alloc+0xaf4/0x13c8
        kernel:  [<00000000c99d9e38>] __slab_alloc.constprop.0+0x78/0xb8
        kernel:  [<00000000c99dc8dc>] __kmalloc+0x434/0x590
        kernel:  [<00000000c9b4c0ce>] ext4_htree_store_dirent+0x4e/0x1c0
        kernel:  [<00000000c9b908a2>] htree_dirblock_to_tree+0x17a/0x3f0
        kernel:  [<00000000c9b919dc>] ext4_htree_fill_tree+0x134/0x400
        kernel:  [<00000000c9b4b3d0>] ext4_dx_readdir+0x160/0x2f0
        kernel:  [<00000000c9b4bedc>] ext4_readdir+0x5f4/0x760
        kernel:  [<00000000c9a7efc4>] iterate_dir+0xb4/0x280
        kernel:  [<00000000c9a7f1ea>] __do_sys_getdents64+0x5a/0x120
        kernel:  [<00000000ca5d6946>] __do_syscall+0x256/0x310
        kernel:  [<00000000ca5eea10>] system_call+0x70/0x98
        kernel: INFO: lockdep is turned off.
        kernel: FIX kmalloc-96: Restoring Poison 0x00000000885a7512-0x00000000885a7513=0x6b
        kernel: FIX kmalloc-96: Marking all objects used
    
    The fix is simple: Before use of the queue not only the queue object
    but also the card object needs to increase it's reference count
    with a call to zcrypt_card_get(). Similar after use of the queue
    not only the queue but also the card object's reference count is
    decreased with zcrypt_card_put().
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d0de501f6ecafb163da739154e93e1ceecc19b3e
Author: Sean Anderson <sean.anderson@linux.dev>
Date:   Mon Mar 11 12:38:30 2024 -0400

    soc: fsl: qbman: Use raw spinlock for cgr_lock
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fbec4e7fed89b579f2483041fabf9650fb0dd6bc ]
    
    smp_call_function always runs its callback in hard IRQ context, even on
    PREEMPT_RT, where spinlocks can sleep. So we need to use a raw spinlock
    for cgr_lock to ensure we aren't waiting on a sleeping task.
    
    Although this bug has existed for a while, it was not apparent until
    commit ef2a8d5478b9 ("net: dpaa: Adjust queue depth on rate change")
    which invokes smp_call_function_single via qman_update_cgr_safe every
    time a link goes up or down.
    
    Fixes: 96f413f47677 ("soc/fsl/qbman: fix issue in qman_delete_cgr_safe()")
    CC: stable@vger.kernel.org
    Reported-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Closes: https://lore.kernel.org/all/20230323153935.nofnjucqjqnz34ej@skbuf/
    Reported-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
    Closes: https://lore.kernel.org/linux-arm-kernel/87wmsyvclu.fsf@pengutronix.de/
    Signed-off-by: Sean Anderson <sean.anderson@linux.dev>
    Reviewed-by: Camelia Groza <camelia.groza@nxp.com>
    Tested-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 32418cd250307d8acc9d3a948b1e4a01c9e60b9f
Author: Sean Anderson <sean.anderson@linux.dev>
Date:   Mon Mar 11 12:38:29 2024 -0400

    soc: fsl: qbman: Always disable interrupts when taking cgr_lock
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 584c2a9184a33a40fceee838f856de3cffa19be3 ]
    
    smp_call_function_single disables IRQs when executing the callback. To
    prevent deadlocks, we must disable IRQs when taking cgr_lock elsewhere.
    This is already done by qman_update_cgr and qman_delete_cgr; fix the
    other lockers.
    
    Fixes: 96f413f47677 ("soc/fsl/qbman: fix issue in qman_delete_cgr_safe()")
    CC: stable@vger.kernel.org
    Signed-off-by: Sean Anderson <sean.anderson@linux.dev>
    Reviewed-by: Camelia Groza <camelia.groza@nxp.com>
    Tested-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2043e20c91761d0beaf31061214c4e540ddb5eae
Author: Alexander Aring <aahringo@redhat.com>
Date:   Tue Mar 12 13:05:07 2024 -0400

    dlm: fix user space lkb refcounting
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 2ab3d705ca5d4f7ea345a21c3da41a447a549649 ]
    
    This patch fixes to check on the right return value if it was the last
    callback. The rv variable got overwritten by the return of
    copy_result_to_user(). Fixing it by introducing a second variable for
    the return value and don't let rv being overwritten.
    
    Cc: stable@vger.kernel.org
    Fixes: 61bed0baa4db ("fs: dlm: use a non-static queue for callbacks")
    Reported-by: Valentin Vidić <vvidic@valentin-vidic.from.hr>
    Closes: https://lore.kernel.org/gfs2/Ze4qSvzGJDt5yxC3@valentin-vidic.from.hr
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8faaf63af5c33ba2951b221c24c0cc1209fc67ec
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Mar 12 08:15:08 2024 -0400

    tracing/ring-buffer: Fix wait_on_pipe() race
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 2aa043a55b9a764c9cbde5a8c654eeaaffe224cf ]
    
    When the trace_pipe_raw file is closed, there should be no new readers on
    the file descriptor. This is mostly handled with the waking and wait_index
    fields of the iterator. But there's still a slight race.
    
         CPU 0                              CPU 1
         -----                              -----
                                       wait_index++;
       index = wait_index;
                                       ring_buffer_wake_waiters();
       wait_on_pipe()
         ring_buffer_wait();
    
    The ring_buffer_wait() will miss the wakeup from CPU 1. The problem is
    that the ring_buffer_wait() needs the logic of:
    
            prepare_to_wait();
            if (!condition)
                    schedule();
    
    Where the missing condition check is the iter->wait_index update.
    
    Have the ring_buffer_wait() take a conditional callback function and a
    data parameter that can be used within the wait_event_interruptible() of
    the ring_buffer_wait() function.
    
    In wait_on_pipe(), pass a condition function that will check if the
    wait_index has been updated, if it has, it will return true to break out
    of the wait_event_interruptible() loop.
    
    Create a new field "closed" in the trace_iterator and set it in the
    .flush() callback before calling ring_buffer_wake_waiters().
    This will keep any new readers from waiting on a closed file descriptor.
    
    Have the wait_on_pipe() condition callback also check the closed field.
    
    Change the wait_index field of the trace_iterator to atomic_t. There's no
    reason it needs to be 'long' and making it atomic and using
    atomic_read_acquire() and atomic_fetch_inc_release() will provide the
    necessary memory barriers.
    
    Add a "woken" flag to tracing_buffers_splice_read() to exit the loop after
    one more try to fetch data. That is, if it waited for data and something
    woke it up, it should try to collect any new data and then exit back to
    user space.
    
    Link: https://lore.kernel.org/linux-trace-kernel/CAHk-=wgsNgewHFxZAJiAQznwPMqEtQmi1waeS2O1v6L4c_Um5A@mail.gmail.com/
    Link: https://lore.kernel.org/linux-trace-kernel/20240312121703.557950713@goodmis.org
    
    Cc: stable@vger.kernel.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: linke li <lilinke99@qq.com>
    Cc: Rabin Vincent <rabin@rab.in>
    Fixes: f3ddb74ad0790 ("tracing: Wake up ring buffer waiters on closing of the file")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c2512782a0439ee8f88c10a23b7ac82f9c2dac39
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Mar 12 08:15:07 2024 -0400

    ring-buffer: Use wait_event_interruptible() in ring_buffer_wait()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7af9ded0c2caac0a95f33df5cb04706b0f502588 ]
    
    Convert ring_buffer_wait() over to wait_event_interruptible(). The default
    condition is to execute the wait loop inside __wait_event() just once.
    
    This does not change the ring_buffer_wait() prototype yet, but
    restructures the code so that it can take a "cond" and "data" parameter
    and will call wait_event_interruptible() with a helper function as the
    condition.
    
    The helper function (rb_wait_cond) takes the cond function and data
    parameters. It will first check if the buffer hit the watermark defined by
    the "full" parameter and then call the passed in condition parameter. If
    either are true, it returns true.
    
    If rb_wait_cond() does not return true, it will set the appropriate
    "waiters_pending" flag and returns false.
    
    Link: https://lore.kernel.org/linux-trace-kernel/CAHk-=wgsNgewHFxZAJiAQznwPMqEtQmi1waeS2O1v6L4c_Um5A@mail.gmail.com/
    Link: https://lore.kernel.org/linux-trace-kernel/20240312121703.399598519@goodmis.org
    
    Cc: stable@vger.kernel.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: linke li <lilinke99@qq.com>
    Cc: Rabin Vincent <rabin@rab.in>
    Fixes: f3ddb74ad0790 ("tracing: Wake up ring buffer waiters on closing of the file")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d3153d512abb87cbf496611dbb32fde952be2e02
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Mar 12 09:19:20 2024 -0400

    ring-buffer: Fix full_waiters_pending in poll
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8145f1c35fa648da662078efab299c4467b85ad5 ]
    
    If a reader of the ring buffer is doing a poll, and waiting for the ring
    buffer to hit a specific watermark, there could be a case where it gets
    into an infinite ping-pong loop.
    
    The poll code has:
    
      rbwork->full_waiters_pending = true;
      if (!cpu_buffer->shortest_full ||
          cpu_buffer->shortest_full > full)
             cpu_buffer->shortest_full = full;
    
    The writer will see full_waiters_pending and check if the ring buffer is
    filled over the percentage of the shortest_full value. If it is, it calls
    an irq_work to wake up all the waiters.
    
    But the code could get into a circular loop:
    
            CPU 0                                   CPU 1
            -----                                   -----
     [ Poll ]
       [ shortest_full = 0 ]
       rbwork->full_waiters_pending = true;
                                              if (rbwork->full_waiters_pending &&
                                                  [ buffer percent ] > shortest_full) {
                                                     rbwork->wakeup_full = true;
                                                     [ queue_irqwork ]
    
       cpu_buffer->shortest_full = full;
    
                                              [ IRQ work ]
                                              if (rbwork->wakeup_full) {
                                                    cpu_buffer->shortest_full = 0;
                                                    wakeup poll waiters;
      [woken]
       if ([ buffer percent ] > full)
          break;
       rbwork->full_waiters_pending = true;
                                              if (rbwork->full_waiters_pending &&
                                                  [ buffer percent ] > shortest_full) {
                                                     rbwork->wakeup_full = true;
                                                     [ queue_irqwork ]
    
       cpu_buffer->shortest_full = full;
    
                                              [ IRQ work ]
                                              if (rbwork->wakeup_full) {
                                                    cpu_buffer->shortest_full = 0;
                                                    wakeup poll waiters;
      [woken]
    
     [ Wash, rinse, repeat! ]
    
    In the poll, the shortest_full needs to be set before the
    full_pending_waiters, as once that is set, the writer will compare the
    current shortest_full (which is incorrect) to decide to call the irq_work,
    which will reset the shortest_full (expecting the readers to update it).
    
    Also move the setting of full_waiters_pending after the check if the ring
    buffer has the required percentage filled. There's no reason to tell the
    writer to wake up waiters if there are no waiters.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240312131952.630922155@goodmis.org
    
    Cc: stable@vger.kernel.org
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Fixes: 42fb0a1e84ff5 ("tracing/ring-buffer: Have polling block on watermark")
    Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 04cd5d5c37627463212ab777bd7e671343836d43
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Mar 12 11:56:41 2024 -0400

    ring-buffer: Do not set shortest_full when full target is hit
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 761d9473e27f0c8782895013a3e7b52a37c8bcfc ]
    
    The rb_watermark_hit() checks if the amount of data in the ring buffer is
    above the percentage level passed in by the "full" variable. If it is, it
    returns true.
    
    But it also sets the "shortest_full" field of the cpu_buffer that informs
    writers that it needs to call the irq_work if the amount of data on the
    ring buffer is above the requested amount.
    
    The rb_watermark_hit() always sets the shortest_full even if the amount in
    the ring buffer is what it wants. As it is not going to wait, because it
    has what it wants, there's no reason to set shortest_full.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240312115641.6aa8ba08@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Fixes: 42fb0a1e84ff5 ("tracing/ring-buffer: Have polling block on watermark")
    Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 54705cc01af5fab8b00770ba152c690a188dd8e4
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Tue Mar 12 14:56:27 2024 +0000

    io_uring: clean rings on NO_MMAP alloc fail
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cef59d1ea7170ec753182302645a0191c8aa3382 ]
    
    We make a few cancellation judgements based on ctx->rings, so let's
    zero it afer deallocation for IORING_SETUP_NO_MMAP just like it's
    done with the mmap case. Likely, it's not a real problem, but zeroing
    is safer and better tested.
    
    Cc: stable@vger.kernel.org
    Fixes: 03d89a2de25bbc ("io_uring: support for user allocated memory for rings/sqes")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/9ff6cdf91429b8a51699c210e1f6af6ea3f8bdcf.1710255382.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3af2f289e7dffbaea99269ebc2bf595b8b868641
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Mar 12 08:29:47 2024 -0600

    io_uring/rw: return IOU_ISSUE_SKIP_COMPLETE for multishot retry
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 0a3737db8479b77f95f4bfda8e71b03c697eb56a ]
    
    If read multishot is being invoked from the poll retry handler, then we
    should return IOU_ISSUE_SKIP_COMPLETE rather than -EAGAIN. If not, then
    a CQE will be posted with -EAGAIN rather than triggering the retry when
    the file is flagged as readable again.
    
    Cc: stable@vger.kernel.org
    Reported-by: Sargun Dhillon <sargun@meta.com>
    Fixes: fc68fcda04910 ("io_uring/rw: add support for IORING_OP_READ_MULTISHOT")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 30a9277e3ae06bcd4941b1323a67ba3d9d15eacf
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Tue Mar 5 11:46:44 2024 -0800

    platform/x86/intel/tpmi: Change vsec offset to u64
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 57221a07ff37ff356f9265acd228bc3c8744c8fc ]
    
    The vsec offset can be 64 bit long depending on the PFS start. So change
    type to u64. Also use 64 bit formatting for seq_printf.
    
    Fixes: 47731fd2865f ("platform/x86/intel: Intel TPMI enumeration driver")
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: stable@vger.kernel.org # v6.3+
    Link: https://lore.kernel.org/r/20240305194644.2077867-1-srinivas.pandruvada@linux.intel.com
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f192d0a7d34d5528529054bbedc2d19a2ce40d8a
Author: Marios Makassikis <mmakassikis@freebox.fr>
Date:   Thu Feb 22 10:58:21 2024 +0100

    ksmbd: retrieve number of blocks using vfs_getattr in set_file_allocation_info
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 34cd86b6632718b7df3999d96f51e63de41c5e4f ]
    
    Use vfs_getattr() to retrieve stat information, rather than make
    assumptions about how a filesystem fills inode structs.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Marios Makassikis <mmakassikis@freebox.fr>
    Acked-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 085d6eb293580688a9421c6e56213e8d0223cf1f
Author: Marios Makassikis <mmakassikis@freebox.fr>
Date:   Thu Feb 22 10:58:19 2024 +0100

    ksmbd: replace generic_fillattr with vfs_getattr
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5614c8c487f6af627614dd2efca038e4afe0c6d7 ]
    
    generic_fillattr should not be used outside of ->getattr
    implementations.
    
    Use vfs_getattr instead, and adapt functions to return an
    error code to the caller.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Marios Makassikis <mmakassikis@freebox.fr>
    Acked-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0a398eb7403a4d82894092ac6e6c635f49207264
Author: Lino Sanfilippo <l.sanfilippo@kunbus.com>
Date:   Thu Feb 1 12:36:45 2024 +0100

    tpm,tpm_tis: Avoid warning splat at shutdown
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b7ab4bbd0188f3985b821fa09456b11105a8dedf ]
    
    If interrupts are not activated the work struct 'free_irq_work' is not
    initialized. This results in a warning splat at module shutdown.
    
    Fix this by always initializing the work regardless of whether interrupts
    are activated or not.
    
    cc: stable@vger.kernel.org
    Fixes: 481c2d14627d ("tpm,tpm_tis: Disable interrupts after 1000 unhandled IRQs")
    Reported-by: Jarkko Sakkinen <jarkko@kernel.org>
    Closes: https://lore.kernel.org/all/CX32RFOMJUQ0.3R4YCL9MDCB96@kernel.org/
    Signed-off-by: Lino Sanfilippo <l.sanfilippo@kunbus.com>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0048529c88122ce0cda9abe3b71312a931c854de
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:28 2024 -0700

    vfio/fsl-mc: Block calling interrupt handler without trigger
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7447d911af699a15f8d050dfcb7c680a86f87012 ]
    
    The eventfd_ctx trigger pointer of the vfio_fsl_mc_irq object is
    initially NULL and may become NULL if the user sets the trigger
    eventfd to -1.  The interrupt handler itself is guaranteed that
    trigger is always valid between request_irq() and free_irq(), but
    the loopback testing mechanisms to invoke the handler function
    need to test the trigger.  The triggering and setting ioctl paths
    both make use of igate and are therefore mutually exclusive.
    
    The vfio-fsl-mc driver does not make use of irqfds, nor does it
    support any sort of masking operations, therefore unlike vfio-pci
    and vfio-platform, the flow can remain essentially unchanged.
    
    Cc: Diana Craciun <diana.craciun@oss.nxp.com>
    Cc:  <stable@vger.kernel.org>
    Fixes: cc0ee20bd969 ("vfio/fsl-mc: trigger an interrupt via eventfd")
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-8-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6cd4abc6af885ed49f04d847482c53c6c4a2a8e4
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:27 2024 -0700

    vfio/platform: Create persistent IRQ handlers
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 675daf435e9f8e5a5eab140a9864dfad6668b375 ]
    
    The vfio-platform SET_IRQS ioctl currently allows loopback triggering of
    an interrupt before a signaling eventfd has been configured by the user,
    which thereby allows a NULL pointer dereference.
    
    Rather than register the IRQ relative to a valid trigger, register all
    IRQs in a disabled state in the device open path.  This allows mask
    operations on the IRQ to nest within the overall enable state governed
    by a valid eventfd signal.  This decouples @masked, protected by the
    @locked spinlock from @trigger, protected via the @igate mutex.
    
    In doing so, it's guaranteed that changes to @trigger cannot race the
    IRQ handlers because the IRQ handler is synchronously disabled before
    modifying the trigger, and loopback triggering of the IRQ via ioctl is
    safe due to serialization with trigger changes via igate.
    
    For compatibility, request_irq() failures are maintained to be local to
    the SET_IRQS ioctl rather than a fatal error in the open device path.
    This allows, for example, a userspace driver with polling mode support
    to continue to work regardless of moving the request_irq() call site.
    This necessarily blocks all SET_IRQS access to the failed index.
    
    Cc: Eric Auger <eric.auger@redhat.com>
    Cc:  <stable@vger.kernel.org>
    Fixes: 57f972e2b341 ("vfio/platform: trigger an interrupt via eventfd")
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-7-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 073b211ca93bbc545cf5c6a11bd8f26cb7c9656f
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:26 2024 -0700

    vfio/platform: Disable virqfds on cleanup
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fcdc0d3d40bc26c105acf8467f7d9018970944ae ]
    
    irqfds for mask and unmask that are not specifically disabled by the
    user are leaked.  Remove any irqfds during cleanup
    
    Cc: Eric Auger <eric.auger@redhat.com>
    Cc:  <stable@vger.kernel.org>
    Fixes: a7fa7c77cf15 ("vfio/platform: implement IRQ masking/unmasking via an eventfd")
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-6-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c6b6b8f59c28e8ab67be62cbcd6d4554adcd226
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:23 2024 -0700

    vfio/pci: Lock external INTx masking ops
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 810cd4bb53456d0503cc4e7934e063835152c1b7 ]
    
    Mask operations through config space changes to DisINTx may race INTx
    configuration changes via ioctl.  Create wrappers that add locking for
    paths outside of the core interrupt code.
    
    In particular, irq_type is updated holding igate, therefore testing
    is_intx() requires holding igate.  For example clearing DisINTx from
    config space can otherwise race changes of the interrupt configuration.
    
    This aligns interfaces which may trigger the INTx eventfd into two
    camps, one side serialized by igate and the other only enabled while
    INTx is configured.  A subsequent patch introduces synchronization for
    the latter flows.
    
    Cc:  <stable@vger.kernel.org>
    Fixes: 89e1f7d4c66d ("vfio: Add PCI device driver")
    Reported-by: Reinette Chatre <reinette.chatre@intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-3-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ff42bf928243f1a1550d9b6bd6414255b01693d8
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Mar 8 16:05:22 2024 -0700

    vfio/pci: Disable auto-enable of exclusive INTx IRQ
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fe9a7082684eb059b925c535682e68c34d487d43 ]
    
    Currently for devices requiring masking at the irqchip for INTx, ie.
    devices without DisINTx support, the IRQ is enabled in request_irq()
    and subsequently disabled as necessary to align with the masked status
    flag.  This presents a window where the interrupt could fire between
    these events, resulting in the IRQ incrementing the disable depth twice.
    This would be unrecoverable for a user since the masked flag prevents
    nested enables through vfio.
    
    Instead, invert the logic using IRQF_NO_AUTOEN such that exclusive INTx
    is never auto-enabled, then unmask as required.
    
    Cc:  <stable@vger.kernel.org>
    Fixes: 89e1f7d4c66d ("vfio: Add PCI device driver")
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20240308230557.805580-2-alex.williamson@redhat.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a269c79cccdb73730473fafb4ecd28785a9ec329
Author: Frank Wunderlich <frank-w@public-files.de>
Date:   Thu Sep 7 13:20:18 2023 +0200

    thermal/drivers/mediatek: Fix control buffer enablement on MT7896
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 371ed6263e2403068b359f0c07188548c2d70827 ]
    
    Reading thermal sensor on mt7986 devices returns invalid temperature:
    
    bpi-r3 ~ # cat /sys/class/thermal/thermal_zone0/temp
     -274000
    
    Fix this by adding missing members in mtk_thermal_data struct which were
    used in mtk_thermal_turn_on_buffer after commit 33140e668b10.
    
    Cc: stable@vger.kernel.org
    Fixes: 33140e668b10 ("thermal/drivers/mediatek: Control buffer enablement tweaks")
    Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
    Reviewed-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Reviewed-by: Daniel Golle <daniel@makrotopia.org>
    Tested-by: Daniel Golle <daniel@makrotopia.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20230907112018.52811-1-linux@fw-web.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 74ed8f8aef9d9c233f629e376d3e3adfb2687f92
Author: Steve French <stfrench@microsoft.com>
Date:   Tue Feb 13 00:40:01 2024 -0600

    cifs: allow changing password during remount
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c1eb537bf4560b3ad4df606c266c665624f3b502 ]
    
    There are cases where a session is disconnected and password has changed
    on the server (or expired) for this user and this currently can not
    be fixed without unmount and mounting again.  This patch allows
    remount to change the password (for the non Kerberos case, Kerberos
    ticket refresh is handled differently) when the session is disconnected
    and the user can not reconnect due to still using old password.
    
    Future patches should also allow us to setup the keyring (cifscreds)
    to have an "alternate password" so we would be able to change
    the password before the session drops (without the risk of races
    between when the password changes and the disconnect occurs -
    ie cases where the old password is still needed because the new
    password has not fully rolled out to all servers yet).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fda039e54f8153a932208740b2157beafc6e8e87
Author: Bharath SM <bharathsm@microsoft.com>
Date:   Thu Feb 29 23:09:52 2024 +0530

    cifs: prevent updating file size from server if we have a read/write lease
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e4b61f3b1c67f5068590965f64ea6e8d5d5bd961 ]
    
    In cases of large directories, the readdir operation may span multiple
    round trips to retrieve contents. This introduces a potential race
    condition in case of concurrent write and readdir operations. If the
    readdir operation initiates before a write has been processed by the
    server, it may update the file size attribute to an older value.
    Address this issue by avoiding file size updates from readdir when we
    have read/write lease.
    
    Scenario:
    1) process1: open dir xyz
    2) process1: readdir instance 1 on xyz
    3) process2: create file.txt for write
    4) process2: write x bytes to file.txt
    5) process2: close file.txt
    6) process2: open file.txt for read
    7) process1: readdir 2 - overwrites file.txt inode size to 0
    8) process2: read contents of file.txt - bug, short read with 0 bytes
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Shyam Prasad N <sprasad@microsoft.com>
    Signed-off-by: Bharath SM <bharathsm@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5186cfe9b1a5f9f7346fc20c19a4160fa3720c72
Author: Michael Kelley <mhklinux@outlook.com>
Date:   Fri Feb 16 12:22:40 2024 -0800

    PCI: hv: Fix ring buffer size calculation
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b5ff74c1ef50fe08e384026875fec660fadfaedd ]
    
    For a physical PCI device that is passed through to a Hyper-V guest VM,
    current code specifies the VMBus ring buffer size as 4 pages.  But this
    is an inappropriate dependency, since the amount of ring buffer space
    needed is unrelated to PAGE_SIZE. For example, on x86 the ring buffer
    size ends up as 16 Kbytes, while on ARM64 with 64 Kbyte pages, the ring
    size bloats to 256 Kbytes. The ring buffer for PCI pass-thru devices
    is used for only a few messages during device setup and removal, so any
    space above a few Kbytes is wasted.
    
    Fix this by declaring the ring buffer size to be a fixed 16 Kbytes.
    Furthermore, use the VMBUS_RING_SIZE() macro so that the ring buffer
    header is properly accounted for, and so the size is rounded up to a
    page boundary, using the page size for which the kernel is built. While
    w/64 Kbyte pages this results in a 64 Kbyte ring buffer header plus a
    64 Kbyte ring buffer, that's the smallest possible with that page size.
    It's still 128 Kbytes better than the current code.
    
    Link: https://lore.kernel.org/linux-pci/20240216202240.251818-1-mhklinux@outlook.com
    Signed-off-by: Michael Kelley <mhklinux@outlook.com>
    Signed-off-by: Krzysztof Wilczyński <kwilczynski@kernel.org>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Reviewed-by: Ilpo Jarvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Long Li <longli@microsoft.com>
    Cc: <stable@vger.kernel.org> # 5.15.x
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5d5a9ba64d44c91d960e5516229923390c2e10fa
Author: Niklas Cassel <cassel@kernel.org>
Date:   Thu Mar 7 12:15:20 2024 +0100

    PCI: dwc: endpoint: Fix advertised resizable BAR size
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 72e34b8593e08a0ee759b7a038e0b178418ea6f8 ]
    
    The commit message in commit fc9a77040b04 ("PCI: designware-ep: Configure
    Resizable BAR cap to advertise the smallest size") claims that it modifies
    the Resizable BAR capability to only advertise support for 1 MB size BARs.
    
    However, the commit writes all zeroes to PCI_REBAR_CAP (the register which
    contains the possible BAR sizes that a BAR be resized to).
    
    According to the spec, it is illegal to not have a bit set in
    PCI_REBAR_CAP, and 1 MB is the smallest size allowed.
    
    Set bit 4 in PCI_REBAR_CAP, so that we actually advertise support for a
    1 MB BAR size.
    
    Before:
            Capabilities: [2e8 v1] Physical Resizable BAR
                    BAR 0: current size: 1MB
                    BAR 1: current size: 1MB
                    BAR 2: current size: 1MB
                    BAR 3: current size: 1MB
                    BAR 4: current size: 1MB
                    BAR 5: current size: 1MB
    After:
            Capabilities: [2e8 v1] Physical Resizable BAR
                    BAR 0: current size: 1MB, supported: 1MB
                    BAR 1: current size: 1MB, supported: 1MB
                    BAR 2: current size: 1MB, supported: 1MB
                    BAR 3: current size: 1MB, supported: 1MB
                    BAR 4: current size: 1MB, supported: 1MB
                    BAR 5: current size: 1MB, supported: 1MB
    
    Fixes: fc9a77040b04 ("PCI: designware-ep: Configure Resizable BAR cap to advertise the smallest size")
    Link: https://lore.kernel.org/linux-pci/20240307111520.3303774-1-cassel@kernel.org
    Signed-off-by: Niklas Cassel <cassel@kernel.org>
    Signed-off-by: Krzysztof Wilczyński <kwilczynski@kernel.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Cc: <stable@vger.kernel.org> # 5.2
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8ea55ab3f61c82ec51ac9f786a88859d694c4d32
Author: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Date:   Thu Mar 7 16:35:15 2024 +0530

    PCI: qcom: Enable BDF to SID translation properly
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit bf79e33cdd89db498e00a6131e937259de5f2705 ]
    
    Qcom SoCs making use of ARM SMMU require BDF to SID translation table in
    the driver to properly map the SID for the PCIe devices based on their BDF
    identifier. This is currently achieved with the help of
    qcom_pcie_config_sid_1_9_0() function for SoCs supporting the 1_9_0 config.
    
    But With newer Qcom SoCs starting from SM8450, BDF to SID translation is
    set to bypass mode by default in hardware. Due to this, the translation
    table that is set in the qcom_pcie_config_sid_1_9_0() is essentially
    unused and the default SID is used for all endpoints in SoCs starting from
    SM8450.
    
    This is a security concern and also warrants swapping the DeviceID in DT
    while using the GIC ITS to handle MSIs from endpoints. The swapping is
    currently done like below in DT when using GIC ITS:
    
          /*
            * MSIs for BDF (1:0.0) only works with Device ID 0x5980.
            * Hence, the IDs are swapped.
            */
          msi-map = <0x0 &gic_its 0x5981 0x1>,
                    <0x100 &gic_its 0x5980 0x1>;
    
    Here, swapping of the DeviceIDs ensure that the endpoint with BDF (1:0.0)
    gets the DeviceID 0x5980 which is associated with the default SID as per
    the iommu mapping in DT. So MSIs were delivered with IDs swapped so far.
    But this also means the Root Port (0:0.0) won't receive any MSIs (for PME,
    AER etc...)
    
    So let's fix these issues by clearing the BDF to SID bypass mode for all
    SoCs making use of the 1_9_0 config. This allows the PCIe devices to use
    the correct SID, thus avoiding the DeviceID swapping hack in DT and also
    achieving the isolation between devices.
    
    Fixes: 4c9398822106 ("PCI: qcom: Add support for configuring BDF to SID mapping for SM8250")
    Link: https://lore.kernel.org/linux-pci/20240307-pci-bdf-sid-fix-v1-1-9423a7e2d63c@linaro.org
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Krzysztof Wilczyński <kwilczynski@kernel.org>
    Cc: stable@vger.kernel.org # 5.11
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c06c3fb640a595cb135bab2fdb87b44cdb8706d0
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Mar 5 15:12:47 2024 -0700

    kbuild: Move -Wenum-{compare-conditional,enum-conversion} into W=1
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 75b5ab134bb5f657ef7979a59106dce0657e8d87 ]
    
    Clang enables -Wenum-enum-conversion and -Wenum-compare-conditional
    under -Wenum-conversion. A recent change in Clang strengthened these
    warnings and they appear frequently in common builds, primarily due to
    several instances in common headers but there are quite a few drivers
    that have individual instances as well.
    
      include/linux/vmstat.h:508:43: warning: arithmetic between different enumeration types ('enum zone_stat_item' and 'enum numa_stat_item') [-Wenum-enum-conversion]
        508 |         return vmstat_text[NR_VM_ZONE_STAT_ITEMS +
            |                            ~~~~~~~~~~~~~~~~~~~~~ ^
        509 |                            item];
            |                            ~~~~
    
      drivers/net/wireless/intel/iwlwifi/mvm/mac-ctxt.c:955:24: warning: conditional expression between different enumeration types ('enum iwl_mac_beacon_flags' and 'enum iwl_mac_beacon_flags_v1') [-Wenum-compare-conditional]
        955 |                 flags |= is_new_rate ? IWL_MAC_BEACON_CCK
            |                                      ^ ~~~~~~~~~~~~~~~~~~
        956 |                           : IWL_MAC_BEACON_CCK_V1;
            |                             ~~~~~~~~~~~~~~~~~~~~~
      drivers/net/wireless/intel/iwlwifi/mvm/mac-ctxt.c:1120:21: warning: conditional expression between different enumeration types ('enum iwl_mac_beacon_flags' and 'enum iwl_mac_beacon_flags_v1') [-Wenum-compare-conditional]
       1120 |                                                0) > 10 ?
            |                                                        ^
       1121 |                         IWL_MAC_BEACON_FILS :
            |                         ~~~~~~~~~~~~~~~~~~~
       1122 |                         IWL_MAC_BEACON_FILS_V1;
            |                         ~~~~~~~~~~~~~~~~~~~~~~
    
    Doing arithmetic between or returning two different types of enums could
    be a bug, so each of the instance of the warning needs to be evaluated.
    Unfortunately, as mentioned above, there are many instances of this
    warning in many different configurations, which can break the build when
    CONFIG_WERROR is enabled.
    
    To avoid introducing new instances of the warnings while cleaning up the
    disruption for the majority of users, disable these warnings for the
    default build while leaving them on for W=1 builds.
    
    Cc: stable@vger.kernel.org
    Closes: https://github.com/ClangBuiltLinux/linux/issues/2002
    Link: https://github.com/llvm/llvm-project/commit/8c2ae42b3e1c6aa7c18f873edcebff7c0b45a37e
    Acked-by: Yonghong Song <yonghong.song@linux.dev>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 46e949c5f136448ab1cd39abeebcc2f08b7b70fa
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Thu Mar 7 09:41:18 2024 -0500

    NFS: Read unlock folio on nfs_page_create_from_folio() error
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 11974eec839c167362af685aae5f5e1baaf979eb ]
    
    The netfs conversion lost a folio_unlock() for the case where
    nfs_page_create_from_folio() returns an error (usually -ENOMEM).  Restore
    it.
    
    Reported-by: David Jeffery <djeffery@redhat.com>
    Cc: <stable@vger.kernel.org> # 6.4+
    Fixes: 000dbe0bec05 ("NFS: Convert buffered read paths to use netfs when fscache is enabled")
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Acked-by: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9db04da77f9d802b30352f212cca7abae46f1dc
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Mar 1 11:49:57 2024 -0500

    nfs: fix UAF in direct writes
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 17f46b803d4f23c66cacce81db35fef3adb8f2af ]
    
    In production we have been hitting the following warning consistently
    
    ------------[ cut here ]------------
    refcount_t: underflow; use-after-free.
    WARNING: CPU: 17 PID: 1800359 at lib/refcount.c:28 refcount_warn_saturate+0x9c/0xe0
    Workqueue: nfsiod nfs_direct_write_schedule_work [nfs]
    RIP: 0010:refcount_warn_saturate+0x9c/0xe0
    PKRU: 55555554
    Call Trace:
     <TASK>
     ? __warn+0x9f/0x130
     ? refcount_warn_saturate+0x9c/0xe0
     ? report_bug+0xcc/0x150
     ? handle_bug+0x3d/0x70
     ? exc_invalid_op+0x16/0x40
     ? asm_exc_invalid_op+0x16/0x20
     ? refcount_warn_saturate+0x9c/0xe0
     nfs_direct_write_schedule_work+0x237/0x250 [nfs]
     process_one_work+0x12f/0x4a0
     worker_thread+0x14e/0x3b0
     ? ZSTD_getCParams_internal+0x220/0x220
     kthread+0xdc/0x120
     ? __btf_name_valid+0xa0/0xa0
     ret_from_fork+0x1f/0x30
    
    This is because we're completing the nfs_direct_request twice in a row.
    
    The source of this is when we have our commit requests to submit, we
    process them and send them off, and then in the completion path for the
    commit requests we have
    
    if (nfs_commit_end(cinfo.mds))
            nfs_direct_write_complete(dreq);
    
    However since we're submitting asynchronous requests we sometimes have
    one that completes before we submit the next one, so we end up calling
    complete on the nfs_direct_request twice.
    
    The only other place we use nfs_generic_commit_list() is in
    __nfs_commit_inode, which wraps this call in a
    
    nfs_commit_begin();
    nfs_commit_end();
    
    Which is a common pattern for this style of completion handling, one
    that is also repeated in the direct code with get_dreq()/put_dreq()
    calls around where we process events as well as in the completion paths.
    
    Fix this by using the same pattern for the commit requests.
    
    Before with my 200 node rocksdb stress running this warning would pop
    every 10ish minutes.  With my patch the stress test has been running for
    several hours without popping.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f1bebc05573d59511571a539ad092eccafe4b42e
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Feb 24 18:42:27 2024 +0100

    sparc32: Fix parport build with sparc32
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 91d3ff922c346d6d8cb8de5ff8d504fe0ca9e17e ]
    
    include/asm/parport.h is sparc64 specific.
    Rename it to parport_64.h and use the generic version for sparc32.
    
    This fixed all{mod,yes}config build errors like:
    
    parport_pc.c:(.text):undefined-reference-to-ebus_dma_enable
    parport_pc.c:(.text):undefined-reference-to-ebus_dma_irq_enable
    parport_pc.c:(.text):undefined-reference-to-ebus_dma_register
    
    The errors occur as the sparc32 build references sparc64 symbols.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Andreas Larsson <andreas@gaisler.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Maciej W. Rozycki <macro@orcam.me.uk>
    Closes: https://lore.kernel.org/r/20230406160548.25721-1-rdunlap@infradead.org/
    Fixes: 66bcd06099bb ("parport_pc: Also enable driver for PCI systems")
    Cc: stable@vger.kernel.org # v5.18+
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Reviewed-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240224-sam-fix-sparc32-all-builds-v2-6-1f186603c5c4@ravnborg.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d4a5bd293bdf9c4e84213e3f2a6e0efd9896103
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Wed Mar 6 10:56:49 2024 +0100

    PCI: qcom: Disable ASPM L0s for sc8280xp, sa8540p and sa8295p
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d1997c98781459f7b6d0bf1858f538f48454a97b ]
    
    Commit 9f4f3dfad8cf ("PCI: qcom: Enable ASPM for platforms supporting
    1.9.0 ops") started enabling ASPM unconditionally when the hardware
    claims to support it. This triggers Correctable Errors for some PCIe
    devices on machines like the Lenovo ThinkPad X13s when L0s is enabled,
    which could indicate an incomplete driver ASPM implementation or that
    the hardware does in fact not support L0s.
    
    This has now been confirmed by Qualcomm to be the case for sc8280xp and
    its derivate platforms (e.g. sa8540p and sa8295p). Specifically, the PHY
    configuration used on these platforms is not correctly tuned for L0s and
    there is currently no updated configuration available.
    
    Add a new flag to the driver configuration data and use it to disable
    ASPM L0s on sc8280xp, sa8540p and sa8295p for now.
    
    Note that only the 1.9.0 ops enable ASPM currently.
    
    Link: https://lore.kernel.org/r/20240306095651.4551-4-johan+linaro@kernel.org
    Fixes: 9f4f3dfad8cf ("PCI: qcom: Enable ASPM for platforms supporting 1.9.0 ops")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Cc: stable@vger.kernel.org      # 6.7
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a0d68222aabb35ee861e8673e54043b05e1f122
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Fri Mar 8 13:55:56 2024 +0000

    io_uring: fix mshot io-wq checks
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3a96378e22cc46c7c49b5911f6c8631527a133a9 ]
    
    When checking for concurrent CQE posting, we're not only interested in
    requests running from the poll handler but also strayed requests ended
    up in normal io-wq execution. We're disallowing multishots in general
    from io-wq, not only when they came in a certain way.
    
    Cc: stable@vger.kernel.org
    Fixes: 17add5cea2bba ("io_uring: force multishot CQEs into task context")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/d8c5b36a39258036f93301cd60d3cd295e40653d.1709905727.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2086415440558a76577e0b08d82edd6925c5e3f1
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Mar 7 17:48:03 2024 -0700

    io_uring/net: correctly handle multishot recvmsg retry setup
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit deaef31bc1ec7966698a427da8c161930830e1cf ]
    
    If we loop for multishot receive on the initial attempt, and then abort
    later on to wait for more, we miss a case where we should be copying the
    io_async_msghdr from the stack to stable storage. This leads to the next
    retry potentially failing, if the application had the msghdr on the
    stack.
    
    Cc: stable@vger.kernel.org
    Fixes: 9bb66906f23e ("io_uring: support multishot in recvmsg")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c482840155b0ba552efce233a1447051b81bb51
Author: Stanislaw Gruszka <stanislaw.gruszka@linux.intel.com>
Date:   Mon Feb 12 13:01:35 2024 +0100

    PCI/AER: Block runtime suspend when handling errors
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 002bf2fbc00e5c4b95fb167287e2ae7d1973281e ]
    
    PM runtime can be done simultaneously with AER error handling.  Avoid that
    by using pm_runtime_get_sync() before and pm_runtime_put() after reset in
    pcie_do_recovery() for all recovering devices.
    
    pm_runtime_get_sync() will increase dev->power.usage_count counter to
    prevent any possible future request to runtime suspend a device.  It will
    also resume a device, if it was previously in D3hot state.
    
    I tested with igc device by doing simultaneous aer_inject and rpm
    suspend/resume via /sys/bus/pci/devices/PCI_ID/power/control and can
    reproduce:
    
      igc 0000:02:00.0: not ready 65535ms after bus reset; giving up
      pcieport 0000:00:1c.2: AER: Root Port link has been reset (-25)
      pcieport 0000:00:1c.2: AER: subordinate device reset failed
      pcieport 0000:00:1c.2: AER: device recovery failed
      igc 0000:02:00.0: Unable to change power state from D3hot to D0, device inaccessible
    
    The problem disappears when this patch is applied.
    
    Link: https://lore.kernel.org/r/20240212120135.146068-1-stanislaw.gruszka@linux.intel.com
    Signed-off-by: Stanislaw Gruszka <stanislaw.gruszka@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Rafael J. Wysocki <rafael@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e6209fe1d3f9e4c0954044d28e71bc5689580c7
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Feb 29 15:36:20 2024 +0100

    debugfs: fix wait/cancellation handling during remove
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 952c3fce297f12c7ff59380adb66b564e2bc9b64 ]
    
    Ben Greear further reports deadlocks during concurrent debugfs
    remove while files are being accessed, even though the code in
    question now uses debugfs cancellations. Turns out that despite
    all the review on the locking, we missed completely that the
    logic is wrong: if the refcount hits zero we can finish (and
    need not wait for the completion), but if it doesn't we have
    to trigger all the cancellations. As written, we can _never_
    get into the loop triggering the cancellations. Fix this, and
    explain it better while at it.
    
    Cc: stable@vger.kernel.org
    Fixes: 8c88a474357e ("debugfs: add API to allow debugfs operations cancellation")
    Reported-by: Ben Greear <greearb@candelatech.com>
    Closes: https://lore.kernel.org/r/1c9fa9e5-09f1-0522-fdbc-dbcef4d255ca@candelatech.com
    Tested-by: Madhan Sai <madhan.singaraju@candelatech.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://lore.kernel.org/r/20240229153635.6bfab7eb34d3.I6c7aeff8c9d6628a8bc1ddcf332205a49d801f17@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6d19e0583e3ba95178e9a3ac12b1719eee4a1aa9
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sun Feb 4 16:57:36 2024 +0100

    speakup: Fix 8bit characters from direct synth
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b6c8dafc9d86eb77e502bb018ec4105e8d2fbf78 ]
    
    When userland echoes 8bit characters to /dev/synth with e.g.
    
    echo -e '\xe9' > /dev/synth
    
    synth_write would get characters beyond 0x7f, and thus negative when
    char is signed.  When given to synth_buffer_add which takes a u16, this
    would sign-extend and produce a U+ffxy character rather than U+xy.
    Users thus get garbled text instead of accents in their output.
    
    Let's fix this by making sure that we read unsigned characters.
    
    Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Fixes: 89fc2ae80bb1 ("speakup: extend synth buffer to 16bit unicode characters")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240204155736.2oh4ot7tiaa2wpbh@begin
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 013ecddf77b306d54d68c45eca9de3c301388ef2
Author: Wayne Chang <waynec@nvidia.com>
Date:   Thu Mar 7 11:03:28 2024 +0800

    usb: gadget: tegra-xudc: Fix USB3 PHY retrieval logic
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 84fa943d93c31ee978355e6c6c69592dae3c9f59 ]
    
    This commit resolves an issue in the tegra-xudc USB gadget driver that
    incorrectly fetched USB3 PHY instances. The problem stemmed from the
    assumption of a one-to-one correspondence between USB2 and USB3 PHY
    names and their association with physical USB ports in the device tree.
    
    Previously, the driver associated USB3 PHY names directly with the USB3
    instance number, leading to mismatches when mapping the physical USB
    ports. For instance, if using USB3-1 PHY, the driver expect the
    corresponding PHY name as 'usb3-1'. However, the physical USB ports in
    the device tree were designated as USB2-0 and USB3-0 as we only have
    one device controller, causing a misalignment.
    
    This commit rectifies the issue by adjusting the PHY naming logic.
    Now, the driver correctly correlates the USB2 and USB3 PHY instances,
    allowing the USB2-0 and USB3-1 PHYs to form a physical USB port pair
    while accurately reflecting their configuration in the device tree by
    naming them USB2-0 and USB3-0, respectively.
    
    The change ensures that the PHY and PHY names align appropriately,
    resolving the mismatch between physical USB ports and their associated
    names in the device tree.
    
    Fixes: b4e19931c98a ("usb: gadget: tegra-xudc: Support multiple device modes")
    Cc: stable@vger.kernel.org
    Signed-off-by: Wayne Chang <waynec@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20240307030328.1487748-3-waynec@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5c8396d26aa867b1b6752f4767e36eac045a04c3
Author: Wayne Chang <waynec@nvidia.com>
Date:   Thu Mar 7 11:03:27 2024 +0800

    phy: tegra: xusb: Add API to retrieve the port number of phy
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d843f031d9e90462253015bc0bd9e3852d206bf2 ]
    
    This patch introduces a new API, tegra_xusb_padctl_get_port_number,
    to the Tegra XUSB Pad Controller driver. This API is used to identify
    the USB port that is associated with a given PHY.
    
    The function takes a PHY pointer for either a USB2 PHY or USB3 PHY as input
    and returns the corresponding port number. If the PHY pointer is invalid,
    it returns -ENODEV.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Wayne Chang <waynec@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20240307030328.1487748-2-waynec@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9ef15cc1d9d8161724f29a4f735a7c74fa1e22ed
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Feb 24 11:41:37 2024 +0000

    slimbus: core: Remove usage of the deprecated ida_simple_xx() API
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 89ffa4cccec54467446f141a79b9e36893079fb8 ]
    
    ida_alloc() and ida_free() should be preferred to the deprecated
    ida_simple_get() and ida_simple_remove().
    
    Note that the upper limit of ida_simple_get() is exclusive, but the one of
    ida_alloc_range() is inclusive. So change this change allows one more
    device. Previously address 0xFE was never used.
    
    Fixes: 46a2bb5a7f7e ("slimbus: core: Add slim controllers support")
    Cc: Stable@vger.kernel.org
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20240224114137.85781-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d8789b777d2c13f6984f9ac4f4f9234274af975a
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Sat Feb 24 11:40:23 2024 +0000

    nvmem: meson-efuse: fix function pointer type mismatch
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cbd38332c140829ab752ba4e727f98be5c257f18 ]
    
    clang-16 warns about casting functions to incompatible types, as is done
    here to call clk_disable_unprepare:
    
    drivers/nvmem/meson-efuse.c:78:12: error: cast from 'void (*)(struct clk *)' to 'void (*)(void *)' converts to incompatible function type [-Werror,-Wcast-function-type-strict]
       78 |                                        (void(*)(void *))clk_disable_unprepare,
    
    The pattern of getting, enabling and setting a disable callback for a
    clock can be replaced with devm_clk_get_enabled(), which also fixes
    this warning.
    
    Fixes: 611fbca1c861 ("nvmem: meson-efuse: add peripheral clock")
    Cc: Stable@vger.kernel.org
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20240224114023.85535-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0ace9ee7af6d2f6b157979c351d2fbb66ecd47e9
Author: Maximilian Heyne <mheyne@amazon.de>
Date:   Thu Feb 15 15:50:09 2024 +0000

    ext4: fix corruption during on-line resize
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a6b3bfe176e8a5b05ec4447404e412c2a3fc92cc ]
    
    We observed a corruption during on-line resize of a file system that is
    larger than 16 TiB with 4k block size. With having more then 2^32 blocks
    resize_inode is turned off by default by mke2fs. The issue can be
    reproduced on a smaller file system for convenience by explicitly
    turning off resize_inode. An on-line resize across an 8 GiB boundary (the
    size of a meta block group in this setup) then leads to a corruption:
    
      dev=/dev/<some_dev> # should be >= 16 GiB
      mkdir -p /corruption
      /sbin/mke2fs -t ext4 -b 4096 -O ^resize_inode $dev $((2 * 2**21 - 2**15))
      mount -t ext4 $dev /corruption
    
      dd if=/dev/zero bs=4096 of=/corruption/test count=$((2*2**21 - 4*2**15))
      sha1sum /corruption/test
      # 79d2658b39dcfd77274e435b0934028adafaab11  /corruption/test
    
      /sbin/resize2fs $dev $((2*2**21))
      # drop page cache to force reload the block from disk
      echo 1 > /proc/sys/vm/drop_caches
    
      sha1sum /corruption/test
      # 3c2abc63cbf1a94c9e6977e0fbd72cd832c4d5c3  /corruption/test
    
    2^21 = 2^15*2^6 equals 8 GiB whereof 2^15 is the number of blocks per
    block group and 2^6 are the number of block groups that make a meta
    block group.
    
    The last checksum might be different depending on how the file is laid
    out across the physical blocks. The actual corruption occurs at physical
    block 63*2^15 = 2064384 which would be the location of the backup of the
    meta block group's block descriptor. During the on-line resize the file
    system will be converted to meta_bg starting at s_first_meta_bg which is
    2 in the example - meaning all block groups after 16 GiB. However, in
    ext4_flex_group_add we might add block groups that are not part of the
    first meta block group yet. In the reproducer we achieved this by
    substracting the size of a whole block group from the point where the
    meta block group would start. This must be considered when updating the
    backup block group descriptors to follow the non-meta_bg layout. The fix
    is to add a test whether the group to add is already part of the meta
    block group or not.
    
    Fixes: 01f795f9e0d67 ("ext4: add online resizing support for meta_bg and 64-bit file systems")
    Cc:  <stable@vger.kernel.org>
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Tested-by: Srivathsa Dara <srivathsa.d.dara@oracle.com>
    Reviewed-by: Srivathsa Dara <srivathsa.d.dara@oracle.com>
    Link: https://lore.kernel.org/r/20240215155009.94493-1-mheyne@amazon.de
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6bfe0216c05874f67fc386067c803a95adddc0fc
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Thu Mar 7 18:06:32 2024 +0000

    io_uring: fix io_queue_proc modifying req->flags
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 1a8ec63b2b6c91caec87d4e132b1f71b5df342be ]
    
    With multiple poll entries __io_queue_proc() might be running in
    parallel with poll handlers and possibly task_work, we should not be
    carelessly modifying req->flags there. io_poll_double_prepare() handles
    a similar case with locking but it's much easier to move it into
    __io_arm_poll_handler().
    
    Cc: stable@vger.kernel.org
    Fixes: 595e52284d24a ("io_uring/poll: don't enable lazy wake for POLLEXCLUSIVE")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/455cc49e38cf32026fa1b49670be8c162c2cb583.1709834755.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dc684b637d6a705a8e0cdcf8d3b52ed0ea7ecda5
Author: Josua Mayer <josua@solid-run.com>
Date:   Thu Mar 7 12:06:58 2024 +0100

    hwmon: (amc6821) add of_match table
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3f003fda98a7a8d5f399057d92e6ed56b468657c ]
    
    Add of_match table for "ti,amc6821" compatible string.
    This fixes automatic driver loading by userspace when using device-tree,
    and if built as a module like major linux distributions do.
    
    While devices probe just fine with i2c_device_id table, userspace can't
    match the "ti,amc6821" compatible string from dt with the plain
    "amc6821" device id. As a result, the kernel module can not be loaded.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Josua Mayer <josua@solid-run.com>
    Link: https://lore.kernel.org/r/20240307-amc6821-of-match-v1-1-5f40464a3110@solid-run.com
    [groeck: Cleaned up patch description]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6e496ef63ecb0183ed2dc905a06d5986d5e3e633
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Wed Mar 6 16:02:25 2024 +0000

    io_uring: fix mshot read defer taskrun cqe posting
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 70581dcd0601a09f134f23268e3374e15d736824 ]
    
    We can't post CQEs from io-wq with DEFER_TASKRUN set, normal completions
    are handled but aux should be explicitly disallowed by opcode handlers.
    
    Cc: stable@vger.kernel.org
    Fixes: fc68fcda04910 ("io_uring/rw: add support for IORING_OP_READ_MULTISHOT")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/6fb7cba6f5366da25f4d3eb95273f062309d97fa.1709740837.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e6f98532393db63f18b7d97a80da2d7118a2a426
Author: Mickaël Salaün <mic@digikod.net>
Date:   Tue Feb 27 12:05:50 2024 +0100

    landlock: Warn once if a Landlock action is requested while disabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 782191c74875cc33b50263e21d76080b1411884d ]
    
    Because sandboxing can be used as an opportunistic security measure,
    user space may not log unsupported features.  Let the system
    administrator know if an application tries to use Landlock but failed
    because it isn't enabled at boot time.  This may be caused by boot
    loader configurations with outdated "lsm" kernel's command-line
    parameter.
    
    Cc: stable@vger.kernel.org
    Fixes: 265885daf3e5 ("landlock: Add syscall implementations")
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Günther Noack <gnoack3000@gmail.com>
    Link: https://lore.kernel.org/r/20240227110550.3702236-2-mic@digikod.net
    Signed-off-by: Mickaël Salaün <mic@digikod.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8f39ec6a6ae8d54a8d96a524bd1a02195713c55a
Author: Christian Gmeiner <cgmeiner@igalia.com>
Date:   Fri Mar 1 14:28:11 2024 +0100

    drm/etnaviv: Restore some id values
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b735ee173f84d5d0d0733c53946a83c12d770d05 ]
    
    The hwdb selection logic as a feature that allows it to mark some fields
    as 'don't care'. If we match with such a field we memcpy(..)
    the current etnaviv_chip_identity into ident.
    
    This step can overwrite some id values read from the GPU with the
    'don't care' value.
    
    Fix this issue by restoring the affected values after the memcpy(..).
    
    As this is crucial for user space to know when this feature works as
    expected increment the minor version too.
    
    Fixes: 4078a1186dd3 ("drm/etnaviv: update hwdb selection logic")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Gmeiner <cgmeiner@igalia.com>
    Reviewed-by: Tomeu Vizoso <tomeu@tomeuvizoso.net>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65f82a40c95e8f97ef55ca6b82c902fd58a235b3
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Sun Feb 4 00:54:01 2024 +0100

    leds: trigger: netdev: Fix kernel panic on interface rename trig notify
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 415798bc07dd1c1ae3a656aa026580816e0b9fe8 ]
    
    Commit d5e01266e7f5 ("leds: trigger: netdev: add additional specific link
    speed mode") in the various changes, reworked the way to set the LINKUP
    mode in commit cee4bd16c319 ("leds: trigger: netdev: Recheck
    NETDEV_LED_MODE_LINKUP on dev rename") and moved it to a generic function.
    
    This changed the logic where, in the previous implementation the dev
    from the trigger event was used to check if the carrier was ok, but in
    the new implementation with the generic function, the dev in
    trigger_data is used instead.
    
    This is problematic and cause a possible kernel panic due to the fact
    that the dev in the trigger_data still reference the old one as the
    new one (passed from the trigger event) still has to be hold and saved
    in the trigger_data struct (done in the NETDEV_REGISTER case).
    
    On calling of get_device_state(), an invalid net_dev is used and this
    cause a kernel panic.
    
    To handle this correctly, move the call to get_device_state() after the
    new net_dev is correctly set in trigger_data (in the NETDEV_REGISTER
    case) and correctly parse the new dev.
    
    Fixes: d5e01266e7f5 ("leds: trigger: netdev: add additional specific link speed mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20240203235413.1146-1-ansuelsmth@gmail.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a47414925ddb6c447acbded3c6e36cac75cf0e4
Author: Marcel Ziswiler <marcel.ziswiler@toradex.com>
Date:   Mon Mar 4 19:14:21 2024 +0100

    Bluetooth: btnxpuart: Fix btnxpuart_close
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 664130c0b0309b360bc5bdd40a30604a9387bde8 ]
    
    Fix scheduling while atomic BUG in btnxpuart_close(), properly
    purge the transmit queue and free the receive skb.
    
    [   10.973809] BUG: scheduling while atomic: kworker/u9:0/80/0x00000002
    ...
    [   10.980740] CPU: 3 PID: 80 Comm: kworker/u9:0 Not tainted 6.8.0-rc7-0.0.0-devel-00005-g61fdfceacf09 #1
    [   10.980751] Hardware name: Toradex Verdin AM62 WB on Dahlia Board (DT)
    [   10.980760] Workqueue: hci0 hci_power_off [bluetooth]
    [   10.981169] Call trace:
    ...
    [   10.981363]  uart_update_mctrl+0x58/0x78
    [   10.981373]  uart_dtr_rts+0x104/0x114
    [   10.981381]  tty_port_shutdown+0xd4/0xdc
    [   10.981396]  tty_port_close+0x40/0xbc
    [   10.981407]  uart_close+0x34/0x9c
    [   10.981414]  ttyport_close+0x50/0x94
    [   10.981430]  serdev_device_close+0x40/0x50
    [   10.981442]  btnxpuart_close+0x24/0x98 [btnxpuart]
    [   10.981469]  hci_dev_close_sync+0x2d8/0x718 [bluetooth]
    [   10.981728]  hci_dev_do_close+0x2c/0x70 [bluetooth]
    [   10.981862]  hci_power_off+0x20/0x64 [bluetooth]
    
    Fixes: 689ca16e5232 ("Bluetooth: NXP: Add protocol support for NXP Bluetooth chipsets")
    Cc: stable@vger.kernel.org
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Reviewed-by: Neeraj Sanjay Kale <neeraj.sanjaykale@nxp.com>
    Signed-off-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1335de742c9c72f8896fbd0628dc1dd3f47f62fe
Author: Dominique Martinet <dominique.martinet@atmark-techno.com>
Date:   Wed Mar 6 10:44:38 2024 +0900

    mmc: core: Fix switch on gp3 partition
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4af59a8df5ea930038cd3355e822f5eedf4accc1 ]
    
    Commit e7794c14fd73 ("mmc: rpmb: fixes pause retune on all RPMB
    partitions.") added a mask check for 'part_type', but the mask used was
    wrong leading to the code intended for rpmb also being executed for GP3.
    
    On some MMCs (but not all) this would make gp3 partition inaccessible:
    armadillo:~# head -c 1 < /dev/mmcblk2gp3
    head: standard input: I/O error
    armadillo:~# dmesg -c
    [  422.976583] mmc2: running CQE recovery
    [  423.058182] mmc2: running CQE recovery
    [  423.137607] mmc2: running CQE recovery
    [  423.137802] blk_update_request: I/O error, dev mmcblk2gp3, sector 0 op 0x0:(READ) flags 0x80700 phys_seg 4 prio class 0
    [  423.237125] mmc2: running CQE recovery
    [  423.318206] mmc2: running CQE recovery
    [  423.397680] mmc2: running CQE recovery
    [  423.397837] blk_update_request: I/O error, dev mmcblk2gp3, sector 0 op 0x0:(READ) flags 0x0 phys_seg 1 prio class 0
    [  423.408287] Buffer I/O error on dev mmcblk2gp3, logical block 0, async page read
    
    the part_type values of interest here are defined as follow:
    main  0
    boot0 1
    boot1 2
    rpmb  3
    gp0   4
    gp1   5
    gp2   6
    gp3   7
    
    so mask with EXT_CSD_PART_CONFIG_ACC_MASK (7) to correctly identify rpmb
    
    Fixes: e7794c14fd73 ("mmc: rpmb: fixes pause retune on all RPMB partitions.")
    Cc: stable@vger.kernel.org
    Cc: Jorge Ramirez-Ortiz <jorge@foundries.io>
    Signed-off-by: Dominique Martinet <dominique.martinet@atmark-techno.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20240306-mmc-partswitch-v1-1-bf116985d950@codewreck.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ed253ef0100bb5881960e417646128d1c7f38f51
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Wed Mar 6 14:03:56 2024 +0000

    mm: swap: fix race between free_swap_and_cache() and swapoff()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 82b1c07a0af603e3c47b906c8e991dc96f01688e ]
    
    There was previously a theoretical window where swapoff() could run and
    teardown a swap_info_struct while a call to free_swap_and_cache() was
    running in another thread.  This could cause, amongst other bad
    possibilities, swap_page_trans_huge_swapped() (called by
    free_swap_and_cache()) to access the freed memory for swap_map.
    
    This is a theoretical problem and I haven't been able to provoke it from a
    test case.  But there has been agreement based on code review that this is
    possible (see link below).
    
    Fix it by using get_swap_device()/put_swap_device(), which will stall
    swapoff().  There was an extra check in _swap_info_get() to confirm that
    the swap entry was not free.  This isn't present in get_swap_device()
    because it doesn't make sense in general due to the race between getting
    the reference and swapoff.  So I've added an equivalent check directly in
    free_swap_and_cache().
    
    Details of how to provoke one possible issue (thanks to David Hildenbrand
    for deriving this):
    
    --8<-----
    
    __swap_entry_free() might be the last user and result in
    "count == SWAP_HAS_CACHE".
    
    swapoff->try_to_unuse() will stop as soon as soon as si->inuse_pages==0.
    
    So the question is: could someone reclaim the folio and turn
    si->inuse_pages==0, before we completed swap_page_trans_huge_swapped().
    
    Imagine the following: 2 MiB folio in the swapcache. Only 2 subpages are
    still references by swap entries.
    
    Process 1 still references subpage 0 via swap entry.
    Process 2 still references subpage 1 via swap entry.
    
    Process 1 quits. Calls free_swap_and_cache().
    -> count == SWAP_HAS_CACHE
    [then, preempted in the hypervisor etc.]
    
    Process 2 quits. Calls free_swap_and_cache().
    -> count == SWAP_HAS_CACHE
    
    Process 2 goes ahead, passes swap_page_trans_huge_swapped(), and calls
    __try_to_reclaim_swap().
    
    __try_to_reclaim_swap()->folio_free_swap()->delete_from_swap_cache()->
    put_swap_folio()->free_swap_slot()->swapcache_free_entries()->
    swap_entry_free()->swap_range_free()->
    ...
    WRITE_ONCE(si->inuse_pages, si->inuse_pages - nr_entries);
    
    What stops swapoff to succeed after process 2 reclaimed the swap cache
    but before process1 finished its call to swap_page_trans_huge_swapped()?
    
    --8<-----
    
    Link: https://lkml.kernel.org/r/20240306140356.3974886-1-ryan.roberts@arm.com
    Fixes: 7c00bafee87c ("mm/swap: free swap slots in batch")
    Closes: https://lore.kernel.org/linux-mm/65a66eb9-41f8-4790-8db2-0c70ea15979f@redhat.com/
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "Huang, Ying" <ying.huang@intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c3a3be5620d9331b39128c991fe4a2d5919cad1f
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Wed Feb 28 19:38:39 2024 +0300

    mac802154: fix llsec key resources release in mac802154_llsec_key_del
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e8a1e58345cf40b7b272e08ac7b32328b2543e40 ]
    
    mac802154_llsec_key_del() can free resources of a key directly without
    following the RCU rules for waiting before the end of a grace period. This
    may lead to use-after-free in case llsec_lookup_key() is traversing the
    list of keys in parallel with a key deletion:
    
    refcount_t: addition on 0; use-after-free.
    WARNING: CPU: 4 PID: 16000 at lib/refcount.c:25 refcount_warn_saturate+0x162/0x2a0
    Modules linked in:
    CPU: 4 PID: 16000 Comm: wpan-ping Not tainted 6.7.0 #19
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
    RIP: 0010:refcount_warn_saturate+0x162/0x2a0
    Call Trace:
     <TASK>
     llsec_lookup_key.isra.0+0x890/0x9e0
     mac802154_llsec_encrypt+0x30c/0x9c0
     ieee802154_subif_start_xmit+0x24/0x1e0
     dev_hard_start_xmit+0x13e/0x690
     sch_direct_xmit+0x2ae/0xbc0
     __dev_queue_xmit+0x11dd/0x3c20
     dgram_sendmsg+0x90b/0xd60
     __sys_sendto+0x466/0x4c0
     __x64_sys_sendto+0xe0/0x1c0
     do_syscall_64+0x45/0xf0
     entry_SYSCALL_64_after_hwframe+0x6e/0x76
    
    Also, ieee802154_llsec_key_entry structures are not freed by
    mac802154_llsec_key_del():
    
    unreferenced object 0xffff8880613b6980 (size 64):
      comm "iwpan", pid 2176, jiffies 4294761134 (age 60.475s)
      hex dump (first 32 bytes):
        78 0d 8f 18 80 88 ff ff 22 01 00 00 00 00 ad de  x.......".......
        00 00 00 00 00 00 00 00 03 00 cd ab 00 00 00 00  ................
      backtrace:
        [<ffffffff81dcfa62>] __kmem_cache_alloc_node+0x1e2/0x2d0
        [<ffffffff81c43865>] kmalloc_trace+0x25/0xc0
        [<ffffffff88968b09>] mac802154_llsec_key_add+0xac9/0xcf0
        [<ffffffff8896e41a>] ieee802154_add_llsec_key+0x5a/0x80
        [<ffffffff8892adc6>] nl802154_add_llsec_key+0x426/0x5b0
        [<ffffffff86ff293e>] genl_family_rcv_msg_doit+0x1fe/0x2f0
        [<ffffffff86ff46d1>] genl_rcv_msg+0x531/0x7d0
        [<ffffffff86fee7a9>] netlink_rcv_skb+0x169/0x440
        [<ffffffff86ff1d88>] genl_rcv+0x28/0x40
        [<ffffffff86fec15c>] netlink_unicast+0x53c/0x820
        [<ffffffff86fecd8b>] netlink_sendmsg+0x93b/0xe60
        [<ffffffff86b91b35>] ____sys_sendmsg+0xac5/0xca0
        [<ffffffff86b9c3dd>] ___sys_sendmsg+0x11d/0x1c0
        [<ffffffff86b9c65a>] __sys_sendmsg+0xfa/0x1d0
        [<ffffffff88eadbf5>] do_syscall_64+0x45/0xf0
        [<ffffffff890000ea>] entry_SYSCALL_64_after_hwframe+0x6e/0x76
    
    Handle the proper resource release in the RCU callback function
    mac802154_llsec_key_del_rcu().
    
    Note that if llsec_lookup_key() finds a key, it gets a refcount via
    llsec_key_get() and locally copies key id from key_entry (which is a
    list element). So it's safe to call llsec_key_put() and free the list
    entry after the RCU grace period elapses.
    
    Found by Linux Verification Center (linuxtesting.org).
    
    Fixes: 5d637d5aabd8 ("mac802154: add llsec structures and mutators")
    Cc: stable@vger.kernel.org
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Message-ID: <20240228163840.6667-1-pchelkin@ispras.ru>
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7ae7639ce325838aeaea09215e00396f1b2e203f
Author: Tony Battersby <tonyb@cybernetics.com>
Date:   Thu Feb 29 13:08:09 2024 -0500

    block: Fix page refcounts for unaligned buffers in __bio_release_pages()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 38b43539d64b2fa020b3b9a752a986769f87f7a6 ]
    
    Fix an incorrect number of pages being released for buffers that do not
    start at the beginning of a page.
    
    Fixes: 1b151e2435fc ("block: Remove special-casing of compound pages")
    Cc: stable@vger.kernel.org
    Signed-off-by: Tony Battersby <tonyb@cybernetics.com>
    Tested-by: Greg Edwards <gedwards@ddn.com>
    Link: https://lore.kernel.org/r/86e592a9-98d4-4cff-a646-0c0084328356@cybernetics.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 48943e59c571021088b3da963946d32942bc5b66
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Sat Jan 27 11:07:43 2024 -0700

    powerpc: xor_vmx: Add '-mhard-float' to CFLAGS
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 35f20786c481d5ced9283ff42de5c69b65e5ed13 ]
    
    arch/powerpc/lib/xor_vmx.o is built with '-msoft-float' (from the main
    powerpc Makefile) and '-maltivec' (from its CFLAGS), which causes an
    error when building with clang after a recent change in main:
    
      error: option '-msoft-float' cannot be specified with '-maltivec'
      make[6]: *** [scripts/Makefile.build:243: arch/powerpc/lib/xor_vmx.o] Error 1
    
    Explicitly add '-mhard-float' before '-maltivec' in xor_vmx.o's CFLAGS
    to override the previous inclusion of '-msoft-float' (as the last option
    wins), which matches how other areas of the kernel use '-maltivec', such
    as AMDGPU.
    
    Cc: stable@vger.kernel.org
    Closes: https://github.com/ClangBuiltLinux/linux/issues/1986
    Link: https://github.com/llvm/llvm-project/commit/4792f912b232141ecba4cbae538873be3c28556c
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20240127-ppc-xor_vmx-drop-msoft-float-v1-1-f24140e81376@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1b2718d71fcf2727d91b6e042e2edb0574845ec0
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:06 2024 +0800

    dm-raid: fix lockdep waring in "pers->hot_add_disk"
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 95009ae904b1e9dca8db6f649f2d7c18a6e42c75 ]
    
    The lockdep assert is added by commit a448af25becf ("md/raid10: remove
    rcu protection to access rdev from conf") in print_conf(). And I didn't
    notice that dm-raid is calling "pers->hot_add_disk" without holding
    'reconfig_mutex'.
    
    "pers->hot_add_disk" read and write many fields that is protected by
    'reconfig_mutex', and raid_resume() already grab the lock in other
    contex. Hence fix this problem by protecting "pers->host_add_disk"
    with the lock.
    
    Fixes: 9092c02d9435 ("DM RAID: Add ability to restore transiently failed devices on resume")
    Fixes: a448af25becf ("md/raid10: remove rcu protection to access rdev from conf")
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-10-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 30c3080467d72b97139b1a9fcdedfed0186a8450
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:05 2024 +0800

    dm-raid456, md/raid456: fix a deadlock for dm-raid456 while io concurrent with reshape
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 41425f96d7aa59bc865f60f5dda3d7697b555677 ]
    
    For raid456, if reshape is still in progress, then IO across reshape
    position will wait for reshape to make progress. However, for dm-raid,
    in following cases reshape will never make progress hence IO will hang:
    
    1) the array is read-only;
    2) MD_RECOVERY_WAIT is set;
    3) MD_RECOVERY_FROZEN is set;
    
    After commit c467e97f079f ("md/raid6: use valid sector values to determine
    if an I/O should wait on the reshape") fix the problem that IO across
    reshape position doesn't wait for reshape, the dm-raid test
    shell/lvconvert-raid-reshape.sh start to hang:
    
    [root@fedora ~]# cat /proc/979/stack
    [<0>] wait_woken+0x7d/0x90
    [<0>] raid5_make_request+0x929/0x1d70 [raid456]
    [<0>] md_handle_request+0xc2/0x3b0 [md_mod]
    [<0>] raid_map+0x2c/0x50 [dm_raid]
    [<0>] __map_bio+0x251/0x380 [dm_mod]
    [<0>] dm_submit_bio+0x1f0/0x760 [dm_mod]
    [<0>] __submit_bio+0xc2/0x1c0
    [<0>] submit_bio_noacct_nocheck+0x17f/0x450
    [<0>] submit_bio_noacct+0x2bc/0x780
    [<0>] submit_bio+0x70/0xc0
    [<0>] mpage_readahead+0x169/0x1f0
    [<0>] blkdev_readahead+0x18/0x30
    [<0>] read_pages+0x7c/0x3b0
    [<0>] page_cache_ra_unbounded+0x1ab/0x280
    [<0>] force_page_cache_ra+0x9e/0x130
    [<0>] page_cache_sync_ra+0x3b/0x110
    [<0>] filemap_get_pages+0x143/0xa30
    [<0>] filemap_read+0xdc/0x4b0
    [<0>] blkdev_read_iter+0x75/0x200
    [<0>] vfs_read+0x272/0x460
    [<0>] ksys_read+0x7a/0x170
    [<0>] __x64_sys_read+0x1c/0x30
    [<0>] do_syscall_64+0xc6/0x230
    [<0>] entry_SYSCALL_64_after_hwframe+0x6c/0x74
    
    This is because reshape can't make progress.
    
    For md/raid, the problem doesn't exist because register new sync_thread
    doesn't rely on the IO to be done any more:
    
    1) If array is read-only, it can switch to read-write by ioctl/sysfs;
    2) md/raid never set MD_RECOVERY_WAIT;
    3) If MD_RECOVERY_FROZEN is set, mddev_suspend() doesn't hold
       'reconfig_mutex', hence it can be cleared and reshape can continue by
       sysfs api 'sync_action'.
    
    However, I'm not sure yet how to avoid the problem in dm-raid yet. This
    patch on the one hand make sure raid_message() can't change
    sync_thread() through raid_message() after presuspend(), on the other
    hand detect the above 3 cases before wait for IO do be done in
    dm_suspend(), and let dm-raid requeue those IO.
    
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-9-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e89cbc0de267c21f89ddc6e50abb0f2fc919733d
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:04 2024 +0800

    dm-raid: add a new helper prepare_suspend() in md_personality
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5625ff8b72b0e5c13b0fc1fc1f198155af45f729 ]
    
    There are no functional changes for now, prepare to fix a deadlock for
    dm-raid456.
    
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-8-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2c99e8b8a78a14a5c4a3846c418a87cbda81dfe7
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:03 2024 +0800

    md/dm-raid: don't call md_reap_sync_thread() directly
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cd32b27a66db8776d8b8e82ec7d7dde97a8693b0 ]
    
    Currently md_reap_sync_thread() is called from raid_message() directly
    without holding 'reconfig_mutex', this is definitely unsafe because
    md_reap_sync_thread() can change many fields that is protected by
    'reconfig_mutex'.
    
    However, hold 'reconfig_mutex' here is still problematic because this
    will cause deadlock, for example, commit 130443d60b1b ("md: refactor
    idle/frozen_sync_thread() to fix deadlock").
    
    Fix this problem by using stop_sync_thread() to unregister sync_thread,
    like md/raid did.
    
    Fixes: be83651f0050 ("DM RAID: Add message/status support for changing sync action")
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-7-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8ffdc16a332b213beb6092e417c45732997046ff
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:02 2024 +0800

    dm-raid: really frozen sync_thread during suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 16c4770c75b1223998adbeb7286f9a15c65fba73 ]
    
    1) commit f52f5c71f3d4 ("md: fix stopping sync thread") remove
       MD_RECOVERY_FROZEN from __md_stop_writes() and doesn't realize that
       dm-raid relies on __md_stop_writes() to frozen sync_thread
       indirectly. Fix this problem by adding MD_RECOVERY_FROZEN in
       md_stop_writes(), and since stop_sync_thread() is only used for
       dm-raid in this case, also move stop_sync_thread() to
       md_stop_writes().
    2) The flag MD_RECOVERY_FROZEN doesn't mean that sync thread is frozen,
       it only prevent new sync_thread to start, and it can't stop the
       running sync thread; In order to frozen sync_thread, after seting the
       flag, stop_sync_thread() should be used.
    3) The flag MD_RECOVERY_FROZEN doesn't mean that writes are stopped, use
       it as condition for md_stop_writes() in raid_postsuspend() doesn't
       look correct. Consider that reentrant stop_sync_thread() do nothing,
       always call md_stop_writes() in raid_postsuspend().
    4) raid_message can set/clear the flag MD_RECOVERY_FROZEN at anytime,
       and if MD_RECOVERY_FROZEN is cleared while the array is suspended,
       new sync_thread can start unexpected. Fix this by disallow
       raid_message() to change sync_thread status during suspend.
    
    Note that after commit f52f5c71f3d4 ("md: fix stopping sync thread"), the
    test shell/lvconvert-raid-reshape.sh start to hang in stop_sync_thread(),
    and with previous fixes, the test won't hang there anymore, however, the
    test will still fail and complain that ext4 is corrupted. And with this
    patch, the test won't hang due to stop_sync_thread() or fail due to ext4
    is corrupted anymore. However, there is still a deadlock related to
    dm-raid456 that will be fixed in following patches.
    
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Closes: https://lore.kernel.org/all/e5e8afe2-e9a8-49a2-5ab0-958d4065c55e@redhat.com/
    Fixes: 1af2048a3e87 ("dm raid: fix deadlock caused by premature md_stop_writes()")
    Fixes: 9dbd1aa3a81c ("dm raid: add reshaping support to the target")
    Fixes: f52f5c71f3d4 ("md: fix stopping sync thread")
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-6-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c227dda1c223b601f37ab97db1f766a0c588d514
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:01 2024 +0800

    md: add a new helper reshape_interrupted()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 503f9d43790fdd0c6e6ae2f4dd3f70b146ac4159 ]
    
    The helper will be used for dm-raid456 later to detect the case that
    reshape can't make progress.
    
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-5-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 00dc7ccf86d4b30e2b45840f3c6035753c9b7a11
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:23:00 2024 +0800

    md: export helper md_is_rdwr()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 314e9af065513ff86ec9e32eaa96b9bd275cf51d ]
    
    There are no functional changes for now, prepare to fix a deadlock for
    dm-raid456.
    
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-4-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f354bc46f8a55590c1571ac5ceea8d8460e7dca0
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:22:59 2024 +0800

    md: export helpers to stop sync_thread
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7a2347e284d7ec2f0759be4db60fa7ca937284fc ]
    
    Add new helpers:
    
      void md_idle_sync_thread(struct mddev *mddev);
      void md_frozen_sync_thread(struct mddev *mddev);
      void md_unfrozen_sync_thread(struct mddev *mddev);
    
    The helpers will be used in dm-raid in later patches to fix regressions
    and prevent calling md_reap_sync_thread() directly.
    
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-3-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b44f2c4ba784b91bcc37c2a622985e4767756b34
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Mar 5 15:22:58 2024 +0800

    md: don't clear MD_RECOVERY_FROZEN for new dm-raid until resume
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 2f03d0c2cd451c7ac2f317079d4ec518f0986b55 ]
    
    After commit 9dbd1aa3a81c ("dm raid: add reshaping support to the
    target") raid_ctr() will set MD_RECOVERY_FROZEN before md_run() and
    expect to keep array frozen until resume. However, md_run() will clear
    the flag by setting mddev->recovery to 0.
    
    Before commit 1baae052cccd ("md: Don't ignore suspended array in
    md_check_recovery()"), dm-raid actually relied on suspending to prevent
    starting new sync_thread.
    
    Fix this problem by keeping 'MD_RECOVERY_FROZEN' for dm-raid in
    md_run().
    
    Fixes: 1baae052cccd ("md: Don't ignore suspended array in md_check_recovery()")
    Fixes: 9dbd1aa3a81c ("dm raid: add reshaping support to the target")
    Cc: stable@vger.kernel.org # v6.7+
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Acked-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240305072306.2562024-2-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8a763b13733c3ccabce00352e1f2d30571adbb84
Author: Song Liu <song@kernel.org>
Date:   Thu Jan 25 00:21:31 2024 -0800

    Revert "Revert "md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d""
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3445139e3a594be77eff48bc17eff67cf983daed ]
    
    This reverts commit bed9e27baf52a09b7ba2a3714f1e24e17ced386d.
    
    The original set [1][2] was expected to undo a suboptimal fix in [2], and
    replace it with a better fix [1]. However, as reported by Dan Moulding [2]
    causes an issue with raid5 with journal device.
    
    Revert [2] for now to close the issue. We will follow up on another issue
    reported by Juxiao Bi, as [2] is expected to fix it. We believe this is a
    good trade-off, because the latter issue happens less freqently.
    
    In the meanwhile, we will NOT revert [1], as it contains the right logic.
    
    [1] commit d6e035aad6c0 ("md: bypass block throttle for superblock update")
    [2] commit bed9e27baf52 ("Revert "md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d"")
    
    Reported-by: Dan Moulding <dan@danm.net>
    Closes: https://lore.kernel.org/linux-raid/20240123005700.9302-1-dan@danm.net/
    Fixes: bed9e27baf52 ("Revert "md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d"")
    Cc: stable@vger.kernel.org # v5.19+
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Reviewed-by: Yu Kuai <yukuai3@huawei.com>
    Link: https://lore.kernel.org/r/20240125082131.788600-1-song@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0a3896a7571d8f0af90453465bda6110465ab99f
Author: Paul Menzel <pmenzel@molgen.mpg.de>
Date:   Tue Mar 5 12:30:56 2024 +0100

    PCI/DPC: Quirk PIO log size for Intel Raptor Lake Root Ports
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 627c6db20703b5d18d928464f411d0d4ec327508 ]
    
    Commit 5459c0b70467 ("PCI/DPC: Quirk PIO log size for certain Intel Root
    Ports") and commit 3b8803494a06 ("PCI/DPC: Quirk PIO log size for Intel Ice
    Lake Root Ports") add quirks for Ice, Tiger and Alder Lake Root Ports.
    System firmware for Raptor Lake still has the bug, so Linux logs the
    warning below on several Raptor Lake systems like Dell Precision 3581 with
    Intel Raptor Lake processor (0W18NX) system firmware/BIOS version 1.10.1.
    
      pci 0000:00:07.0: [8086:a76e] type 01 class 0x060400
      pci 0000:00:07.0: DPC: RP PIO log size 0 is invalid
      pci 0000:00:07.1: [8086:a73f] type 01 class 0x060400
      pci 0000:00:07.1: DPC: RP PIO log size 0 is invalid
    
    Apply the quirk for Raptor Lake Root Ports as well.
    
    This also enables the DPC driver to dump the RP PIO Log registers when DPC
    is triggered.
    
    Link: https://lore.kernel.org/r/20240305113057.56468-1-pmenzel@molgen.mpg.de
    Reported-by: Niels van Aert <nvaert1986@hotmail.com>
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218560
    Signed-off-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: <stable@vger.kernel.org>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Niels van Aert <nvaert1986@hotmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c0385a49d1a600ddad435e4f2ed402e5aad8de3
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Mar 5 11:45:38 2024 +0100

    PCI/PM: Drain runtime-idle callbacks before driver removal
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9d5286d4e7f68beab450deddbb6a32edd5ecf4bf ]
    
    A race condition between the .runtime_idle() callback and the .remove()
    callback in the rtsx_pcr PCI driver leads to a kernel crash due to an
    unhandled page fault [1].
    
    The problem is that rtsx_pci_runtime_idle() is not expected to be running
    after pm_runtime_get_sync() has been called, but the latter doesn't really
    guarantee that.  It only guarantees that the suspend and resume callbacks
    will not be running when it returns.
    
    However, if a .runtime_idle() callback is already running when
    pm_runtime_get_sync() is called, the latter will notice that the runtime PM
    status of the device is RPM_ACTIVE and it will return right away without
    waiting for the former to complete.  In fact, it cannot wait for
    .runtime_idle() to complete because it may be called from that callback (it
    arguably does not make much sense to do that, but it is not strictly
    prohibited).
    
    Thus in general, whoever is providing a .runtime_idle() callback needs
    to protect it from running in parallel with whatever code runs after
    pm_runtime_get_sync().  [Note that .runtime_idle() will not start after
    pm_runtime_get_sync() has returned, but it may continue running then if it
    has started earlier.]
    
    One way to address that race condition is to call pm_runtime_barrier()
    after pm_runtime_get_sync() (not before it, because a nonzero value of the
    runtime PM usage counter is necessary to prevent runtime PM callbacks from
    being invoked) to wait for the .runtime_idle() callback to complete should
    it be running at that point.  A suitable place for doing that is in
    pci_device_remove() which calls pm_runtime_get_sync() before removing the
    driver, so it may as well call pm_runtime_barrier() subsequently, which
    will prevent the race in question from occurring, not just in the rtsx_pcr
    driver, but in any PCI drivers providing .runtime_idle() callbacks.
    
    Link: https://lore.kernel.org/lkml/20240229062201.49500-1-kai.heng.feng@canonical.com/ # [1]
    Link: https://lore.kernel.org/r/5761426.DvuYhMxLoT@kreacher
    Reported-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Tested-by: Ricky Wu <ricky_wu@realtek.com>
    Acked-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0c5475e8bb44dad5b8afe56482bce69cf0a1e6d3
Author: Akira Yokosawa <akiyks@gmail.com>
Date:   Tue Mar 5 13:23:00 2024 +0900

    docs: Makefile: Add dependency to $(YNL_INDEX) for targets other than htmldocs
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a304fa1d10fcb974c117d391e5b4d34c2baa9a62 ]
    
    Commit f061c9f7d058 ("Documentation: Document each netlink family")
    added recipes for YAML -> RST conversion.
    Then commit 7da8bdbf8f5d ("docs: Makefile: Fix make cleandocs by
    deleting generated .rst files") made sure those converted .rst files
    are cleaned by "make cleandocs".
    
    However, they took care of htmldocs build only.
    
    If one of other targets such as latexdocs or epubdocs is built
    without building htmldocs, missing .rst files can cause additional
    WARNINGs from sphinx-build as follow:
    
        ./Documentation/userspace-api/netlink/specs.rst:18: WARNING: undefined label: 'specs'
        ./Documentation/userspace-api/netlink/netlink-raw.rst:64: WARNING: unknown document: '../../networking/netlink_spec/rt_link'
        ./Documentation/userspace-api/netlink/netlink-raw.rst:64: WARNING: unknown document: '../../networking/netlink_spec/tc'
        ./Documentation/userspace-api/netlink/index.rst:21: WARNING: undefined label: 'specs'
    
    Add dependency to $(YNL_INDEX) for other targets and allow any targets
    to be built cleanly right after "make cleandocs".
    
    Signed-off-by: Akira Yokosawa <akiyks@gmail.com>
    Cc: stable@vger.kernel.org  # v6.7
    Cc: Thorsten Blum <thorsten.blum@toblux.com>
    Cc: Breno Leitao <leitao@debian.org>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Reviwed-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Message-ID: <e876e3c8-109d-4bc8-9916-05a4bc4ee9ac@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1661f66405a6cb3f9f4b6693fd015c793f11eb56
Author: Nick Morrow <morrownr@gmail.com>
Date:   Tue Feb 27 02:34:40 2024 +0000

    wifi: rtw88: Add missing VID/PIDs for 8811CU and 8821CU
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b8a62478f3b143592d1241de1a7f5f8629ad0f49 ]
    
    Add VID/PIDs that are known to be missing for this driver.
    
    Removed /* 8811CU */ and /* 8821CU */ as they are redundant
    since the file is specific to those chips.
    
    Removed /* TOTOLINK A650UA v3 */ as the manufacturer. It has a REALTEK
    VID so it may not be specific to this adapter.
    
    Verified and tested.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Nick Morrow <morrownr@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/4ume7mjw63u7.XlMUvUuacW2ErhOCdqlLkw2@1EHFQ.trk.elasticemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2c994588aa0b2e352fbe4eb552d806fbfd7d4890
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Feb 29 10:37:04 2024 +0000

    btrfs: fix off-by-one chunk length calculation at contains_pending_extent()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit ae6bd7f9b46a29af52ebfac25d395757e2031d0d ]
    
    At contains_pending_extent() the value of the end offset of a chunk we
    found in the device's allocation state io tree is inclusive, so when
    we calculate the length we pass to the in_range() macro, we must sum
    1 to the expression "physical_end - physical_offset".
    
    In practice the wrong calculation should be harmless as chunks sizes
    are never 1 byte and we should never have 1 byte ranges of unallocated
    space. Nevertheless fix the wrong calculation.
    
    Reported-by: Alex Lyakas <alex.lyakas@zadara.com>
    Link: https://lore.kernel.org/linux-btrfs/CAOcd+r30e-f4R-5x-S7sV22RJPe7+pgwherA6xqN2_qe7o4XTg@mail.gmail.com/
    Fixes: 1c11b63eff2a ("btrfs: replace pending/pinned chunks lists with io tree")
    CC: stable@vger.kernel.org # 6.1+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a3265af4baaf007b2f3fb30a5ddb33889802894
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Feb 23 18:13:38 2024 +1030

    btrfs: qgroup: always free reserved space for extent records
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d139ded8b9cdb897bb9539eb33311daf9a177fd2 ]
    
    [BUG]
    If qgroup is marked inconsistent (e.g. caused by operations needing full
    subtree rescan, like creating a snapshot and assign to a higher level
    qgroup), btrfs would immediately start leaking its data reserved space.
    
    The following script can easily reproduce it:
    
      mkfs.btrfs -O quota -f $dev
      mount $dev $mnt
      btrfs subvolume create $mnt/subv1
      btrfs qgroup create 1/0 $mnt
    
      # This snapshot creation would mark qgroup inconsistent,
      # as the ownership involves different higher level qgroup, thus
      # we have to rescan both source and snapshot, which can be very
      # time consuming, thus here btrfs just choose to mark qgroup
      # inconsistent, and let users to determine when to do the rescan.
      btrfs subv snapshot -i 1/0 $mnt/subv1 $mnt/snap1
    
      # Now this write would lead to qgroup rsv leak.
      xfs_io -f -c "pwrite 0 64k" $mnt/file1
    
      # And at unmount time, btrfs would report 64K DATA rsv space leaked.
      umount $mnt
    
    And we would have the following dmesg output for the unmount:
    
      BTRFS info (device dm-1): last unmount of filesystem 14a3d84e-f47b-4f72-b053-a8a36eef74d3
      BTRFS warning (device dm-1): qgroup 0/5 has unreleased space, type 0 rsv 65536
    
    [CAUSE]
    Since commit e15e9f43c7ca ("btrfs: introduce
    BTRFS_QGROUP_RUNTIME_FLAG_NO_ACCOUNTING to skip qgroup accounting"),
    we introduce a mode for btrfs qgroup to skip the timing consuming
    backref walk, if the qgroup is already inconsistent.
    
    But this skip also covered the data reserved freeing, thus the qgroup
    reserved space for each newly created data extent would not be freed,
    thus cause the leakage.
    
    [FIX]
    Make the data extent reserved space freeing mandatory.
    
    The qgroup reserved space handling is way cheaper compared to the
    backref walking part, and we always have the super sensitive leak
    detector, thus it's definitely worth to always free the qgroup
    reserved data space.
    
    Reported-by: Fabian Vogt <fvogt@suse.com>
    Fixes: e15e9f43c7ca ("btrfs: introduce BTRFS_QGROUP_RUNTIME_FLAG_NO_ACCOUNTING to skip qgroup accounting")
    CC: stable@vger.kernel.org # 6.1+
    Link: https://bugzilla.suse.com/show_bug.cgi?id=1216196
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b7f6e588db958325c1703e72db86687ec66b62e1
Author: Peter Collingbourne <pcc@google.com>
Date:   Mon Mar 4 13:43:49 2024 -0800

    serial: Lock console when calling into driver before registration
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 801410b26a0e8b8a16f7915b2b55c9528b69ca87 ]
    
    During the handoff from earlycon to the real console driver, we have
    two separate drivers operating on the same device concurrently. In the
    case of the 8250 driver these concurrent accesses cause problems due
    to the driver's use of banked registers, controlled by LCR.DLAB. It is
    possible for the setup(), config_port(), pm() and set_mctrl() callbacks
    to set DLAB, which can cause the earlycon code that intends to access
    TX to instead access DLL, leading to missed output and corruption on
    the serial line due to unintended modifications to the baud rate.
    
    In particular, for setup() we have:
    
    univ8250_console_setup()
    -> serial8250_console_setup()
    -> uart_set_options()
    -> serial8250_set_termios()
    -> serial8250_do_set_termios()
    -> serial8250_do_set_divisor()
    
    For config_port() we have:
    
    serial8250_config_port()
    -> autoconfig()
    
    For pm() we have:
    
    serial8250_pm()
    -> serial8250_do_pm()
    -> serial8250_set_sleep()
    
    For set_mctrl() we have (for some devices):
    
    serial8250_set_mctrl()
    -> omap8250_set_mctrl()
    -> __omap8250_set_mctrl()
    
    To avoid such problems, let's make it so that the console is locked
    during pre-registration calls to these callbacks, which will prevent
    the earlycon driver from running concurrently.
    
    Remove the partial solution to this problem in the 8250 driver
    that locked the console only during autoconfig_irq(), as this would
    result in a deadlock with the new approach. The console continues
    to be locked during autoconfig_irq() because it can only be called
    through uart_configure_port().
    
    Although this patch introduces more locking than strictly necessary
    (and in particular it also locks during the call to rs485_config()
    which is not affected by this issue as far as I can tell), it follows
    the principle that it is the responsibility of the generic console
    code to manage the earlycon handoff by ensuring that earlycon and real
    console driver code cannot run concurrently, and not the individual
    drivers.
    
    Signed-off-by: Peter Collingbourne <pcc@google.com>
    Reviewed-by: John Ogness <john.ogness@linutronix.de>
    Link: https://linux-review.googlesource.com/id/I7cf8124dcebf8618e6b2ee543fa5b25532de55d8
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240304214350.501253-1-pcc@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ac79e31551df85c2748a8802f45432ed075342d1
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Sun Mar 3 16:08:07 2024 +0100

    serial: core: only stop transmit when HW fifo is empty
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7bfb915a597a301abb892f620fe5c283a9fdbd77 ]
    
    If the circular buffer is empty, it just means we fit all characters to
    send into the HW fifo, but not that the hardware finished transmitting
    them.
    
    So if we immediately call stop_tx() after that, this may abort any
    pending characters in the HW fifo, and cause dropped characters on the
    console.
    
    Fix this by only stopping tx when the tx HW fifo is actually empty.
    
    Fixes: 8275b48b2780 ("tty: serial: introduce transmit helpers")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Link: https://lore.kernel.org/r/20240303150807.68117-1-jonas.gorski@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c17d341ebb78c8aa80f444e9fa94f6ccff43936f
Author: Roger Quadros <rogerq@kernel.org>
Date:   Tue Feb 27 11:23:49 2024 +0200

    usb: dwc3-am62: Disable wakeup at remove
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4ead695e6b3cac06543d7bc7241ab75aee4ea6a6 ]
    
    Disable wakeup at remove.
    Fixes the below warnings on module unload and reload.
    
    > dwc3-am62 f900000.dwc3-usb: couldn't enable device as a wakeup source: -17
    > dwc3-am62 f910000.dwc3-usb: couldn't enable device as a wakeup source: -17
    
    Fixes: 4e3972b589da ("usb: dwc3-am62: Enable as a wakeup source by default")
    Cc: stable@vger.kernel.org # v6.4+
    Signed-off-by: Roger Quadros <rogerq@kernel.org>
    Link: https://lore.kernel.org/r/20240227-for-v6-9-am62-usb-errata-3-0-v4-2-0ada8ddb0767@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 011dfbd1e25082bf9690910093129d880c91180a
Author: Roger Quadros <rogerq@kernel.org>
Date:   Tue Feb 27 11:23:48 2024 +0200

    usb: dwc3-am62: fix module unload/reload behavior
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6661befe41009c210efa2c1bcd16a5cc4cff8a06 ]
    
    As runtime PM is enabled, the module can be runtime
    suspended when .remove() is called.
    
    Do a pm_runtime_get_sync() to make sure module is active
    before doing any register operations.
    
    Doing a pm_runtime_put_sync() should disable the refclk
    so no need to disable it again.
    
    Fixes the below warning at module removel.
    
    [   39.705310] ------------[ cut here ]------------
    [   39.710004] clk:162:3 already disabled
    [   39.713941] WARNING: CPU: 0 PID: 921 at drivers/clk/clk.c:1090 clk_core_disable+0xb0/0xb8
    
    We called of_platform_populate() in .probe() so call the
    cleanup function of_platform_depopulate() in .remove().
    Get rid of the now unnnecessary dwc3_ti_remove_core().
    Without this, module re-load doesn't work properly.
    
    Fixes: e8784c0aec03 ("drivers: usb: dwc3: Add AM62 USB wrapper driver")
    Cc: stable@vger.kernel.org # v5.19+
    Signed-off-by: Roger Quadros <rogerq@kernel.org>
    Link: https://lore.kernel.org/r/20240227-for-v6-9-am62-usb-errata-3-0-v4-1-0ada8ddb0767@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f09ad0f22277d10aef890c2b486878e5b9647144
Author: Jameson Thies <jthies@google.com>
Date:   Tue Mar 5 02:58:01 2024 +0000

    usb: typec: ucsi: Clean up UCSI_CABLE_PROP macros
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4d0a5a9915793377c0fe1a8d78de6bcd92cea963 ]
    
    Clean up UCSI_CABLE_PROP macros by fixing a bitmask shifting error for
    plug type and updating the modal support macro for consistent naming.
    
    Fixes: 3cf657f07918 ("usb: typec: ucsi: Remove all bit-fields")
    Cc: stable@vger.kernel.org
    Reviewed-by: Benson Leung <bleung@chromium.org>
    Reviewed-by: Prashant Malani <pmalani@chromium.org>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Jameson Thies <jthies@google.com>
    Link: https://lore.kernel.org/r/20240305025804.1290919-2-jthies@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 90c9342f883d81938281578561ab438dcf0d3848
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Feb 28 16:50:49 2024 +0100

    fuse: don't unhash root
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b1fe686a765e6c0d71811d825b5a1585a202b777 ]
    
    The root inode is assumed to be always hashed.  Do not unhash the root
    inode even if it is marked BAD.
    
    Fixes: 5d069dbe8aaf ("fuse: fix bad inode")
    Cc: <stable@vger.kernel.org> # v5.11
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7673841addcb19e727201938250fc642c2f307d0
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Feb 28 16:50:49 2024 +0100

    fuse: fix root lookup with nonzero generation
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 68ca1b49e430f6534d0774a94147a823e3b8b26e ]
    
    The root inode has a fixed nodeid and generation (1, 0).
    
    Prior to the commit 15db16837a35 ("fuse: fix illegal access to inode with
    reused nodeid") generation number on lookup was ignored.  After this commit
    lookup with the wrong generation number resulted in the inode being
    unhashed.  This is correct for non-root inodes, but replacing the root
    inode is wrong and results in weird behavior.
    
    Fix by reverting to the old behavior if ignoring the generation for the
    root inode, but issuing a warning in dmesg.
    
    Reported-by: Antonio SJ Musumeci <trapexit@spawn.link>
    Closes: https://lore.kernel.org/all/CAOQ4uxhek5ytdN8Yz2tNEOg5ea4NkBb4nk0FGPjPk_9nz-VG3g@mail.gmail.com/
    Fixes: 15db16837a35 ("fuse: fix illegal access to inode with reused nodeid")
    Cc: <stable@vger.kernel.org> # v5.14
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f89b7773e1c7a6bf163719aa654e0f19bff37e4d
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Feb 28 16:50:49 2024 +0100

    fuse: replace remaining make_bad_inode() with fuse_make_bad()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 82e081aebe4d9c26e196c8260005cc4762b57a5d ]
    
    fuse_do_statx() was added with the wrong helper.
    
    Fixes: d3045530bdd2 ("fuse: implement statx")
    Cc: <stable@vger.kernel.org> # v6.6
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bec6c1e94fbf16a8f3a5a787b59ad7094e8c4441
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Tue Mar 5 11:42:56 2024 +0100

    mmc: tmio: avoid concurrent runs of mmc_request_done()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e8d1b41e69d72c62865bebe8f441163ec00b3d44 ]
    
    With the to-be-fixed commit, the reset_work handler cleared 'host->mrq'
    outside of the spinlock protected critical section. That leaves a small
    race window during execution of 'tmio_mmc_reset()' where the done_work
    handler could grab a pointer to the now invalid 'host->mrq'. Both would
    use it to call mmc_request_done() causing problems (see link below).
    
    However, 'host->mrq' cannot simply be cleared earlier inside the
    critical section. That would allow new mrqs to come in asynchronously
    while the actual reset of the controller still needs to be done. So,
    like 'tmio_mmc_set_ios()', an ERR_PTR is used to prevent new mrqs from
    coming in but still avoiding concurrency between work handlers.
    
    Reported-by: Dirk Behme <dirk.behme@de.bosch.com>
    Closes: https://lore.kernel.org/all/20240220061356.3001761-1-dirk.behme@de.bosch.com/
    Fixes: df3ef2d3c92c ("mmc: protect the tmio_mmc driver against a theoretical race")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Dirk Behme <dirk.behme@de.bosch.com>
    Reviewed-by: Dirk Behme <dirk.behme@de.bosch.com>
    Cc: stable@vger.kernel.org # 3.0+
    Link: https://lore.kernel.org/r/20240305104423.3177-2-wsa+renesas@sang-engineering.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7a43c66a7f4e3a4bc72cd34c94a9d05e4e19d8b0
Author: Qingliang Li <qingliang.li@mediatek.com>
Date:   Fri Mar 1 17:26:57 2024 +0800

    PM: sleep: wakeirq: fix wake irq warning in system suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e7a7681c859643f3f2476b2a28a494877fd89442 ]
    
    When driver uses pm_runtime_force_suspend() as the system suspend callback
    function and registers the wake irq with reverse enable ordering, the wake
    irq will be re-enabled when entering system suspend, triggering an
    'Unbalanced enable for IRQ xxx' warning. In this scenario, the call
    sequence during system suspend is as follows:
      suspend_devices_and_enter()
        -> dpm_suspend_start()
          -> dpm_run_callback()
            -> pm_runtime_force_suspend()
              -> dev_pm_enable_wake_irq_check()
              -> dev_pm_enable_wake_irq_complete()
    
        -> suspend_enter()
          -> dpm_suspend_noirq()
            -> device_wakeup_arm_wake_irqs()
              -> dev_pm_arm_wake_irq()
    
    To fix this issue, complete the setting of WAKE_IRQ_DEDICATED_ENABLED flag
    in dev_pm_enable_wake_irq_complete() to avoid redundant irq enablement.
    
    Fixes: 8527beb12087 ("PM: sleep: wakeirq: fix wake irq arming")
    Reviewed-by: Dhruva Gole <d-gole@ti.com>
    Signed-off-by: Qingliang Li <qingliang.li@mediatek.com>
    Reviewed-by: Johan Hovold <johan+linaro@kernel.org>
    Cc: 5.16+ <stable@vger.kernel.org> # 5.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e6e9e968c97043ea01e50002abfe981fe83c257
Author: Toru Katagiri <Toru.Katagiri@tdk.com>
Date:   Tue Mar 5 08:46:14 2024 +0900

    USB: serial: cp210x: add pid/vid for TDK NC0110013M and MM0110113M
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b1a8da9ff1395c4879b4bd41e55733d944f3d613 ]
    
    TDK NC0110013M and MM0110113M have custom USB IDs for CP210x,
    so we need to add them to the driver.
    
    Signed-off-by: Toru Katagiri <Toru.Katagiri@tdk.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 67f697c3d00e8bbacf9fca044fddbf9a07683851
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Tue Feb 27 11:49:16 2024 +0000

    KVM: x86/xen: inject vCPU upcall vector when local APIC is enabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8e62bf2bfa46367e14d0ffdcde5aada08759497c ]
    
    Linux guests since commit b1c3497e604d ("x86/xen: Add support for
    HVMOP_set_evtchn_upcall_vector") in v6.0 onwards will use the per-vCPU
    upcall vector when it's advertised in the Xen CPUID leaves.
    
    This upcall is injected through the guest's local APIC as an MSI, unlike
    the older system vector which was merely injected by the hypervisor any
    time the CPU was able to receive an interrupt and the upcall_pending
    flags is set in its vcpu_info.
    
    Effectively, that makes the per-CPU upcall edge triggered instead of
    level triggered, which results in the upcall being lost if the MSI is
    delivered when the local APIC is *disabled*.
    
    Xen checks the vcpu_info->evtchn_upcall_pending flag when the local APIC
    for a vCPU is software enabled (in fact, on any write to the SPIV
    register which doesn't disable the APIC). Do the same in KVM since KVM
    doesn't provide a way for userspace to intervene and trap accesses to
    the SPIV register of a local APIC emulated by KVM.
    
    Fixes: fde0451be8fb3 ("KVM: x86/xen: Support per-vCPU event channel upcall via local APIC")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Paul Durrant <paul@xen.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240227115648.3104-3-dwmw2@infradead.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6898ca24258d845efc6d79a791938265030558f8
Author: Aurélien Jacobs <aurel@gnuage.org>
Date:   Wed Jan 31 18:49:17 2024 +0100

    USB: serial: option: add MeiG Smart SLM320 product
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 46809c51565b83881aede6cdf3b0d25254966a41 ]
    
    Update the USB serial option driver to support MeiG Smart SLM320.
    
    ID 2dee:4d41 UNISOC UNISOC-8910
    
    T: Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 9 Spd=480 MxCh= 0
    D: Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs= 1
    P: Vendor=2dee ProdID=4d41 Rev=00.00
    S: Manufacturer=UNISOC
    S: Product=UNISOC-8910
    C: #Ifs= 8 Cfg#= 1 Atr=e0 MxPwr=400mA
    I: If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=07(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I: If#= 7 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E: Ad=08(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E: Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Tested successfully a PPP LTE connection using If#= 0.
    Not sure of the purpose of every other serial interfaces.
    
    Signed-off-by: Aurélien Jacobs <aurel@gnuage.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 95608750c98c5820d5c0d73438647318e900ab25
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Feb 28 12:01:57 2024 +0100

    wifi: mac80211: track capability/opmode NSS separately
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a8bca3e9371dc5e276af4168be099b2a05554c2a ]
    
    We're currently tracking rx_nss for each station, and that
    is meant to be initialized to the capability NSS and later
    reduced by the operating mode notification NSS.
    
    However, we're mixing up capabilities and operating mode
    NSS in the same variable. This forces us to recalculate
    the NSS capability on operating mode notification RX,
    which is a bit strange; due to the previous fix I had to
    never keep rx_nss as zero, it also means that the capa is
    never taken into account properly.
    
    Fix all this by storing the capability value, that can be
    recalculated unconditionally whenever needed, and storing
    the operating mode notification NSS separately, taking it
    into account when assigning the final rx_nss value.
    
    Cc: stable@vger.kernel.org
    Fixes: dd6c064cfc3f ("wifi: mac80211: set station RX-NSS on reconfig")
    Reviewed-by: Miriam Rachel Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240228120157.0e1c41924d1d.I0acaa234e0267227b7e3ef81a59117c8792116bc@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ef43f663182a069715d8e9353b358d597a0b4715
Author: Christian Häggström <christian.haggstrom@orexplore.com>
Date:   Wed Feb 14 11:47:29 2024 +0100

    USB: serial: cp210x: add ID for MGP Instruments PDS100
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a0d9d868491a362d421521499d98308c8e3a0398 ]
    
    The radiation meter has the text MGP Instruments PDS-100G or PDS-100GN
    produced by Mirion Technologies. Tested by forcing the driver
    association with
    
      echo 10c4 863c > /sys/bus/usb-serial/drivers/cp210x/new_id
    
    and then setting the serial port in 115200 8N1 mode. The device
    announces ID_USB_VENDOR_ENC=Silicon\x20Labs and ID_USB_MODEL_ENC=PDS100
    
    Signed-off-by: Christian Häggström <christian.haggstrom@orexplore.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a304a7fd372a316b66cc61a13577db539aaadf0
Author: Cameron Williams <cang1@live.co.uk>
Date:   Tue Feb 13 21:53:29 2024 +0000

    USB: serial: add device ID for VeriFone adapter
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cda704809797a8a86284f9df3eef5e62ec8a3175 ]
    
    Add device ID for a (probably fake) CP2102 UART device.
    
    lsusb -v output:
    
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               1.10
      bDeviceClass            0 [unknown]
      bDeviceSubClass         0 [unknown]
      bDeviceProtocol         0
      bMaxPacketSize0        64
      idVendor           0x11ca VeriFone Inc
      idProduct          0x0212 Verifone USB to Printer
      bcdDevice            1.00
      iManufacturer           1 Silicon Labs
      iProduct                2 Verifone USB to Printer
      iSerial                 3 0001
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength       0x0020
        bNumInterfaces          1
        bConfigurationValue     1
        iConfiguration          0
        bmAttributes         0x80
          (Bus Powered)
        MaxPower              100mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0 [unknown]
          bInterfaceProtocol      0
          iInterface              2 Verifone USB to Printer
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x01  EP 1 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
    Device Status:     0x0000
      (Bus Powered)
    
    Signed-off-by: Cameron Williams <cang1@live.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 57fc2b75a2afd8317c5bf68e8744a7e86b1440b8
Author: Daniel Vogelbacher <daniel@chaospixel.com>
Date:   Sun Feb 11 15:42:46 2024 +0100

    USB: serial: ftdi_sio: add support for GMC Z216C Adapter IR-USB
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3fb7bc4f3a98c48981318b87cf553c5f115fd5ca ]
    
    The GMC IR-USB adapter cable utilizes a FTDI FT232R chip.
    
    Add VID/PID for this adapter so it can be used as serial device via
    ftdi_sio.
    
    Signed-off-by: Daniel Vogelbacher <daniel@chaospixel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dabaa6684cad238f66f971464846d4dfc5c1320f
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Feb 29 23:25:19 2024 +1100

    powerpc/fsl: Fix mfpmr build errors with newer binutils
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5f491356b7149564ab22323ccce79c8d595bfd0c ]
    
    Binutils 2.38 complains about the use of mfpmr when building
    ppc6xx_defconfig:
    
        CC      arch/powerpc/kernel/pmc.o
      {standard input}: Assembler messages:
      {standard input}:45: Error: unrecognized opcode: `mfpmr'
      {standard input}:56: Error: unrecognized opcode: `mtpmr'
    
    This is because by default the kernel is built with -mcpu=powerpc, and
    the mt/mfpmr instructions are not defined.
    
    It can be avoided by enabling CONFIG_E300C3_CPU, but just adding that to
    the defconfig will leave open the possibility of randconfig failures.
    
    So add machine directives around the mt/mfpmr instructions to tell
    binutils how to assemble them.
    
    Cc: stable@vger.kernel.org
    Reported-by: Jan-Benedict Glaw <jbglaw@lug-owl.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20240229122521.762431-3-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 50f174d55ee2b2fa24baf5dd3666be3538cb495b
Author: Prashanth K <quic_prashk@quicinc.com>
Date:   Thu Feb 29 16:14:38 2024 +0200

    usb: xhci: Add error handling in xhci_map_urb_for_dma
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit be95cc6d71dfd0cba66e3621c65413321b398052 ]
    
    Currently xhci_map_urb_for_dma() creates a temporary buffer and copies
    the SG list to the new linear buffer. But if the kzalloc_node() fails,
    then the following sg_pcopy_to_buffer() can lead to crash since it
    tries to memcpy to NULL pointer.
    
    So return -ENOMEM if kzalloc returns null pointer.
    
    Cc: stable@vger.kernel.org # 5.11
    Fixes: 2017a1e58472 ("usb: xhci: Use temporary buffer to consolidate SG")
    Signed-off-by: Prashanth K <quic_prashk@quicinc.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20240229141438.619372-10-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3b456f1d8750035bcf8aa4d8cc35f961ffc0e488
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:52 2024 +0100

    clk: qcom: mmcc-msm8974: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e2c02a85bf53ae86d79b5fccf0a75ac0b78e0c96 ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Only compile tested.
    
    Fixes: d8b212014e69 ("clk: qcom: Add support for MSM8974's multimedia clock controller (MMCC)")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-7-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bf63bfaebb1eff4ed3a05589cd6f3fe4b74d88a4
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:51 2024 +0100

    clk: qcom: mmcc-apq8084: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a903cfd38d8dee7e754fb89fd1bebed99e28003d ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Only compile tested.
    
    Fixes: 2b46cd23a5a2 ("clk: qcom: Add APQ8084 Multimedia Clock Controller (MMCC) support")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-6-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 47b44ef4bdc4f029cdffb70cfec0c392d626190d
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:50 2024 +0100

    clk: qcom: camcc-sc8280xp: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6a3d70f7802a98e6c28a74f997a264118b9f50cd ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Only compile tested.
    
    Fixes: ff93872a9c61 ("clk: qcom: camcc-sc8280xp: Add sc8280xp CAMCC")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-5-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec53e5650c2d7817ee9872ff9b16f9f65a63b46b
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:49 2024 +0100

    clk: qcom: gcc-ipq9574: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit bd2b6395671d823caa38d8e4d752de2448ae61e1 ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Only compile tested.
    
    Fixes: d75b82cff488 ("clk: qcom: Add Global Clock Controller driver for IPQ9574")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-4-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2750fb638f7390d776149168e1d3d6931774c3a8
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:48 2024 +0100

    clk: qcom: gcc-ipq8074: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 1040ef5ed95d6fd2628bad387d78a61633e09429 ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Only compile tested.
    
    Fixes: 9607f6224b39 ("clk: qcom: ipq8074: add PCIE, USB and SDCC clocks")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-3-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 37e48301d30e77630e25605621ca8d37832988ff
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:47 2024 +0100

    clk: qcom: gcc-ipq6018: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit cdbc6e2d8108bc47895e5a901cfcaf799b00ca8d ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Only compile tested.
    
    Fixes: d9db07f088af ("clk: qcom: Add ipq6018 Global Clock Controller support")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-2-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f709d29a44850e790e5b5909c98f0f9e59b2b975
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Thu Feb 29 19:07:46 2024 +0100

    clk: qcom: gcc-ipq5018: fix terminating of frequency table arrays
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 90ad946fff70f312b8d23226afc38c13ddd88c4b ]
    
    The frequency table arrays are supposed to be terminated with an
    empty element. Add such entry to the end of the arrays where it
    is missing in order to avoid possible out-of-bound access when
    the table is traversed by functions like qcom_find_freq() or
    qcom_find_freq_floor().
    
    Fixes: e3fdbef1bab8 ("clk: qcom: Add Global Clock controller (GCC) driver for IPQ5018")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240229-freq-table-terminator-v1-1-074334f0905c@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 392b899c2c1c60cb79d45a9605be346a3c01ecd9
Author: Brett Creeley <brett.creeley@amd.com>
Date:   Tue Feb 27 16:32:04 2024 -0800

    vfio/pds: Always clear the save/restore FDs on reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8512ed256334f6637fc0699ce794792c357544ec ]
    
    After reset the VFIO device state will always be put in
    VFIO_DEVICE_STATE_RUNNING, but the save/restore files will only be
    cleared if the previous state was VFIO_DEVICE_STATE_ERROR. This
    can/will cause the restore/save files to be leaked if/when the
    migration state machine transitions through the states that
    re-allocates these files. Fix this by always clearing the
    restore/save files for resets.
    
    Fixes: 7dabb1bcd177 ("vfio/pds: Add support for firmware recovery")
    Cc: stable@vger.kernel.org
    Signed-off-by: Brett Creeley <brett.creeley@amd.com>
    Reviewed-by: Shannon Nelson <shannon.nelson@amd.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Link: https://lore.kernel.org/r/20240228003205.47311-2-brett.creeley@amd.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 08a8666fbc1e9ce898cec84f0c7489f7f115ca58
Author: Maulik Shah <quic_mkshah@quicinc.com>
Date:   Thu Feb 29 12:14:59 2024 +0530

    PM: suspend: Set mem_sleep_current during kernel command line setup
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9bc4ffd32ef8943f5c5a42c9637cfd04771d021b ]
    
    psci_init_system_suspend() invokes suspend_set_ops() very early during
    bootup even before kernel command line for mem_sleep_default is setup.
    This leads to kernel command line mem_sleep_default=s2idle not working
    as mem_sleep_current gets changed to deep via suspend_set_ops() and never
    changes back to s2idle.
    
    Set mem_sleep_current along with mem_sleep_default during kernel command
    line setup as default suspend mode.
    
    Fixes: faf7ec4a92c0 ("drivers: firmware: psci: add system suspend support")
    CC: stable@vger.kernel.org # 5.4+
    Signed-off-by: Maulik Shah <quic_mkshah@quicinc.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5996947b7f8432b01624d70eb9c81e42bba60a68
Author: Shivnandan Kumar <quic_kshivnan@quicinc.com>
Date:   Tue Feb 27 14:43:51 2024 +0530

    cpufreq: Limit resolving a frequency to policy min/max
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d394abcb12bb1a6f309c1221fdb8e73594ecf1b4 ]
    
    Resolving a frequency to an efficient one should not transgress
    policy->max (which can be set for thermal reason) and policy->min.
    
    Currently, there is possibility where scaling_cur_freq can exceed
    scaling_max_freq when scaling_max_freq is an inefficient frequency.
    
    Add a check to ensure that resolving a frequency will respect
    policy->min/max.
    
    Cc: All applicable <stable@vger.kernel.org>
    Fixes: 1f39fa0dccff ("cpufreq: Introducing CPUFREQ_RELATION_E")
    Signed-off-by: Shivnandan Kumar <quic_kshivnan@quicinc.com>
    [ rjw: Whitespace adjustment, changelog edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a399249a02707ad7a15f2e6062d6367a6fa6fbdc
Author: Akira Yokosawa <akiyks@gmail.com>
Date:   Sun Feb 25 18:46:00 2024 +0900

    docs: Restore "smart quotes" for quotes
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fe2562582bffe675721e77e00b3bf5bfa1d7aeab ]
    
    Commit eaae75754d81 ("docs: turn off "smart quotes" in the HTML build")
    disabled conversion of quote marks along with that of dashes.
    Despite the short summary, the change affects not only HTML build
    but also other build targets including PDF.
    
    However, as "smart quotes" had been enabled for more than half a
    decade already, quite a few readers of HTML pages are likely expecting
    conversions of "foo" -> “foo” and 'bar' -> ‘bar’.
    
    Furthermore, in LaTeX typesetting convention, it is common to use
    distinct marks for opening and closing quote marks.
    
    To satisfy such readers' expectation, restore conversion of quotes
    only by setting smartquotes_action [1].
    
    Link: [1] https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-smartquotes_action
    Cc: stable@vger.kernel.org  # v6.4
    Signed-off-by: Akira Yokosawa <akiyks@gmail.com>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Link: https://lore.kernel.org/r/20240225094600.65628-1-akiyks@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dd859087c86605ea2a2a7036d4ca8b1cb83357fe
Author: Quentin Schulz <quentin.schulz@theobroma-systems.com>
Date:   Fri Feb 23 13:45:22 2024 +0100

    iio: adc: rockchip_saradc: use mask for write_enable bitfield
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5b4e4b72034f85f7a0cdd147d3d729c5a22c8764 ]
    
    Some of the registers on the SARADCv2 have bits write protected except
    if another bit is set. This is usually done by having the lowest 16 bits
    store the data to write and the highest 16 bits specify which of the 16
    lowest bits should have their value written to the hardware block.
    
    The write_enable mask for the channel selection was incorrect because it
    was just the value shifted by 16 bits, which means it would only ever
    write bits and never clear them. So e.g. if someone starts a conversion
    on channel 5, the lowest 4 bits would be 0x5, then starts a conversion
    on channel 0, it would still be 5.
    
    Instead of shifting the value by 16 as the mask, let's use the OR'ing of
    the appropriate masks shifted by 16.
    
    Note that this is not an issue currently because the only SARADCv2
    currently supported has a reset defined in its Device Tree, that reset
    resets the SARADC controller before starting a conversion on a channel.
    However, this reset is handled as optional by the probe function and
    thus proper masking should be used in the event an SARADCv2 without a
    reset ever makes it upstream.
    
    Fixes: 757953f8ec69 ("iio: adc: rockchip_saradc: Add support for RK3588")
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://lore.kernel.org/r/20240223-saradcv2-chan-mask-v1-2-84b06a0f623a@theobroma-systems.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e5a8eb0a236c76dda4ca59692d7b6f7359073818
Author: Quentin Schulz <quentin.schulz@theobroma-systems.com>
Date:   Fri Feb 23 13:45:21 2024 +0100

    iio: adc: rockchip_saradc: fix bitmask for channels on SARADCv2
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b0a4546df24a4f8c59b2d05ae141bd70ceccc386 ]
    
    The SARADCv2 on RK3588 (the only SoC currently supported that has an
    SARADCv2) selects the channel through the channel_sel bitfield which is
    the 4 lowest bits, therefore the mask should be GENMASK(3, 0) and not
    GENMASK(15, 0).
    
    Fixes: 757953f8ec69 ("iio: adc: rockchip_saradc: Add support for RK3588")
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20240223-saradcv2-chan-mask-v1-1-84b06a0f623a@theobroma-systems.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4de9aee94762d8c7a3a06b8cb679e85e840793a0
Author: Gui-Dong Han <2045gemini@gmail.com>
Date:   Fri Jan 12 15:10:17 2024 +0800

    md/raid5: fix atomicity violation in raid5_cache_count
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit dfd2bf436709b2bccb78c2dda550dde93700efa7 ]
    
    In raid5_cache_count():
        if (conf->max_nr_stripes < conf->min_nr_stripes)
            return 0;
        return conf->max_nr_stripes - conf->min_nr_stripes;
    The current check is ineffective, as the values could change immediately
    after being checked.
    
    In raid5_set_cache_size():
        ...
        conf->min_nr_stripes = size;
        ...
        while (size > conf->max_nr_stripes)
            conf->min_nr_stripes = conf->max_nr_stripes;
        ...
    
    Due to intermediate value updates in raid5_set_cache_size(), concurrent
    execution of raid5_cache_count() and raid5_set_cache_size() may lead to
    inconsistent reads of conf->max_nr_stripes and conf->min_nr_stripes.
    The current checks are ineffective as values could change immediately
    after being checked, raising the risk of conf->min_nr_stripes exceeding
    conf->max_nr_stripes and potentially causing an integer overflow.
    
    This possible bug is found by an experimental static analysis tool
    developed by our team. This tool analyzes the locking APIs to extract
    function pairs that can be concurrently executed, and then analyzes the
    instructions in the paired functions to identify possible concurrency bugs
    including data races and atomicity violations. The above possible bug is
    reported when our tool analyzes the source code of Linux 6.2.
    
    To resolve this issue, it is suggested to introduce local variables
    'min_stripes' and 'max_stripes' in raid5_cache_count() to ensure the
    values remain stable throughout the check. Adding locks in
    raid5_cache_count() fails to resolve atomicity violations, as
    raid5_set_cache_size() may hold intermediate values of
    conf->min_nr_stripes while unlocked. With this patch applied, our tool no
    longer reports the bug, with the kernel configuration allyesconfig for
    x86_64. Due to the lack of associated hardware, we cannot test the patch
    in runtime testing, and just verify it according to the code logic.
    
    Fixes: edbe83ab4c27 ("md/raid5: allow the stripe_cache to grow and shrink.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gui-Dong Han <2045gemini@gmail.com>
    Reviewed-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240112071017.16313-1-2045gemini@gmail.com
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 00327123ac85d4369ddd4f3579382362133edece
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Feb 27 12:33:51 2024 -0800

    parisc: Strip upper 32 bit of sum in csum_ipv6_magic for 64-bit builds
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 0568b6f0d863643db2edcc7be31165740c89fa82 ]
    
    IPv6 checksum tests with unaligned addresses on 64-bit builds result
    in unexpected failures.
    
    Expected expected == csum_result, but
        expected == 46591 (0xb5ff)
        csum_result == 46381 (0xb52d)
    with alignment offset 1
    
    Oddly enough, the problem disappeared after adding test code into
    the beginning of csum_ipv6_magic().
    
    As it turns out, the 'sum' parameter of csum_ipv6_magic() is declared as
    __wsum, which is a 32-bit variable. However, it is treated as 64-bit
    variable in the 64-bit assembler code. Tests showed that the upper 32 bit
    of the register used to pass the variable are _not_ cleared when entering
    the function. This can result in checksum calculation errors.
    
    Clearing the upper 32 bit of 'sum' as first operation in the assembler
    code fixes the problem.
    
    Acked-by: Helge Deller <deller@gmx.de>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec17834ee8457c20e4d5362733f2c135c8209e19
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Feb 13 15:46:31 2024 -0800

    parisc: Fix csum_ipv6_magic on 64-bit systems
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4b75b12d70506e31fc02356bbca60f8d5ca012d0 ]
    
    hppa 64-bit systems calculates the IPv6 checksum using 64-bit add
    operations. The last add folds protocol and length fields into the 64-bit
    result. While unlikely, this operation can overflow. The overflow can be
    triggered with a code sequence such as the following.
    
            /* try to trigger massive overflows */
            memset(tmp_buf, 0xff, sizeof(struct in6_addr));
            csum_result = csum_ipv6_magic((struct in6_addr *)tmp_buf,
                                          (struct in6_addr *)tmp_buf,
                                          0xffff, 0xff, 0xffffffff);
    
    Fix the problem by adding any overflows from the final add operation into
    the calculated checksum. Fortunately, we can do this without additional
    cost by replacing the add operation used to fold the checksum into 32 bit
    with "add,dc" to add in the missing carry.
    
    Cc: Palmer Dabbelt <palmer@rivosinc.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Charlie Jenkins <charlie@rivosinc.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 83f55cf94e5469010821ae707456ba644f9f8023
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Feb 10 11:15:56 2024 -0800

    parisc: Fix csum_ipv6_magic on 32-bit systems
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4408ba75e4ba80c91fde7e10bccccf388f5c09be ]
    
    Calculating the IPv6 checksum on 32-bit systems missed overflows when
    adding the proto+len fields into the checksum. This results in the
    following unit test failure.
    
        # test_csum_ipv6_magic: ASSERTION FAILED at lib/checksum_kunit.c:506
        Expected ( u64)csum_result == ( u64)expected, but
            ( u64)csum_result == 46722 (0xb682)
            ( u64)expected == 46721 (0xb681)
        not ok 5 test_csum_ipv6_magic
    
    This is probably rarely seen in the real world because proto+len are
    usually small values which will rarely result in overflows when calculating
    the checksum. However, the unit test code uses large values for the length
    field, causing the test to fail.
    
    Fix the problem by adding the missing carry into the final checksum.
    
    Cc: Palmer Dabbelt <palmer@rivosinc.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Charlie Jenkins <charlie@rivosinc.com>
    Reviewed-by: Charlie Jenkins <charlie@rivosinc.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a2c35e5df584ead1cca1c667d18f81f2d8accae
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Feb 10 09:55:26 2024 -0800

    parisc: Fix ip_fast_csum
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit a2abae8f0b638c31bb9799d9dd847306e0d005bd ]
    
    IP checksum unit tests report the following error when run on hppa/hppa64.
    
        # test_ip_fast_csum: ASSERTION FAILED at lib/checksum_kunit.c:463
        Expected ( u64)csum_result == ( u64)expected, but
            ( u64)csum_result == 33754 (0x83da)
            ( u64)expected == 10946 (0x2ac2)
        not ok 4 test_ip_fast_csum
    
    0x83da is the expected result if the IP header length is 20 bytes. 0x2ac2
    is the expected result if the IP header length is 24 bytes. The test fails
    with an IP header length of 24 bytes. It appears that ip_fast_csum()
    always returns the checksum for a 20-byte header, no matter how long
    the header actually is.
    
    Code analysis shows a suspicious assembler sequence in ip_fast_csum().
    
     "      addc            %0, %3, %0\n"
     "1:    ldws,ma         4(%1), %3\n"
     "      addib,<         0, %2, 1b\n"    <---
    
    While my understanding of HPPA assembler is limited, it does not seem
    to make much sense to subtract 0 from a register and to expect the result
    to ever be negative. Subtracting 1 from the length parameter makes more
    sense. On top of that, the operation should be repeated if and only if
    the result is still > 0, so change the suspicious instruction to
     "      addib,>         -1, %2, 1b\n"
    
    The IP checksum unit test passes after this change.
    
    Cc: Palmer Dabbelt <palmer@rivosinc.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Charlie Jenkins <charlie@rivosinc.com>
    Reviewed-by: Charlie Jenkins <charlie@rivosinc.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 23b7d2134ce2dad609c5694a31b3caff9cb28ee7
Author: John David Anglin <dave.anglin@bell.net>
Date:   Fri Feb 23 16:40:51 2024 +0100

    parisc: Avoid clobbering the C/B bits in the PSW with tophys and tovirt macros
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4603fbaa76b5e703b38ac8cc718102834eb6e330 ]
    
    Use add,l to avoid clobbering the C/B bits in the PSW.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.10+
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 634bfa491065fcfe456e5900c55751a734891a40
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Feb 16 14:26:55 2024 +0100

    parisc/unaligned: Rewrite 64-bit inline assembly of emulate_ldd()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e5db6a74571a8baf87a116ea39aab946283362ff ]
    
    Convert to use real temp variables instead of clobbering processor
    registers. This aligns the 64-bit inline assembly code with the 32-bit
    assembly code which was rewritten with commit 427c1073a2a1
    ("parisc/unaligned: Rewrite 32-bit inline assembly of emulate_ldd()").
    
    While at it, fix comment in 32-bit rewrite code. Temporary variables are
    now used for both 32-bit and 64-bit code, so move their declarations
    to the function header.
    
    No functional change intended.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: stable@vger.kernel.org # v6.0+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8fd97ab933510ad2475c6d5a8147e509c5fe5d0b
Author: Breno Leitao <leitao@debian.org>
Date:   Wed Feb 7 08:52:35 2024 -0800

    x86/nmi: Fix the inverse "in NMI handler" check
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit d54e56f31a34fa38fcb5e91df609f9633419a79a ]
    
    Commit 344da544f177 ("x86/nmi: Print reasons why backtrace NMIs are
    ignored") creates a super nice framework to diagnose NMIs.
    
    Every time nmi_exc() is called, it increments a per_cpu counter
    (nsp->idt_nmi_seq). At its exit, it also increments the same counter.  By
    reading this counter it can be seen how many times that function was called
    (dividing by 2), and, if the function is still being executed, by checking
    the idt_nmi_seq's least significant bit.
    
    On the check side (nmi_backtrace_stall_check()), that variable is queried
    to check if the NMI is still being executed, but, there is a mistake in the
    bitwise operation. That code wants to check if the least significant bit of
    the idt_nmi_seq is set or not, but does the opposite, and checks for all
    the other bits, which will always be true after the first exc_nmi()
    executed successfully.
    
    This appends the misleading string to the dump "(CPU currently in NMI
    handler function)"
    
    Fix it by checking the least significant bit, and if it is set, append the
    string.
    
    Fixes: 344da544f177 ("x86/nmi: Print reasons why backtrace NMIs are ignored")
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paul E. McKenney <paulmck@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20240207165237.1048837-1-leitao@debian.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bf4da194c33bd686eb5fb20eddcb9187e2f7aeb2
Author: Heming Zhao <heming.zhao@suse.com>
Date:   Fri Feb 23 20:11:28 2024 +0800

    md/md-bitmap: fix incorrect usage for sb_index
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit ecbd8ebb51bf7e4939d83b9e6022a55cac44ef06 ]
    
    Commit d7038f951828 ("md-bitmap: don't use ->index for pages backing the
    bitmap file") removed page->index from bitmap code, but left wrong code
    logic for clustered-md. current code never set slot offset for cluster
    nodes, will sometimes cause crash in clustered env.
    
    Call trace (partly):
     md_bitmap_file_set_bit+0x110/0x1d8 [md_mod]
     md_bitmap_startwrite+0x13c/0x240 [md_mod]
     raid1_make_request+0x6b0/0x1c08 [raid1]
     md_handle_request+0x1dc/0x368 [md_mod]
     md_submit_bio+0x80/0xf8 [md_mod]
     __submit_bio+0x178/0x300
     submit_bio_noacct_nocheck+0x11c/0x338
     submit_bio_noacct+0x134/0x614
     submit_bio+0x28/0xdc
     submit_bh_wbc+0x130/0x1cc
     submit_bh+0x1c/0x28
    
    Fixes: d7038f951828 ("md-bitmap: don't use ->index for pages backing the bitmap file")
    Cc: stable@vger.kernel.org # v6.6+
    Signed-off-by: Heming Zhao <heming.zhao@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240223121128.28985-1-heming.zhao@suse.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 43cf8ad8cd3e4de136fa4582cb682bd45f60b1b3
Author: Arseniy Krasnov <avkrasnov@salutedevices.com>
Date:   Sun Feb 11 00:45:51 2024 +0300

    mtd: rawnand: meson: fix scrambling mode value in command macro
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit ef6f463599e16924cdd02ce5056ab52879dc008c ]
    
    Scrambling mode is enabled by value (1 << 19). NFC_CMD_SCRAMBLER_ENABLE
    is already (1 << 19), so there is no need to shift it again in CMDRWGEN
    macro.
    
    Signed-off-by: Arseniy Krasnov <avkrasnov@salutedevices.com>
    Cc: <Stable@vger.kernel.org>
    Fixes: 8fae856c5350 ("mtd: rawnand: meson: add support for Amlogic NAND flash controller")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240210214551.441610-1-avkrasnov@salutedevices.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f34cd325cc8a5ac4b344fced6ef8caa870d2b5a2
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Jan 8 10:41:05 2024 +0800

    ubifs: ubifs_symlink: Fix memleak of inode->i_link in error path
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 6379b44cdcd67f5f5d986b73953e99700591edfa ]
    
    For error handling path in ubifs_symlink(), inode will be marked as
    bad first, then iput() is invoked. If inode->i_link is initialized by
    fscrypt_encrypt_symlink() in encryption scenario, inode->i_link won't
    be freed by callchain ubifs_free_inode -> fscrypt_free_inode in error
    handling path, because make_bad_inode() has changed 'inode->i_mode' as
    'S_IFREG'.
    Following kmemleak is easy to be reproduced by injecting error in
    ubifs_jnl_update() when doing symlink in encryption scenario:
     unreferenced object 0xffff888103da3d98 (size 8):
      comm "ln", pid 1692, jiffies 4294914701 (age 12.045s)
      backtrace:
       kmemdup+0x32/0x70
       __fscrypt_encrypt_symlink+0xed/0x1c0
       ubifs_symlink+0x210/0x300 [ubifs]
       vfs_symlink+0x216/0x360
       do_symlinkat+0x11a/0x190
       do_syscall_64+0x3b/0xe0
    There are two ways fixing it:
     1. Remove make_bad_inode() in error handling path. We can do that
        because ubifs_evict_inode() will do same processes for good
        symlink inode and bad symlink inode, for inode->i_nlink checking
        is before is_bad_inode().
     2. Free inode->i_link before marking inode bad.
    Method 2 is picked, it has less influence, personally, I think.
    
    Cc: stable@vger.kernel.org
    Fixes: 2c58d548f570 ("fscrypt: cache decrypted symlink target in ->i_link")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Suggested-by: Eric Biggers <ebiggers@kernel.org>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2f809be3c46d88322b173d8e62018d5207921a27
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Tue Feb 20 10:49:03 2024 +0800

    ubi: correct the calculation of fastmap size
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7f174ae4f39e8475adcc09d26c5a43394689ad6c ]
    
    Now that the calculation of fastmap size in ubi_calc_fm_size() is
    incorrect since it miss each user volume's ubi_fm_eba structure and the
    Internal UBI volume info. Let's correct the calculation.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ddb0275d475218842e535e704901871e469d0776
Author: Richard Weinberger <richard@nod.at>
Date:   Wed Jan 24 07:37:02 2024 +0100

    ubi: Check for too small LEB size in VTBL code
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 68a24aba7c593eafa8fd00f2f76407b9b32b47a9 ]
    
    If the LEB size is smaller than a volume table record we cannot
    have volumes.
    In this case abort attaching.
    
    Cc: Chenyuan Yang <cy54@illinois.edu>
    Cc: stable@vger.kernel.org
    Fixes: 801c135ce73d ("UBI: Unsorted Block Images")
    Reported-by: Chenyuan Yang <cy54@illinois.edu>
    Closes: https://lore.kernel.org/linux-mtd/1433EB7A-FC89-47D6-8F47-23BE41B263B3@illinois.edu/
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea4b16dc6dfa5972c0b75c5e9d5d9c6482696810
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Wed Jan 24 17:52:44 2024 +0000

    ubifs: Set page uptodate in the correct place
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 723012cab779eee8228376754e22c6594229bf8f ]
    
    Page cache reads are lockless, so setting the freshly allocated page
    uptodate before we've overwritten it with the data it's supposed to have
    in it will allow a simultaneous reader to see old data.  Move the call
    to SetPageUptodate into ubifs_write_end(), which is after we copied the
    new data into the page.
    
    Fixes: 1e51764a3c2a ("UBIFS: add new flash file system")
    Cc: stable@vger.kernel.org
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit effd79a96b30b145b9f71bdd919085daaeba70cb
Author: Alexander Sverdlin <alexander.sverdlin@siemens.com>
Date:   Wed Feb 21 15:30:18 2024 +0100

    mfd: twl: Select MFD_CORE
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3bb36528d46e494987ee5e9682d08318928ae041 ]
    
    Fix link error:
    ld.bfd: drivers/mfd/twl-core.o: in function `twl_probe':
    git/drivers/mfd/twl-core.c:846: undefined reference to `devm_mfd_add_devices'
    
    Cc:  <stable@vger.kernel.org>
    Fixes: 63416320419e ("mfd: twl-core: Add a clock subdevice for the TWL6032")
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@siemens.com>
    Reviewed-by: Andreas Kemnade <andreas@kemnade.info>
    Link: https://lore.kernel.org/r/20240221143021.3542736-1-alexander.sverdlin@siemens.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 66feec1e3fb684150414951158f1a8fe0e2066fa
Author: Bernd Schubert <bschubert@ddn.com>
Date:   Tue Dec 12 14:33:23 2023 +0100

    fuse: fix VM_MAYSHARE and direct_io_allow_mmap
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9511176bbaee0ac60ecc84e7b01cf5972a59ea17 ]
    
    There were multiple issues with direct_io_allow_mmap:
    
     - fuse_link_write_file() was missing, resulting in warnings in
       fuse_write_file_get() and EIO from msync()
    
     - "vma->vm_ops = &fuse_file_vm_ops" was not set, but especially
       fuse_page_mkwrite is needed.
    
    The semantics of invalidate_inode_pages2() is so far not clearly defined in
    fuse_file_mmap.  It dates back to commit 3121bfe76311 ("fuse: fix
    "direct_io" private mmap") Though, as direct_io_allow_mmap is a new
    feature, that was for MAP_PRIVATE only.  As invalidate_inode_pages2() is
    calling into fuse_launder_folio() and writes out dirty pages, it should be
    safe to call invalidate_inode_pages2 for MAP_PRIVATE and MAP_SHARED as
    well.
    
    Cc: Hao Xu <howeyxu@tencent.com>
    Cc: stable@vger.kernel.org
    Fixes: e78662e818f9 ("fuse: add a new fuse init flag to relax restrictions in no cache mode")
    Signed-off-by: Bernd Schubert <bschubert@ddn.com>
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 14b711d20a294eb6b83accef5bc3ff8ab7d054d2
Author: Jan Kara <jack@suse.cz>
Date:   Mon Feb 5 13:26:26 2024 +0100

    fat: fix uninitialized field in nostale filehandles
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit fde2497d2bc3a063d8af88b258dbadc86bd7b57c ]
    
    When fat_encode_fh_nostale() encodes file handle without a parent it
    stores only first 10 bytes of the file handle. However the length of the
    file handle must be a multiple of 4 so the file handle is actually 12
    bytes long and the last two bytes remain uninitialized. This is not
    great at we potentially leak uninitialized information with the handle
    to userspace. Properly initialize the full handle length.
    
    Link: https://lkml.kernel.org/r/20240205122626.13701-1-jack@suse.cz
    Reported-by: syzbot+3ce5dea5b1539ff36769@syzkaller.appspotmail.com
    Fixes: ea3983ace6b7 ("fat: restructure export_operations")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Acked-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Cc: Amir Goldstein <amir73il@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6d90e52f5bdf7720b02a355b2621521da882938a
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Tue Oct 10 15:55:49 2023 +0100

    bounds: support non-power-of-two CONFIG_NR_CPUS
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit f2d5dcb48f7ba9e3ff249d58fc1fa963d374e66a ]
    
    ilog2() rounds down, so for example when PowerPC 85xx sets CONFIG_NR_CPUS
    to 24, we will only allocate 4 bits to store the number of CPUs instead of
    5.  Use bits_per() instead, which rounds up.  Found by code inspection.
    The effect of this would probably be a misaccounting when doing NUMA
    balancing, so to a user, it would only be a performance penalty.  The
    effects may be more wide-spread; it's hard to tell.
    
    Link: https://lkml.kernel.org/r/20231010145549.1244748-1-willy@infradead.org
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Fixes: 90572890d202 ("mm: numa: Change page last {nid,pid} into {cpu,pid}")
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b38ca636029cae4305ea14989eb5fcbe8dc707a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Feb 12 12:15:52 2024 +0100

    kasan/test: avoid gcc warning for intentional overflow
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit e10aea105e9ed14b62a11844fec6aaa87c6935a3 ]
    
    The out-of-bounds test allocates an object that is three bytes too short
    in order to validate the bounds checking.  Starting with gcc-14, this
    causes a compile-time warning as gcc has grown smart enough to understand
    the sizeof() logic:
    
    mm/kasan/kasan_test.c: In function 'kmalloc_oob_16':
    mm/kasan/kasan_test.c:443:14: error: allocation of insufficient size '13' for type 'struct <anonymous>' with size '16' [-Werror=alloc-size]
      443 |         ptr1 = kmalloc(sizeof(*ptr1) - 3, GFP_KERNEL);
          |              ^
    
    Hide the actual computation behind a RELOC_HIDE() that ensures
    the compiler misses the intentional bug.
    
    Link: https://lkml.kernel.org/r/20240212111609.869266-1-arnd@kernel.org
    Fixes: 3f15801cdc23 ("lib: add kasan test module")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Andrey Konovalov <andreyknvl@gmail.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Marco Elver <elver@google.com>
    Cc: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a26fc26806b110234a62383853d9906ba672ac39
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Thu Feb 22 22:17:23 2024 +0900

    block: Clear zone limits for a non-zoned stacked queue
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit c8f6f88d25929ad2f290b428efcae3b526f3eab0 ]
    
    Device mapper may create a non-zoned mapped device out of a zoned device
    (e.g., the dm-zoned target). In such case, some queue limit such as the
    max_zone_append_sectors and zone_write_granularity endup being non zero
    values for a block device that is not zoned. Avoid this by clearing
    these limits in blk_stack_limits() when the stacked zoned limit is
    false.
    
    Fixes: 3093a479727b ("block: inherit the zoned characteristics in blk_stack_limits")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Link: https://lore.kernel.org/r/20240222131724.1803520-1-dlemoal@kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f53af78d79206cecd22e198a9c0321acf6c0e0dc
Author: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
Date:   Thu Feb 15 18:25:40 2024 +0530

    drm/amdgpu/display: Address kdoc for 'is_psr_su' in 'fill_dc_dirty_rects'
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3651306ae4c7f3f54caa9feb826a93cc69ccebbf ]
    
    The is_psr_su parameter is a boolean flag indicating whether the Panel
    Self Refresh Selective Update (PSR SU) feature is enabled which is a
    power-saving feature that allows only the updated regions of the screen
    to be refreshed, reducing the amount of data that needs to be sent to
    the display.
    
    Fixes the below with gcc W=1:
    drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm.c:5257: warning: Function parameter or member 'is_psr_su' not described in 'fill_dc_dirty_rects'
    
    Fixes: d16df040c8da ("drm/amdgpu: make damage clips support configurable")
    Cc: stable@vger.kernel.org
    Cc: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Cc: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f98e767422d5665ed1ac7fcc1a3f03d8f09c4a30
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Feb 1 22:18:45 2024 +0800

    ext4: correct best extent lstart adjustment logic
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 4fbf8bc733d14bceb16dda46a3f5e19c6a9621c5 ]
    
    When yangerkun review commit 93cdf49f6eca ("ext4: Fix best extent lstart
    adjustment logic in ext4_mb_new_inode_pa()"), it was found that the best
    extent did not completely cover the original request after adjusting the
    best extent lstart in ext4_mb_new_inode_pa() as follows:
    
      original request: 2/10(8)
      normalized request: 0/64(64)
      best extent: 0/9(9)
    
    When we check if best ex can be kept at start of goal, ac_o_ex.fe_logical
    is 2 less than the adjusted best extent logical end 9, so we think the
    adjustment is done. But obviously 0/9(9) doesn't cover 2/10(8), so we
    should determine here if the original request logical end is less than or
    equal to the adjusted best extent logical end.
    
    In addition, add a comment stating when adjusted best_ex will not cover
    the original request, and remove the duplicate assertion because adjusting
    lstart makes no change to b_ex.fe_len.
    
    Link: https://lore.kernel.org/r/3630fa7f-b432-7afd-5f79-781bc3b2c5ea@huawei.com
    Fixes: 93cdf49f6eca ("ext4: Fix best extent lstart adjustment logic in ext4_mb_new_inode_pa()")
    Cc:  <stable@kernel.org>
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Ojaswin Mujoo <ojaswin@linux.ibm.com>
    Link: https://lore.kernel.org/r/20240201141845.1879253-1-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d830249127cba1a3445493c1d9b740b0e6e856f8
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Fri Feb 16 11:24:35 2024 +0100

    pinctrl: qcom: sm8650-lpass-lpi: correct Kconfig name
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 47847b9bcdb13c2da1829323a66651ef63047b77 ]
    
    Use proper model name in SM8650 LPASS pin controller Kconfig entry.
    
    Cc:  <stable@vger.kernel.org>
    Fixes: c4e47673853f ("pinctrl: qcom: sm8650-lpass-lpi: add SM8650 LPASS")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://lore.kernel.org/r/20240216102435.89867-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8637dbde55c68f47613f1a4c8cfe3d588b31aed2
Author: SeongJae Park <sj@kernel.org>
Date:   Mon Feb 19 16:08:02 2024 -0800

    selftests/mqueue: Set timeout to 180 seconds
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 85506aca2eb4ea41223c91c5fe25125953c19b13 ]
    
    While mq_perf_tests runs with the default kselftest timeout limit, which
    is 45 seconds, the test takes about 60 seconds to complete on i3.metal
    AWS instances.  Hence, the test always times out.  Increase the timeout
    to 180 seconds.
    
    Fixes: 852c8cbf34d3 ("selftests/kselftest/runner.sh: Add 45 second timeout per test")
    Cc: <stable@vger.kernel.org> # 5.4.x
    Signed-off-by: SeongJae Park <sj@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 34739a1d03c0ce4ccda64dfe178a10aa5eab7506
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Feb 10 21:28:08 2024 -0800

    sparc: vDSO: fix return value of __setup handler
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5378f00c935bebb846b1fdb0e79cb76c137c56b5 ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) argument or environment
    strings. Also, error return codes don't mean anything to
    obsolete_checksetup() -- only non-zero (usually 1) or zero.
    So return 1 from vdso_setup().
    
    Fixes: 9a08862a5d2e ("vDSO for sparc")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <izh1979@gmail.com>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: sparclinux@vger.kernel.org
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Nick Alcock <nick.alcock@oracle.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240211052808.22635-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7e0e479e06a0dac4347b78aefc2d8e537e7b2656
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Feb 10 21:28:02 2024 -0800

    sparc64: NMI watchdog: fix return value of __setup handler
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3ed7c61e49d65dacb96db798c0ab6fcd55a1f20f ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) argument or environment
    strings. Also, error return codes don't mean anything to
    obsolete_checksetup() -- only non-zero (usually 1) or zero.
    So return 1 from setup_nmi_watchdog().
    
    Fixes: e5553a6d0442 ("sparc64: Implement NMI watchdog on capable cpus.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <izh1979@gmail.com>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: sparclinux@vger.kernel.org
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240211052802.22612-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c1513225885915b658ef2ee319baf5473033967f
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Feb 15 00:14:04 2024 +1100

    powerpc/smp: Increase nr_cpu_ids to include the boot CPU
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 777f81f0a9c780a6443bcf2c7785f0cc2e87c1ef ]
    
    If nr_cpu_ids is too low to include the boot CPU adjust nr_cpu_ids
    upward. Otherwise the kernel will BUG when trying to allocate a paca
    for the boot CPU and fail to boot.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20231229120107.2281153-2-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 096f834c1d6bd40566f33128332c9be78a5fb537
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Feb 15 00:14:04 2024 +1100

    powerpc/smp: Adjust nr_cpu_ids to cover all threads of a core
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 5580e96dad5a439d561d9648ffcbccb739c2a120 ]
    
    If nr_cpu_ids is too low to include at least all the threads of a single
    core adjust nr_cpu_ids upwards. This avoids triggering odd bugs in code
    that assumes all threads of a core are available.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20231229120107.2281153-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f0a44acfc42315d98477505e7251948e9c874ae7
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Wed Jan 31 19:37:11 2024 +0800

    powercap: intel_rapl_tpmi: Fix System Domain probing
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 903eb9fb85e32810f376a2858aad77c9298f9488 ]
    
    Only domain root packages can enumerate System (Psys) domain.
    Whether a package is domain root or not is described in the Bit 0 of the
    Domain Info register.
    
    Add support for Domain Info register and fix the System domain probing
    accordingly.
    
    Fixes: 9eef7f9da928 ("powercap: intel_rapl: Introduce RAPL TPMI interface driver")
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Cc: 6.5+ <stable@vger.kernel.org> # 6.5+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3b25d5a60a820e6d080c198228fe6b351c2322ff
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Wed Jan 31 19:37:10 2024 +0800

    powercap: intel_rapl_tpmi: Fix a register bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit faa9130ce716b286d786d59032bacfd9052c2094 ]
    
    Add the missing Domain Info register. This also fixes the bogus
    definition of the Interrupt register.
    
    Neither of these two registers was used previously.
    
    Fixes: 9eef7f9da928 ("powercap: intel_rapl: Introduce RAPL TPMI interface driver")
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Cc: 6.5+ <stable@vger.kernel.org> # 6.5+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d830808264191e6c8c9d7bba09e107fe9d33ce91
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Wed Jan 31 19:37:09 2024 +0800

    powercap: intel_rapl: Fix locking in TPMI RAPL
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 1aa09b9379a7a644cd2f75ae0bac82b8783df600 ]
    
    The RAPL framework uses CPU hotplug locking to protect the rapl_packages
    list and rp->lead_cpu to guarantee that
    
     1. the RAPL package device is not unprobed and freed
     2. the cached rp->lead_cpu is always valid
    
    for operations like powercap sysfs accesses.
    
    Current RAPL APIs assume being called from CPU hotplug callbacks which
    hold the CPU hotplug lock, but TPMI RAPL driver invokes the APIs in the
    driver's .probe() function without acquiring the CPU hotplug lock.
    
    Fix the problem by providing both locked and lockless versions of RAPL
    APIs.
    
    Fixes: 9eef7f9da928 ("powercap: intel_rapl: Introduce RAPL TPMI interface driver")
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Cc: 6.5+ <stable@vger.kernel.org> # 6.5+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5a4afc977dbf290977d0f3c25384bb0c04a6c882
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Wed Jan 31 19:37:08 2024 +0800

    powercap: intel_rapl: Fix a NULL pointer dereference
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 2d1f5006ff95770da502f8cee2a224a1ff83866e ]
    
    A NULL pointer dereference is triggered when probing the MMIO RAPL
    driver on platforms with CPU ID not listed in intel_rapl_common CPU
    model list.
    
    This is because the intel_rapl_common module still probes on such
    platforms even if 'defaults_msr' is not set after commit 1488ac990ac8
    ("powercap: intel_rapl: Allow probing without CPUID match"). Thus the
    MMIO RAPL rp->priv->defaults is NULL when registering to RAPL framework.
    
    Fix the problem by adding sanity check to ensure rp->priv->rapl_defaults
    is always valid.
    
    Fixes: 1488ac990ac8 ("powercap: intel_rapl: Allow probing without CPUID match")
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Cc: 6.5+ <stable@vger.kernel.org> # 6.5+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 66da2c5fc14fb3a0d6b3228803c271a14036dd28
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Tue Feb 6 09:54:09 2024 +0800

    thermal/intel: Fix intel_tcc_get_temp() to support negative CPU temperature
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7251b9e8a007ddd834aa81f8c7ea338884629fec ]
    
    CPU temperature can be negative in some cases. Thus the negative CPU
    temperature should not be considered as a failure.
    
    Fix intel_tcc_get_temp() and its users to support negative CPU
    temperature.
    
    Fixes: a3c1f066e1c5 ("thermal/intel: Introduce Intel TCC library")
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Reviewed-by: Stanislaw Gruszka <stanislaw.gruszka@linux.intel.com>
    Cc: 6.3+ <stable@vger.kernel.org> # 6.3+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 407cc06e3ea2294036bf02bcd0245b30b56bbd4b
Author: Tor Vic <torvic9@mailbox.org>
Date:   Fri Feb 9 16:42:26 2024 +0100

    cpufreq: amd-pstate: Fix min_perf assignment in amd_pstate_adjust_perf()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b26ffbf800ae3c8d01bdf90d9cd8a37e1606ff06 ]
    
    In the function amd_pstate_adjust_perf(), the 'min_perf' variable is set
    to 'highest_perf' instead of 'lowest_perf'.
    
    Fixes: 1d215f0319c2 ("cpufreq: amd-pstate: Add fast switch function for AMD P-State")
    Reported-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Reviewed-by: Perry Yuan <Perry.Yuan@amd.com>
    Signed-off-by: Tor Vic <torvic9@mailbox.org>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Cc: 6.1+ <stable@vger.kernel.org> # 6.1+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c5d800b2cb77e863dd53d76187d89b25e7abc14
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Jan 24 17:45:03 2024 +0100

    arm64: dts: qcom: sm8550-mtp: correct WCD9385 TX port mapping
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b66966b1bbc0aa58f7af83cbd56d5a206892857c ]
    
    WCD9385 audio codec TX port mapping was copied form HDK8450, but in fact
    it is offset by one.  Correct it to fix recording via analogue
    microphones.
    
    The change is based on QRD8550 and should be correct here as well, but
    was not tested on MTP8550.
    
    Cc: stable@vger.kernel.org
    Fixes: a541667c86a9 ("arm64: dts: qcom: sm8550-mtp: add WCD9385 audio-codec")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240124164505.293202-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a68adc342a8d8a8b31744196812eb3422aeae4fc
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Jan 24 17:45:02 2024 +0100

    arm64: dts: qcom: sm8550-qrd: correct WCD9385 TX port mapping
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 8ca7fbd92c1b28edb5d5df7aeb8bb4886ddb9829 ]
    
    WCD9385 audio codec TX port mapping was copied form HDK8450, but in fact
    it is offset by one.  Correct it to fix recording via analogue
    microphones.
    
    Cc: stable@vger.kernel.org
    Fixes: 83fae950c992 ("arm64: dts: qcom: sm8550-qrd: add WCD9385 audio-codec")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240124164505.293202-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1bb75194c5502d7ddaa80de1ab0419ea2c931124
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jan 9 17:15:30 2024 -0800

    KVM: Always flush async #PF workqueue when vCPU is being destroyed
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 3d75b8aa5c29058a512db29da7cbee8052724157 ]
    
    Always flush the per-vCPU async #PF workqueue when a vCPU is clearing its
    completion queue, e.g. when a VM and all its vCPUs is being destroyed.
    KVM must ensure that none of its workqueue callbacks is running when the
    last reference to the KVM _module_ is put.  Gifting a reference to the
    associated VM prevents the workqueue callback from dereferencing freed
    vCPU/VM memory, but does not prevent the KVM module from being unloaded
    before the callback completes.
    
    Drop the misguided VM refcount gifting, as calling kvm_put_kvm() from
    async_pf_execute() if kvm_put_kvm() flushes the async #PF workqueue will
    result in deadlock.  async_pf_execute() can't return until kvm_put_kvm()
    finishes, and kvm_put_kvm() can't return until async_pf_execute() finishes:
    
     WARNING: CPU: 8 PID: 251 at virt/kvm/kvm_main.c:1435 kvm_put_kvm+0x2d/0x320 [kvm]
     Modules linked in: vhost_net vhost vhost_iotlb tap kvm_intel kvm irqbypass
     CPU: 8 PID: 251 Comm: kworker/8:1 Tainted: G        W          6.6.0-rc1-e7af8d17224a-x86/gmem-vm #119
     Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
     Workqueue: events async_pf_execute [kvm]
     RIP: 0010:kvm_put_kvm+0x2d/0x320 [kvm]
     Call Trace:
      <TASK>
      async_pf_execute+0x198/0x260 [kvm]
      process_one_work+0x145/0x2d0
      worker_thread+0x27e/0x3a0
      kthread+0xba/0xe0
      ret_from_fork+0x2d/0x50
      ret_from_fork_asm+0x11/0x20
      </TASK>
     ---[ end trace 0000000000000000 ]---
     INFO: task kworker/8:1:251 blocked for more than 120 seconds.
           Tainted: G        W          6.6.0-rc1-e7af8d17224a-x86/gmem-vm #119
     "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
     task:kworker/8:1     state:D stack:0     pid:251   ppid:2      flags:0x00004000
     Workqueue: events async_pf_execute [kvm]
     Call Trace:
      <TASK>
      __schedule+0x33f/0xa40
      schedule+0x53/0xc0
      schedule_timeout+0x12a/0x140
      __wait_for_common+0x8d/0x1d0
      __flush_work.isra.0+0x19f/0x2c0
      kvm_clear_async_pf_completion_queue+0x129/0x190 [kvm]
      kvm_arch_destroy_vm+0x78/0x1b0 [kvm]
      kvm_put_kvm+0x1c1/0x320 [kvm]
      async_pf_execute+0x198/0x260 [kvm]
      process_one_work+0x145/0x2d0
      worker_thread+0x27e/0x3a0
      kthread+0xba/0xe0
      ret_from_fork+0x2d/0x50
      ret_from_fork_asm+0x11/0x20
      </TASK>
    
    If kvm_clear_async_pf_completion_queue() actually flushes the workqueue,
    then there's no need to gift async_pf_execute() a reference because all
    invocations of async_pf_execute() will be forced to complete before the
    vCPU and its VM are destroyed/freed.  And that in turn fixes the module
    unloading bug as __fput() won't do module_put() on the last vCPU reference
    until the vCPU has been freed, e.g. if closing the vCPU file also puts the
    last reference to the KVM module.
    
    Note that kvm_check_async_pf_completion() may also take the work item off
    the completion queue and so also needs to flush the work queue, as the
    work will not be seen by kvm_clear_async_pf_completion_queue().  Waiting
    on the workqueue could theoretically delay a vCPU due to waiting for the
    work to complete, but that's a very, very small chance, and likely a very
    small delay.  kvm_arch_async_page_present_queued() unconditionally makes a
    new request, i.e. will effectively delay entering the guest, so the
    remaining work is really just:
    
            trace_kvm_async_pf_completed(addr, cr2_or_gpa);
    
            __kvm_vcpu_wake_up(vcpu);
    
            mmput(mm);
    
    and mmput() can't drop the last reference to the page tables if the vCPU is
    still alive, i.e. the vCPU won't get stuck tearing down page tables.
    
    Add a helper to do the flushing, specifically to deal with "wakeup all"
    work items, as they aren't actually work items, i.e. are never placed in a
    workqueue.  Trying to flush a bogus workqueue entry rightly makes
    __flush_work() complain (kudos to whoever added that sanity check).
    
    Note, commit 5f6de5cbebee ("KVM: Prevent module exit until all VMs are
    freed") *tried* to fix the module refcounting issue by having VMs grab a
    reference to the module, but that only made the bug slightly harder to hit
    as it gave async_pf_execute() a bit more time to complete before the KVM
    module could be unloaded.
    
    Fixes: af585b921e5d ("KVM: Halt vcpu if page it tries to access is swapped out")
    Cc: stable@vger.kernel.org
    Cc: David Matlack <dmatlack@google.com>
    Reviewed-by: Xu Yilun <yilun.xu@intel.com>
    Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Link: https://lore.kernel.org/r/20240110011533.503302-2-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9470ac4b3bd076ef410a8067e30c94ff6d95339b
Author: Li Lingfeng <lilingfeng3@huawei.com>
Date:   Thu Jan 4 21:36:29 2024 +0800

    md: use RCU lock to protect traversal in md_spares_need_change()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 570b9147deb6b07b955b55e06c714ca12a5f3e16 ]
    
    Since md_start_sync() will be called without the protect of mddev_lock,
    and it can run concurrently with array reconfiguration, traversal of rdev
    in it should be protected by RCU lock.
    Commit bc08041b32ab ("md: suspend array in md_start_sync() if array need
    reconfiguration") added md_spares_need_change() to md_start_sync(),
    casusing use of rdev without any protection.
    Fix this by adding RCU lock in md_spares_need_change().
    
    Fixes: bc08041b32ab ("md: suspend array in md_start_sync() if array need reconfiguration")
    Cc: stable@vger.kernel.org # 6.7+
    Signed-off-by: Li Lingfeng <lilingfeng3@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240104133629.1277517-1-lilingfeng@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3440326476042e7a81b3f32d1dd310d9e9763a03
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Jan 15 04:16:29 2024 +0200

    media: nxp: imx8-isi: Mark all crossbar sink pads as MUST_CONNECT
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9b71021b2ea537632b01e51e3f003df24a637858 ]
    
    All the sink pads of the crossbar switch require an active link if
    they're part of the pipeline. Mark them with the
    MEDIA_PAD_FL_MUST_CONNECT flag to fail pipeline validation if they're
    not connected. This allows removing a manual check when translating
    streams.
    
    Cc: stable@vger.kernel.org # 6.1
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a71c90f67391eb4828cef665054d04e1d1a2904f
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Jan 15 01:04:52 2024 +0200

    media: mc: Expand MUST_CONNECT flag to always require an enabled link
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b3decc5ce7d778224d266423b542326ad469cb5f ]
    
    The MEDIA_PAD_FL_MUST_CONNECT flag indicates that the pad requires an
    enabled link to stream, but only if it has any link at all. This makes
    little sense, as if a pad is part of a pipeline, there are very few use
    cases for an active link to be mandatory only if links exist at all. A
    review of in-tree drivers confirms they all need an enabled link for
    pads marked with the MEDIA_PAD_FL_MUST_CONNECT flag.
    
    Expand the scope of the flag by rejecting pads that have no links at
    all. This requires modifying the pipeline build code to add those pads
    to the pipeline.
    
    Cc: stable@vger.kernel.org # 6.1
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fe671fcb55d7f662a741a5f821b5737198ef8a51
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Jan 15 00:30:02 2024 +0200

    media: mc: Rename pad variable to clarify intent
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9ec9109cf9f611e3ec9ed0355afcc7aae5e73176 ]
    
    The pad local variable in the media_pipeline_explore_next_link()
    function is used to store the pad through which the entity has been
    reached. Rename it to origin to reflect that and make the code easier to
    read. This will be even more important in subsequent commits when
    expanding the function with additional logic.
    
    Cc: stable@vger.kernel.org # 6.1
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4530d5c3679f071125fb05aa184612624f47941e
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Jan 15 00:30:02 2024 +0200

    media: mc: Add num_links flag to media_pad
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit baeddf94aa61879b118f2faa37ed126d772670cc ]
    
    Maintain a counter of the links connected to a pad in the media_pad
    structure. This helps checking if a pad is connected to anything, which
    will be used in the pipeline building code.
    
    Cc: stable@vger.kernel.org # 6.1
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 67cea92efed51055845adbfc4bcb8d5fc08596a9
Author: Marek Vasut <marex@denx.de>
Date:   Fri Dec 1 16:06:04 2023 +0100

    media: nxp: imx8-isi: Check whether crossbar pad is non-NULL before access
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit eb2f932100288dbb881eadfed02e1459c6b9504c ]
    
    When translating source to sink streams in the crossbar subdev, the
    driver tries to locate the remote subdev connected to the sink pad. The
    remote pad may be NULL, if userspace tries to enable a stream that ends
    at an unconnected crossbar sink. When that occurs, the driver
    dereferences the NULL pad, leading to a crash.
    
    Prevent the crash by checking if the pad is NULL before using it, and
    return an error if it is.
    
    Cc: stable@vger.kernel.org # 6.1
    Fixes: cf21f328fcaf ("media: nxp: Add i.MX8 ISI driver")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://lore.kernel.org/r/20231201150614.63300-1-marex@denx.de
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0d1821121095af3da63795e6440541f71a5d5703
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Jan 15 00:24:12 2024 +0200

    media: mc: Fix flags handling when creating pad links
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 422f7af75d03d50895938d38bc9cb8be759c440f ]
    
    The media_create_pad_link() function doesn't correctly clear reject link
    type flags, nor does it set the DATA_LINK flag. It only works because
    the MEDIA_LNK_FL_DATA_LINK flag's value is 0.
    
    Fix it by returning an error if any link type flag is set. This doesn't
    introduce any regression, as nobody calls the media_create_pad_link()
    function with link type flags (easily checked by grepping for the flag
    in the source code, there are very few hits).
    
    Set the MEDIA_LNK_FL_DATA_LINK explicitly, which is a no-op that the
    compiler will optimize out, but is still useful to make the code more
    explicit and easier to understand.
    
    Cc: stable@vger.kernel.org # 6.1
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0ac2ce48eacd3884d47d13eeb808ce7f3c35a94a
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Sun Jan 14 15:55:40 2024 +0200

    media: mc: Add local pad to pipeline regardless of the link state
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 78f0daa026d4c5e192d31801d1be6caf88250220 ]
    
    When building pipelines by following links, the
    media_pipeline_explore_next_link() function only traverses enabled
    links. The remote pad of a disabled link is not added to the pipeline,
    and neither is the local pad. While the former is correct as disabled
    links should not be followed, not adding the local pad breaks processing
    of the MEDIA_PAD_FL_MUST_CONNECT flag.
    
    The MEDIA_PAD_FL_MUST_CONNECT flag is checked in the
    __media_pipeline_start() function that iterates over all pads after
    populating the pipeline. If the pad is not present, the check gets
    skipped, rendering it useless.
    
    Fix this by adding the local pad of all links regardless of their state,
    only skipping the remote pad for disabled links.
    
    Cc: stable@vger.kernel.org # 6.1
    Fixes: ae219872834a ("media: mc: entity: Rewrite media_pipeline_start()")
    Reported-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Closes: https://lore.kernel.org/linux-media/7658a15a-80c5-219f-2477-2a94ba6c6ba1@kontron.de
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 20a3e11c4f89bd6d61fc97a8ec35dd72a268b0e8
Author: Gui-Dong Han <2045gemini@gmail.com>
Date:   Fri Dec 22 13:50:30 2023 +0800

    media: xc4000: Fix atomicity violation in xc4000_get_frequency
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 36d503ad547d1c75758a6fcdbec2806f1b6aeb41 ]
    
    In xc4000_get_frequency():
            *freq = priv->freq_hz + priv->freq_offset;
    The code accesses priv->freq_hz and priv->freq_offset without holding any
    lock.
    
    In xc4000_set_params():
            // Code that updates priv->freq_hz and priv->freq_offset
            ...
    
    xc4000_get_frequency() and xc4000_set_params() may execute concurrently,
    risking inconsistent reads of priv->freq_hz and priv->freq_offset. Since
    these related data may update during reading, it can result in incorrect
    frequency calculation, leading to atomicity violations.
    
    This possible bug is found by an experimental static analysis tool
    developed by our team, BassCheck[1]. This tool analyzes the locking APIs
    to extract function pairs that can be concurrently executed, and then
    analyzes the instructions in the paired functions to identify possible
    concurrency bugs including data races and atomicity violations. The above
    possible bug is reported when our tool analyzes the source code of
    Linux 6.2.
    
    To address this issue, it is proposed to add a mutex lock pair in
    xc4000_get_frequency() to ensure atomicity. With this patch applied, our
    tool no longer reports the possible bug, with the kernel configuration
    allyesconfig for x86_64. Due to the lack of associated hardware, we cannot
    test the patch in runtime testing, and just verify it according to the
    code logic.
    
    [1] https://sites.google.com/view/basscheck/
    
    Fixes: 4c07e32884ab ("[media] xc4000: Fix get_frequency()")
    Cc: stable@vger.kernel.org
    Reported-by: BassCheck <bass@buaa.edu.cn>
    Signed-off-by: Gui-Dong Han <2045gemini@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea80aaae8c394d6a220216b5491fd24431bdd1af
Author: Philipp Stanner <pstanner@redhat.com>
Date:   Wed Jan 31 10:00:20 2024 +0100

    pci_iounmap(): Fix MMIO mapping leak
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 7626913652cc786c238e2dd7d8740b17d41b2637 ]
    
    The #ifdef ARCH_HAS_GENERIC_IOPORT_MAP accidentally also guards iounmap(),
    which means MMIO mappings are leaked.
    
    Move the guard so we call iounmap() for MMIO mappings.
    
    Fixes: 316e8d79a095 ("pci_iounmap'2: Electric Boogaloo: try to make sense of it all")
    Link: https://lore.kernel.org/r/20240131090023.12331-2-pstanner@redhat.com
    Reported-by: Danilo Krummrich <dakr@redhat.com>
    Suggested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Philipp Stanner <pstanner@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Cc: <stable@vger.kernel.org> # v5.15+
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e969586780a2635f23f4c344e177d11019a25eca
Author: Zack Rusin <zack.rusin@broadcom.com>
Date:   Fri Jan 26 15:08:04 2024 -0500

    drm/vmwgfx: Fix the lifetime of the bo cursor memory
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9a9e8a7159ca09af9b1a300a6c8e8b6ff7501c76 ]
    
    The cleanup can be dispatched while the atomic update is still active,
    which means that the memory acquired in the atomic update needs to
    not be invalidated by the cleanup. The buffer objects in vmw_plane_state
    instead of using the builtin map_and_cache were trying to handle
    the lifetime of the mapped memory themselves, leading to crashes.
    
    Use the map_and_cache instead of trying to manage the lifetime of the
    buffer objects held by the vmw_plane_state.
    
    Fixes kernel oops'es in IGT's kms_cursor_legacy forked-bo.
    
    Signed-off-by: Zack Rusin <zack.rusin@broadcom.com>
    Fixes: bb6780aa5a1d ("drm/vmwgfx: Diff cursors when using cmds")
    Cc: <stable@vger.kernel.org> # v6.2+
    Reviewed-by: Martin Krastev <martin.krastev@broadcom.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240126200804.732454-6-zack.rusin@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a087d1b7404078a75d56ea47ed59d362b2a8c0dc
Author: Hugo Villeneuve <hvilleneuve@dimonoff.com>
Date:   Thu Jan 18 10:21:57 2024 -0500

    serial: max310x: fix NULL pointer dereference in I2C instantiation
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 0d27056c24efd3d63a03f3edfbcfc4827086b110 ]
    
    When trying to instantiate a max14830 device from userspace:
    
        echo max14830 0x60 > /sys/bus/i2c/devices/i2c-2/new_device
    
    we get the following error:
    
        Unable to handle kernel NULL pointer dereference at virtual address...
        ...
        Call trace:
            max310x_i2c_probe+0x48/0x170 [max310x]
            i2c_device_probe+0x150/0x2a0
        ...
    
    Add check for validity of devtype to prevent the error, and abort probe
    with a meaningful error message.
    
    Fixes: 2e1f2d9a9bdb ("serial: max310x: implement I2C support")
    Cc: stable@vger.kernel.org
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hugo Villeneuve <hvilleneuve@dimonoff.com>
    Link: https://lore.kernel.org/r/20240118152213.2644269-2-hugo@hugovil.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cf5f603eddab8c5e851494725edd2aaa56332700
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Jan 24 13:18:55 2024 +0100

    arm64: dts: qcom: sm8450-hdk: correct AMIC4 and AMIC5 microphones
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 915253bdd64f2372fa5f6c58d75cb99972c7401d ]
    
    Due to lack of documentation the AMIC4 and AMIC5 analogue microphones
    were never actually working, so the audio routing for them was added
    hoping it is correct.  It turned out not correct - their routing should
    point to SWR_INPUT0 (so audio mixer TX SMIC MUX0 = SWR_MIC0) and
    SWR_INPUT1 (so audio mixer TX SMIC MUX0 = SWR_MIC1), respectively.  With
    proper mixer settings and fixed LPASS TX macr codec TX SMIC MUXn
    widgets, this makes all microphones working on HDK8450.
    
    Cc: stable@vger.kernel.org
    Fixes: f20cf2bc3f77 ("arm64: dts: qcom: sm8450-hdk: add other analogue microphones")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20240124121855.162730-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 75430eefa9f1b40bb38296ab411667a2f8cb6758
Author: Zack Rusin <zack.rusin@broadcom.com>
Date:   Wed Jan 10 15:03:05 2024 -0500

    drm/vmwgfx: Fix possible null pointer derefence with invalid contexts
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 517621b7060096e48e42f545fa6646fc00252eac ]
    
    vmw_context_cotable can return either an error or a null pointer and its
    usage sometimes went unchecked. Subsequent code would then try to access
    either a null pointer or an error value.
    
    The invalid dereferences were only possible with malformed userspace
    apps which never properly initialized the rendering contexts.
    
    Check the results of vmw_context_cotable to fix the invalid derefs.
    
    Thanks:
    ziming zhang(@ezrak1e) from Ant Group Light-Year Security Lab
    who was the first person to discover it.
    Niels De Graef who reported it and helped to track down the poc.
    
    Fixes: 9c079b8ce8bf ("drm/vmwgfx: Adapt execbuf to the new validation api")
    Cc: <stable@vger.kernel.org> # v4.20+
    Reported-by: Niels De Graef  <ndegraef@redhat.com>
    Signed-off-by: Zack Rusin <zack.rusin@broadcom.com>
    Cc: Martin Krastev <martin.krastev@broadcom.com>
    Cc: Maaz Mombasawala <maaz.mombasawala@broadcom.com>
    Cc: Ian Forbes <ian.forbes@broadcom.com>
    Cc: Broadcom internal kernel review list <bcm-kernel-feedback-list@broadcom.com>
    Cc: dri-devel@lists.freedesktop.org
    Reviewed-by: Maaz Mombasawala <maaz.mombasawala@broadcom.com>
    Reviewed-by: Martin Krastev <martin.krastev@broadcom.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240110200305.94086-1-zack.rusin@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 21e09fb486a017ec62b2c8b952e6beefeaaaecd7
Author: Duje Mihanović <duje.mihanovic@skole.hr>
Date:   Thu Jan 25 19:39:32 2024 +0100

    arm: dts: marvell: Fix maxium->maxim typo in brownstone dts
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 831e0cd4f9ee15a4f02ae10b67e7fdc10eb2b4fc ]
    
    Fix an obvious spelling error in the PMIC compatible in the MMP2
    Brownstone DTS file.
    
    Fixes: 58f1193e6210 ("mfd: max8925: Add dts")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Duje Mihanović <duje.mihanovic@skole.hr>
    Reported-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Closes: https://lore.kernel.org/linux-devicetree/1410884282-18041-1-git-send-email-k.kozlowski@samsung.com/
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20240125-brownstone-typo-fix-v2-1-45bc48a0c81c@skole.hr
    [krzysztof: Just 10 years to take a patch, not bad! Rephrased commit
     msg]
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a3f69fa5523a67f761dd041e946b90110c78a573
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Thu Nov 16 10:01:22 2023 +0100

    smack: Handle SMACK64TRANSMUTE in smack_inode_setsecurity()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit ac02f007d64eb2769d0bde742aac4d7a5fc6e8a5 ]
    
    If the SMACK64TRANSMUTE xattr is provided, and the inode is a directory,
    update the in-memory inode flags by setting SMK_INODE_TRANSMUTE.
    
    Cc: stable@vger.kernel.org
    Fixes: 5c6d1125f8db ("Smack: Transmute labels on specified directories") # v2.6.38.x
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 063bf632274ded8381af1fc8832c025db9e64abb
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Thu Nov 16 10:01:21 2023 +0100

    smack: Set SMACK64TRANSMUTE only for dirs in smack_inode_setxattr()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 9c82169208dde516510aaba6bbd8b13976690c5d ]
    
    Since the SMACK64TRANSMUTE xattr makes sense only for directories, enforce
    this restriction in smack_inode_setxattr().
    
    Cc: stable@vger.kernel.org
    Fixes: 5c6d1125f8db ("Smack: Transmute labels on specified directories") # v2.6.38.x
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 290d5205a4dc7334b18a05fd985a35c3b87e9a3a
Author: Amit Pundir <amit.pundir@linaro.org>
Date:   Tue Jan 23 11:58:14 2024 +0530

    clk: qcom: gcc-sdm845: Add soft dependency on rpmhpd
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 1d9054e3a4fd36e2949e616f7360bdb81bcc1921 ]
    
    With the addition of RPMh power domain to the GCC node in
    device tree, we noticed a significant delay in getting the
    UFS driver probed on AOSP which futher led to mount failures
    because Android do not support rootwait. So adding a soft
    dependency on RPMh power domain which informs modprobe to
    load rpmhpd module before gcc-sdm845.
    
    Cc: stable@vger.kernel.org # v5.4+
    Fixes: 4b6ea15c0a11 ("arm64: dts: qcom: sdm845: Add missing RPMh power domain to GCC")
    Suggested-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/20240123062814.2555649-1-amit.pundir@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 00e86d47972679a92961715f59e2db3b5c3702c4
Author: Joakim Zhang <joakim.zhang@cixtech.com>
Date:   Sun Dec 17 13:36:59 2023 +0800

    remoteproc: virtio: Fix wdg cannot recovery remote processor
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b327c72753d6a78de37aed6c35756f2ef62897ee ]
    
    Recovery remote processor failed when wdg irq received:
    [    0.842574] remoteproc remoteproc0: crash detected in cix-dsp-rproc: type watchdog
    [    0.842750] remoteproc remoteproc0: handling crash #1 in cix-dsp-rproc
    [    0.842824] remoteproc remoteproc0: recovering cix-dsp-rproc
    [    0.843342] remoteproc remoteproc0: stopped remote processor cix-dsp-rproc
    [    0.847901] rproc-virtio rproc-virtio.0.auto: Failed to associate buffer
    [    0.847979] remoteproc remoteproc0: failed to probe subdevices for cix-dsp-rproc: -16
    
    The reason is that dma coherent mem would not be released when
    recovering the remote processor, due to rproc_virtio_remove()
    would not be called, where the mem released. It will fail when
    it try to allocate and associate buffer again.
    
    Releasing reserved memory from rproc_virtio_dev_release(), instead of
    rproc_virtio_remove().
    
    Fixes: 1d7b61c06dc3 ("remoteproc: virtio: Create platform device for the remoteproc_virtio")
    Signed-off-by: Joakim Zhang <joakim.zhang@cixtech.com>
    Acked-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20231217053659.3245745-1-joakim.zhang@cixtech.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e26972d9f2631da7106a87a71286733d089fb15e
Author: Krishna chaitanya chundru <quic_krichai@quicinc.com>
Date:   Mon Dec 18 19:32:36 2023 +0530

    arm64: dts: qcom: sc7280: Add additional MSI interrupts
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b8ba66b40da3230a8675cb5dd5c2dea5bce24d62 ]
    
    Current MSI's mapping doesn't have all the vectors. This platform
    supports 8 vectors each vector supports 32 MSI's, so total MSI's
    supported is 256.
    
    Add all the MSI groups supported for this PCIe instance in this platform.
    
    Fixes: 92e0ee9f83b3 ("arm64: dts: qcom: sc7280: Add PCIe and PHY related nodes")
    cc: stable@vger.kernel.org
    Signed-off-by: Krishna chaitanya chundru <quic_krichai@quicinc.com>
    Link: https://lore.kernel.org/r/20231218-additional_msi-v1-1-de6917392684@quicinc.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d67f4e632908c4818664c10111d4541d40ba7ec
Author: Hidenori Kobayashi <hidenorik@chromium.org>
Date:   Tue Jan 9 17:09:09 2024 +0900

    media: staging: ipu3-imgu: Set fields before media_entity_pads_init()
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 87318b7092670d4086bfec115a0280a60c51c2dd ]
    
    The imgu driver fails to probe with the following message because it
    does not set the pad's flags before calling media_entity_pads_init().
    
    [   14.596315] ipu3-imgu 0000:00:05.0: failed initialize subdev media entity (-22)
    [   14.596322] ipu3-imgu 0000:00:05.0: failed to register subdev0 ret (-22)
    [   14.596327] ipu3-imgu 0000:00:05.0: failed to register pipes (-22)
    [   14.596331] ipu3-imgu 0000:00:05.0: failed to create V4L2 devices (-22)
    
    Fix the initialization order so that the driver probe succeeds. The ops
    initialization is also moved together for readability.
    
    Fixes: a0ca1627b450 ("media: staging/intel-ipu3: Add v4l2 driver based on media framework")
    Cc: <stable@vger.kernel.org> # 6.7
    Cc: Dan Carpenter <dan.carpenter@linaro.org>
    Signed-off-by: Hidenori Kobayashi <hidenorik@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 59df742fcab2483d44baed28e1260fdaed206ae7
Author: Arend van Spriel <arend.vanspriel@broadcom.com>
Date:   Sat Jan 6 11:38:34 2024 +0100

    wifi: brcmfmac: avoid invalid list operation when vendor attach fails
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit b822015a1f57268f5b2ff656736dc4004e7097da ]
    
    When the brcmf_fwvid_attach() fails the driver instance is not added
    to the vendor list. Hence we should not try to delete it from that
    list when the brcmf_fwvid_detach() function is called in cleanup path.
    
    Cc: stable@vger.kernel.org # 6.2.x
    Fixes: d6a5c562214f ("wifi: brcmfmac: add support for vendor-specific firmware api")
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240106103835.269149-3-arend.vanspriel@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6d25f3ce49ad72c60cd2611515ff887ddbe56e15
Author: Zheng Wang <zyytlz.wz@163.com>
Date:   Sun Jan 7 08:25:04 2024 +0100

    wifi: brcmfmac: Fix use-after-free bug in brcmf_cfg80211_detach
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 0f7352557a35ab7888bc7831411ec8a3cbe20d78 ]
    
    This is the candidate patch of CVE-2023-47233 :
    https://nvd.nist.gov/vuln/detail/CVE-2023-47233
    
    In brcm80211 driver,it starts with the following invoking chain
    to start init a timeout worker:
    
    ->brcmf_usb_probe
      ->brcmf_usb_probe_cb
        ->brcmf_attach
          ->brcmf_bus_started
            ->brcmf_cfg80211_attach
              ->wl_init_priv
                ->brcmf_init_escan
                  ->INIT_WORK(&cfg->escan_timeout_work,
                      brcmf_cfg80211_escan_timeout_worker);
    
    If we disconnect the USB by hotplug, it will call
    brcmf_usb_disconnect to make cleanup. The invoking chain is :
    
    brcmf_usb_disconnect
      ->brcmf_usb_disconnect_cb
        ->brcmf_detach
          ->brcmf_cfg80211_detach
            ->kfree(cfg);
    
    While the timeout woker may still be running. This will cause
    a use-after-free bug on cfg in brcmf_cfg80211_escan_timeout_worker.
    
    Fix it by deleting the timer and canceling the worker in
    brcmf_cfg80211_detach.
    
    Fixes: e756af5b30b0 ("brcmfmac: add e-scan support.")
    Signed-off-by: Zheng Wang <zyytlz.wz@163.com>
    Cc: stable@vger.kernel.org
    [arend.vanspriel@broadcom.com: keep timer delete as is and cancel work just before free]
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240107072504.392713-1-arend.vanspriel@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7329b2e42fd252f04917bd9f8800a54dba412fe5
Author: Zack Rusin <zack.rusin@broadcom.com>
Date:   Sun Dec 24 00:25:40 2023 -0500

    drm/vmwgfx: Unmap the surface before resetting it on a plane state
    
    BugLink: https://bugs.launchpad.net/bugs/2060531
    
    [ Upstream commit 27571c64f1855881753e6f33c3186573afbab7ba ]
    
    Switch to a new plane state requires unreferencing of all held surfaces.
    In the work required for mob cursors the mapped surfaces started being
    cached but the variable indicating whether the surface is currently
    mapped was not being reset. This leads to crashes as the duplicated
    state, incorrectly, indicates the that surface is mapped even when
    no surface is present. That's because after unreferencing the surface
    it's perfectly possible for the plane to be backed by a bo instead of a
    surface.
    
    Reset the surface mapped flag when unreferencing the plane state surface
    to fix null derefs in cleanup. Fixes crashes in KDE KWin 6.0 on Wayland:
    
    Oops: 0000 [#1] PREEMPT SMP PTI
    CPU: 4 PID: 2533 Comm: kwin_wayland Not tainted 6.7.0-rc3-vmwgfx #2
    Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020
    RIP: 0010:vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx]
    Code: 00 00 00 75 3a 48 83 c4 10 5b 5d c3 cc cc cc cc 48 8b b3 a8 00 00 00 48 c7 c7 99 90 43 c0 e8 93 c5 db ca 48 8b 83 a8 00 00 00 <48> 8b 78 28 e8 e3 f>
    RSP: 0018:ffffb6b98216fa80 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: ffff969d84cdcb00 RCX: 0000000000000027
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff969e75f21600
    RBP: ffff969d4143dc50 R08: 0000000000000000 R09: ffffb6b98216f920
    R10: 0000000000000003 R11: ffff969e7feb3b10 R12: 0000000000000000
    R13: 0000000000000000 R14: 000000000000027b R15: ffff969d49c9fc00
    FS:  00007f1e8f1b4180(0000) GS:ffff969e75f00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000028 CR3: 0000000104006004 CR4: 00000000003706f0
    Call Trace:
     <TASK>
     ? __die+0x23/0x70
     ? page_fault_oops+0x171/0x4e0
     ? exc_page_fault+0x7f/0x180
     ? asm_exc_page_fault+0x26/0x30
     ? vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx]
     drm_atomic_helper_cleanup_planes+0x9b/0xc0
     commit_tail+0xd1/0x130
     drm_atomic_helper_commit+0x11a/0x140
     drm_atomic_commit+0x97/0xd0
     ? __pfx___drm_printfn_info+0x10/0x10
     drm_atomic_helper_update_plane+0xf5/0x160
     drm_mode_cursor_universal+0x10e/0x270
     drm_mode_cursor_common+0x102/0x230
     ? __pfx_drm_mode_cursor2_ioctl+0x10/0x10
     drm_ioctl_kernel+0xb2/0x110
     drm_ioctl+0x26d/0x4b0
     ? __pfx_drm_mode_cursor2_ioctl+0x10/0x10
     ? __pfx_drm_ioctl+0x10/0x10
     vmw_generic_ioctl+0xa4/0x110 [vmwgfx]
     __x64_sys_ioctl+0x94/0xd0
     do_syscall_64+0x61/0xe0
     ? __x64_sys_ioctl+0xaf/0xd0
     ? syscall_exit_to_user_mode+0x2b/0x40
     ? do_syscall_64+0x70/0xe0
     ? __x64_sys_ioctl+0xaf/0xd0
     ? syscall_exit_to_user_mode+0x2b/0x40
     ? do_syscall_64+0x70/0xe0
     ? exc_page_fault+0x7f/0x180
     entry_SYSCALL_64_after_hwframe+0x6e/0x76
    RIP: 0033:0x7f1e93f279ed
    Code: 04 25 28 00 00 00 48 89 45 c8 31 c0 48 8d 45 10 c7 45 b0 10 00 00 00 48 89 45 b8 48 8d 45 d0 48 89 45 c0 b8 10 00 00 00 0f 05 <89> c2 3d 00 f0 ff f>
    RSP: 002b:00007ffca0faf600 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 000055db876ed2c0 RCX: 00007f1e93f279ed
    RDX: 00007ffca0faf6c0 RSI: 00000000c02464bb RDI: 0000000000000015
    RBP: 00007ffca0faf650 R08: 000055db87184010 R09: 0000000000000007
    R10: 000055db886471a0 R11: 0000000000000246 R12: 00007ffca0faf6c0
    R13: 00000000c02464bb R14: 0000000000000015 R15: 00007ffca0faf790
     </TASK>
    Modules linked in: snd_seq_dummy snd_hrtimer nf_conntrack_netbios_ns nf_conntrack_broadcast nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_ine>
    CR2: 0000000000000028
    ---[ end trace 0000000000000000 ]---
    RIP: 0010:vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx]
    Code: 00 00 00 75 3a 48 83 c4 10 5b 5d c3 cc cc cc cc 48 8b b3 a8 00 00 00 48 c7 c7 99 90 43 c0 e8 93 c5 db ca 48 8b 83 a8 00 00 00 <48> 8b 78 28 e8 e3 f>
    RSP: 0018:ffffb6b98216fa80 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: ffff969d84cdcb00 RCX: 0000000000000027
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff969e75f21600
    RBP: ffff969d4143dc50 R08: 0000000000000000 R09: ffffb6b98216f920
    R10: 0000000000000003 R11: ffff969e7feb3b10 R12: 0000000000000000
    R13: 0000000000000000 R14: 000000000000027b R15: ffff969d49c9fc00
    FS:  00007f1e8f1b4180(0000) GS:ffff969e75f00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000028 CR3: 0000000104006004 CR4: 00000000003706f0
    
    Signed-off-by: Zack Rusin <zack.rusin@broadcom.com>
    Fixes: 485d98d472d5 ("drm/vmwgfx: Add support for CursorMob and CursorBypass 4")
    Reported-by: Stefan Hoffmeister <stefan.hoffmeister@econos.de>
    Closes: https://gitlab.freedesktop.org/drm/misc/-/issues/34
    Cc: Martin Krastev <martin.krastev@broadcom.com>
    Cc: Maaz Mombasawala <maaz.mombasawala@broadcom.com>
    Cc: Ian Forbes <ian.forbes@broadcom.com>
    Cc: Broadcom internal kernel review list <bcm-kernel-feedback-list@broadcom.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v5.19+
    Acked-by: Javier Martinez Canillas <javierm@redhat.com>
    Reviewed-by: Maaz Mombasawala <maaz.mombasawala@broadcom.com>
    Reviewed-by: Martin Krastev <martin.krastev@broadcom.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231224052540.605040-1-zack.rusin@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 48785771621694d1531bc8cefa4ce5e2ffc39bdb
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Thu Feb 8 10:33:35 2024 +0100

    s390/pkey: improve pkey retry behavior
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch reworks and improves the pkey retry behavior for the
    pkey_ep11key2pkey() function. In contrast to the pkey_skey2pkey()
    function which is used to trigger a protected key derivation from an
    CCA secure data or cipher key the EP11 counterpart function had no
    proper retry loop implemented. This patch now introduces code which
    acts similar to the retry already done for CCA keys for this function
    used for EP11 keys.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 5dabfecad4a0868201af2ffb69dcd3223f9ca630)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0db10f86ff5ee4dbca332e40ac0175277e70ccb4
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 18:35:51 2024 +0100

    s390/zcrypt: improve zcrypt retry behavior
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch reworks and improves the zcrypt retry behavior:
    - The zcrypt_rescan_req counter has been removed. This
      counter variable has been increased on some transport
      errors and was used as a gatekeeper for AP bus rescans.
    - Rework of the zcrypt_process_rescan() function to not
      use the above counter variable any more. Instead now
      always the ap_bus_force_rescan() function is called
      (as this has been improved with a previous patch).
    - As the zcrpyt_process_rescan() function is called in
      all cprb send functions in case of the first attempt
      to send failed with ENODEV now before the next attempt
      to send an cprb is started.
    - Introduce a define ZCRYPT_WAIT_BINDINGS_COMPLETE_MS
      for the amount of milliseconds to have the zcrypt API
      wait for AP bindings complete. This amount has been
      reduced to 30s (was 60s). Some playing around showed
      that 30s is a really fair limit.
    
    The result of the above together with the patches to
    improve the AP scan bus functions is that after the
    first loop of cprb send retries when the result is a
    ENODEV the AP bus scan is always triggered (synchronous).
    If the AP bus scan detects changes in the configuration,
    all the send functions now retry when the first attempt
    was failing with ENODEV in the hope that now a suitable
    device has appeared.
    
    About concurrency: The ap_bus_force_rescan() uses a mutex
    to ensure only one active AP bus scan is running. Another
    caller of this function is blocked as long as the scan is
    running but does not cause yet another scan. Instead the
    result of the 'other' scan is used. This affects only tasks
    which run into an initial ENODEV. Tasks with successful
    delivery of cprbs will never invoke the bus scan and thus
    never get blocked by the mutex.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit c3384369bc530e95958985918771af6d7b74d014)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c6d5c258e5d2c27fe59e6589f7a8e1ad2ae2e0ab
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Fri Jan 26 15:43:10 2024 +0100

    s390/zcrypt: introduce retries on in-kernel send CPRB functions
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    The both functions zcrypt_send_cprb() and zcrypt_send_ep11_cprb()
    are used to send CPRBs in-kernel from different sources. For
    example the pkey module may call one of the functions in
    zcrypt_ep11misc.c to trigger a derive of a protected key from
    a secure key blob via an existing crypto card. These both
    functions are then the internal API to send the CPRB and
    receive the response.
    
    All the ioctl functions to send an CPRB down to the addressed
    crypto card use some kind of retry mechanism. When the first
    attempt fails with ENODEV, a bus rescan is triggered and a
    loop with retries is carried out.
    
    For the both named internal functions there was never any
    retry attempt made. This patch now introduces the retry code
    even for this both internal functions to have effectively
    same behavior on sending an CPRB from an in-kernel source
    and sending an CPRB from userspace via ioctl.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 77c51fc6fba7af918db58808d38513f21e91493d)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9050474814a01a25052fbcb254f3e77b497cf786
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 17:42:50 2024 +0100

    s390/ap: introduce mutex to lock the AP bus scan
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    Rework the invocations around ap_scan_bus():
    - Protect ap_scan_bus() with a mutex to make sure only one
      scan at a time is running.
    - The workqueue invocation which is triggered by either the
      module init or via AP bus scan timer expiration uses this
      mutex and if there is already a scan running, the work
      is simple aborted (as the job is done by another task).
    - The ap_bus_force_rescan() which is invoked by higher level
      layers mostly on failures which indicate a bus scan may
      help is reworked to call ap_scan_bus() direct instead of
      enqueuing work into a system workqueue and waiting for that
      to finish. Of course the mutex is respected and in case of
      another task already running a bus scan the shortcut of
      waiting for this scan to finish and reusing the scan result
      is taken.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit eacf5b3651c530e0666efbd64e1d1115258c5903)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4bcdfef8e7780f5787ef9a43de0c2e00f73d3292
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 17:15:47 2024 +0100

    s390/ap: rework ap_scan_bus() to return true on config change
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    The AP scan bus function now returns true if there have
    been any config changes detected. This will become
    important in a follow up patch which will exploit this
    hint for further actions. This also required to have
    the AP scan bus timer callback reworked as the function
    signature has changed to bool ap_scan_bus(void).
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit b5caf05ee8795a628992fe7b5ac3e7b9bbd735c5)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36e11c4e1f570267b8d3d2ba40f55e5ee318e0e7
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 16:50:05 2024 +0100

    s390/ap: clarify AP scan bus related functions and variables
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch tries to clarify the functions and variables
    around the AP scan bus job. All these variables and
    functions start with ap_scan_bus and are declared in
    one place now.
    
    No functional changes in this patch - only renaming and
    move of code or declarations.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 99b3126e46ef8c5c40291b61958f7b9e78b9f162)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit abd5fa1c2da417904ebe32a978ac020112bdf80c
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 15:30:22 2024 +0100

    s390/ap: rearm APQNs bindings complete completion
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    The APQN bindings complete completion was used to reflect
    that 1st the AP bus initial scan is done and 2nd all the
    detected APQNs have been bound to a device driver.
    This was a single-shot action. However, as the AP bus
    supports hot-plug it may be that new APQNs appear reflected
    as new AP queue and card devices which need to be bound
    to appropriate device drivers. So the condition that
    all existing AP queue devices are bound to device drivers
    may go away for a certain time.
    
    This patch now checks during AP bus scan for maybe new AP
    devices appearing and does a re-init of the internal completion
    variable. So the AP bus function ap_wait_apqn_bindings_complete()
    now may block on this condition variable even later after
    initial scan is through when new APQNs appear which need to
    get bound.
    
    This patch also moves the check for binding complete invocation
    from the probe function to the end of the AP bus scan function.
    This change also covers some weird scenarios where during a
    card hotplug the binding of the card device was sufficient for
    binding complete but the queue devices where still in the
    process of being discovered.
    
    As of now this change has no impact on existing code. The
    behavior change in the now later bindings complete should not
    impact any code (and has been tested so far). The only
    exploiter is the zcrypt function zcrypt_wait_api_operational()
    which only initial calls ap_wait_apqn_bindings_complete().
    
    However, this new behavior of the AP bus wait for APQNs bindings
    complete function will be used in a later patch exploiting
    this for the zcrypt API layer.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 778412ab915d6d257300a645e25d219a6344a58e)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cb8f9316e5dd7aeeff3089c49c0b4fd889df15a1
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Fri Feb 9 16:20:21 2024 +0100

    s390/zcrypt: add debug possibility for CCA and EP11 messages
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch introduces dynamic debug hexdump invocation
    possibilities to be able to:
    - dump an CCA or EP11 CPRB request as early as possible
      when received via ioctl from userspace but after the
      ap message has been collected together.
    - dump an CCA or EP11 CPRB reply short before it is
      transferred via ioctl into userspace.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit b69b65f51148531ff3dd942a038614f77d9d60e3)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b6d417ee052a542fb62a161c14ad8edcfc8ec9f5
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Fri Feb 9 16:14:23 2024 +0100

    s390/ap: add debug possibility for AP messages
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch introduces two dynamic debug hexdump
    invocation possibilities to be able to a) dump an
    AP message immediately before it goes into the
    firmware queue and b) dump a fresh from the
    firmware queue received AP message.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 6a2892d09df545c6ea828bc8ad08112961b88f6d)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c73f80341693b1d9b818e58418a1f31497e35ef
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 10:14:47 2024 +0100

    s390/pkey: introduce dynamic debugging for pkey
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch replaces all the s390 debug feature calls with
    debug level by dynamic debug calls pr_debug. These calls
    are much more flexible and each single invocation can get
    enabled/disabled at runtime wheres the s390 debug feature
    debug calls have only one knob - enable or disable all in
    one bunch.
    
    This patch follows a similar change for the AP bus and
    zcrypt device driver code. All this code uses dynamic
    debugging with pr_debug and friends for emitting debug
    traces now.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 6d749b4e02087fa4a68092eef260d31a345603c6)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b7c8bc0ca798e54ed59b4372fea5d98813697fa2
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Mon Jan 29 16:56:42 2024 +0100

    s390/pkey: harmonize pkey s390 debug feature calls
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    Cleanup and harmonize the s390 debug feature calls
    and defines for the pkey module to be similar to
    the debug feature as it is used in the zcrypt device
    driver and AP bus.
    
    More or less only renaming but no functional changes.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 0ccac45295403a7730d7bdd8b047a824b7a23a2e)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 56b56296034896225f5d8fbd5ec569cab75dbca5
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Jan 30 10:07:28 2024 +0100

    s390/zcrypt: introduce dynamic debugging for AP and zcrypt code
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch replaces all the s390 debug feature calls with
    debug level by dynamic debug calls pr_debug. These calls
    are much more flexible and each single invocation can get
    enabled/disabled at runtime wheres the s390 debug feature
    debug calls have only one knob - enable or disable all in
    one bunch. The benefit is especially significant with
    high frequency called functions like the AP bus scan. In
    most debugging scenarios you don't want and need them, but
    sometimes it is crucial to know exactly when and how long
    the AP bus scan took.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 08b2c3706de21d77cfe88017536f790a86bed397)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 87ece292d092d44821a34c6383521409b60a101d
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Mon Jan 29 16:53:21 2024 +0100

    s390/zcrypt: harmonize debug feature calls and defines
    
    BugLink: https://bugs.launchpad.net/bugs/2050019
    
    This patch harmonizes the calls and defines around the
    s390 debug feature as it is used in the AP bus and
    zcrypt device driver code.
    
    More or less cleanup and renaming, no functional changes.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    (cherry picked from commit 88e4c0da9b08fb8dd52840922837589157455449)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 321c515488af0d28a8b973babf39517c8bde99f1
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Jan 25 14:32:07 2024 +0100

    x86/efistub: Remap kernel text read-only before dropping NX attribute
    
    BugLink: https://bugs.launchpad.net/bugs/2060130
    
    Currently, the EFI stub invokes the EFI memory attributes protocol to
    strip any NX restrictions from the entire loaded kernel, resulting in
    all code and data being mapped read-write-execute.
    
    The point of the EFI memory attributes protocol is to remove the need
    for all memory allocations to be mapped with both write and execute
    permissions by default, and make it the OS loader's responsibility to
    transition data mappings to code mappings where appropriate.
    
    Even though the UEFI specification does not appear to leave room for
    denying memory attribute changes based on security policy, let's be
    cautious and avoid relying on the ability to create read-write-execute
    mappings. This is trivially achievable, given that the amount of kernel
    code executing via the firmware's 1:1 mapping is rather small and
    limited to the .head.text region. So let's drop the NX restrictions only
    on that subregion, but not before remapping it as read-only first.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    (cherry picked from commit 9c55461040a9264b7e44444c53d26480b438eda6)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 14802ff2594b4100ccdaa9ad731bb1179a273432
Author: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date:   Thu Feb 15 03:00:02 2024 +0000

    efi/libstub: Add get_event_log() support for CC platforms
    
    BugLink: https://bugs.launchpad.net/bugs/2060130
    
    To allow event log info access after boot, EFI boot stub extracts
    the event log information and installs it in an EFI configuration
    table. Currently, EFI boot stub only supports installation of event
    log only for TPM 1.2 and TPM 2.0 protocols. Extend the same support
    for CC protocol. Since CC platform also uses TCG2 format, reuse TPM2
    support code as much as possible.
    
    Link: https://uefi.org/specs/UEFI/2.10/38_Confidential_Computing.html#efi-cc-measurement-protocol [1]
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Link: https://lkml.kernel.org/r/0229a87e-fb19-4dad-99fc-4afd7ed4099a%40collabora.com
    [ardb: Split out final events table handling to avoid version confusion]
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    (cherry picked from commit d228814b1913444dfdd9a25519ed7b38a19653e2)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d21392e470725d0059d1f9759ea3a155f5e07f51
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Mar 4 10:40:24 2024 +0100

    efi/libstub: Measure into CC protocol if TCG2 protocol is absent
    
    BugLink: https://bugs.launchpad.net/bugs/2060130
    
    To accommodate confidential compute VMs that expose the simplified CC
    measurement protocol instead of the full-blown TCG2 one, fall back to
    the former if the latter does not exist.
    
    The CC protocol was designed to be used in this manner, which is why the
    types and prototypes have been kept the same where possible. So reuse
    the existing code, and only deviate from the TCG2 code path where
    needed.
    
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    (cherry picked from commit ac93cbfc2a2c8e9641a4b49cd1e7b9d34f935e1a)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit db760a966ae0d92f7efec822d9d90cc71d0f68e4
Author: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date:   Thu Feb 15 03:00:01 2024 +0000

    efi/libstub: Add Confidential Computing (CC) measurement typedefs
    
    BugLink: https://bugs.launchpad.net/bugs/2060130
    
    If the virtual firmware implements TPM support, TCG2 protocol will be
    used for kernel measurements and event logging support. But in CC
    environment, not all platforms support or enable the TPM feature. UEFI
    specification [1] exposes protocol and interfaces used for kernel
    measurements in CC platforms without TPM support.
    
    More details about the EFI CC measurements and logging can be found
    in [1].
    
    Link: https://uefi.org/specs/UEFI/2.10/38_Confidential_Computing.html#efi-cc-measurement-protocol [1]
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    [ardb: Drop code changes, keep typedefs and #define's only]
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    (cherry picked from commit 0bbe5b0ea97aaaea6387bab89919a8654b07df27)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 984ccd041681e5ea343cf2f35b29b9cac5fac0ad
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Mar 7 15:56:10 2024 +0100

    efi/tpm: Use symbolic GUID name from spec for final events table
    
    BugLink: https://bugs.launchpad.net/bugs/2060130
    
    The LINUX_EFI_ GUID identifiers are only intended to be used to refer to
    GUIDs that are part of the Linux implementation, and are not considered
    external ABI. (Famous last words).
    
    GUIDs that already have a symbolic name in the spec should use that
    name, to avoid confusion between firmware components. So use the
    official name EFI_TCG2_FINAL_EVENTS_TABLE_GUID for the TCG2 'final
    events' configuration table.
    
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Reviewed-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    (cherry picked from commit 7a1381e8313f1f01cbecbe3fc2ddaa24fe37033a)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9d847a660d8b4ea548d11d86ca1e578b3da42fde
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Mar 8 09:17:07 2024 +0100

    efi/libstub: Use TPM event typedefs from the TCG PC Client spec
    
    BugLink: https://bugs.launchpad.net/bugs/2060130
    
    Our efi_tcg2_tagged_event is not defined in the EFI spec, but it is not
    a local invention either: it was taken from the TCG PC Client spec,
    where it is called TCG_PCClientTaggedEvent.
    
    Note that this spec also contains some guidance on how to populate it,
    which is not being followed closely at the moment; it claims that the
    event size should cover the TCG_PCClientTaggedEvent and its payload
    only, but it currently covers the preceding efi_tcg2_event too.
    
    However, this directly contradicts the TCG EFI protocol specification,
    which states very clearly that the event size should cover the entire
    data structure, including the leading efi_tcg2_event_t struct.
    
    So rename the struct and document its provenance, but retain the
    existing logic to populate the size field.
    
    Link: https://lore.kernel.org/all/20240308085754.476197-8-ardb+git@google.com
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    (cherry picked from commit 3e0b0f880e9e8f39f433dc6734cff035f9de2c8e)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fcdc129535c391f090b66d264dd0cf06fbaf606c
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Mon Feb 26 12:03:21 2024 +0000

    UBUNTU: SAUCE: arm64/mm: improve comment in contpte_ptep_get_lockless()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Make clear the atmicity/consistency requirements of the API and how we
    achieve them.
    
    Link: https://lore.kernel.org/linux-mm/Zc-Tqqfksho3BHmU@arm.com/
    Link: https://lkml.kernel.org/r/20240226120321.1055731-3-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 94c18d5f7e0d612ce3fb9cb4aa8cfb1308d57a0a)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a154bcdc6e746653f92fb36a95025702cc76adc6
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Mon Feb 26 12:03:20 2024 +0000

    UBUNTU: SAUCE: arm64/mm: export contpte symbols only to GPL users
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Patch series "Address some contpte nits".
    
    These 2 patches address some nits raised by Catalin late in the review cycle for
    my contpte series [1].
    
    [1] https://lore.kernel.org/linux-mm/20240215103205.2607016-1-ryan.roberts@arm.com/
    
    This patch (of 2):
    
    The contpte symbols must be exported since some of the public inline
    ptep_* APIs are called from modules and these inlines now call the contpte
    functions.  Originally they were exported as EXPORT_SYMBOL() for fear of
    breaking out-of-tree modules.  But we subsequently concluded that
    EXPORT_SYMBOL_GPL() should be safe since these functions are deeply core
    mm routines, and any module operating at this level is not going to be
    able to survive on EXPORT_SYMBOL alone.
    
    Link: https://lkml.kernel.org/r/20240226120321.1055731-1-ryan.roberts@arm.com
    Link: https://lore.kernel.org/linux-mm/f9fc2b31-11cb-4969-8961-9c89fea41b74@nvidia.com/
    Link: https://lkml.kernel.org/r/20240226120321.1055731-2-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 912609e96cd728766373d84903f12a6d836de518)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4b9e3296232cec15f841b051140a56678608c41f
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:32:05 2024 +0000

    UBUNTU: SAUCE: arm64/mm: automatically fold contpte mappings
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    There are situations where a change to a single PTE could cause the
    contpte block in which it resides to become foldable (i.e.  could be
    repainted with the contiguous bit).  Such situations arise, for example,
    when user space temporarily changes protections, via mprotect, for
    individual pages, such can be the case for certain garbage collectors.
    
    We would like to detect when such a PTE change occurs.  However this can
    be expensive due to the amount of checking required.  Therefore only
    perform the checks when an indiviual PTE is modified via mprotect
    (ptep_modify_prot_commit() -> set_pte_at() -> set_ptes(nr=1)) and only
    when we are setting the final PTE in a contpte-aligned block.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-19-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit f0c2264958e18bc7bc35b567d51b99461e4de34f)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cf06eb7d6347e5ac11e5b0a09855b1c2da6b92e7
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:32:04 2024 +0000

    UBUNTU: SAUCE: arm64/mm: __always_inline to improve fork() perf
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    As set_ptes() and wrprotect_ptes() become a bit more complex, the compiler
    may choose not to inline them.  But this is critical for fork()
    performance.  So mark the functions, along with contpte_try_unfold() which
    is called by them, as __always_inline.  This is worth ~1% on the fork()
    microbenchmark with order-0 folios (the common case).
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-18-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit b972fc6afba002319fe23bc698ce6431ee43868c)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f5e9770e62ed1efa3f66d9ae4c6c90a48be17e03
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:32:03 2024 +0000

    UBUNTU: SAUCE: arm64/mm: implement pte_batch_hint()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    When core code iterates over a range of ptes and calls ptep_get() for each
    of them, if the range happens to cover contpte mappings, the number of pte
    reads becomes amplified by a factor of the number of PTEs in a contpte
    block.  This is because for each call to ptep_get(), the implementation
    must read all of the ptes in the contpte block to which it belongs to
    gather the access and dirty bits.
    
    This causes a hotspot for fork(), as well as operations that unmap memory
    such as munmap(), exit and madvise(MADV_DONTNEED).  Fortunately we can fix
    this by implementing pte_batch_hint() which allows their iterators to skip
    getting the contpte tail ptes when gathering the batch of ptes to operate
    on.  This results in the number of PTE reads returning to 1 per pte.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-17-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit fb5451e5f72b31002760083a99fbb41771c4f1ad)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 34522cc77d28598ebb63f5e2f84e4685686cdd44
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:32:02 2024 +0000

    UBUNTU: SAUCE: mm: add pte_batch_hint() to reduce scanning in folio_pte_batch()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Some architectures (e.g.  arm64) can tell from looking at a pte, if some
    follow-on ptes also map contiguous physical memory with the same pgprot.
    (for arm64, these are contpte mappings).
    
    Take advantage of this knowledge to optimize folio_pte_batch() so that it
    can skip these ptes when scanning to create a batch.  By default, if an
    arch does not opt-in, folio_pte_batch() returns a compile-time 1, so the
    changes are optimized out and the behaviour is as before.
    
    arm64 will opt-in to providing this hint in the next patch, which will
    greatly reduce the cost of ptep_get() when scanning a range of contptes.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-16-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit c6ec76a2ebc5829e5826b218d2e1475ec11b333e)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2ad40e7ad4ca7962d750a2ed02c544a54fca16b8
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:32:01 2024 +0000

    UBUNTU: SAUCE: arm64/mm: implement new [get_and_]clear_full_ptes() batch APIs
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Optimize the contpte implementation to fix some of the
    exit/munmap/dontneed performance regression introduced by the initial
    contpte commit.  Subsequent patches will solve it entirely.
    
    During exit(), munmap() or madvise(MADV_DONTNEED), mappings must be
    cleared.  Previously this was done 1 PTE at a time.  But the core-mm
    supports batched clear via the new [get_and_]clear_full_ptes() APIs.  So
    let's implement those APIs and for fully covered contpte mappings, we no
    longer need to unfold the contpte.  This significantly reduces unfolding
    operations, reducing the number of tlbis that must be issued.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-15-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 6b1e4efb6f5499ae8f9f5cdda7502285a0edbf51)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9f340f5ba5bf8580c652c5d3082b5a34f9c68f62
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:32:00 2024 +0000

    UBUNTU: SAUCE: arm64/mm: implement new wrprotect_ptes() batch API
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Optimize the contpte implementation to fix some of the fork performance
    regression introduced by the initial contpte commit.  Subsequent patches
    will solve it entirely.
    
    During fork(), any private memory in the parent must be write-protected.
    Previously this was done 1 PTE at a time.  But the core-mm supports
    batched wrprotect via the new wrprotect_ptes() API.  So let's implement
    that API and for fully covered contpte mappings, we no longer need to
    unfold the contpte.  This has 2 benefits:
    
      - reduced unfolding, reduces the number of tlbis that must be issued.
      - The memory remains contpte-mapped ("folded") in the parent, so it
        continues to benefit from the more efficient use of the TLB after
        the fork.
    
    The optimization to wrprotect a whole contpte block without unfolding is
    possible thanks to the tightening of the Arm ARM in respect to the
    definition and behaviour when 'Misprogramming the Contiguous bit'.  See
    section D21194 at https://developer.arm.com/documentation/102105/ja-07/
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-14-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 311a6cf29690bb8295327bad0e76e0ad48cadcc4)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36c0ddcea4a66eca7245654cb0818d25b64362e3
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:59 2024 +0000

    UBUNTU: SAUCE: arm64/mm: wire up PTE_CONT for user mappings
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    With the ptep API sufficiently refactored, we can now introduce a new
    "contpte" API layer, which transparently manages the PTE_CONT bit for user
    mappings.
    
    In this initial implementation, only suitable batches of PTEs, set via
    set_ptes(), are mapped with the PTE_CONT bit.  Any subsequent modification
    of individual PTEs will cause an "unfold" operation to repaint the contpte
    block as individual PTEs before performing the requested operation.
    While, a modification of a single PTE could cause the block of PTEs to
    which it belongs to become eligible for "folding" into a contpte entry,
    "folding" is not performed in this initial implementation due to the costs
    of checking the requirements are met.  Due to this, contpte mappings will
    degrade back to normal pte mappings over time if/when protections are
    changed.  This will be solved in a future patch.
    
    Since a contpte block only has a single access and dirty bit, the semantic
    here changes slightly; when getting a pte (e.g.  ptep_get()) that is part
    of a contpte mapping, the access and dirty information are pulled from the
    block (so all ptes in the block return the same access/dirty info).  When
    changing the access/dirty info on a pte (e.g.  ptep_set_access_flags())
    that is part of a contpte mapping, this change will affect the whole
    contpte block.  This is works fine in practice since we guarantee that
    only a single folio is mapped by a contpte block, and the core-mm tracks
    access/dirty information per folio.
    
    In order for the public functions, which used to be pure inline, to
    continue to be callable by modules, export all the contpte_* symbols that
    are now called by those public inline functions.
    
    The feature is enabled/disabled with the ARM64_CONTPTE Kconfig parameter
    at build time.  It defaults to enabled as long as its dependency,
    TRANSPARENT_HUGEPAGE is also enabled.  The core-mm depends upon
    TRANSPARENT_HUGEPAGE to be able to allocate large folios, so if its not
    enabled, then there is no chance of meeting the physical contiguity
    requirement for contpte mappings.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-13-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 4602e5757bcceb231c3a13c36c373ad4a750eddb)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ab3bfb19e9a6fdf0fa4677c339741ef88666c60f
Author: dann frazier <dann.frazier@canonical.com>
Date:   Wed Mar 27 14:32:55 2024 -0600

    UBUNTU: [Config] arm64: ARM64_CONTPTE=y
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5c674fd45da6e01e63e0e64d335500db4ca8ac5a
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:58 2024 +0000

    UBUNTU: SAUCE: arm64/mm: dplit __flush_tlb_range() to elide trailing DSB
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Split __flush_tlb_range() into __flush_tlb_range_nosync() +
    __flush_tlb_range(), in the same way as the existing flush_tlb_page()
    arrangement.  This allows calling __flush_tlb_range_nosync() to elide the
    trailing DSB.  Forthcoming "contpte" code will take advantage of this when
    clearing the young bit from a contiguous range of ptes.
    
    Ordering between dsb and mmu_notifier_arch_invalidate_secondary_tlbs() has
    changed, but now aligns with the ordering of __flush_tlb_page().  It has
    been discussed that __flush_tlb_page() may be wrong though.  Regardless,
    both will be resolved separately if needed.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-12-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit d9d8dc2bd3fb2689309f704fe85e6dde2b1bd73a)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fd1f6d8f0c1c6e549c01a9ba5987bf548ad06264
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:57 2024 +0000

    UBUNTU: SAUCE: arm64/mm: new ptep layer to manage contig bit
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Create a new layer for the in-table PTE manipulation APIs.  For now, The
    existing API is prefixed with double underscore to become the arch-private
    API and the public API is just a simple wrapper that calls the private
    API.
    
    The public API implementation will subsequently be used to transparently
    manipulate the contiguous bit where appropriate.  But since there are
    already some contig-aware users (e.g.  hugetlb, kernel mapper), we must
    first ensure those users use the private API directly so that the future
    contig-bit manipulations in the public API do not interfere with those
    existing uses.
    
    The following APIs are treated this way:
    
     - ptep_get
     - set_pte
     - set_ptes
     - pte_clear
     - ptep_get_and_clear
     - ptep_test_and_clear_young
     - ptep_clear_flush_young
     - ptep_set_wrprotect
     - ptep_set_access_flags
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-11-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 5a00bfd6a52cf31e93d5f1b734087deb32a3cffa)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4e9953d8a571eaa015b156f6841cc4894480f417
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:56 2024 +0000

    UBUNTU: SAUCE: arm64/mm: convert ptep_clear() to ptep_get_and_clear()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    ptep_clear() is a generic wrapper around the arch-implemented
    ptep_get_and_clear().  We are about to convert ptep_get_and_clear() into a
    public version and private version (__ptep_get_and_clear()) to support the
    transparent contpte work.  We won't have a private version of ptep_clear()
    so let's convert it to directly call ptep_get_and_clear().
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-10-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit cbb0294fdd72a5f63ec59fad5c0a98d63bd572fc)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0299a276bdcf7935861751ec611d7e4243334737
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:55 2024 +0000

    UBUNTU: SAUCE: arm64/mm: convert set_pte_at() to set_ptes(..., 1)
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Since set_ptes() was introduced, set_pte_at() has been implemented as a
    generic macro around set_ptes(..., 1).  So this change should continue to
    generate the same code.  However, making this change prepares us for the
    transparent contpte support.  It means we can reroute set_ptes() to
    __set_ptes().  Since set_pte_at() is a generic macro, there will be no
    equivalent __set_pte_at() to reroute to.
    
    Note that a couple of calls to set_pte_at() remain in the arch code.  This
    is intentional, since those call sites are acting on behalf of core-mm and
    should continue to call into the public set_ptes() rather than the
    arch-private __set_ptes().
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-9-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 659e193027910a5d3083e34b488ab459d2ef5082)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0afe6ee504e90ee77405607faa2d7cb6fb076d18
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:54 2024 +0000

    UBUNTU: SAUCE: arm64/mm: convert READ_ONCE(*ptep) to ptep_get(ptep)
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    There are a number of places in the arch code that read a pte by using the
    READ_ONCE() macro.  Refactor these call sites to instead use the
    ptep_get() helper, which itself is a READ_ONCE().  Generated code should
    be the same.
    
    This will benefit us when we shortly introduce the transparent contpte
    support.  In this case, ptep_get() will become more complex so we now have
    all the code abstracted through it.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-8-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Tested-by: John Hubbard <jhubbard@nvidia.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 532736558e8ef2865eae1d84b52dda4422cac810)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f866c2280726313657637cd102f807c9aeddd6d3
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:53 2024 +0000

    UBUNTU: SAUCE: mm: tidy up pte_next_pfn() definition
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Now that the all architecture overrides of pte_next_pfn() have been
    replaced with pte_advance_pfn(), we can simplify the definition of the
    generic pte_next_pfn() macro so that it is unconditionally defined.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-7-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit fb23bf6bd288db3187c27b971e558a3e9f70ae96)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 53e3ca93a91003aa92315029bfe7dc4b479989c4
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:52 2024 +0000

    UBUNTU: SAUCE: x86/mm: convert pte_next_pfn() to pte_advance_pfn()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Core-mm needs to be able to advance the pfn by an arbitrary amount, so
    override the new pte_advance_pfn() API to do so.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-6-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 506b586769ecef8c83fff64de227e7fa84b7be42)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f015be0d7307a1e2225f87abab0d60fc6991e5e3
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:51 2024 +0000

    UBUNTU: SAUCE: arm64/mm: convert pte_next_pfn() to pte_advance_pfn()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Core-mm needs to be able to advance the pfn by an arbitrary amount, so
    override the new pte_advance_pfn() API to do so.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-5-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit c1bd2b4028ae5b4d2ada64b31c40cc44cdf00972)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fcf86e395dc992f2aec9801e4e3f3c9645914435
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:50 2024 +0000

    UBUNTU: SAUCE: mm: introduce pte_advance_pfn() and use for pte_next_pfn()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    The goal is to be able to advance a PTE by an arbitrary number of PFNs.
    So introduce a new API that takes a nr param.  Define the default
    implementation here and allow for architectures to override.
    pte_next_pfn() becomes a wrapper around pte_advance_pfn().
    
    Follow up commits will convert each overriding architecture's
    pte_next_pfn() to pte_advance_pfn().
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-4-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 583ceaaa339960e673ac0029f323bb1c6ffc96d7)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4d6975bf748fb8e8236a6d2ba92092fadcbca72a
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:49 2024 +0000

    UBUNTU: SAUCE: mm: thp: batch-collapse PMD with set_ptes()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Refactor __split_huge_pmd_locked() so that a present PMD can be collapsed
    to PTEs in a single batch using set_ptes().
    
    This should improve performance a little bit, but the real motivation is
    to remove the need for the arm64 backend to have to fold the contpte
    entries.  Instead, since the ptes are set as a batch, the contpte blocks
    can be initially set up pre-folded (once the arm64 contpte support is
    added in the next few patches).  This leads to noticeable performance
    improvement during split.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-3-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 2bdba9868a4ffcb1492db7272f34b54387910177)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 23bec348da6c79069c77b89d53e67b3ee32ecd8c
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Thu Feb 15 10:31:48 2024 +0000

    UBUNTU: SAUCE: mm: clarify the spec for set_ptes()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Patch series "Transparent Contiguous PTEs for User Mappings", v6.
    
    This is a series to opportunistically and transparently use contpte
    mappings (set the contiguous bit in ptes) for user memory when those
    mappings meet the requirements.  The change benefits arm64, but there is
    some (very) minor refactoring for x86 to enable its integration with
    core-mm.
    
    It is part of a wider effort to improve performance by allocating and
    mapping variable-sized blocks of memory (folios).  One aim is for the 4K
    kernel to approach the performance of the 16K kernel, but without breaking
    compatibility and without the associated increase in memory.  Another aim
    is to benefit the 16K and 64K kernels by enabling 2M THP, since this is
    the contpte size for those kernels.  We have good performance data that
    demonstrates both aims are being met (see below).
    
    Of course this is only one half of the change.  We require the mapped
    physical memory to be the correct size and alignment for this to actually
    be useful (i.e.  64K for 4K pages, or 2M for 16K/64K pages).  Fortunately
    folios are solving this problem for us.  Filesystems that support it (XFS,
    AFS, EROFS, tmpfs, ...) will allocate large folios up to the PMD size
    today, and more filesystems are coming.  And for anonymous memory,
    "multi-size THP" is now upstream.
    
    Patch Layout
    ============
    
    In this version, I've split the patches to better show each optimization:
    
      - 1-2:    mm prep: misc code and docs cleanups
      - 3-6:    mm,arm64,x86 prep: Add pte_advance_pfn() and make pte_next_pfn() a
                generic wrapper around it
      - 7-11:   arm64 prep: Refactor ptep helpers into new layer
      - 12:     functional contpte implementation
      - 23-18:  various optimizations on top of the contpte implementation
    
    Testing
    =======
    
    I've tested this series on both Ampere Altra (bare metal) and Apple M2 (VM):
      - mm selftests (inc new tests written for multi-size THP); no regressions
      - Speedometer Java script benchmark in Chromium web browser; no issues
      - Kernel compilation; no issues
      - Various tests under high memory pressure with swap enabled; no issues
    
    Performance
    ===========
    
    High Level Use Cases
    ~~~~~~~~~~~~~~~~~~~~
    
    First some high level use cases (kernel compilation and speedometer JavaScript
    benchmarks). These are running on Ampere Altra (I've seen similar improvements
    on Android/Pixel 6).
    
    baseline:                  mm-unstable (mTHP switched off)
    mTHP:                      + enable 16K, 32K, 64K mTHP sizes "always"
    mTHP + contpte:            + this series
    mTHP + contpte + exefolio: + patch at [6], which series supports
    
    Kernel Compilation with -j8 (negative is faster):
    
    | kernel                    | real-time | kern-time | user-time |
    |---------------------------|-----------|-----------|-----------|
    | baseline                  |      0.0% |      0.0% |      0.0% |
    | mTHP                      |     -5.0% |    -39.1% |     -0.7% |
    | mTHP + contpte            |     -6.0% |    -41.4% |     -1.5% |
    | mTHP + contpte + exefolio |     -7.8% |    -43.1% |     -3.4% |
    
    Kernel Compilation with -j80 (negative is faster):
    
    | kernel                    | real-time | kern-time | user-time |
    |---------------------------|-----------|-----------|-----------|
    | baseline                  |      0.0% |      0.0% |      0.0% |
    | mTHP                      |     -5.0% |    -36.6% |     -0.6% |
    | mTHP + contpte            |     -6.1% |    -38.2% |     -1.6% |
    | mTHP + contpte + exefolio |     -7.4% |    -39.2% |     -3.2% |
    
    Speedometer (positive is faster):
    
    | kernel                    | runs_per_min |
    |:--------------------------|--------------|
    | baseline                  |         0.0% |
    | mTHP                      |         1.5% |
    | mTHP + contpte            |         3.2% |
    | mTHP + contpte + exefolio |         4.5% |
    
    Micro Benchmarks
    ~~~~~~~~~~~~~~~~
    
    The following microbenchmarks are intended to demonstrate the performance of
    fork() and munmap() do not regress. I'm showing results for order-0 (4K)
    mappings, and for order-9 (2M) PTE-mapped THP. Thanks to David for sharing his
    benchmarks.
    
    baseline:                  mm-unstable + batch zap [7] series
    contpte-basic:             + patches 0-19; functional contpte implementation
    contpte-batch:             + patches 20-23; implement new batched APIs
    contpte-inline:            + patch 24; __always_inline to help compiler
    contpte-fold:              + patch 25; fold contpte mapping when sensible
    
    Primary platform is Ampere Altra bare metal. I'm also showing results for M2 VM
    (on top of MacOS) for reference, although experience suggests this might not be
    the most reliable for performance numbers of this sort:
    
    | FORK           |         order-0        |         order-9        |
    | Ampere Altra   |------------------------|------------------------|
    | (pte-map)      |       mean |     stdev |       mean |     stdev |
    |----------------|------------|-----------|------------|-----------|
    | baseline       |       0.0% |      2.7% |       0.0% |      0.2% |
    | contpte-basic  |       6.3% |      1.4% |    1948.7% |      0.2% |
    | contpte-batch  |       7.6% |      2.0% |      -1.9% |      0.4% |
    | contpte-inline |       3.6% |      1.5% |      -1.0% |      0.2% |
    | contpte-fold   |       4.6% |      2.1% |      -1.8% |      0.2% |
    
    | MUNMAP         |         order-0        |         order-9        |
    | Ampere Altra   |------------------------|------------------------|
    | (pte-map)      |       mean |     stdev |       mean |     stdev |
    |----------------|------------|-----------|------------|-----------|
    | baseline       |       0.0% |      0.5% |       0.0% |      0.3% |
    | contpte-basic  |       1.8% |      0.3% |    1104.8% |      0.1% |
    | contpte-batch  |      -0.3% |      0.4% |       2.7% |      0.1% |
    | contpte-inline |      -0.1% |      0.6% |       0.9% |      0.1% |
    | contpte-fold   |       0.1% |      0.6% |       0.8% |      0.1% |
    
    | FORK           |         order-0        |         order-9        |
    | Apple M2 VM    |------------------------|------------------------|
    | (pte-map)      |       mean |     stdev |       mean |     stdev |
    |----------------|------------|-----------|------------|-----------|
    | baseline       |       0.0% |      1.4% |       0.0% |      0.8% |
    | contpte-basic  |       6.8% |      1.2% |     469.4% |      1.4% |
    | contpte-batch  |      -7.7% |      2.0% |      -8.9% |      0.7% |
    | contpte-inline |      -6.0% |      2.1% |      -6.0% |      2.0% |
    | contpte-fold   |       5.9% |      1.4% |      -6.4% |      1.4% |
    
    | MUNMAP         |         order-0        |         order-9        |
    | Apple M2 VM    |------------------------|------------------------|
    | (pte-map)      |       mean |     stdev |       mean |     stdev |
    |----------------|------------|-----------|------------|-----------|
    | baseline       |       0.0% |      0.6% |       0.0% |      0.4% |
    | contpte-basic  |       1.6% |      0.6% |     233.6% |      0.7% |
    | contpte-batch  |       1.9% |      0.3% |      -3.9% |      0.4% |
    | contpte-inline |       2.2% |      0.8% |      -1.6% |      0.9% |
    | contpte-fold   |       1.5% |      0.7% |      -1.7% |      0.7% |
    
    Misc
    ~~~~
    
    John Hubbard at Nvidia has indicated dramatic 10x performance improvements
    for some workloads at [8], when using 64K base page kernel.
    
    [1] https://lore.kernel.org/linux-arm-kernel/20230622144210.2623299-1-ryan.roberts@arm.com/
    [2] https://lore.kernel.org/linux-arm-kernel/20231115163018.1303287-1-ryan.roberts@arm.com/
    [3] https://lore.kernel.org/linux-arm-kernel/20231204105440.61448-1-ryan.roberts@arm.com/
    [4] https://lore.kernel.org/lkml/20231218105100.172635-1-ryan.roberts@arm.com/
    [5] https://lore.kernel.org/linux-mm/633af0a7-0823-424f-b6ef-374d99483f05@arm.com/
    [6] https://lore.kernel.org/lkml/08c16f7d-f3b3-4f22-9acc-da943f647dc3@arm.com/
    [7] https://lore.kernel.org/linux-mm/20240214204435.167852-1-david@redhat.com/
    [8] https://lore.kernel.org/linux-mm/c507308d-bdd4-5f9e-d4ff-e96e4520be85@nvidia.com/
    [9] https://gitlab.arm.com/linux-arm/linux-rr/-/tree/features/granule_perf/contpte-lkml_v6
    
    This patch (of 18):
    
    set_ptes() spec implies that it can only be used to set a present pte
    because it interprets the PFN field to increment it.  However,
    set_pte_at() has been implemented on top of set_ptes() since set_ptes()
    was introduced, and set_pte_at() allows setting a pte to a not-present
    state.  So clarify the spec to state that when nr==1, new state of pte may
    be present or not present.  When nr>1, new state of all ptes must be
    present.
    
    While we are at it, tighten the spec to set requirements around the
    initial state of ptes; when nr==1 it may be either present or not-present.
    But when nr>1 all ptes must initially be not-present.  All set_ptes()
    callsites already conform to this requirement.  Stating it explicitly is
    useful because it allows for a simplification to the upcoming arm64
    contpte implementation.
    
    Link: https://lkml.kernel.org/r/20240215103205.2607016-1-ryan.roberts@arm.com
    Link: https://lkml.kernel.org/r/20240215103205.2607016-2-ryan.roberts@arm.com
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Barry Song <21cnbao@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 6280d7317ccae19c776a3b6cf9848c964f958091)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3ba660022f2d4e75372d8d08b15159528af01cc9
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:49 2024 +0100

    UBUNTU: SAUCE: mm/memory: ignore writable bit in folio_pte_batch()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    ...  and conditionally return to the caller if any PTE except the first
    one is writable.  fork() has to make sure to properly write-protect in
    case any PTE is writable.  Other users (e.g., page unmaping) are expected
    to not care.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-16-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Ryan Roberts <ryan.roberts@arm.com>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Mike Rapoport (IBM) <rppt@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit d7c0e5f722ab229153c22efc836bf220479bdce6)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 61098e2d492e8a671a0fe569a090de1fa95b67dd
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:48 2024 +0100

    UBUNTU: SAUCE: mm/memory: ignore dirty/accessed/soft-dirty bits in folio_pte_batch()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Let's always ignore the accessed/young bit: we'll always mark the PTE as
    old in our child process during fork, and upcoming users will similarly
    not care.
    
    Ignore the dirty bit only if we don't want to duplicate the dirty bit into
    the child process during fork.  Maybe, we could just set all PTEs in the
    child dirty if any PTE is dirty.  For now, let's keep the behavior
    unchanged, this can be optimized later if required.
    
    Ignore the soft-dirty bit only if the bit doesn't have any meaning in the
    src vma, and similarly won't have any in the copied dst vma.
    
    For now, we won't bother with the uffd-wp bit.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-15-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Ryan Roberts <ryan.roberts@arm.com>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Mike Rapoport (IBM) <rppt@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 25365e10699aa0e320345d019194fbea9f37a4ae)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fd7e20a50a68f771010836c8b120150ff69d8a00
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:47 2024 +0100

    UBUNTU: SAUCE: mm/memory: optimize fork() with PTE-mapped THP
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Let's implement PTE batching when consecutive (present) PTEs map
    consecutive pages of the same large folio, and all other PTE bits besides
    the PFNs are equal.
    
    We will optimize folio_pte_batch() separately, to ignore selected PTE
    bits.  This patch is based on work by Ryan Roberts.
    
    Use __always_inline for __copy_present_ptes() and keep the handling for
    single PTEs completely separate from the multi-PTE case: we really want
    the compiler to optimize for the single-PTE case with small folios, to not
    degrade performance.
    
    Note that PTE batching will never exceed a single page table and will
    always stay within VMA boundaries.
    
    Further, processing PTE-mapped THP that maybe pinned and have
    PageAnonExclusive set on at least one subpage should work as expected, but
    there is room for improvement: We will repeatedly (1) detect a PTE batch
    (2) detect that we have to copy a page (3) fall back and allocate a single
    page to copy a single page.  For now we won't care as pinned pages are a
    corner case, and we should rather look into maintaining only a single
    PageAnonExclusive bit for large folios.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-14-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (backported from commit f8d937761d65c87e9987b88ea7beb7bddc333a0e)
    [ dannf: mm_counter_file() in v6.8 took a page instead of a folio ]
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bce6ad202db9a9e55ce52028a7b65acf1e9937a2
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:46 2024 +0100

    UBUNTU: SAUCE: mm/memory: pass PTE to copy_present_pte()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We already read it, let's just forward it.
    
    This patch is based on work by Ryan Roberts.
    
    [david@redhat.com: fix the hmm "exclusive_cow" selftest]
      Link: https://lkml.kernel.org/r/13f296b8-e882-47fd-b939-c2141dc28717@redhat.com
    Link: https://lkml.kernel.org/r/20240129124649.189745-13-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 53723298ba436830fdf0744c19b57b2a18f44041)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 10a0e135f2720b94e56a17f841779929fa1294b9
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:45 2024 +0100

    UBUNTU: SAUCE: mm/memory: factor out copying the actual PTE in copy_present_pte()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Let's prepare for further changes.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-12-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 23ed190868a65525b8941370630fbb215f12ebe8)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 72db469a738dca5b1250095a35e8e4aecfcb43be
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:44 2024 +0100

    UBUNTU: SAUCE: powerpc/mm: use pte_next_pfn() in set_ptes()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Let's use our handy new helper. Note that the implementation is slightly
    different, but shouldn't really make a difference in practice.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-11-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 802cc2ab33b0d8a013c216ca7f4caa9034bfc257)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 01a46dd9d8df23e16577de362b8ef315dc92ef6a
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:43 2024 +0100

    UBUNTU: SAUCE: arm/mm: use pte_next_pfn() in set_ptes()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Let's use our handy helper now that it's available on all archs.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-10-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit e5ea320aec811c0e5cddefda17052579e0306415)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ed362a432fed12ca1a6f2524df9031f5310fb546
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:42 2024 +0100

    UBUNTU: SAUCE: mm/pgtable: make pte_next_pfn() independent of set_ptes()
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Let's provide pte_next_pfn(), independently of set_ptes().  This allows
    for using the generic pte_next_pfn() version in some arch-specific
    set_ptes() implementations, and prepares for reusing pte_next_pfn() in
    other context.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-9-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 6cdfa1d5d5d8285108495c33588c48cdda81b647)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4b40e97a99a94e61fcc4f8a1650408e56de4216e
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:41 2024 +0100

    UBUNTU: SAUCE: sparc/pgtable: define PFN_PTE_SHIFT
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We want to make use of pte_next_pfn() outside of set_ptes().  Let's simply
    define PFN_PTE_SHIFT, required by pte_next_pfn().
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-8-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit ce7a9de353da053e55a68e2441196114547e38d0)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 408e5406fb074382b0f44b4e055f71475c4b6960
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:40 2024 +0100

    UBUNTU: SAUCE: s390/pgtable: define PFN_PTE_SHIFT
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We want to make use of pte_next_pfn() outside of set_ptes().  Let's simply
    define PFN_PTE_SHIFT, required by pte_next_pfn().
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-7-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 4555ac8b3c16f67f74c04ff71ce8c4a8fcee973a)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5eabdadad5bdf3b93fa2217f16785d06713acf2c
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:39 2024 +0100

    UBUNTU: SAUCE: riscv/pgtable: define PFN_PTE_SHIFT
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We want to make use of pte_next_pfn() outside of set_ptes().  Let's simply
    define PFN_PTE_SHIFT, required by pte_next_pfn().
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-6-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Alexandre Ghiti <alexghiti@rivosinc.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 57c254b2fb31f0160829f4bf1cb993a9e9c302a8)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b87eb977809e22fe237173e1700f5d4104374ef5
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:38 2024 +0100

    UBUNTU: SAUCE: powerpc/pgtable: define PFN_PTE_SHIFT
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We want to make use of pte_next_pfn() outside of set_ptes().  Let's simply
    define PFN_PTE_SHIFT, required by pte_next_pfn().
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-5-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit f7dc4d689e6fafe3d8424f600b924f2d59d1a3cf)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d067bafa7483846b1c1d16dda8717971f8c19fa5
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:37 2024 +0100

    UBUNTU: SAUCE: nios2/pgtable: define PFN_PTE_SHIFT
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We want to make use of pte_next_pfn() outside of set_ptes().  Let's simply
    define PFN_PTE_SHIFT, required by pte_next_pfn().
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-4-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 3a6a6c3fbda8f50fc9f0e5fede8a0f70abdea033)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c2741269f2fcd4e08edc78c8bdb61235f9a8d4fa
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 29 13:46:36 2024 +0100

    UBUNTU: SAUCE: arm/pgtable: define PFN_PTE_SHIFT
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    We want to make use of pte_next_pfn() outside of set_ptes().  Let's simply
    define PFN_PTE_SHIFT, required by pte_next_pfn().
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-3-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 12b884f2e09ab42d3879a3e2c703e7157691013c)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7c160f503ee9188380348ac25afeff9b950e9008
Author: Ryan Roberts <ryan.roberts@arm.com>
Date:   Mon Jan 29 13:46:35 2024 +0100

    UBUNTU: SAUCE: arm64/mm: make set_ptes() robust when OAs cross 48-bit boundary
    
    BugLink: https://bugs.launchpad.net/bugs/2059316
    
    Patch series "mm/memory: optimize fork() with PTE-mapped THP", v3.
    
    Now that the rmap overhaul[1] is upstream that provides a clean interface
    for rmap batching, let's implement PTE batching during fork when
    processing PTE-mapped THPs.
    
    This series is partially based on Ryan's previous work[2] to implement
    cont-pte support on arm64, but its a complete rewrite based on [1] to
    optimize all architectures independent of any such PTE bits, and to use
    the new rmap batching functions that simplify the code and prepare for
    further rmap accounting changes.
    
    We collect consecutive PTEs that map consecutive pages of the same large
    folio, making sure that the other PTE bits are compatible, and (a) adjust
    the refcount only once per batch, (b) call rmap handling functions only
    once per batch and (c) perform batch PTE setting/updates.
    
    While this series should be beneficial for adding cont-pte support on
    ARM64[2], it's one of the requirements for maintaining a total mapcount[3]
    for large folios with minimal added overhead and further changes[4] that
    build up on top of the total mapcount.
    
    Independent of all that, this series results in a speedup during fork with
    PTE-mapped THP, which is the default with THPs that are smaller than a PMD
    (for example, 16KiB to 1024KiB mTHPs for anonymous memory[5]).
    
    On an Intel Xeon Silver 4210R CPU, fork'ing with 1GiB of PTE-mapped folios
    of the same size (stddev < 1%) results in the following runtimes for
    fork() (shorter is better):
    
    Folio Size | v6.8-rc1 |      New | Change
    ------------------------------------------
          4KiB | 0.014328 | 0.014035 |   - 2%
         16KiB | 0.014263 | 0.01196  |   -16%
         32KiB | 0.014334 | 0.01094  |   -24%
         64KiB | 0.014046 | 0.010444 |   -26%
        128KiB | 0.014011 | 0.010063 |   -28%
        256KiB | 0.013993 | 0.009938 |   -29%
        512KiB | 0.013983 | 0.00985  |   -30%
       1024KiB | 0.013986 | 0.00982  |   -30%
       2048KiB | 0.014305 | 0.010076 |   -30%
    
    Note that these numbers are even better than the ones from v1 (verified
    over multiple reboots), even though there were only minimal code changes.
    Well, I removed a pte_mkclean() call for anon folios, maybe that also
    plays a role.
    
    But my experience is that fork() is extremely sensitive to code size,
    inlining, ...  so I suspect we'll see on other architectures rather a
    change of -20% instead of -30%, and it will be easy to "lose" some of that
    speedup in the future by subtle code changes.
    
    Next up is PTE batching when unmapping.  Only tested on x86-64.
    Compile-tested on most other architectures.
    
    [1] https://lkml.kernel.org/r/20231220224504.646757-1-david@redhat.com
    [2] https://lkml.kernel.org/r/20231218105100.172635-1-ryan.roberts@arm.com
    [3] https://lkml.kernel.org/r/20230809083256.699513-1-david@redhat.com
    [4] https://lkml.kernel.org/r/20231124132626.235350-1-david@redhat.com
    [5] https://lkml.kernel.org/r/20231207161211.2374093-1-ryan.roberts@arm.com
    
    This patch (of 15):
    
    Since the high bits [51:48] of an OA are not stored contiguously in the
    PTE, there is a theoretical bug in set_ptes(), which just adds PAGE_SIZE
    to the pte to get the pte with the next pfn.  This works until the pfn
    crosses the 48-bit boundary, at which point we overflow into the upper
    attributes.
    
    Of course one could argue (and Matthew Wilcox has :) that we will never
    see a folio cross this boundary because we only allow naturally aligned
    power-of-2 allocation, so this would require a half-petabyte folio.  So
    its only a theoretical bug.  But its better that the code is robust
    regardless.
    
    I've implemented pte_next_pfn() as part of the fix, which is an opt-in
    core-mm interface.  So that is now available to the core-mm, which will be
    needed shortly to support forthcoming fork()-batching optimizations.
    
    Link: https://lkml.kernel.org/r/20240129124649.189745-1-david@redhat.com
    Link: https://lkml.kernel.org/r/20240125173534.1659317-1-ryan.roberts@arm.com
    Link: https://lkml.kernel.org/r/20240129124649.189745-2-david@redhat.com
    Fixes: 4a169d61c2ed ("arm64: implement the new page table range API")
    Closes: https://lore.kernel.org/linux-mm/fdaeb9a5-d890-499a-92c8-d171df43ad01@arm.com/
    Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Tested-by: Ryan Roberts <ryan.roberts@arm.com>
    Reviewed-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Russell King (Oracle) <linux@armlinux.org.uk>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Alexandre Ghiti <alexghiti@rivosinc.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 6e8f588708971e0626f5be808e8c4b6cdb86eb0b)
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4e6539e22b566ee09626c878284ba3c155d22a7a
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Mar 27 22:30:44 2024 +0800

    hwmon: (acpi_power_meter) Ensure IPMI space handler is ready on Dell systems
    
    BugLink: https://bugs.launchpad.net/bugs/2059263
    
    The following error can be observed at boot:
    [    3.717920] ACPI Error: No handler for Region [SYSI] (00000000ab9e62c5) [IPMI] (20230628/evregion-130)
    [    3.717928] ACPI Error: Region IPMI (ID=7) has no handler (20230628/exfldio-261)
    
    [    3.717936] No Local Variables are initialized for Method [_GHL]
    
    [    3.717938] No Arguments are initialized for method [_GHL]
    
    [    3.717940] ACPI Error: Aborting method \_SB.PMI0._GHL due to previous error (AE_NOT_EXIST) (20230628/psparse-529)
    [    3.717949] ACPI Error: Aborting method \_SB.PMI0._PMC due to previous error (AE_NOT_EXIST) (20230628/psparse-529)
    [    3.717957] ACPI: \_SB_.PMI0: _PMC evaluation failed: AE_NOT_EXIST
    
    On Dell systems several methods of acpi_power_meter access variables in
    IPMI region [0], so wait until IPMI space handler is installed by
    acpi_ipmi and also wait until SMI is selected to make the space handler
    fully functional.
    
    Since the dependency is inside BIOS's ASL code and it's not
    discoverable, so use this fixup is a hack to workaround BIOS issue.
    
    [0] https://www.dell.com/support/manuals/en-us/redhat-enterprise-linux-v8.0/rhel8_rn_pub/advanced-configuration-and-power-interface-acpi-error-messages-displayed-in-dmesg?guid=guid-0d5ae482-1977-42cf-b417-3ed5c3f5ee62
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20240320084317.366853-2-kai.heng.feng@canonical.com
    [groeck: Simplified added code]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 265e8328eeb3ca1215aa56a558358b0b7471a95f linux-next)
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 377e211c2bff7847152394e11c50c279199acdfd
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Mar 27 22:30:43 2024 +0800

    ACPI: IPMI: Add helper to wait for when SMI is selected
    
    BugLink: https://bugs.launchpad.net/bugs/2059263
    
    On Dell servers, many APCI methods of acpi_power_meter module evaluate
    variables inside IPMI region, so the region handler needs to be
    installed. In addition to that, the handler needs to be fully
    functional, and that depends on SMI being selected.
    
    So add a helper to let acpi_power_meter know when the handler is
    installed and ready to be used.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lore.kernel.org/r/20240320084317.366853-1-kai.heng.feng@canonical.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit b72cb1769b8419060651cf5b0c271f3872e88748 linux-next)
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 46cffcf13bc0f24bc11be42a9fe0aaa7fc2dc5d1
Author: Magali Lemes <magali.lemes@canonical.com>
Date:   Tue Mar 26 15:52:41 2024 -0300

    UBUNTU: [Packaging] Remove fips-checks script
    
    BugLink: https://bugs.launchpad.net/bugs/2055083
    
    This script is now part of `cranky` and there is no need for it to live
    in debian/ anymore, so remove it.
    
    Signed-off-by: Magali Lemes <magali.lemes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 08b3230334fcf23c0dd92f65b4846661b0a591bf
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Mar 21 10:22:05 2024 +0800

    ALSA: hda/realtek: fix the hp playback volume issue for LG machines
    
    BugLink: https://bugs.launchpad.net/bugs/2058573
    
    Recently we tested the headphone playback on 2 LG machines, if we set
    the volume to the max value or near to the max value, the sound is too
    loud, it could even bring harm to listeners.
    
    A workaround is to decrease the max volume to a reasonable value for
    the headphone's amplifier, then the users couldn't set the volume
    bigger than that value from the userspace.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Message-ID: <20240318011128.156023-1-hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    (backported from commit 1e5dc3989a20ccd703d5fe1a269d2bcedf29142c linux-next)
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4bcd67e4ecfb761a4e2068a99ca153428f658c45
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Apr 3 09:30:46 2024 +0200

    UBUNTU: [Config] updateconfig following v6.8.2 import
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e90dd260f6d3db1a3206149f2e8585b364ce6a20
Author: Sasha Levin <sashal@kernel.org>
Date:   Sun Mar 24 14:36:44 2024 -0400

    Linux 6.8.2
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    Tested-by: SeongJae Park <sj@kernel.org>
    Tested-by: Justin M. Forbes <jforbes@fedoraproject.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Jiri Slaby <jirislaby@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 03a22b591c5443ba269e8570c6fef411251fe1b8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 071b191e30758cc5b29c42040c97bdaffb1f5f5e
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:52 2024 +0106

    printk: Use prb_first_seq() as base for 32bit seq macros
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 90ad525c2d9a8a6591ab822234a94b82871ef8e0 ]
    
    Note: This change only applies to 32bit architectures. On 64bit
          architectures the macros are NOPs.
    
    Currently prb_next_seq() is used as the base for the 32bit seq
    macros __u64seq_to_ulseq() and __ulseq_to_u64seq(). However, in
    a follow-up commit, prb_next_seq() will need to make use of the
    32bit seq macros.
    
    Use prb_first_seq() as the base for the 32bit seq macros instead
    because it is guaranteed to return 64bit sequence numbers without
    relying on any 32bit seq macros.
    
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-4-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3a2bd2b150f45844d99267696256716e4f23bf53)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 580a75eb7e6fa5007d91d3f07bf26aa6ff98e115
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Wed Feb 7 14:46:51 2024 +0106

    printk: Adjust mapping for 32bit seq macros
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 418ec1961c07d84293cc3cd54d67b90bbeba7feb ]
    
    Note: This change only applies to 32bit architectures. On 64bit
          architectures the macros are NOPs.
    
    __ulseq_to_u64seq() computes the upper 32 bits of the passed
    argument value (@ulseq). The upper bits are derived from a base
    value (@rb_next_seq) in a way that assumes @ulseq represents a
    64bit number that is less than or equal to @rb_next_seq.
    
    Until now this mapping has been correct for all call sites. However,
    in a follow-up commit, values of @ulseq will be passed in that are
    higher than the base value. This requires a change to how the 32bit
    value is mapped to a 64bit sequence number.
    
    Rather than mapping @ulseq such that the base value is the end of a
    32bit block, map @ulseq such that the base value is in the middle of
    a 32bit block. This allows supporting 31 bits before and after the
    base value, which is deemed acceptable for the console sequence
    number during runtime.
    
    Here is an example to illustrate the previous and new mappings.
    
    For a base value (@rb_next_seq) of 2 2000 0000...
    
    Before this change the range of possible return values was:
    
    1 2000 0001 to 2 2000 0000
    
    __ulseq_to_u64seq(1fff ffff) => 2 1fff ffff
    __ulseq_to_u64seq(2000 0000) => 2 2000 0000
    __ulseq_to_u64seq(2000 0001) => 1 2000 0001
    __ulseq_to_u64seq(9fff ffff) => 1 9fff ffff
    __ulseq_to_u64seq(a000 0000) => 1 a000 0000
    __ulseq_to_u64seq(a000 0001) => 1 a000 0001
    
    After this change the range of possible return values are:
    
    1 a000 0001 to 2 a000 0000
    
    __ulseq_to_u64seq(1fff ffff) => 2 1fff ffff
    __ulseq_to_u64seq(2000 0000) => 2 2000 0000
    __ulseq_to_u64seq(2000 0001) => 2 2000 0001
    __ulseq_to_u64seq(9fff ffff) => 2 9fff ffff
    __ulseq_to_u64seq(a000 0000) => 2 a000 0000
    __ulseq_to_u64seq(a000 0001) => 1 a000 0001
    
    [ john.ogness: Rewrite commit message. ]
    
    Reported-by: Francesco Dolcini <francesco@dolcini.it>
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-3-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7c09db1068170e42fa85e25ff1367843e7326829)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1667a65500577454683f77ce1aebcf9bb0e67b1f
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Mar 22 17:01:45 2024 +0100

    x86/efistub: Don't clear BSS twice in mixed mode
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit df7ecce842b846a04d087ba85fdb79a90e26a1b0 ]
    
    Clearing BSS should only be done once, at the very beginning.
    efi_pe_entry() is the entrypoint from the firmware, which may not clear
    BSS and so it is done explicitly. However, efi_pe_entry() is also used
    as an entrypoint by the mixed mode startup code, in which case BSS will
    already have been cleared, and doing it again at this point will corrupt
    global variables holding the firmware's GDT/IDT and segment selectors.
    
    So make the memset() conditional on whether the EFI stub is running in
    native mode.
    
    Fixes: b3810c5a2cc4a666 ("x86/efistub: Clear decompressor BSS in native EFI entrypoint")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 245a7547fc09069029f9a45aafd96b8931cf2df9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b37f9199f8324ec5ba04fbc3e1d13459d5a6f681
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Mar 15 16:26:16 2024 +0100

    x86/efistub: Clear decompressor BSS in native EFI entrypoint
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b3810c5a2cc4a6665f7a65bed5393c75ce3f3aa2 ]
    
    The EFI stub on x86 no longer invokes the decompressor as a subsequent
    boot stage, but calls into the decompression code directly while running
    in the context of the EFI boot services.
    
    This means that when using the native EFI entrypoint (as opposed to the
    EFI handover protocol, which clears BSS explicitly), the firmware PE
    image loader is being relied upon to ensure that BSS is zeroed before
    the EFI stub is entered from the firmware.
    
    As Radek's report proves, this is a bad idea. Not all loaders do this
    correctly, which means some global variables that should be statically
    initialized to 0x0 may have junk in them.
    
    So clear BSS explicitly when entering via efi_pe_entry(). Note that
    zeroing BSS from C code is not generally safe, but in this case, the
    following assignment and dereference of a global pointer variable
    ensures that the memset() cannot be deferred or reordered.
    
    Cc: <stable@kernel.org> # v6.1+
    Reported-by: Radek Podgorny <radek@podgorny.cz>
    Closes: https://lore.kernel.org/all/a99a831a-8ad5-4cb0-bff9-be637311f771@podgorny.cz
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7d78b4798279ae8d265152e9f31ae72726c44ff1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit db46648c75001ecd594a2f4dbc3a8297814ffc42
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Mar 21 17:48:45 2024 +0100

    dm-integrity: align the outgoing bio in integrity_recheck
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b4d78cfeb30476239cf08f4f40afc095c173d6e3 ]
    
    It is possible to set up dm-integrity with smaller sector size than
    the logical sector size of the underlying device. In this situation,
    dm-integrity guarantees that the outgoing bios have the same alignment as
    incoming bios (so, if you create a filesystem with 4k block size,
    dm-integrity would send 4k-aligned bios to the underlying device).
    
    This guarantee was broken when integrity_recheck was implemented.
    integrity_recheck sends bio that is aligned to ic->sectors_per_block. So
    if we set up integrity with 512-byte sector size on a device with logical
    block size 4k, we would be sending unaligned bio. This triggered a bug in
    one of our internal tests.
    
    This commit fixes it by determining the actual alignment of the
    incoming bio and then makes sure that the outgoing bio in
    integrity_recheck has the same alignment.
    
    Fixes: c88f5e553fe3 ("dm-integrity: recheck the integrity tag after a failure")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0766231db9091d972dffd52a37f9a8fe72f382c2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c715804724ad419e8651f964770ef8e910b5e9cf
Author: Hongyu Jin <hongyu.jin@unisoc.com>
Date:   Wed Jan 24 13:35:53 2024 +0800

    dm io: Support IO priority
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6e5f0f6383b4896c7e9b943d84b136149d0f45e9 ]
    
    Some IO will dispatch from kworker with different io_context settings
    than the submitting task, we may need to specify a priority to avoid
    losing priority.
    
    Add IO priority parameter to dm_io() and update all callers.
    
    Co-developed-by: Yibin Ding <yibin.ding@unisoc.com>
    Signed-off-by: Yibin Ding <yibin.ding@unisoc.com>
    Signed-off-by: Hongyu Jin <hongyu.jin@unisoc.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Stable-dep-of: b4d78cfeb304 ("dm-integrity: align the outgoing bio in integrity_recheck")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3d02f57794b56f8a04a21fdfb04f20a1c9f712a7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 541e61238cbb0753b0b13de6e7c41c3b909990e8
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Wed Mar 20 08:57:17 2024 +0200

    selftests: forwarding: Fix ping failure due to short timeout
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e4137851d4863a9bdc6aabc613bcb46c06d91e64 ]
    
    The tests send 100 pings in 0.1 second intervals and force a timeout of
    11 seconds, which is borderline (especially on debug kernels), resulting
    in random failures in netdev CI [1].
    
    Fix by increasing the timeout to 20 seconds. It should not prolong the
    test unless something is wrong, in which case the test will rightfully
    fail.
    
    [1]
     # selftests: net/forwarding: vxlan_bridge_1d_port_8472_ipv6.sh
     # INFO: Running tests with UDP port 8472
     # TEST: ping: local->local                                            [ OK ]
     # TEST: ping: local->remote 1                                         [FAIL]
     # Ping failed
     [...]
    
    Fixes: b07e9957f220 ("selftests: forwarding: Add VxLAN tests with a VLAN-unaware bridge for IPv6")
    Fixes: 728b35259e28 ("selftests: forwarding: Add VxLAN tests with a VLAN-aware bridge for IPv6")
    Reported-by: Paolo Abeni <pabeni@redhat.com>
    Closes: https://lore.kernel.org/netdev/24a7051fdcd1f156c3704bca39e4b3c41dfc7c4b.camel@redhat.com/
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Link: https://lore.kernel.org/r/20240320065717.4145325-1-idosch@nvidia.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ca0e491fcabf3c587f1e1cccb271960fb72fc34e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e16554a65fde35474d691e1e137256ea5c9750c0
Author: Fei Shao <fshao@chromium.org>
Date:   Thu Mar 21 15:08:57 2024 +0800

    spi: spi-mt65xx: Fix NULL pointer access in interrupt handler
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a20ad45008a7c82f1184dc6dee280096009ece55 ]
    
    The TX buffer in spi_transfer can be a NULL pointer, so the interrupt
    handler may end up writing to the invalid memory and cause crashes.
    
    Add a check to trans->tx_buf before using it.
    
    Fixes: 1ce24864bff4 ("spi: mediatek: Only do dma for 4-byte aligned buffers")
    Signed-off-by: Fei Shao <fshao@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://msgid.link/r/20240321070942.1587146-2-fshao@chromium.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1784053cf10a14c4ebd8a890bad5cfe1bee51713)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 218864aa9db8312f7225c054825136f0a7b254c9
Author: Quan Tian <tianquan23@gmail.com>
Date:   Thu Mar 7 01:24:02 2024 +0800

    netfilter: nf_tables: Fix a memory leak in nf_tables_updchain
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7eaf837a4eb5f74561e2486972e7f5184b613f6e ]
    
    If nft_netdev_register_hooks() fails, the memory associated with
    nft_stats is not freed, causing a memory leak.
    
    This patch fixes it by moving nft_stats_alloc() down after
    nft_netdev_register_hooks() succeeds.
    
    Fixes: b9703ed44ffb ("netfilter: nf_tables: support for adding new devices to an existing netdev chain")
    Signed-off-by: Quan Tian <tianquan23@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e77a6b53a3a547b6dedfc40c37cee4f310701090)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9564e777afaa8bb025e3eea1672fcc24d21cca6b
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Thu Mar 14 12:33:42 2024 +0300

    net: dsa: mt7530: fix handling of all link-local frames
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 69ddba9d170bdaee1dc0eb4ced38d7e4bb7b92af ]
    
    Currently, the MT753X switches treat frames with :01-0D and :0F MAC DAs as
    regular multicast frames, therefore flooding them to user ports.
    
    On page 205, section "8.6.3 Frame filtering" of the active standard, IEEE
    Std 802.1Q™-2022, it is stated that frames with 01:80:C2:00:00:00-0F as MAC
    DA must only be propagated to C-VLAN and MAC Bridge components. That means
    VLAN-aware and VLAN-unaware bridges. On the switch designs with CPU ports,
    these frames are supposed to be processed by the CPU (software). So we make
    the switch only forward them to the CPU port. And if received from a CPU
    port, forward to a single port. The software is responsible of making the
    switch conform to the latter by setting a single port as destination port
    on the special tag.
    
    This switch intellectual property cannot conform to this part of the
    standard fully. Whilst the REV_UN frame tag covers the remaining :04-0D and
    :0F MAC DAs, it also includes :22-FF which the scope of propagation is not
    supposed to be restricted for these MAC DAs.
    
    Set frames with :01-03 MAC DAs to be trapped to the CPU port(s). Add a
    comment for the remaining MAC DAs.
    
    Note that the ingress port must have a PVID assigned to it for the switch
    to forward untagged frames. A PVID is set by default on VLAN-aware and
    VLAN-unaware ports. However, when the network interface that pertains to
    the ingress port is attached to a vlan_filtering enabled bridge, the user
    can remove the PVID assignment from it which would prevent the link-local
    frames from being trapped to the CPU port. I am yet to see a way to forward
    link-local frames while preventing other untagged frames from being
    forwarded too.
    
    Fixes: b8f126a8d543 ("net-next: dsa: add dsa support for Mediatek MT7530 switch")
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8c4a1e38901775438691262268835514b40a3f55)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c235e0fa837e2c09011fe0a0115fe70538b3ff5
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Thu Mar 14 12:33:41 2024 +0300

    net: dsa: mt7530: fix link-local frames that ingress vlan filtering ports
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e8bf353577f382c7066c661fed41b2adc0fc7c40 ]
    
    Whether VLAN-aware or not, on every VID VLAN table entry that has the CPU
    port as a member of it, frames are set to egress the CPU port with the VLAN
    tag stacked. This is so that VLAN tags can be appended after hardware
    special tag (called DSA tag in the context of Linux drivers).
    
    For user ports on a VLAN-unaware bridge, frame ingressing the user port
    egresses CPU port with only the special tag.
    
    For user ports on a VLAN-aware bridge, frame ingressing the user port
    egresses CPU port with the special tag and the VLAN tag.
    
    This causes issues with link-local frames, specifically BPDUs, because the
    software expects to receive them VLAN-untagged.
    
    There are two options to make link-local frames egress untagged. Setting
    CONSISTENT or UNTAGGED on the EG_TAG bits on the relevant register.
    CONSISTENT means frames egress exactly as they ingress. That means
    egressing with the VLAN tag they had at ingress or egressing untagged if
    they ingressed untagged. Although link-local frames are not supposed to be
    transmitted VLAN-tagged, if they are done so, when egressing through a CPU
    port, the special tag field will be broken.
    
    BPDU egresses CPU port with VLAN tag egressing stacked, received on
    software:
    
    00:01:25.104821 AF Unknown (382365846), length 106:
                                         | STAG  | | VLAN  |
            0x0000:  0000 6c27 614d 4143 0001 0000 8100 0001  ..l'aMAC........
            0x0010:  0026 4242 0300 0000 0000 0000 6c27 614d  .&BB........l'aM
            0x0020:  4143 0000 0000 0000 6c27 614d 4143 0000  AC......l'aMAC..
            0x0030:  0000 1400 0200 0f00 0000 0000 0000 0000  ................
    
    BPDU egresses CPU port with VLAN tag egressing untagged, received on
    software:
    
    00:23:56.628708 AF Unknown (25215488), length 64:
                                         | STAG  |
            0x0000:  0000 6c27 614d 4143 0001 0000 0026 4242  ..l'aMAC.....&BB
            0x0010:  0300 0000 0000 0000 6c27 614d 4143 0000  ........l'aMAC..
            0x0020:  0000 0000 6c27 614d 4143 0000 0000 1400  ....l'aMAC......
            0x0030:  0200 0f00 0000 0000 0000 0000            ............
    
    BPDU egresses CPU port with VLAN tag egressing tagged, received on
    software:
    
    00:01:34.311963 AF Unknown (25215488), length 64:
                                         | Mess  |
            0x0000:  0000 6c27 614d 4143 0001 0001 0026 4242  ..l'aMAC.....&BB
            0x0010:  0300 0000 0000 0000 6c27 614d 4143 0000  ........l'aMAC..
            0x0020:  0000 0000 6c27 614d 4143 0000 0000 1400  ....l'aMAC......
            0x0030:  0200 0f00 0000 0000 0000 0000            ............
    
    To prevent confusing the software, force the frame to egress UNTAGGED
    instead of CONSISTENT. This way, frames can't possibly be received TAGGED
    by software which would have the special tag field broken.
    
    VLAN Tag Egress Procedure
    
       For all frames, one of these options set the earliest in this order will
       apply to the frame:
    
       - EG_TAG in certain registers for certain frames.
         This will apply to frame with matching MAC DA or EtherType.
    
       - EG_TAG in the address table.
         This will apply to frame at its incoming port.
    
       - EG_TAG in the PVC register.
         This will apply to frame at its incoming port.
    
       - EG_CON and [EG_TAG per port] in the VLAN table.
         This will apply to frame at its outgoing port.
    
       - EG_TAG in the PCR register.
         This will apply to frame at its outgoing port.
    
       EG_TAG in certain registers for certain frames:
    
       PPPoE Discovery_ARP/RARP: PPP_EG_TAG and ARP_EG_TAG in the APC register.
       IGMP_MLD: IGMP_EG_TAG and MLD_EG_TAG in the IMC register.
       BPDU and PAE: BPDU_EG_TAG and PAE_EG_TAG in the BPC register.
       REV_01 and REV_02: R01_EG_TAG and R02_EG_TAG in the RGAC1 register.
       REV_03 and REV_0E: R03_EG_TAG and R0E_EG_TAG in the RGAC2 register.
       REV_10 and REV_20: R10_EG_TAG and R20_EG_TAG in the RGAC3 register.
       REV_21 and REV_UN: R21_EG_TAG and RUN_EG_TAG in the RGAC4 register.
    
    With this change, it can be observed that a bridge interface with stp_state
    and vlan_filtering enabled will properly block ports now.
    
    Fixes: b8f126a8d543 ("net-next: dsa: add dsa support for Mediatek MT7530 switch")
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3c0266a05534e536c56eb263b3fa1dcd23f601a3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea71338d8ca6dacf8a4bdeeb68b829ec6bf79f51
Author: Yan Zhai <yan@cloudflare.com>
Date:   Tue Mar 19 13:44:40 2024 -0700

    bpf: report RCU QS in cpumap kthread
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 00bf63122459e87193ee7f1bc6161c83a525569f ]
    
    When there are heavy load, cpumap kernel threads can be busy polling
    packets from redirect queues and block out RCU tasks from reaching
    quiescent states. It is insufficient to just call cond_resched() in such
    context. Periodically raise a consolidated RCU QS before cond_resched
    fixes the problem.
    
    Fixes: 6710e1126934 ("bpf: introduce new bpf cpu map type BPF_MAP_TYPE_CPUMAP")
    Reviewed-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Signed-off-by: Yan Zhai <yan@cloudflare.com>
    Acked-by: Paul E. McKenney <paulmck@kernel.org>
    Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Link: https://lore.kernel.org/r/c17b9f1517e19d813da3ede5ed33ee18496bb5d8.1710877680.git.yan@cloudflare.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit eb7422b8cc196c114c05ff8a88384f6c28556156)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2a1f3f5c4b38031be21069b5095511211056fec2
Author: Yan Zhai <yan@cloudflare.com>
Date:   Tue Mar 19 13:44:37 2024 -0700

    net: report RCU QS on threaded NAPI repolling
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d6dbbb11247c71203785a2c9da474c36f4b19eae ]
    
    NAPI threads can keep polling packets under load. Currently it is only
    calling cond_resched() before repolling, but it is not sufficient to
    clear out the holdout of RCU tasks, which prevent BPF tracing programs
    from detaching for long period. This can be reproduced easily with
    following set up:
    
    ip netns add test1
    ip netns add test2
    
    ip -n test1 link add veth1 type veth peer name veth2 netns test2
    
    ip -n test1 link set veth1 up
    ip -n test1 link set lo up
    ip -n test2 link set veth2 up
    ip -n test2 link set lo up
    
    ip -n test1 addr add 192.168.1.2/31 dev veth1
    ip -n test1 addr add 1.1.1.1/32 dev lo
    ip -n test2 addr add 192.168.1.3/31 dev veth2
    ip -n test2 addr add 2.2.2.2/31 dev lo
    
    ip -n test1 route add default via 192.168.1.3
    ip -n test2 route add default via 192.168.1.2
    
    for i in `seq 10 210`; do
     for j in `seq 10 210`; do
        ip netns exec test2 iptables -I INPUT -s 3.3.$i.$j -p udp --dport 5201
     done
    done
    
    ip netns exec test2 ethtool -K veth2 gro on
    ip netns exec test2 bash -c 'echo 1 > /sys/class/net/veth2/threaded'
    ip netns exec test1 ethtool -K veth1 tso off
    
    Then run an iperf3 client/server and a bpftrace script can trigger it:
    
    ip netns exec test2 iperf3 -s -B 2.2.2.2 >/dev/null&
    ip netns exec test1 iperf3 -c 2.2.2.2 -B 1.1.1.1 -u -l 1500 -b 3g -t 100 >/dev/null&
    bpftrace -e 'kfunc:__napi_poll{@=count();} interval:s:1{exit();}'
    
    Report RCU quiescent states periodically will resolve the issue.
    
    Fixes: 29863d41bb6e ("net: implement threaded-able napi poll loop support")
    Reviewed-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Signed-off-by: Yan Zhai <yan@cloudflare.com>
    Acked-by: Paul E. McKenney <paulmck@kernel.org>
    Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Link: https://lore.kernel.org/r/4c3b0d3f32d3b18949d75b18e5e1d9f13a24f025.1710877680.git.yan@cloudflare.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 87e92e4c307e5bf640a2b73a63f15e37d110c224)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e8158d025ce320276dbf243c1cd0e886a344e43
Author: Yan Zhai <yan@cloudflare.com>
Date:   Tue Mar 19 13:44:34 2024 -0700

    rcu: add a helper to report consolidated flavor QS
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1a77557d48cff187a169c2aec01c0dd78a5e7e50 ]
    
    When under heavy load, network processing can run CPU-bound for many
    tens of seconds. Even in preemptible kernels (non-RT kernel), this can
    block RCU Tasks grace periods, which can cause trace-event removal to
    take more than a minute, which is unacceptably long.
    
    This commit therefore creates a new helper function that passes through
    both RCU and RCU-Tasks quiescent states every 100 milliseconds. This
    hard-coded value suffices for current workloads.
    
    Suggested-by: Paul E. McKenney <paulmck@kernel.org>
    Reviewed-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Signed-off-by: Yan Zhai <yan@cloudflare.com>
    Reviewed-by: Paul E. McKenney <paulmck@kernel.org>
    Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Link: https://lore.kernel.org/r/90431d46ee112d2b0af04dbfe936faaca11810a5.1710877680.git.yan@cloudflare.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: d6dbbb11247c ("net: report RCU QS on threaded NAPI repolling")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b0076809862b5869cda32bdef33dce3ce6cd513d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7dbb90b412f0f6de4b53efaae904d21cf4bc9c93
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Thu Mar 14 18:51:38 2024 +0100

    netfilter: nf_tables: do not compare internal table flags on updates
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4a0e7f2decbf9bd72461226f1f5f7dcc4b08f139 ]
    
    Restore skipping transaction if table update does not modify flags.
    
    Fixes: 179d9ba5559a ("netfilter: nf_tables: fix table flag updates")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit df257c435e51651c43b86326d112ddadda76350e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8b1403307ff24c46dda62f890eba505f6a81bc35
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun Mar 10 10:02:41 2024 +0100

    netfilter: nft_set_pipapo: release elements in clone only from destroy path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b0e256f3dd2ba6532f37c5c22e07cb07a36031ee ]
    
    Clone already always provides a current view of the lookup table, use it
    to destroy the set, otherwise it is possible to destroy elements twice.
    
    This fix requires:
    
     212ed75dc5fb ("netfilter: nf_tables: integrate pipapo into commit protocol")
    
    which came after:
    
     9827a0e6e23b ("netfilter: nft_set_pipapo: release elements in clone from abort path").
    
    Fixes: 9827a0e6e23b ("netfilter: nft_set_pipapo: release elements in clone from abort path")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9384b4d85c46ce839f51af01374062ce6318b2f2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6ead6ef4f87c7088cc8f66170165871f3228a287
Author: Le Ma <le.ma@amd.com>
Date:   Fri Mar 15 16:55:39 2024 +0800

    drm/amdgpu: drop setting buffer funcs in sdma442
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ad550dbe8ae4ba833371a018265c1c3ae88559f0 ]
    
    To fix the entity rq NULL issue. This setting has been moved
    to upper level.
    
    Fixes: b70438004a14 ("drm/amdgpu: move buffer funcs setting up a level")
    Signed-off-by: Le Ma <le.ma@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 19ab464c14f6a92e64c7c65dd1547e0a2518c52a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0b16d0855283824c1747b3bca674aa285096c6a2
Author: Lang Yu <Lang.Yu@amd.com>
Date:   Wed Mar 6 12:42:49 2024 +0800

    drm/amdgpu: fix mmhub client id out-of-bounds access
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6540ff6482c1a5a6890ae44b23d0852ba1986d9e ]
    
    Properly handle cid 0x140.
    
    Fixes: aba2be41470a ("drm/amdgpu: add mmhub 3.3.0 support")
    Signed-off-by: Lang Yu <Lang.Yu@amd.com>
    Reviewed-by: Yifan Zhang <yifan1.zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1f24b3040f2b6ffcb97151fabb3070328254d923)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f05b51d7d0fff7a0e50b6e324f9e27254649b07a
Author: Yifan Zhang <yifan1.zhang@amd.com>
Date:   Thu Jan 4 10:39:48 2024 +0800

    drm/amdgpu: add MMHUB 3.3.1 support
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 31e0a586f3385134bcad00d8194eb0728cb1a17d ]
    
    This patch to add MMHUB 3.3.1 support.
    
    v2: squash in fault info fix (Alex)
    
    Signed-off-by: Yifan Zhang <yifan1.zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 6540ff6482c1 ("drm/amdgpu: fix mmhub client id out-of-bounds access")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4d82ab5d8fe6102b2c9dc7c24b2b77774d059722)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 45a231f847c517a001b92bd5a0529e7c246803bc
Author: Subbaraya Sundeep <sbhatta@marvell.com>
Date:   Mon Mar 18 14:59:58 2024 +0530

    octeontx2-af: Use separate handlers for interrupts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 50e60de381c342008c0956fd762e1c26408f372c ]
    
    For PF to AF interrupt vector and VF to AF vector same
    interrupt handler is registered which is causing race condition.
    When two interrupts are raised to two CPUs at same time
    then two cores serve same event corrupting the data.
    
    Fixes: 7304ac4567bc ("octeontx2-af: Add mailbox IRQ and msg handlers")
    Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4fedae8f9eafa2ac8cdaca58e315f52a7e2a8701)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 43497ba8d467d1026d324da46617abbbfca847c6
Author: Subbaraya Sundeep <sbhatta@marvell.com>
Date:   Mon Mar 18 14:59:57 2024 +0530

    octeontx2-pf: Send UP messages to VF only when VF is up.
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dfcf6355f53b1796cf7fd50a4f27b18ee6a3497a ]
    
    When PF sending link status messages to VF, it is possible
    that by the time link_event_task work function is executed
    VF might have brought down. Hence before sending VF link
    status message check whether VF is up to receive it.
    
    Fixes: ad513ed938c9 ("octeontx2-vf: Link event notification support")
    Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b360cb8d3f3fc56fd80a367d38dd320ca9ed9220)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 31317e10676a8e741855043c69eeb118eeb99ba4
Author: Subbaraya Sundeep <sbhatta@marvell.com>
Date:   Mon Mar 18 14:59:56 2024 +0530

    octeontx2-pf: Use default max_active works instead of one
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7558ce0d974ced1dc07edc1197f750fe28c52e57 ]
    
    Only one execution context for the workqueue used for PF and
    VFs mailbox communication is incorrect since multiple works are
    queued simultaneously by all the VFs and PF link UP messages.
    Hence use default number of execution contexts by passing zero
    as max_active to alloc_workqueue function. With this fix in place,
    modify UP messages also to wait until completion.
    
    Fixes: d424b6c02415 ("octeontx2-pf: Enable SRIOV and added VF mbox handling")
    Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 907ae381f680863a8c98c716343bb3e46e1e0abe)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit be7ef1f0d6d4ae5d5433285c1c85a39a591caa23
Author: Subbaraya Sundeep <sbhatta@marvell.com>
Date:   Mon Mar 18 14:59:55 2024 +0530

    octeontx2-pf: Wait till detach_resources msg is complete
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cbf2f24939a5dafce6de4dd4422e543ce8f610cf ]
    
    During VF driver remove, a message is sent to detach VF
    resources to PF but VF is not waiting until message is
    complete. Also mailbox interrupts need to be turned off
    after the detach resource message is complete. This patch
    fixes that problem.
    
    Fixes: 05fcc9e08955 ("octeontx2-pf: Attach NIX and NPA block LFs")
    Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fcba8ad5d0fffb0c7fe35a2112059617650e1438)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9d5c325a689f3080a8abdf723d827bb7c55c75ef
Author: Subbaraya Sundeep <sbhatta@marvell.com>
Date:   Mon Mar 18 14:59:54 2024 +0530

    octeontx2: Detect the mbox up or down message via register
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a88e0f936ba9a301c78f6eacfd38737d003c130b ]
    
    A single line of interrupt is used to receive up notifications
    and down reply messages from AF to PF (similarly from PF to its VF).
    PF acts as bridge and forwards VF messages to AF and sends respsones
    back from AF to VF. When an async event like link event is received
    by up message when PF is in middle of forwarding VF message then
    mailbox errors occur because PF state machine is corrupted.
    Since VF is a separate driver or VF driver can be in a VM it is
    not possible to serialize from the start of communication at VF.
    Hence to differentiate between type of messages at PF this patch makes
    sender to set mbox data register with distinct values for up and down
    messages. Sender also checks whether previous interrupt is received
    before triggering current interrupt by waiting for mailbox data register
    to become zero.
    
    Fixes: 5a6d7c9daef3 ("octeontx2-pf: Mailbox communication with AF")
    Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b782e6beca0890032f3b2f70072317f0df67eff7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9836229365605fb2a498877c290e700a635bd987
Author: Jiri Pirko <jiri@resnulli.us>
Date:   Mon Mar 18 10:19:08 2024 +0100

    devlink: fix port new reply cmd type
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 78a2f5e6c15d8dcbd6495bb9635c7cb89235dfc5 ]
    
    Due to a c&p error, port new reply fills-up cmd with wrong value,
    any other existing port command replies and notifications.
    
    Fix it by filling cmd with value DEVLINK_CMD_PORT_NEW.
    
    Skimmed through devlink userspace implementations, none of them cares
    about this cmd value.
    
    Reported-by: Chenyuan Yang <chenyuan0y@gmail.com>
    Closes: https://lore.kernel.org/all/ZfZcDxGV3tSy4qsV@cy-server/
    Fixes: cd76dcd68d96 ("devlink: Support add and delete devlink port")
    Signed-off-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Parav Pandit <parav@nvidia.com>
    Reviewed-by: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>
    Link: https://lore.kernel.org/r/20240318091908.2736542-1-jiri@resnulli.us
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c5575f8a41a894c2d322af6d65a68ee0698c69b2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 15039c5e88346c9297187e12ec0ddb163d5477ea
Author: Thinh Tran <thinhtr@linux.ibm.com>
Date:   Fri Mar 15 15:55:35 2024 -0500

    net/bnx2x: Prevent access to a freed page in page_pool
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d27e2da94a42655861ca4baea30c8cd65546f25d ]
    
    Fix race condition leading to system crash during EEH error handling
    
    During EEH error recovery, the bnx2x driver's transmit timeout logic
    could cause a race condition when handling reset tasks. The
    bnx2x_tx_timeout() schedules reset tasks via bnx2x_sp_rtnl_task(),
    which ultimately leads to bnx2x_nic_unload(). In bnx2x_nic_unload()
    SGEs are freed using bnx2x_free_rx_sge_range(). However, this could
    overlap with the EEH driver's attempt to reset the device using
    bnx2x_io_slot_reset(), which also tries to free SGEs. This race
    condition can result in system crashes due to accessing freed memory
    locations in bnx2x_free_rx_sge()
    
    799  static inline void bnx2x_free_rx_sge(struct bnx2x *bp,
    800                             struct bnx2x_fastpath *fp, u16 index)
    801  {
    802     struct sw_rx_page *sw_buf = &fp->rx_page_ring[index];
    803     struct page *page = sw_buf->page;
    ....
    where sw_buf was set to NULL after the call to dma_unmap_page()
    by the preceding thread.
    
        EEH: Beginning: 'slot_reset'
        PCI 0011:01:00.0#10000: EEH: Invoking bnx2x->slot_reset()
        bnx2x: [bnx2x_io_slot_reset:14228(eth1)]IO slot reset initializing...
        bnx2x 0011:01:00.0: enabling device (0140 -> 0142)
        bnx2x: [bnx2x_io_slot_reset:14244(eth1)]IO slot reset --> driver unload
        Kernel attempted to read user page (0) - exploit attempt? (uid: 0)
        BUG: Kernel NULL pointer dereference on read at 0x00000000
        Faulting instruction address: 0xc0080000025065fc
        Oops: Kernel access of bad area, sig: 11 [#1]
        .....
        Call Trace:
        [c000000003c67a20] [c00800000250658c] bnx2x_io_slot_reset+0x204/0x610 [bnx2x] (unreliable)
        [c000000003c67af0] [c0000000000518a8] eeh_report_reset+0xb8/0xf0
        [c000000003c67b60] [c000000000052130] eeh_pe_report+0x180/0x550
        [c000000003c67c70] [c00000000005318c] eeh_handle_normal_event+0x84c/0xa60
        [c000000003c67d50] [c000000000053a84] eeh_event_handler+0xf4/0x170
        [c000000003c67da0] [c000000000194c58] kthread+0x1c8/0x1d0
        [c000000003c67e10] [c00000000000cf64] ret_from_kernel_thread+0x5c/0x64
    
    To solve this issue, we need to verify page pool allocations before
    freeing.
    
    Fixes: 4cace675d687 ("bnx2x: Alloc 4k fragment for each rx ring buffer element")
    Signed-off-by: Thinh Tran <thinhtr@linux.ibm.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Link: https://lore.kernel.org/r/20240315205535.1321-1-thinhtr@linux.ibm.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 44f9f1abb0ecc43023225ab9539167facbabf0ec)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bc39033595242677364c6fd86d6691593ff10b84
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Mar 18 18:35:06 2024 +0100

    dm-integrity: fix a memory leak when rechecking the data
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 55e565c42dce81a4e49c13262d5bc4eb4c2e588a ]
    
    Memory for the "checksums" pointer will leak if the data is rechecked
    after checksum failure (because the associated kfree won't happen due
    to 'goto skip_io').
    
    Fix this by freeing the checksums memory before recheck, and just use
    the "checksum_onstack" memory for storing checksum during recheck.
    
    Fixes: c88f5e553fe3 ("dm-integrity: recheck the integrity tag after a failure")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6d35654f03c35c273240d85ec67e3f2c3596c4e0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a79b6f2455cde6324180e66182902e8fe817d7ea
Author: Nikita Kiryushin <kiryushin@ancud.ru>
Date:   Fri Mar 15 20:50:52 2024 +0300

    net: phy: fix phy_read_poll_timeout argument type in genphy_loopback
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 32fa4366cc4da1c97b725a0066adf43c6b298f37 ]
    
    read_poll_timeout inside phy_read_poll_timeout can set val negative
    in some cases (for example, __mdiobus_read inside phy_read can return
    -EOPNOTSUPP).
    
    Supposedly, commit 4ec732951702 ("net: phylib: fix phy_read*_poll_timeout()")
    should fix problems with wrong-signed vals, but I do not see how
    as val is sent to phy_read as is and __val = phy_read (not val)
    is checked for sign.
    
    Change val type for signed to allow better error handling as done in other
    phy_read_poll_timeout callers. This will not fix any error handling
    by itself, but allows, for example, to modify cond with appropriate
    sign check or check resulting val separately.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 014068dcb5b1 ("net: phy: genphy_loopback: add link speed configuration")
    Signed-off-by: Nikita Kiryushin <kiryushin@ancud.ru>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/20240315175052.8049-1-kiryushin@ancud.ru
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 954b72d92e03ae6a79bb8f3d13a383f9113270a2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6179b96e45c4bdc70d52aa1fae6d75c62d43d4ba
Author: Xiubo Li <xiubli@redhat.com>
Date:   Wed Feb 21 09:16:12 2024 +0800

    ceph: stop copying to iter at EOF on sync reads
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1065da21e5df9d843d2c5165d5d576be000142a6 ]
    
    If EOF is encountered, ceph_sync_read() return value is adjusted down
    according to i_size, but the "to" iter is advanced by the actual number
    of bytes read.  Then, when retrying, the remainder of the range may be
    skipped incorrectly.
    
    Ensure that the "to" iter is advanced only until EOF.
    
    [ idryomov: changelog ]
    
    Fixes: c3d8e0b5de48 ("ceph: return the real size read when it hits EOF")
    Reported-by: Frank Hsiao <frankhsiao@qnap.com>
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Tested-by: Frank Hsiao <frankhsiao@qnap.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 834c93dcef0beacfee365bd55741d6dba147aa37)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a33fd0dc4be20c5d08a49c3f4fd2fbb679a8b06
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Mar 14 11:45:21 2024 +1000

    nouveau/gsp: don't check devinit disable on GSP.
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5d4e8ae6e57b025802aadf55a4775c55cceb75f1 ]
    
    GSP should be handling this and I can see no evidence in opengpu
    driver that this register should be touched.
    
    Fixed acceleration on 2080 Ti GPUs.
    
    Fixes: 15740541e8f0 ("drm/nouveau/devinit/tu102-: prepare for GSP-RM")
    
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Danilo Krummrich <dakr@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240314014521.2695233-1-airlied@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b15bce16661e5cc58e2c66a4f26683dfa1b460a2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3cf430af731fa30825250e77e880bf975f09afdb
Author: Tobias Brunner <tobias@strongswan.org>
Date:   Fri Mar 15 15:35:40 2024 +0100

    ipv4: raw: Fix sending packets from raw sockets via IPsec tunnels
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c9b3b81716c5b92132a6c1d4ac3c48a7b44082ab ]
    
    Since the referenced commit, the xfrm_inner_extract_output() function
    uses the protocol field to determine the address family.  So not setting
    it for IPv4 raw sockets meant that such packets couldn't be tunneled via
    IPsec anymore.
    
    IPv6 raw sockets are not affected as they already set the protocol since
    9c9c9ad5fae7 ("ipv6: set skb->protocol on tcp, raw and ip6_append_data
    genereated skbs").
    
    Fixes: f4796398f21b ("xfrm: Remove inner/outer modes from output path")
    Signed-off-by: Tobias Brunner <tobias@strongswan.org>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Reviewed-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Link: https://lore.kernel.org/r/c5d9a947-eb19-4164-ac99-468ea814ce20@strongswan.org
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ac935a605cab6b03fdce3c0e1e25f0de125aea1e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c96cb82a5e9d81de67b40a2158e1a0ef2110849e
Author: Felix Maurer <fmaurer@redhat.com>
Date:   Fri Mar 15 13:04:52 2024 +0100

    hsr: Handle failures in module init
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3cf28cd492308e5f63ed00b29ea03ca016264376 ]
    
    A failure during registration of the netdev notifier was not handled at
    all. A failure during netlink initialization did not unregister the netdev
    notifier.
    
    Handle failures of netdev notifier registration and netlink initialization.
    Both functions should only return negative values on failure and thereby
    lead to the hsr module not being loaded.
    
    Fixes: f421436a591d ("net/hsr: Add support for the High-availability Seamless Redundancy protocol (HSRv0)")
    Signed-off-by: Felix Maurer <fmaurer@redhat.com>
    Reviewed-by: Shigeru Yoshida <syoshida@redhat.com>
    Reviewed-by: Breno Leitao <leitao@debian.org>
    Link: https://lore.kernel.org/r/3ce097c15e3f7ace98fc7fd9bcbf299f092e63d1.1710504184.git.fmaurer@redhat.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 770e3ab94e6e5faefa2652457ef6162c4ba76f65)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit caf9770146ac05b0e22d83043ced4f2e82b13213
Author: Yewon Choi <woni9911@gmail.com>
Date:   Fri Mar 15 18:28:38 2024 +0900

    rds: introduce acquire/release ordering in acquire/release_in_xmit()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1422f28826d2a0c11e5240b3e951c9e214d8656e ]
    
    acquire/release_in_xmit() work as bit lock in rds_send_xmit(), so they
    are expected to ensure acquire/release memory ordering semantics.
    However, test_and_set_bit/clear_bit() don't imply such semantics, on
    top of this, following smp_mb__after_atomic() does not guarantee release
    ordering (memory barrier actually should be placed before clear_bit()).
    
    Instead, we use clear_bit_unlock/test_and_set_bit_lock() here.
    
    Fixes: 0f4b1c7e89e6 ("rds: fix rds_send_xmit() serialization")
    Fixes: 1f9ecd7eacfd ("RDS: Pass rds_conn_path to rds_send_xmit()")
    Signed-off-by: Yewon Choi <woni9911@gmail.com>
    Reviewed-by: Michal Kubiak <michal.kubiak@intel.com>
    Link: https://lore.kernel.org/r/ZfQUxnNTO9AJmzwc@libra05
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d792459a6e2ae21c7f5107babd63e52e4c5ab93a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 80c30e82dabb418373dfc1674fa60a1956d894fb
Author: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
Date:   Thu Mar 14 16:49:06 2024 -0600

    wireguard: receive: annotate data-race around receiving_counter.counter
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bba045dc4d996d03dce6fe45726e78a1a1f6d4c3 ]
    
    Syzkaller with KCSAN identified a data-race issue when accessing
    keypair->receiving_counter.counter. Use READ_ONCE() and WRITE_ONCE()
    annotations to mark the data race as intentional.
    
        BUG: KCSAN: data-race in wg_packet_decrypt_worker / wg_packet_rx_poll
    
        write to 0xffff888107765888 of 8 bytes by interrupt on cpu 0:
         counter_validate drivers/net/wireguard/receive.c:321 [inline]
         wg_packet_rx_poll+0x3ac/0xf00 drivers/net/wireguard/receive.c:461
         __napi_poll+0x60/0x3b0 net/core/dev.c:6536
         napi_poll net/core/dev.c:6605 [inline]
         net_rx_action+0x32b/0x750 net/core/dev.c:6738
         __do_softirq+0xc4/0x279 kernel/softirq.c:553
         do_softirq+0x5e/0x90 kernel/softirq.c:454
         __local_bh_enable_ip+0x64/0x70 kernel/softirq.c:381
         __raw_spin_unlock_bh include/linux/spinlock_api_smp.h:167 [inline]
         _raw_spin_unlock_bh+0x36/0x40 kernel/locking/spinlock.c:210
         spin_unlock_bh include/linux/spinlock.h:396 [inline]
         ptr_ring_consume_bh include/linux/ptr_ring.h:367 [inline]
         wg_packet_decrypt_worker+0x6c5/0x700 drivers/net/wireguard/receive.c:499
         process_one_work kernel/workqueue.c:2633 [inline]
         ...
    
        read to 0xffff888107765888 of 8 bytes by task 3196 on cpu 1:
         decrypt_packet drivers/net/wireguard/receive.c:252 [inline]
         wg_packet_decrypt_worker+0x220/0x700 drivers/net/wireguard/receive.c:501
         process_one_work kernel/workqueue.c:2633 [inline]
         process_scheduled_works+0x5b8/0xa30 kernel/workqueue.c:2706
         worker_thread+0x525/0x730 kernel/workqueue.c:2787
         ...
    
    Fixes: a9e90d9931f3 ("wireguard: noise: separate receive counter from send counter")
    Reported-by: syzbot+d1de830e4ecdaac83d89@syzkaller.appspotmail.com
    Signed-off-by: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fdf16de078a97bf14bb8ee2b8d47cc3d3ead09ed)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bb21a93b6a1861cd3eb78edd7ef662dee5fa1060
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 14 20:08:45 2024 +0000

    net: move dev->state into net_device_read_txrx group
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f6e0a4984c2e7244689ea87b62b433bed9d07e94 ]
    
    dev->state can be read in rx and tx fast paths.
    
    netif_running() which needs dev->state is called from
    - enqueue_to_backlog() [RX path]
    - __dev_direct_xmit()  [TX path]
    
    Fixes: 43a71cd66b9c ("net-device: reorganize net_device fast path variables")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Coco Li <lixiaoyan@google.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Link: https://lore.kernel.org/r/20240314200845.3050179-1-edumazet@google.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1cb84b885c7d000aa9a008da32a1a6d984c2ad26)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e3d3500733703aeaaf6f9d0d48715924917b0982
Author: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
Date:   Fri Feb 23 15:18:33 2024 +0800

    virtio: packed: fix unmap leak for indirect desc table
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d5c0ed17fea60cca9bc3bf1278b49ba79242bbcd ]
    
    When use_dma_api and premapped are true, then the do_unmap is false.
    
    Because the do_unmap is false, vring_unmap_extra_packed is not called by
    detach_buf_packed.
    
      if (unlikely(vq->do_unmap)) {
                    curr = id;
                    for (i = 0; i < state->num; i++) {
                            vring_unmap_extra_packed(vq,
                                                     &vq->packed.desc_extra[curr]);
                            curr = vq->packed.desc_extra[curr].next;
                    }
      }
    
    So the indirect desc table is not unmapped. This causes the unmap leak.
    
    So here, we check vq->use_dma_api instead. Synchronously, dma info is
    updated based on use_dma_api judgment
    
    This bug does not occur, because no driver use the premapped with
    indirect.
    
    Fixes: b319940f83c2 ("virtio_ring: skip unmap for premapped")
    Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Message-Id: <20240223071833.26095-1-xuanzhuo@linux.alibaba.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 51bacd9d29bf98c3ebc65e4a0477bb86306b4140)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9a0db7ef4b325be27bb194de9d6dccccb24eb07d
Author: Jonah Palmer <jonah.palmer@oracle.com>
Date:   Fri Feb 16 09:25:02 2024 -0500

    vdpa/mlx5: Allow CVQ size changes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 749a4016839270163efc36ecddddd01de491a16b ]
    
    The MLX driver was not updating its control virtqueue size at set_vq_num
    and instead always initialized to MLX5_CVQ_MAX_ENT (16) at
    setup_cvq_vring.
    
    Qemu would try to set the size to 64 by default, however, because the
    CVQ size always was initialized to 16, an error would be thrown when
    sending >16 control messages (as used-ring entry 17 is initialized to 0).
    For example, starting a guest with x-svq=on and then executing the
    following command would produce the error below:
    
     # for i in {1..20}; do ifconfig eth0 hw ether XX:xx:XX:xx:XX:XX; done
    
     qemu-system-x86_64: Insufficient written data (0)
     [  435.331223] virtio_net virtio0: Failed to set mac address by vq command.
     SIOCSIFHWADDR: Invalid argument
    
    Acked-by: Dragos Tatulea <dtatulea@nvidia.com>
    Acked-by: Eugenio Pérez <eperezma@redhat.com>
    Signed-off-by: Jonah Palmer <jonah.palmer@oracle.com>
    Message-Id: <20240216142502.78095-1-jonah.palmer@oracle.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Tested-by: Lei Yang <leiyang@redhat.com>
    Fixes: 5262912ef3cf ("vdpa/mlx5: Add support for control VQ and MAC setting")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9df6b5a9801fc17da96f6f245dda45ce13bc2156)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8cdcabdbf3e9c25d2f6d121cc8cac3daf9992d0c
Author: Steve Sistare <steven.sistare@oracle.com>
Date:   Fri Feb 9 14:30:07 2024 -0800

    vdpa_sim: reset must not run
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9588e7fc511f9c55b9835f14916e90ab940061b7 ]
    
    vdpasim_do_reset sets running to true, which is wrong, as it allows
    vdpasim_kick_vq to post work requests before the device has been
    configured.  To fix, do not set running until VIRTIO_CONFIG_S_DRIVER_OK
    is set.
    
    Fixes: 0c89e2a3a9d0 ("vdpa_sim: Implement suspend vdpa op")
    Signed-off-by: Steve Sistare <steven.sistare@oracle.com>
    Reviewed-by: Eugenio Pérez <eperezma@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Message-Id: <1707517807-137331-1-git-send-email-steven.sistare@oracle.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f5f6085a033880a5f7fddd32c98cf90e0ffc7a16)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 248c5481b5e4a3b4fdc97129474111c1149833b5
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Jan 25 23:20:39 2024 +0000

    virtio: uapi: Drop __packed attribute in linux/virtio_pci.h
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ec6ecb844d14d38b7dae8beb74e3d65db9c7b3e6 ]
    
    Commit 92792ac752aa ("virtio-pci: Introduce admin command sending function")
    added "__packed" structures to UAPI header linux/virtio_pci.h. This triggers
    build failures in the consumer userspace applications without proper "definition"
    of __packed (e.g., kvmtool build fails).
    
    Moreover, the structures are already packed well, and doesn't need explicit
    packing, similar to the rest of the structures in all virtio_* headers. Remove
    the __packed attribute.
    
    Fixes: 92792ac752aa ("virtio-pci: Introduce admin command sending function")
    Cc: Feng Liu <feliu@nvidia.com>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Yishai Hadas <yishaih@nvidia.com>
    Cc: Alex Williamson <alex.williamson@redhat.com>
    Cc: Jean-Philippe Brucker <jean-philippe@linaro.org>
    Reviewed-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Message-Id: <20240125232039.913606-1-suzuki.poulose@arm.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ac266cbfbcc498dc705b26420590177f790b7b78)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2487ea3f64d38cab4eff7d836eb7aaa33e1a1810
Author: Arthur Grillo <arthurgrillo@riseup.net>
Date:   Sat Mar 16 13:25:20 2024 -0300

    drm: Fix drm_fixp2int_round() making it add 0.5
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 807f96abdf14c80f534c78f2d854c2590963345c ]
    
    As well noted by Pekka[1], the rounding of drm_fixp2int_round is wrong.
    To round a number, you need to add 0.5 to the number and floor that,
    drm_fixp2int_round() is adding 0.0000076. Make it add 0.5.
    
    [1]: https://lore.kernel.org/all/20240301135327.22efe0dd.pekka.paalanen@collabora.com/
    
    Fixes: 8b25320887d7 ("drm: Add fixed-point helper to get rounded integer values")
    Suggested-by: Pekka Paalanen <pekka.paalanen@collabora.com>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Reviewed-by: Melissa Wen <mwen@igalia.com>
    Signed-off-by: Arthur Grillo <arthurgrillo@riseup.net>
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240316-drm_fixed-v2-1-c1bc2665b5ed@riseup.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit be300fb44a5c1efb27be55a52fb6b1656af68234)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 36b9bcd35891d6254d09f5fef3800502198d718c
Author: Adam Butcher <adam@jessamine.co.uk>
Date:   Mon Mar 18 17:50:52 2024 +0000

    spi: spi-imx: fix off-by-one in mx51 CPU mode burst length
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cf6d79a0f5769b5f4d9579ddaf88d2c30b03b873 ]
    
    c712c05e46c8 ("spi: imx: fix the burst length at DMA mode and CPU mode")
    corrects three cases of setting the ECSPI burst length but erroneously
    leaves the in-range CPU case one bit to big (in that field a value of
    0 means 1 bit).  The effect was that transmissions that should have been
    8-bit bytes appeared as 9-bit causing failed communication with SPI
    devices.
    
    Link: https://lore.kernel.org/all/20240201105451.507005-1-carlos.song@nxp.com/
    Link: https://lore.kernel.org/all/20240204091912.36488-1-carlos.song@nxp.com/
    Fixes: c712c05e46c8 ("spi: imx: fix the burst length at DMA mode and CPU mode")
    Signed-off-by: Adam Butcher <adam@jessamine.co.uk>
    Link: https://msgid.link/r/20240318175119.3334-1-adam@jessamine.co.uk
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 68fb3d6e17506daa3bb69aa9f4fbfbace8b628a3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4800ed6a587cf2f688e18aad0cbd38a2a17aabf
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Thu Mar 14 12:28:35 2024 +0300

    net: dsa: mt7530: prevent possible incorrect XTAL frequency selection
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f490c492e946d8ffbe65ad4efc66de3c5ede30a4 ]
    
    On MT7530, the HT_XTAL_FSEL field of the HWTRAP register stores a 2-bit
    value that represents the frequency of the crystal oscillator connected to
    the switch IC. The field is populated by the state of the ESW_P4_LED_0 and
    ESW_P4_LED_0 pins, which is done right after reset is deasserted.
    
      ESW_P4_LED_0    ESW_P3_LED_0    Frequency
      -----------------------------------------
      0               0               Reserved
      0               1               20MHz
      1               0               40MHz
      1               1               25MHz
    
    On MT7531, the XTAL25 bit of the STRAP register stores this. The LAN0LED0
    pin is used to populate the bit. 25MHz when the pin is high, 40MHz when
    it's low.
    
    These pins are also used with LEDs, therefore, their state can be set to
    something other than the bootstrapping configuration. For example, a link
    may be established on port 3 before the DSA subdriver takes control of the
    switch which would set ESW_P3_LED_0 to high.
    
    Currently on mt7530_setup() and mt7531_setup(), 1000 - 1100 usec delay is
    described between reset assertion and deassertion. Some switch ICs in real
    life conditions cannot always have these pins set back to the bootstrapping
    configuration before reset deassertion in this amount of delay. This causes
    wrong crystal frequency to be selected which puts the switch in a
    nonfunctional state after reset deassertion.
    
    The tests below are conducted on an MT7530 with a 40MHz crystal oscillator
    by Justin Swartz.
    
    With a cable from an active peer connected to port 3 before reset, an
    incorrect crystal frequency (0b11 = 25MHz) is selected:
    
                          [1]                  [3]     [5]
                          :                    :       :
                  _____________________________         __________________
    ESW_P4_LED_0                               |_______|
                  _____________________________
    ESW_P3_LED_0                               |__________________________
    
                           :                  : :     :
                           :                  : [4]...:
                           :                  :
                           [2]................:
    
    [1] Reset is asserted.
    [2] Period of 1000 - 1100 usec.
    [3] Reset is deasserted.
    [4] Period of 315 usec. HWTRAP register is populated with incorrect
        XTAL frequency.
    [5] Signals reflect the bootstrapped configuration.
    
    Increase the delay between reset_control_assert() and
    reset_control_deassert(), and gpiod_set_value_cansleep(priv->reset, 0) and
    gpiod_set_value_cansleep(priv->reset, 1) to 5000 - 5100 usec. This amount
    ensures a higher possibility that the switch IC will have these pins back
    to the bootstrapping configuration before reset deassertion.
    
    With a cable from an active peer connected to port 3 before reset, the
    correct crystal frequency (0b10 = 40MHz) is selected:
    
                          [1]        [2-1]     [3]     [5]
                          :          :         :       :
                  _____________________________         __________________
    ESW_P4_LED_0                               |_______|
                  ___________________           _______
    ESW_P3_LED_0                     |_________|       |__________________
    
                           :          :       : :     :
                           :          [2-2]...: [4]...:
                           [2]................:
    
    [1] Reset is asserted.
    [2] Period of 5000 - 5100 usec.
    [2-1] ESW_P3_LED_0 goes low.
    [2-2] Remaining period of 5000 - 5100 usec.
    [3] Reset is deasserted.
    [4] Period of 310 usec. HWTRAP register is populated with bootstrapped
        XTAL frequency.
    [5] Signals reflect the bootstrapped configuration.
    
    ESW_P3_LED_0 low period before reset deassertion:
    
                  5000 usec
                - 5100 usec
        TEST     RESET HOLD
           #         (usec)
      ---------------------
           1           5410
           2           5440
           3           4375
           4           5490
           5           5475
           6           4335
           7           4370
           8           5435
           9           4205
          10           4335
          11           3750
          12           3170
          13           4395
          14           4375
          15           3515
          16           4335
          17           4220
          18           4175
          19           4175
          20           4350
    
         Min           3170
         Max           5490
    
      Median       4342.500
         Avg       4466.500
    
    Revert commit 2920dd92b980 ("net: dsa: mt7530: disable LEDs before reset").
    Changing the state of pins via reset assertion is simpler and more
    efficient than doing so by setting the LED controller off.
    
    Fixes: b8f126a8d543 ("net-next: dsa: add dsa support for Mediatek MT7530 switch")
    Fixes: c288575f7810 ("net: dsa: mt7530: Add the support of MT7531 switch")
    Co-developed-by: Justin Swartz <justin.swartz@risingedge.co.za>
    Signed-off-by: Justin Swartz <justin.swartz@risingedge.co.za>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0aa607a996cbcfad164224dca6f1c9ff7363d999)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9acf82c1e251b434d9ebce9d38ecb50f5a03534
Author: Ignat Korchagin <ignat@cloudflare.com>
Date:   Wed Mar 13 19:37:58 2024 +0100

    net: veth: do not manipulate GRO when using XDP
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d7db7775ea2e31502d46427f5efd385afc4ff1eb ]
    
    Commit d3256efd8e8b ("veth: allow enabling NAPI even without XDP") tried to fix
    the fact that GRO was not possible without XDP, because veth did not use NAPI
    without XDP. However, it also introduced the behaviour that GRO is always
    enabled, when XDP is enabled.
    
    While it might be desired for most cases, it is confusing for the user at best
    as the GRO flag suddenly changes, when an XDP program is attached. It also
    introduces some complexities in state management as was partially addressed in
    commit fe9f801355f0 ("net: veth: clear GRO when clearing XDP even when down").
    
    But the biggest problem is that it is not possible to disable GRO at all, when
    an XDP program is attached, which might be needed for some use cases.
    
    Fix this by not touching the GRO flag on XDP enable/disable as the code already
    supports switching to NAPI if either GRO or XDP is requested.
    
    Link: https://lore.kernel.org/lkml/20240311124015.38106-1-ignat@cloudflare.com/
    Fixes: d3256efd8e8b ("veth: allow enabling NAPI even without XDP")
    Fixes: fe9f801355f0 ("net: veth: clear GRO when clearing XDP even when down")
    Signed-off-by: Ignat Korchagin <ignat@cloudflare.com>
    Reviewed-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0380da4217734d7a2fa1020c217cd27011df78e9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f5d3353966741eab5db746bf61190e3a4c23dd3f
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Mar 12 13:55:22 2024 +0200

    xfrm: Allow UDP encapsulation only in offload modes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 773bb766ca4a05bf363203030b72b10088869224 ]
    
    The missing check of x->encap caused to the situation where GSO packets
    were created with UDP encapsulation.
    
    As a solution return the encap check for non-offloaded SA.
    
    Fixes: 983a73da1f99 ("xfrm: Pass UDP encapsulation in TX packet offload")
    Closes: https://lore.kernel.org/all/a650221ae500f0c7cf496c61c96c1b103dcb6f67.camel@redhat.com
    Reported-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d147bb6a019a1ee58ce80311be61390b4c03d551)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 080a41371b94d577f6adfaa065846bdb7b2410b2
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 14 14:18:16 2024 +0000

    packet: annotate data-races around ignore_outgoing
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6ebfad33161afacb3e1e59ed1c2feefef70f9f97 ]
    
    ignore_outgoing is read locklessly from dev_queue_xmit_nit()
    and packet_getsockopt()
    
    Add appropriate READ_ONCE()/WRITE_ONCE() annotations.
    
    syzbot reported:
    
    BUG: KCSAN: data-race in dev_queue_xmit_nit / packet_setsockopt
    
    write to 0xffff888107804542 of 1 bytes by task 22618 on cpu 0:
     packet_setsockopt+0xd83/0xfd0 net/packet/af_packet.c:4003
     do_sock_setsockopt net/socket.c:2311 [inline]
     __sys_setsockopt+0x1d8/0x250 net/socket.c:2334
     __do_sys_setsockopt net/socket.c:2343 [inline]
     __se_sys_setsockopt net/socket.c:2340 [inline]
     __x64_sys_setsockopt+0x66/0x80 net/socket.c:2340
     do_syscall_64+0xd3/0x1d0
     entry_SYSCALL_64_after_hwframe+0x6d/0x75
    
    read to 0xffff888107804542 of 1 bytes by task 27 on cpu 1:
     dev_queue_xmit_nit+0x82/0x620 net/core/dev.c:2248
     xmit_one net/core/dev.c:3527 [inline]
     dev_hard_start_xmit+0xcc/0x3f0 net/core/dev.c:3547
     __dev_queue_xmit+0xf24/0x1dd0 net/core/dev.c:4335
     dev_queue_xmit include/linux/netdevice.h:3091 [inline]
     batadv_send_skb_packet+0x264/0x300 net/batman-adv/send.c:108
     batadv_send_broadcast_skb+0x24/0x30 net/batman-adv/send.c:127
     batadv_iv_ogm_send_to_if net/batman-adv/bat_iv_ogm.c:392 [inline]
     batadv_iv_ogm_emit net/batman-adv/bat_iv_ogm.c:420 [inline]
     batadv_iv_send_outstanding_bat_ogm_packet+0x3f0/0x4b0 net/batman-adv/bat_iv_ogm.c:1700
     process_one_work kernel/workqueue.c:3254 [inline]
     process_scheduled_works+0x465/0x990 kernel/workqueue.c:3335
     worker_thread+0x526/0x730 kernel/workqueue.c:3416
     kthread+0x1d1/0x210 kernel/kthread.c:388
     ret_from_fork+0x4b/0x60 arch/x86/kernel/process.c:147
     ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:243
    
    value changed: 0x00 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 27 Comm: kworker/u8:1 Tainted: G        W          6.8.0-syzkaller-08073-g480e035fc4c7 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024
    Workqueue: bat_events batadv_iv_send_outstanding_bat_ogm_packet
    
    Fixes: fa788d986a3a ("packet: add sockopt to ignore outgoing packets")
    Reported-by: syzbot+c669c1136495a2e7c31f@syzkaller.appspotmail.com
    Closes: https://lore.kernel.org/netdev/CANn89i+Z7MfbkBLOv=p7KZ7=K1rKHO4P1OL5LYDCtBiyqsa9oQ@mail.gmail.com/T/#t
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Jason Xing <kerneljasonxing@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8b1e273c6afcf00d3c40a54ada7d6aac1b503b97)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 31fccdf05109d3662e9816e95c7515fca83bbff1
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Mar 13 08:14:09 2024 +0100

    xen/events: increment refcnt only if event channel is refcounted
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d277f9d82802223f242cd9b60c988cfdda1d6be0 ]
    
    In bind_evtchn_to_irq_chip() don't increment the refcnt of the event
    channel blindly. In case the event channel is NOT refcounted, issue a
    warning instead.
    
    Add an additional safety net by doing the refcnt increment only if the
    caller has specified IRQF_SHARED in the irqflags parameter.
    
    Fixes: 9e90e58c11b7 ("xen: evtchn: Allow shared registration of IRQ handers")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>
    Link: https://lore.kernel.org/r/20240313071409.25913-3-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 95af4cb3d0a7f4e3c67a79a587f17365f33d209c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f263d12651c3d813f58fff3b6f9f03289912eb46
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Mar 13 08:14:08 2024 +0100

    xen/evtchn: avoid WARN() when unbinding an event channel
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 51c23bd691c0f1fb95b29731c356c6fd69925d17 ]
    
    When unbinding a user event channel, the related handler might be
    called a last time in case the kernel was built with
    CONFIG_DEBUG_SHIRQ. This might cause a WARN() in the handler.
    
    Avoid that by adding an "unbinding" flag to struct user_event which
    will short circuit the handler.
    
    Fixes: 9e90e58c11b7 ("xen: evtchn: Allow shared registration of IRQ handers")
    Reported-by: Demi Marie Obenour <demi@invisiblethingslab.com>
    Tested-by: Demi Marie Obenour <demi@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>
    Link: https://lore.kernel.org/r/20240313071409.25913-2-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9e2d4b58c1da48a32905802aaeadba7084b46895)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1903c0839f4fe657da4a298bb97d13c90c2dcec3
Author: Alexandre Ghiti <alexghiti@rivosinc.com>
Date:   Mon Mar 4 09:02:47 2024 +0100

    riscv: Fix compilation error with FAST_GUP and rv32
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2bb7e0c49302feec1c2f777bbfe8726169986ed8 ]
    
    By surrounding the definition of pte_leaf_size() with a ifdef napot as
    it should have been.
    
    Fixes: e0fe5ab4192c ("riscv: Fix pte_leaf_size() for NAPOT")
    Signed-off-by: Alexandre Ghiti <alexghiti@rivosinc.com>
    Reviewed-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Link: https://lore.kernel.org/r/20240304080247.387710-1-alexghiti@rivosinc.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4b24e17ef97b258f86a3b1ca7de0fde9c2b4dae5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d6659e4b60cde946618eff5648ea2b64149110d6
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue Feb 20 22:16:04 2024 +0200

    ASoC: SOF: amd: Skip IRAM/DRAM size modification for Steam Deck OLED
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 094d11768f740f11483dad4efcd9bbcffa4ce146 ]
    
    The recent introduction of the ACP/PSP communication for IRAM/DRAM fence
    register modification breaks the audio support on Valve's Steam Deck
    OLED device.
    
    It causes IPC timeout errors when trying to load DSP topology during
    probing:
    
    1707255557.688176 kernel: snd_sof_amd_vangogh 0000:04:00.5: ipc tx timed out for 0x30100000 (msg/reply size: 48/0)
    1707255557.689035 kernel: snd_sof_amd_vangogh 0000:04:00.5: ------------[ IPC dump start ]------------
    1707255557.689421 kernel: snd_sof_amd_vangogh 0000:04:00.5: dsp_msg = 0x0 dsp_ack = 0x91d14f6f host_msg = 0x1 host_ack = 0xead0f1a4 irq_stat >
    1707255557.689730 kernel: snd_sof_amd_vangogh 0000:04:00.5: ------------[ IPC dump end ]------------
    1707255557.690074 kernel: snd_sof_amd_vangogh 0000:04:00.5: ------------[ DSP dump start ]------------
    1707255557.690376 kernel: snd_sof_amd_vangogh 0000:04:00.5: IPC timeout
    1707255557.690744 kernel: snd_sof_amd_vangogh 0000:04:00.5: fw_state: SOF_FW_BOOT_COMPLETE (7)
    1707255557.691037 kernel: snd_sof_amd_vangogh 0000:04:00.5: invalid header size 0xdb43fe7. FW oops is bogus
    1707255557.694824 kernel: snd_sof_amd_vangogh 0000:04:00.5: unexpected fault 0x6942d3b3 trace 0x6942d3b3
    1707255557.695392 kernel: snd_sof_amd_vangogh 0000:04:00.5: ------------[ DSP dump end ]------------
    1707255557.695755 kernel: snd_sof_amd_vangogh 0000:04:00.5: Failed to setup widget PIPELINE.6.ACPHS1.IN
    1707255557.696069 kernel: snd_sof_amd_vangogh 0000:04:00.5: error: tplg component load failed -110
    1707255557.696374 kernel: snd_sof_amd_vangogh 0000:04:00.5: error: failed to load DSP topology -22
    1707255557.697904 kernel: snd_sof_amd_vangogh 0000:04:00.5: ASoC: error at snd_soc_component_probe on 0000:04:00.5: -22
    1707255557.698405 kernel: sof_mach nau8821-max: ASoC: failed to instantiate card -22
    1707255557.701061 kernel: sof_mach nau8821-max: error -EINVAL: Failed to register card(sof-nau8821-max)
    1707255557.701624 kernel: sof_mach: probe of nau8821-max failed with error -22
    
    Introduce a new member skip_iram_dram_size_mod to struct acp_quirk_entry and
    use it to skip IRAM/DRAM size modification for Vangogh Galileo device.
    
    Fixes: 55d7bbe43346 ("ASoC: SOF: amd: Add acp-psp mailbox interface for iram-dram fence register modification")
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Link: https://msgid.link/r/20240220201623.438944-3-cristian.ciocaltea@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 41d8bb804475136d5ae57a93367c53cbda521b39)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5bec075140cf1caa60ff370127c81442bfa278d5
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue Feb 20 22:16:03 2024 +0200

    ASoC: SOF: amd: Move signed_fw_image to struct acp_quirk_entry
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 33c3d813330718c403a60d220f03fbece0f4fb5c ]
    
    The signed_fw_image member of struct sof_amd_acp_desc is used to enable
    signed firmware support in the driver via the acp_sof_quirk_table.
    
    In preparation to support additional use cases of the quirk table (i.e.
    adding new flags), move signed_fw_image to a new struct acp_quirk_entry
    and update all references to it accordingly.
    
    No functional changes intended.
    
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Link: https://msgid.link/r/20240220201623.438944-2-cristian.ciocaltea@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: 094d11768f74 ("ASoC: SOF: amd: Skip IRAM/DRAM size modification for Steam Deck OLED")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e99e95f0f1b5b90569142b082d1acf14797dc959)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 51116c851b0766b6b392a7c157e1d67af969732c
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Fri Mar 15 15:29:51 2024 +0000

    io_uring: fix poll_remove stalled req completion
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5e3afe580a9f5ca173a6bd55ffe10948796ef7e5 ]
    
    Taking the ctx lock is not enough to use the deferred request completion
    infrastructure, it'll get queued into the list but no one would expect
    it there, so it will sit there until next io_submit_flush_completions().
    It's hard to care about the cancellation path, so complete it via tw.
    
    Fixes: ef7dfac51d8ed ("io_uring/poll: serialize poll linked timer start with poll removal")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/c446740bc16858f8a2a8dcdce899812f21d15f23.1710514702.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6d1e391395d42830da3f84eb7ea7e0decf74a751)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2eea68e2695d2a6ced87319154a37fc08ed89a92
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Wed Mar 13 22:50:40 2024 +0000

    net: ethernet: mtk_eth_soc: fix PPE hanging issue
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ea80e3ed09ab2c2b75724faf5484721753e92c31 ]
    
    A patch to resolve an issue was found in MediaTek's GPL-licensed SDK:
    In the mtk_ppe_stop() function, the PPE scan mode is not disabled before
    disabling the PPE. This can potentially lead to a hang during the process
    of disabling the PPE.
    
    Without this patch, the PPE may experience a hang during the reboot test.
    
    Link: https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/b40da332dfe763932a82f9f62a4709457a15dd6c
    Fixes: ba37b7caf1ed ("net: ethernet: mtk_eth_soc: add support for initializing the PPE")
    Suggested-by: Bc-bocun Chen <bc-bocun.chen@mediatek.com>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 09a1907433865b7c8ee6777e507f5126bdd38c0f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1eb7a7e894c1aa95fccba51ce59ed8a4d417d80e
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Wed Mar 13 22:50:18 2024 +0000

    net: mediatek: mtk_eth_soc: clear MAC_MCR_FORCE_LINK only when MAC is up
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f1b85ef15a99f06ed48871ce933d591127d2dcc0 ]
    
    Clearing bit MAC_MCR_FORCE_LINK which forces the link down too early
    can result in MAC ending up in a broken/blocked state.
    
    Fix this by handling this bit in the .mac_link_up and .mac_link_down
    calls instead of in .mac_finish.
    
    Fixes: b8fc9f30821e ("net: ethernet: mediatek: Add basic PHYLINK support")
    Suggested-by: Mason-cw Chang <Mason-cw.Chang@mediatek.com>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1a16fb6a44aa4d4efa920dad4c805dba4c48f2ef)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a269b15b2bf15a8929a71affff2b1ce0373339aa
Author: José Roberto de Souza <jose.souza@intel.com>
Date:   Wed Mar 13 10:13:18 2024 -0700

    drm/xe: Skip VMAs pin when requesting signal to the last XE_EXEC
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dd8a07f06dfd946e0eea1a3323d52e7c28a6ed80 ]
    
    Doing a XE_EXEC with num_batch_buffer == 0 makes signals passed as
    argument to be signaled when the last real XE_EXEC is completed.
    But to do that it was first pinning all VMAs in drm_gpuvm_exec_lock(),
    this patch remove this pinning as it is not required.
    
    This change also help Mesa implementing memory over-commiting recovery
    as it needs to unbind not needed VMAs when the whole VM can't fit
    in GPU memory but it can only do the unbiding when the last XE_EXEC
    is completed.
    So with this change Mesa can get the signal it want without getting
    out-of-memory errors.
    
    Fixes: eb9702ad2986 ("drm/xe: Allow num_batch_buffer / num_binds == 0 in IOCTLs")
    Cc: Thomas Hellstrom <thomas.hellstrom@linux.intel.com>
    Co-developed-by: Matthew Brost <matthew.brost@intel.com>
    Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
    Reviewed-by: Matthew Brost <matthew.brost@intel.com>
    Signed-off-by: Matthew Brost <matthew.brost@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240313171318.121066-1-jose.souza@intel.com
    (cherry picked from commit 58480c1c912ff8146d067301a0d04cca318b4a66)
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 43c8a525cbc5c8ff9d12bd8917bfaa376a29279d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8eb36f6b3b5c59ce9d8260eb2898e8345c0b2593
Author: Matthew Brost <matthew.brost@intel.com>
Date:   Tue Mar 12 11:39:07 2024 -0700

    drm/xe: Invalidate userptr VMA on page pin fault
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 386021394394eccef248dc5eb9c9370240821a8c ]
    
    Rather than return an error to the user or ban the VM when userptr VMA
    page pin fails with -EFAULT, invalidate VMA mappings. This supports the
    UMD use case of freeing userptr while still having bindings.
    
    Now that non-faulting VMs can invalidate VMAs, drop the usm prefix for
    the tile_invalidated member.
    
    v2:
     - Fix build error (CI)
    v3:
     - Don't invalidate VMA if in fault mode, rather kill VM (Thomas)
     - Update commit message with tile_invalidated name chagne (Thomas)
     - Wait VM bookkeep slots with VM resv lock (Thomas)
    v4:
     - Move list_del_init(&userptr.repin_link) after error check (Thomas)
     - Assert not in fault mode (Matthew)
    
    Fixes: dd08ebf6c352 ("drm/xe: Introduce a new DRM driver for Intel GPUs")
    Signed-off-by: Matthew Brost <matthew.brost@intel.com>
    Reviewed-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240312183907.933835-1-matthew.brost@intel.com
    (cherry picked from commit 521db22a1d70dbc596a07544a738416025b1b63c)
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 567d34a745d066a87b44d8c66a797aa40fcb2dea)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 17cfffa4907f688fc7b159496d7e522a55e7bb92
Author: Chunguang Xu <chunguang.xu@shopee.com>
Date:   Mon Mar 11 10:09:27 2024 +0800

    nvme: fix reconnection fail due to reserved tag allocation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit de105068fead55ed5c07ade75e9c8e7f86a00d1d ]
    
    We found a issue on production environment while using NVMe over RDMA,
    admin_q reconnect failed forever while remote target and network is ok.
    After dig into it, we found it may caused by a ABBA deadlock due to tag
    allocation. In my case, the tag was hold by a keep alive request
    waiting inside admin_q, as we quiesced admin_q while reset ctrl, so the
    request maked as idle and will not process before reset success. As
    fabric_q shares tagset with admin_q, while reconnect remote target, we
    need a tag for connect command, but the only one reserved tag was held
    by keep alive command which waiting inside admin_q. As a result, we
    failed to reconnect admin_q forever. In order to fix this issue, I
    think we should keep two reserved tags for admin queue.
    
    Fixes: ed01fee283a0 ("nvme-fabrics: only reserve a single tag")
    Signed-off-by: Chunguang Xu <chunguang.xu@shopee.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 262da920896e2f2ab0e3947d9dbee0aa09045818)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9ac35858757cb4ce7a19f59538f6186c54482cf5
Author: Florian Fainelli <florian.fainelli@broadcom.com>
Date:   Wed Mar 13 12:45:30 2024 -0700

    spi: Fix error code checking in spi_mem_exec_op()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 29895ce18311ddd702973ddb3a6c687db663e0fb ]
    
    After commit cff49d58f57e ("spi: Unify error codes by replacing -ENOTSUPP with
    -EOPNOTSUPP"), our SPI NOR flashes would stop probing with the following
    visible in the kernel log:
    
    [    2.196300] brcmstb_qspi f0440920.qspi: using bspi-mspi mode
    [    2.210295] spi-nor: probe of spi1.0 failed with error -95
    
    It turns out that the check in spi_mem_exec_op() was changed to check
    for -ENOTSUPP (old error code) or -EOPNOTSUPP (new error code), but this
    means that for drivers that were converted, the second condition is now
    true, and we stop falling through like we used to. Fix the error to
    check for neither error being neither -ENOTSUPP *nor* -EOPNOTSUPP.
    
    Fixes: cff49d58f57e ("spi: Unify error codes by replacing -ENOTSUPP with -EOPNOTSUPP")
    Reviewed-by: Michael Walle <mwalle@kernel.org>
    Reviewed-by: Pratyush Yadav <pratyush@kernel.org>
    Signed-off-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Reviewed-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Link: https://msgid.link/r/20240313194530.3150446-1-florian.fainelli@broadcom.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a1097308379f0a9a14a810b3db8b3fcc569c851f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 11c245af426bdcd99aa34635d1d9a4066cce45cf
Author: Théo Lebrun <theo.lebrun@bootlin.com>
Date:   Fri Feb 16 17:42:19 2024 +0100

    spi: spi-mem: add statistics support to ->exec_op() calls
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e63aef9c9121e5061cbf5112d12cadc9da399692 ]
    
    Current behavior is that spi-mem operations do not increment statistics,
    neither per-controller nor per-device, if ->exec_op() is used. For
    operations that do NOT use ->exec_op(), stats are increased as the
    usual spi_sync() is called.
    
    The newly implemented spi_mem_add_op_stats() function is strongly
    inspired by spi_statistics_add_transfer_stats(); locking logic and
    l2len computation comes from there.
    
    Statistics that are being filled: bytes{,_rx,_tx}, messages, transfers,
    errors, timedout, transfer_bytes_histo_*.
    
    Note about messages & transfers counters: in the fallback to spi_sync()
    case, there are from 1 to 4 transfers per message. We only register one
    big transfer in the ->exec_op() case as that is closer to reality.
    
    This patch is NOT touching:
     - spi_async, spi_sync, spi_sync_immediate: those counters describe
       precise function calls, incrementing them would be lying. I believe
       comparing the messages counter to spi_async+spi_sync is a good way
       to detect ->exec_op() calls, but I might be missing edge cases
       knowledge.
     - transfers_split_maxsize: splitting cannot happen if ->exec_op() is
       provided.
    
    Reviewed-by: Dhruva Gole <d-gole@ti.com>
    Signed-off-by: Théo Lebrun <theo.lebrun@bootlin.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Link: https://msgid.link/r/20240216-spi-mem-stats-v2-1-9256dfe4887d@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: 29895ce18311 ("spi: Fix error code checking in spi_mem_exec_op()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f9f2440523925d747e448ac7ed29525d9b640228)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d5a3c95dccb86f20cc5b68e7d183fb89cb52ad93
Author: Duanqiang Wen <duanqiangwen@net-swift.com>
Date:   Wed Mar 13 16:06:34 2024 +0800

    net: txgbe: fix clk_name exceed MAX_DEV_ID limits
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e30cef001da259e8df354b813015d0e5acc08740 ]
    
    txgbe register clk which name is i2c_designware.pci_dev_id(),
    clk_name will be stored in clk_lookup_alloc. If PCIe bus number
    is larger than 0x39, clk_name size will be larger than 20 bytes.
    It exceeds clk_lookup_alloc MAX_DEV_ID limits. So the driver
    shortened clk_name.
    
    Fixes: b63f20485e43 ("net: txgbe: Register fixed rate clock")
    Signed-off-by: Duanqiang Wen <duanqiangwen@net-swift.com>
    Reviewed-by: Michal Kubiak <michal.kubiak@intel.com>
    Link: https://lore.kernel.org/r/20240313080634.459523-1-duanqiangwen@net-swift.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 97eb67bdb08c374eab13d8171ace104a7a4d8c13)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f6611ca9068f103e1b662578037ddad5380a3327
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Wed Mar 13 00:27:19 2024 +0900

    hsr: Fix uninit-value access in hsr_get_node()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ddbec99f58571301679addbc022256970ca3eac6 ]
    
    KMSAN reported the following uninit-value access issue [1]:
    
    =====================================================
    BUG: KMSAN: uninit-value in hsr_get_node+0xa2e/0xa40 net/hsr/hsr_framereg.c:246
     hsr_get_node+0xa2e/0xa40 net/hsr/hsr_framereg.c:246
     fill_frame_info net/hsr/hsr_forward.c:577 [inline]
     hsr_forward_skb+0xe12/0x30e0 net/hsr/hsr_forward.c:615
     hsr_dev_xmit+0x1a1/0x270 net/hsr/hsr_device.c:223
     __netdev_start_xmit include/linux/netdevice.h:4940 [inline]
     netdev_start_xmit include/linux/netdevice.h:4954 [inline]
     xmit_one net/core/dev.c:3548 [inline]
     dev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564
     __dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349
     dev_queue_xmit include/linux/netdevice.h:3134 [inline]
     packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276
     packet_snd net/packet/af_packet.c:3087 [inline]
     packet_sendmsg+0x8b1d/0x9f30 net/packet/af_packet.c:3119
     sock_sendmsg_nosec net/socket.c:730 [inline]
     __sock_sendmsg net/socket.c:745 [inline]
     __sys_sendto+0x735/0xa10 net/socket.c:2191
     __do_sys_sendto net/socket.c:2203 [inline]
     __se_sys_sendto net/socket.c:2199 [inline]
     __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199
     do_syscall_x64 arch/x86/entry/common.c:52 [inline]
     do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83
     entry_SYSCALL_64_after_hwframe+0x63/0x6b
    
    Uninit was created at:
     slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768
     slab_alloc_node mm/slub.c:3478 [inline]
     kmem_cache_alloc_node+0x5e9/0xb10 mm/slub.c:3523
     kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560
     __alloc_skb+0x318/0x740 net/core/skbuff.c:651
     alloc_skb include/linux/skbuff.h:1286 [inline]
     alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6334
     sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2787
     packet_alloc_skb net/packet/af_packet.c:2936 [inline]
     packet_snd net/packet/af_packet.c:3030 [inline]
     packet_sendmsg+0x70e8/0x9f30 net/packet/af_packet.c:3119
     sock_sendmsg_nosec net/socket.c:730 [inline]
     __sock_sendmsg net/socket.c:745 [inline]
     __sys_sendto+0x735/0xa10 net/socket.c:2191
     __do_sys_sendto net/socket.c:2203 [inline]
     __se_sys_sendto net/socket.c:2199 [inline]
     __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199
     do_syscall_x64 arch/x86/entry/common.c:52 [inline]
     do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83
     entry_SYSCALL_64_after_hwframe+0x63/0x6b
    
    CPU: 1 PID: 5033 Comm: syz-executor334 Not tainted 6.7.0-syzkaller-00562-g9f8413c4a66f #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023
    =====================================================
    
    If the packet type ID field in the Ethernet header is either ETH_P_PRP or
    ETH_P_HSR, but it is not followed by an HSR tag, hsr_get_skb_sequence_nr()
    reads an invalid value as a sequence number. This causes the above issue.
    
    This patch fixes the issue by returning NULL if the Ethernet header is not
    followed by an HSR tag.
    
    Fixes: f266a683a480 ("net/hsr: Better frame dispatch")
    Reported-and-tested-by: syzbot+2ef3a8ce8e91b5a50098@syzkaller.appspotmail.com
    Closes: https://syzkaller.appspot.com/bug?extid=2ef3a8ce8e91b5a50098 [1]
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Link: https://lore.kernel.org/r/20240312152719.724530-1-syoshida@redhat.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 09e5cdbe2cc88c3c758927644a3eb02fac317209)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 072bd69e5ca3f9842e7bda3177754f480c8b46c1
Author: William Tu <witu@nvidia.com>
Date:   Sat Mar 9 20:31:47 2024 +0200

    vmxnet3: Fix missing reserved tailroom
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e127ce7699c1e05279ee5ee61f00893e7bfa9671 ]
    
    Use rbi->len instead of rcd->len for non-dataring packet.
    
    Found issue:
      XDP_WARN: xdp_update_frame_from_buff(line:278): Driver BUG: missing reserved tailroom
      WARNING: CPU: 0 PID: 0 at net/core/xdp.c:586 xdp_warn+0xf/0x20
      CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W  O       6.5.1 #1
      RIP: 0010:xdp_warn+0xf/0x20
      ...
      ? xdp_warn+0xf/0x20
      xdp_do_redirect+0x15f/0x1c0
      vmxnet3_run_xdp+0x17a/0x400 [vmxnet3]
      vmxnet3_process_xdp+0xe4/0x760 [vmxnet3]
      ? vmxnet3_tq_tx_complete.isra.0+0x21e/0x2c0 [vmxnet3]
      vmxnet3_rq_rx_complete+0x7ad/0x1120 [vmxnet3]
      vmxnet3_poll_rx_only+0x2d/0xa0 [vmxnet3]
      __napi_poll+0x20/0x180
      net_rx_action+0x177/0x390
    
    Reported-by: Martin Zaharinov <micron10@gmail.com>
    Tested-by: Martin Zaharinov <micron10@gmail.com>
    Link: https://lore.kernel.org/netdev/74BF3CC8-2A3A-44FF-98C2-1E20F110A92E@gmail.com/
    Fixes: 54f00cce1178 ("vmxnet3: Add XDP support.")
    Signed-off-by: William Tu <witu@nvidia.com>
    Link: https://lore.kernel.org/r/20240309183147.28222-1-witu@nvidia.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 91d017d19d5a9ad153e2dc23ed3c0e2e79ef5262)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5783a87220fe28716fc74f75c2acc8d505e31f4c
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Fri Mar 8 12:16:23 2024 -0800

    tcp: Fix refcnt handling in __inet_hash_connect().
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 04d9d1fc428ac9f581d55118d67e0cb546701feb ]
    
    syzbot reported a warning in sk_nulls_del_node_init_rcu().
    
    The commit 66b60b0c8c4a ("dccp/tcp: Unhash sk from ehash for tb2 alloc
    failure after check_estalblished().") tried to fix an issue that an
    unconnected socket occupies an ehash entry when bhash2 allocation fails.
    
    In such a case, we need to revert changes done by check_established(),
    which does not hold refcnt when inserting socket into ehash.
    
    So, to revert the change, we need to __sk_nulls_add_node_rcu() instead
    of sk_nulls_add_node_rcu().
    
    Otherwise, sock_put() will cause refcnt underflow and leak the socket.
    
    [0]:
    WARNING: CPU: 0 PID: 23948 at include/net/sock.h:799 sk_nulls_del_node_init_rcu+0x166/0x1a0 include/net/sock.h:799
    Modules linked in:
    CPU: 0 PID: 23948 Comm: syz-executor.2 Not tainted 6.8.0-rc6-syzkaller-00159-gc055fc00c07b #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024
    RIP: 0010:sk_nulls_del_node_init_rcu+0x166/0x1a0 include/net/sock.h:799
    Code: e8 7f 71 c6 f7 83 fb 02 7c 25 e8 35 6d c6 f7 4d 85 f6 0f 95 c0 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc e8 1b 6d c6 f7 90 <0f> 0b 90 eb b2 e8 10 6d c6 f7 4c 89 e7 be 04 00 00 00 e8 63 e7 d2
    RSP: 0018:ffffc900032d7848 EFLAGS: 00010246
    RAX: ffffffff89cd0035 RBX: 0000000000000001 RCX: 0000000000040000
    RDX: ffffc90004de1000 RSI: 000000000003ffff RDI: 0000000000040000
    RBP: 1ffff1100439ac26 R08: ffffffff89ccffe3 R09: 1ffff1100439ac28
    R10: dffffc0000000000 R11: ffffed100439ac29 R12: ffff888021cd6140
    R13: dffffc0000000000 R14: ffff88802a9bf5c0 R15: ffff888021cd6130
    FS:  00007f3b823f16c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f3b823f0ff8 CR3: 000000004674a000 CR4: 00000000003506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     __inet_hash_connect+0x140f/0x20b0 net/ipv4/inet_hashtables.c:1139
     dccp_v6_connect+0xcb9/0x1480 net/dccp/ipv6.c:956
     __inet_stream_connect+0x262/0xf30 net/ipv4/af_inet.c:678
     inet_stream_connect+0x65/0xa0 net/ipv4/af_inet.c:749
     __sys_connect_file net/socket.c:2048 [inline]
     __sys_connect+0x2df/0x310 net/socket.c:2065
     __do_sys_connect net/socket.c:2075 [inline]
     __se_sys_connect net/socket.c:2072 [inline]
     __x64_sys_connect+0x7a/0x90 net/socket.c:2072
     do_syscall_64+0xf9/0x240
     entry_SYSCALL_64_after_hwframe+0x6f/0x77
    RIP: 0033:0x7f3b8167dda9
    Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007f3b823f10c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002a
    RAX: ffffffffffffffda RBX: 00007f3b817abf80 RCX: 00007f3b8167dda9
    RDX: 000000000000001c RSI: 0000000020000040 RDI: 0000000000000003
    RBP: 00007f3b823f1120 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001
    R13: 000000000000000b R14: 00007f3b817abf80 R15: 00007ffd3beb57b8
     </TASK>
    
    Reported-by: syzbot+12c506c1aae251e70449@syzkaller.appspotmail.com
    Closes: https://syzkaller.appspot.com/bug?extid=12c506c1aae251e70449
    Fixes: 66b60b0c8c4a ("dccp/tcp: Unhash sk from ehash for tb2 alloc failure after check_estalblished().")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20240308201623.65448-1-kuniyu@amazon.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ad105cde6b261b8b05ec872fe7d1987417d7fe5a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f966d00dd2aa09eac496f79cda317eecbe1681bc
Author: Gabriel Krisman Bertazi <krisman@suse.de>
Date:   Wed Mar 13 17:39:12 2024 -0400

    io_uring: Fix release of pinned pages when __io_uaddr_map fails
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 67d1189d1095d471ed7fa426c7e384a7140a5dd7 ]
    
    Looking at the error path of __io_uaddr_map, if we fail after pinning
    the pages for any reasons, ret will be set to -EINVAL and the error
    handler won't properly release the pinned pages.
    
    I didn't manage to trigger it without forcing a failure, but it can
    happen in real life when memory is heavily fragmented.
    
    Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>
    Fixes: 223ef4743164 ("io_uring: don't allow IORING_SETUP_NO_MMAP rings on highmem pages")
    Link: https://lore.kernel.org/r/20240313213912.1920-1-krisman@suse.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4d376d7ad62b6a8e8dfff56b559d9d275e5b9b3a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6da80b5fc5cbe994a753f635a4e18c8201dacc04
Author: Sibi Sankar <quic_sibis@quicinc.com>
Date:   Tue Mar 12 16:07:23 2024 +0530

    cpufreq: Fix per-policy boost behavior on SoCs using cpufreq_boost_set_sw()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f37a4d6b4a2c77414e8b9d25dd5ee31537ce9b00 ]
    
    In the existing code, per-policy flags don't have any impact i.e.
    if cpufreq_driver boost is enabled and boost is disabled for one or
    more of the policies, the cpufreq driver will behave as if boost is
    enabled.
    
    Fix this by incorporating per-policy boost flag in the policy->max
    computation used in cpufreq_frequency_table_cpuinfo and setting the
    default per-policy boost to mirror the cpufreq_driver boost flag.
    
    Fixes: 218a06a79d9a ("cpufreq: Support per-policy performance boost")
    Reported-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Dhruva Gole <d-gole@ti.com>
    Signed-off-by: Sibi Sankar <quic_sibis@quicinc.com>
    Tested-by:Yipeng Zou <zouyipeng@huawei.com> <mailto:zouyipeng@huawei.com>
    Reviewed-by: Yipeng Zou <zouyipeng@huawei.com> <mailto:zouyipeng@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 552f799d02b6e50d1230a6b57a23f65c09e21e7e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e70fbf5462d4c9265669e402c56955dd9cb6de4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 9 20:34:36 2024 +0100

    soc: fsl: dpio: fix kcalloc() argument order
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 72ebb41b88f9d7c10c5e159e0507074af0a22fe2 ]
    
    A previous bugfix added a call to kcalloc(), which starting in gcc-14
    causes a harmless warning about the argument order:
    
    drivers/soc/fsl/dpio/dpio-service.c: In function 'dpaa2_io_service_enqueue_multiple_desc_fq':
    drivers/soc/fsl/dpio/dpio-service.c:526:29: error: 'kcalloc' sizes specified with 'sizeof' in the earlier argument and not in the later argument [-Werror=calloc-transposed-args]
      526 |         ed = kcalloc(sizeof(struct qbman_eq_desc), 32, GFP_KERNEL);
          |                             ^~~~~~
    drivers/soc/fsl/dpio/dpio-service.c:526:29: note: earlier argument should specify number of elements, later size of each element
    
    Since the two are only multiplied, the order does not change the
    behavior, so just fix it now to shut up the compiler warning.
    
    Dmity independently came up with the same fix.
    
    Fixes: 5c4a5999b245 ("soc: fsl: dpio: avoid stack usage warning")
    Reported-by: Dmitry Antipov <dmantipov@yandex.ru>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bfe239bc1fd6aa683a4bc9acb2105164300a373a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a96b590fd7e57cf21c718b50d257040f8cfee7fd
Author: Charlie Jenkins <charlie@rivosinc.com>
Date:   Fri Mar 8 10:25:56 2024 -0800

    riscv: Only check online cpus for emulated accesses
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 313130c62cf1fc410ac8730b291fd4fde582d032 ]
    
    The unaligned access checker only sets valid values for online cpus.
    Check for these values on online cpus rather than on present cpus.
    
    Signed-off-by: Charlie Jenkins <charlie@rivosinc.com>
    Reviewed-by: Conor Dooley <conor.dooley@microchip.com>
    Fixes: 71c54b3d169d ("riscv: report misaligned accesses emulation to hwprobe")
    Tested-by: Samuel Holland <samuel.holland@sifive.com>
    Link: https://lore.kernel.org/r/20240308-disable_misaligned_probe_config-v9-2-a388770ba0ce@rivosinc.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 52805f2f5e340d84d0d2829e050873456c716a2a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d13fe3fb67a13779f51a3d27b7f9f012acce0b0c
Author: Shay Drory <shayd@nvidia.com>
Date:   Tue Mar 12 12:52:38 2024 +0200

    devlink: Fix devlink parallel commands processing
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d7d75124965aee23e5e4421d78376545cf070b0a ]
    
    Commit 870c7ad4a52b ("devlink: protect devlink->dev by the instance
    lock") added devlink instance locking inside a loop that iterates over
    all the registered devlink instances on the machine in the pre-doit
    phase. This can lead to serialization of devlink commands over
    different devlink instances.
    
    For example: While the first devlink instance is executing firmware
    flash, all commands to other devlink instances on the machine are
    forced to wait until the first devlink finishes.
    
    Therefore, in the pre-doit phase, take the devlink instance lock only
    for the devlink instance the command is targeting. Devlink layer is
    taking a reference on the devlink instance, ensuring the devlink->dev
    pointer is valid. This reference taking was introduced by commit
    a380687200e0 ("devlink: take device reference for devlink object").
    Without this commit, it would not be safe to access devlink->dev
    lockless.
    
    Fixes: 870c7ad4a52b ("devlink: protect devlink->dev by the instance lock")
    Signed-off-by: Shay Drory <shayd@nvidia.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d394d076ed52b71eabff7a11e0ad36489a466431)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cfdfa6cfcd2e20123c5e90ef95a55e4c791d4258
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 11 20:46:28 2024 +0000

    net/sched: taprio: proper TCA_TAPRIO_TC_ENTRY_INDEX check
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 343041b59b7810f9cdca371f445dd43b35c740b1 ]
    
    taprio_parse_tc_entry() is not correctly checking
    TCA_TAPRIO_TC_ENTRY_INDEX attribute:
    
            int tc; // Signed value
    
            tc = nla_get_u32(tb[TCA_TAPRIO_TC_ENTRY_INDEX]);
            if (tc >= TC_QOPT_MAX_QUEUE) {
                    NL_SET_ERR_MSG_MOD(extack, "TC entry index out of range");
                    return -ERANGE;
            }
    
    syzbot reported that it could fed arbitary negative values:
    
    UBSAN: shift-out-of-bounds in net/sched/sch_taprio.c:1722:18
    shift exponent -2147418108 is negative
    CPU: 0 PID: 5066 Comm: syz-executor367 Not tainted 6.8.0-rc7-syzkaller-00136-gc8a5c731fd12 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024
    Call Trace:
     <TASK>
      __dump_stack lib/dump_stack.c:88 [inline]
      dump_stack_lvl+0x1e7/0x2e0 lib/dump_stack.c:106
      ubsan_epilogue lib/ubsan.c:217 [inline]
      __ubsan_handle_shift_out_of_bounds+0x3c7/0x420 lib/ubsan.c:386
      taprio_parse_tc_entry net/sched/sch_taprio.c:1722 [inline]
      taprio_parse_tc_entries net/sched/sch_taprio.c:1768 [inline]
      taprio_change+0xb87/0x57d0 net/sched/sch_taprio.c:1877
      taprio_init+0x9da/0xc80 net/sched/sch_taprio.c:2134
      qdisc_create+0x9d4/0x1190 net/sched/sch_api.c:1355
      tc_modify_qdisc+0xa26/0x1e40 net/sched/sch_api.c:1776
      rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6617
      netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543
      netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]
      netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367
      netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908
      sock_sendmsg_nosec net/socket.c:730 [inline]
      __sock_sendmsg+0x221/0x270 net/socket.c:745
      ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584
      ___sys_sendmsg net/socket.c:2638 [inline]
      __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667
     do_syscall_64+0xf9/0x240
     entry_SYSCALL_64_after_hwframe+0x6f/0x77
    RIP: 0033:0x7f1b2dea3759
    Code: 48 83 c4 28 c3 e8 d7 19 00 00 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007ffd4de452f8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 00007f1b2def0390 RCX: 00007f1b2dea3759
    RDX: 0000000000000000 RSI: 00000000200007c0 RDI: 0000000000000004
    RBP: 0000000000000003 R08: 0000555500000000 R09: 0000555500000000
    R10: 0000555500000000 R11: 0000000000000246 R12: 00007ffd4de45340
    R13: 00007ffd4de45310 R14: 0000000000000001 R15: 00007ffd4de45340
    
    Fixes: a54fc09e4cba ("net/sched: taprio: allow user input of per-tc max SDU")
    Reported-and-tested-by: syzbot+a340daa06412d6028918@syzkaller.appspotmail.com
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Michal Kubiak <michal.kubiak@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9b720bb1a69a9f12a4a5c86b6f89386fe05ed0f2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4627f6359ca7661a335396912b23779c31bc954b
Author: Mete Durlu <meted@linux.ibm.com>
Date:   Wed Mar 6 12:31:52 2024 +0100

    s390/vtime: fix average steal time calculation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 367c50f78451d3bd7ad70bc5c89f9ba6dec46ca9 ]
    
    Current average steal timer calculation produces volatile and inflated
    values. The only user of this value is KVM so far and it uses that to
    decide whether or not to yield the vCPU which is seeing steal time.
    KVM compares average steal timer to a threshold and if the threshold
    is past then it does not allow CPU polling and yields it to host, else
    it keeps the CPU by polling.
    Since KVM's steal time threshold is very low by default (%10) it most
    likely is not effected much by the bloated average steal timer values
    because the operating region is pretty small. However there might be
    new users in the future who might rely on this number. Fix average
    steal timer calculation by changing the formula from:
    
            avg_steal_timer = avg_steal_timer / 2 + steal_timer;
    
    to the following:
    
            avg_steal_timer = (avg_steal_timer + steal_timer) / 2;
    
    This ensures that avg_steal_timer is actually a naive average of steal
    timer values. It now closely follows steal timer values but of course
    in a smoother manner.
    
    Fixes: 152e9b8676c6 ("s390/vtime: steal time exponential moving average")
    Signed-off-by: Mete Durlu <meted@linux.ibm.com>
    Acked-by: Heiko Carstens <hca@linux.ibm.com>
    Acked-by: Christian Borntraeger <borntraeger@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2d06ffd92205fd0aafa7fd1554737bb06fd3c449)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9a3755dc14ee7f441a643d4bc173f3c029a50ccd
Author: Linu Cherian <lcherian@marvell.com>
Date:   Tue Mar 12 12:36:22 2024 +0530

    octeontx2-af: Use matching wake_up API variant in CGX command interface
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e642921dfeed1e15e73f78f2c3b6746f72b6deb2 ]
    
    Use wake_up API instead of wake_up_interruptible, since
    wait_event_timeout API is used for waiting on command completion.
    
    Fixes: 1463f382f58d ("octeontx2-af: Add support for CGX link management")
    Signed-off-by: Linu Cherian <lcherian@marvell.com>
    Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
    Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a3031f175d02d8c9e6ac39210278565951fddf5c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 673d1ece5dd580e15ed53cb7819ccdb3aca7db87
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Fri Mar 8 12:01:22 2024 -0800

    rds: tcp: Fix use-after-free of net in reqsk_timer_handler().
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2a750d6a5b365265dbda33330a6188547ddb5c24 ]
    
    syzkaller reported a warning of netns tracker [0] followed by KASAN
    splat [1] and another ref tracker warning [1].
    
    syzkaller could not find a repro, but in the log, the only suspicious
    sequence was as follows:
    
      18:26:22 executing program 1:
      r0 = socket$inet6_mptcp(0xa, 0x1, 0x106)
      ...
      connect$inet6(r0, &(0x7f0000000080)={0xa, 0x4001, 0x0, @loopback}, 0x1c) (async)
    
    The notable thing here is 0x4001 in connect(), which is RDS_TCP_PORT.
    
    So, the scenario would be:
    
      1. unshare(CLONE_NEWNET) creates a per netns tcp listener in
          rds_tcp_listen_init().
      2. syz-executor connect()s to it and creates a reqsk.
      3. syz-executor exit()s immediately.
      4. netns is dismantled.  [0]
      5. reqsk timer is fired, and UAF happens while freeing reqsk.  [1]
      6. listener is freed after RCU grace period.  [2]
    
    Basically, reqsk assumes that the listener guarantees netns safety
    until all reqsk timers are expired by holding the listener's refcount.
    However, this was not the case for kernel sockets.
    
    Commit 740ea3c4a0b2 ("tcp: Clean up kernel listener's reqsk in
    inet_twsk_purge()") fixed this issue only for per-netns ehash.
    
    Let's apply the same fix for the global ehash.
    
    [0]:
    ref_tracker: net notrefcnt@0000000065449cc3 has 1/1 users at
         sk_alloc (./include/net/net_namespace.h:337 net/core/sock.c:2146)
         inet6_create (net/ipv6/af_inet6.c:192 net/ipv6/af_inet6.c:119)
         __sock_create (net/socket.c:1572)
         rds_tcp_listen_init (net/rds/tcp_listen.c:279)
         rds_tcp_init_net (net/rds/tcp.c:577)
         ops_init (net/core/net_namespace.c:137)
         setup_net (net/core/net_namespace.c:340)
         copy_net_ns (net/core/net_namespace.c:497)
         create_new_namespaces (kernel/nsproxy.c:110)
         unshare_nsproxy_namespaces (kernel/nsproxy.c:228 (discriminator 4))
         ksys_unshare (kernel/fork.c:3429)
         __x64_sys_unshare (kernel/fork.c:3496)
         do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)
         entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)
    ...
    WARNING: CPU: 0 PID: 27 at lib/ref_tracker.c:179 ref_tracker_dir_exit (lib/ref_tracker.c:179)
    
    [1]:
    BUG: KASAN: slab-use-after-free in inet_csk_reqsk_queue_drop (./include/net/inet_hashtables.h:180 net/ipv4/inet_connection_sock.c:952 net/ipv4/inet_connection_sock.c:966)
    Read of size 8 at addr ffff88801b370400 by task swapper/0/0
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
    Call Trace:
     <IRQ>
     dump_stack_lvl (lib/dump_stack.c:107 (discriminator 1))
     print_report (mm/kasan/report.c:378 mm/kasan/report.c:488)
     kasan_report (mm/kasan/report.c:603)
     inet_csk_reqsk_queue_drop (./include/net/inet_hashtables.h:180 net/ipv4/inet_connection_sock.c:952 net/ipv4/inet_connection_sock.c:966)
     reqsk_timer_handler (net/ipv4/inet_connection_sock.c:979 net/ipv4/inet_connection_sock.c:1092)
     call_timer_fn (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:207 ./include/trace/events/timer.h:127 kernel/time/timer.c:1701)
     __run_timers.part.0 (kernel/time/timer.c:1752 kernel/time/timer.c:2038)
     run_timer_softirq (kernel/time/timer.c:2053)
     __do_softirq (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:207 ./include/trace/events/irq.h:142 kernel/softirq.c:554)
     irq_exit_rcu (kernel/softirq.c:427 kernel/softirq.c:632 kernel/softirq.c:644)
     sysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1076 (discriminator 14))
     </IRQ>
    
    Allocated by task 258 on cpu 0 at 83.612050s:
     kasan_save_stack (mm/kasan/common.c:48)
     kasan_save_track (mm/kasan/common.c:68)
     __kasan_slab_alloc (mm/kasan/common.c:343)
     kmem_cache_alloc (mm/slub.c:3813 mm/slub.c:3860 mm/slub.c:3867)
     copy_net_ns (./include/linux/slab.h:701 net/core/net_namespace.c:421 net/core/net_namespace.c:480)
     create_new_namespaces (kernel/nsproxy.c:110)
     unshare_nsproxy_namespaces (kernel/nsproxy.c:228 (discriminator 4))
     ksys_unshare (kernel/fork.c:3429)
     __x64_sys_unshare (kernel/fork.c:3496)
     do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)
     entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)
    
    Freed by task 27 on cpu 0 at 329.158864s:
     kasan_save_stack (mm/kasan/common.c:48)
     kasan_save_track (mm/kasan/common.c:68)
     kasan_save_free_info (mm/kasan/generic.c:643)
     __kasan_slab_free (mm/kasan/common.c:265)
     kmem_cache_free (mm/slub.c:4299 mm/slub.c:4363)
     cleanup_net (net/core/net_namespace.c:456 net/core/net_namespace.c:446 net/core/net_namespace.c:639)
     process_one_work (kernel/workqueue.c:2638)
     worker_thread (kernel/workqueue.c:2700 kernel/workqueue.c:2787)
     kthread (kernel/kthread.c:388)
     ret_from_fork (arch/x86/kernel/process.c:153)
     ret_from_fork_asm (arch/x86/entry/entry_64.S:250)
    
    The buggy address belongs to the object at ffff88801b370000
     which belongs to the cache net_namespace of size 4352
    The buggy address is located 1024 bytes inside of
     freed 4352-byte region [ffff88801b370000, ffff88801b371100)
    
    [2]:
    WARNING: CPU: 0 PID: 95 at lib/ref_tracker.c:228 ref_tracker_free (lib/ref_tracker.c:228 (discriminator 1))
    Modules linked in:
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
    RIP: 0010:ref_tracker_free (lib/ref_tracker.c:228 (discriminator 1))
    ...
    Call Trace:
    <IRQ>
     __sk_destruct (./include/net/net_namespace.h:353 net/core/sock.c:2204)
     rcu_core (./arch/x86/include/asm/preempt.h:26 kernel/rcu/tree.c:2165 kernel/rcu/tree.c:2433)
     __do_softirq (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:207 ./include/trace/events/irq.h:142 kernel/softirq.c:554)
     irq_exit_rcu (kernel/softirq.c:427 kernel/softirq.c:632 kernel/softirq.c:644)
     sysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1076 (discriminator 14))
    </IRQ>
    
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Fixes: 467fa15356ac ("RDS-TCP: Support multiple RDS-TCP listen endpoints, one per netns.")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20240308200122.64357-3-kuniyu@amazon.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1e9fd5cf8d7f487332560f7bb312fc7d416817f3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 281f95b321314b7e3761478c2b6b9ba84dc82b08
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Mar 8 12:01:21 2024 -0800

    tcp: Fix NEW_SYN_RECV handling in inet_twsk_purge()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1c4e97dd2d3c9a3e84f7e26346aa39bc426d3249 ]
    
    inet_twsk_purge() uses rcu to find TIME_WAIT and NEW_SYN_RECV
    objects to purge.
    
    These objects use SLAB_TYPESAFE_BY_RCU semantic and need special
    care. We need to use refcount_inc_not_zero(&sk->sk_refcnt).
    
    Reuse the existing correct logic I wrote for TIME_WAIT,
    because both structures have common locations for
    sk_state, sk_family, and netns pointer.
    
    If after the refcount_inc_not_zero() the object fields longer match
    the keys, use sock_gen_put(sk) to release the refcount.
    
    Then we can call inet_twsk_deschedule_put() for TIME_WAIT,
    inet_csk_reqsk_queue_drop_and_put() for NEW_SYN_RECV sockets,
    with BH disabled.
    
    Then we need to restart the loop because we had drop rcu_read_lock().
    
    Fixes: 740ea3c4a0b2 ("tcp: Clean up kernel listener's reqsk in inet_twsk_purge()")
    Link: https://lore.kernel.org/netdev/CANn89iLvFuuihCtt9PME2uS1WJATnf5fKjDToa1WzVnRzHnPfg@mail.gmail.com/T/#u
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20240308200122.64357-2-kuniyu@amazon.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8862534197adf6c86cb18bf4928b6ee052792f8b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c74da62f3ded63a2f6f30d89ec18fc2d7366bd0f
Author: Dave Airlie <airlied@redhat.com>
Date:   Mon Mar 11 17:20:37 2024 +1000

    nouveau: reset the bo resource bus info after an eviction
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f35c9af45ea7a4b1115b193d84858b14d13517fc ]
    
    Later attempts to refault the bo won't happen and the whole
    GPU does to lunch. I think Christian's refactoring of this
    code out to the driver broke this not very well tested path.
    
    Fixes: 141b15e59175 ("drm/nouveau: move io_reserve_lru handling into the driver v5")
    Cc: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Danilo Krummrich <dakr@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240311072037.287905-1-airlied@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3a21028f11f7b2d9bec9fddab55722542ed3d78e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2c38f0e16bcfa5be5c6bcf66d2e37af5a25b2cd5
Author: Luca Ceresoli <luca.ceresoli@bootlin.com>
Date:   Tue Mar 5 15:36:28 2024 +0100

    ASoC: rockchip: i2s-tdm: Fix inaccurate sampling rates
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9e2ab4b18ebd46813fc3459207335af4d368e323 ]
    
    The sample rates set by the rockchip_i2s_tdm driver in master mode are
    inaccurate up to 5% in several cases, due to the driver logic to configure
    clocks and a nasty interaction with the Common Clock Framework.
    
    To understand what happens, here is the relevant section of the clock tree
    (slightly simplified), along with the names used in the driver:
    
           vpll0 _OR_ vpll1               "mclk_root"
              clk_i2s2_8ch_tx_src         "mclk_parent"
                 clk_i2s2_8ch_tx_mux
                    clk_i2s2_8ch_tx       "mclk" or "mclk_tx"
    
    This is what happens when playing back e.g. at 192 kHz using
    audio-graph-card (when recording the same applies, only s/tx/rx/):
    
     0. at probe, rockchip_i2s_tdm_set_sysclk() stores the passed frequency in
        i2s_tdm->mclk_tx_freq (*) which is 50176000, and that is never modified
        afterwards
    
     1. when playback is started, rockchip_i2s_tdm_hw_params() is called and
        does the following two calls
    
     2. rockchip_i2s_tdm_calibrate_mclk():
    
        2a. selects mclk_root0 (vpll0) as a parent for mclk_parent
            (mclk_tx_src), which is OK because the vpll0 rate is a good for
            192000 (and sumbultiple) rates
    
        2b. sets the mclk_root frequency based on ppm calibration computations
    
        2c. sets mclk_tx_src to 49152000 (= 256 * 192000), which is also OK as
            it is a multiple of the required bit clock
    
     3. rockchip_i2s_tdm_set_mclk()
    
        3a. calls clk_set_rate() to set the rate of mclk_tx (clk_i2s2_8ch_tx)
            to the value of i2s_tdm->mclk_tx_freq (*), i.e. 50176000 which is
            not a multiple of the sampling frequency -- this is not OK
    
            3a1. clk_set_rate() reacts by reparenting clk_i2s2_8ch_tx_src to
                 vpll1 -- this is not OK because the default vpll1 rate can be
                 divided to get 44.1 kHz and related rates, not 192 kHz
    
    The result is that the driver does a lot of ad-hoc decisions about clocks
    and ends up in using the wrong parent at an unoptimal rate.
    
    Step 0 is one part of the problem: unless the card driver calls set_sysclk
    at each stream start, whatever rate is set in mclk_tx_freq during boot will
    be taken and used until reboot. Moreover the driver does not care if its
    value is not a multiple of any audio frequency.
    
    Another part of the problem is that the whole reparenting and clock rate
    setting logic is conflicting with the CCF algorithms to achieve largely the
    same goal: selecting the best parent and setting the closest clock
    rate. And it turns out that only calling once clk_set_rate() on
    clk_i2s2_8ch_tx picks the correct vpll and sets the correct rate.
    
    The fix is based on removing the custom logic in the driver to select the
    parent and set the various clocks, and just let the Clock Framework do it
    all. As a side effect, the set_sysclk() op becomes useless because we now
    let the CCF compute the appropriate value for the sampling rate.  It also
    implies that the whole calibration logic is now dead code and so it is
    removed along with the "PCM Clock Compensation in PPM" kcontrol, which has
    always been broken anyway. The handling of the 4 optional clocks also
    becomes dead code and is removed.
    
    The actual rates have been tested playing 30 seconds of audio at various
    sampling rates before and after this change using sox:
    
        time play -r <sample_rate> -n synth 30 sine 950 gain -3
    
    The time reported in the table below is the 'real' value reported by the
    'time' command in the above command line.
    
         rate        before     after
       ---------     ------     ------
         8000 Hz     30.60s     30.63s
        11025 Hz     30.45s     30.51s
        16000 Hz     30.47s     30.50s
        22050 Hz     30.78s     30.41s
        32000 Hz     31.02s     30.43s
        44100 Hz     30.78s     30.41s
        48000 Hz     29.81s     30.45s
        88200 Hz     30.78s     30.41s
        96000 Hz     29.79s     30.42s
       176400 Hz     27.40s     30.41s
       192000 Hz     29.79s     30.42s
    
    While the tests are running the clock tree confirms that:
    
     * without the patch, vpll1 is always used and clk_i2s2_8ch_tx always
       produces 50176000 Hz, which cannot be divided for most audio rates
       except the slowest ones, generating inaccurate rates
     * with the patch:
       - for 192000 Hz vpll0 is used
       - for 176400 Hz vpll1 is used
       - clk_i2s2_8ch_tx always produces (256 * <rate>) Hz
    
    Tested on the RK3308 using the internal audio codec.
    
    Fixes: 081068fd6414 ("ASoC: rockchip: add support for i2s-tdm controller")
    Signed-off-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
    Link: https://msgid.link/r/20240305-rk3308-audio-codec-v4-1-312acdbe628f@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c73b7652659ccfbac82645e5768849fd11d4af29)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0bf177df39d74a47d47fcc2b89e733995012a8da
Author: Janne Grunau <j@jannau.net>
Date:   Mon Mar 11 23:53:17 2024 +0100

    spi: Restore delays for non-GPIO chip select
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aa0162dc0dd95c3bf248e3c78068760094e8f64b ]
    
    SPI controller with integrated chip select handling still need to adhere
    to SPI device's CS setup, hold and inactive delays. For controller
    without set_cs_timing spi core shall handle the delays to avoid
    duplicated delay handling in each controller driver.
    Fixes a regression for the out of tree SPI controller and SPI HID
    transport on Apple M1/M1 Pro/Max notebooks.
    
    Fixes: 4d8ff6b0991d ("spi: Add multi-cs memories support in SPI core")
    Signed-off-by: Janne Grunau <j@jannau.net>
    Link: https://msgid.link/r/20240311-spi-cs-delays-regression-v1-1-0075020a90b2@jannau.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 55ed48c68ea209a5033bd6c25574e3a96066b20b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4e286ff48779272272a2839007e510c54ddb3c8f
Author: Alexander Sverdlin <alexander.sverdlin@siemens.com>
Date:   Tue Mar 12 12:20:48 2024 +0100

    spi: lpspi: Avoid potential use-after-free in probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2ae0ab0143fcc06190713ed81a6486ed0ad3c861 ]
    
    fsl_lpspi_probe() is allocating/disposing memory manually with
    spi_alloc_host()/spi_alloc_target(), but uses
    devm_spi_register_controller(). In case of error after the latter call the
    memory will be explicitly freed in the probe function by
    spi_controller_put() call, but used afterwards by "devm" management outside
    probe() (spi_unregister_controller() <- devm_spi_unregister() below).
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000070
    ...
    Call trace:
     kernfs_find_ns
     kernfs_find_and_get_ns
     sysfs_remove_group
     sysfs_remove_groups
     device_remove_attrs
     device_del
     spi_unregister_controller
     devm_spi_unregister
     release_nodes
     devres_release_all
     really_probe
     driver_probe_device
     __device_attach_driver
     bus_for_each_drv
     __device_attach
     device_initial_probe
     bus_probe_device
     deferred_probe_work_func
     process_one_work
     worker_thread
     kthread
     ret_from_fork
    
    Fixes: 5314987de5e5 ("spi: imx: add lpspi bus driver")
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@siemens.com>
    Link: https://msgid.link/r/20240312112050.2503643-1-alexander.sverdlin@siemens.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 996ce839606afd0fef91355627868022aa73eb68)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 67ba1325775a6e1dbd03216445de5e4198aa1e38
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Mar 11 13:30:43 2024 -0600

    io_uring: don't save/restore iowait state
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6f0974eccbf78baead1735722c4f1ee3eb9422cd ]
    
    This kind of state is per-syscall, and since we're doing the waiting off
    entering the io_uring_enter(2) syscall, there's no way that iowait can
    already be set for this case. Simplify it by setting it if we need to,
    and always clearing it to 0 when done.
    
    Fixes: 7b72d661f1f2 ("io_uring: gate iowait schedule on having pending requests")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e0b39f2e6acc28bea6b0d8cc93ad32e1bb5f0378)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 379cbe1ac2806271be0196d7efa47dde0fbbf6f9
Author: Peng Fan <peng.fan@nxp.com>
Date:   Mon Feb 26 08:36:57 2024 +0800

    thermal/drivers/qoriq: Fix getting tmu range
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4d0642074c67ed9928e9d68734ace439aa06e403 ]
    
    TMU Version 1 has 4 TTRCRs, while TMU Version >=2 has 16 TTRCRs.
    So limit the len to 4 will report "invalid range data" for i.MX93.
    
    This patch drop the local array with allocated ttrcr array and
    able to support larger tmu ranges.
    
    Fixes: f12d60c81fce ("thermal/drivers/qoriq: Support version 2.1")
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20240226003657.3012880-1-peng.fan@oss.nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 62fda5c8d3444f1da9b66934a5a8692e13d55d41)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 45f1b56c15c4e0f002f1c99be7a717da4ea8b5ed
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 28 09:38:10 2024 +0100

    thermal/drivers/mediatek/lvts_thermal: Fix a memory leak in an error handling path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ca93bf607a44c1f009283dac4af7df0d9ae5e357 ]
    
    If devm_krealloc() fails, then 'efuse' is leaking.
    So free it to avoid a leak.
    
    Fixes: f5f633b18234 ("thermal/drivers/mediatek: Add the Low Voltage Thermal Sensor driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/481d345233862d58c3c305855a93d0dbc2bbae7e.1706431063.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9b02197596671800dd934609384b1aca7c6ad218)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9547b86863346e0163f00a90007ae5d7cfa736ef
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Sun Mar 10 15:38:51 2024 +0100

    ASoC: tlv320adc3xxx: Don't strip remove function when driver is builtin
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f31e0d0c2cad23e0cc48731634f85bb2d8707790 ]
    
    Using __exit for the remove function results in the remove callback
    being discarded with SND_SOC_TLV320ADC3XXX=y. When such a device gets
    unbound (e.g. using sysfs or hotplug), the driver is just removed
    without the cleanup being performed. This results in resource leaks. Fix
    it by compiling in the remove callback unconditionally.
    
    This also fixes a W=1 modpost warning:
    
            WARNING: modpost: sound/soc/codecs/snd-soc-tlv320adc3xxx: section mismatch in reference: adc3xxx_i2c_driver+0x10 (section: .data) -> adc3xxx_i2c_remove (section: .exit.text)
    
    (which only happens with SND_SOC_TLV320ADC3XXX=m).
    
    Fixes: e9a3b57efd28 ("ASoC: codec: tlv320adc3xxx: New codec driver")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://msgid.link/r/20240310143852.397212-2-u.kleine-koenig@pengutronix.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3c48b05e46df2b72ebdec83b0ec13903334a46e5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3a6ba338721d7a1a29164c62155a7d7c0c9dcf78
Author: Saurabh Sengar <ssengar@linux.microsoft.com>
Date:   Sun Mar 3 00:01:36 2024 -0800

    x86/hyperv: Use per cpu initial stack for vtl context
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2b4b90e053a29057fb05ba81acce26bddce8d404 ]
    
    Currently, the secondary CPUs in Hyper-V VTL context lack support for
    parallel startup. Therefore, relying on the single initial_stack fetched
    from the current task structure suffices for all vCPUs.
    
    However, common initial_stack risks stack corruption when parallel startup
    is enabled. In order to facilitate parallel startup, use the initial_stack
    from the per CPU idle thread instead of the current task.
    
    Fixes: 3be1bc2fe9d2 ("x86/hyperv: VTL support for Hyper-V")
    Signed-off-by: Saurabh Sengar <ssengar@linux.microsoft.com>
    Reviewed-by: Michael Kelley <mhklinux@outlook.com>
    Link: https://lore.kernel.org/r/1709452896-13342-1-git-send-email-ssengar@linux.microsoft.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Message-ID: <1709452896-13342-1-git-send-email-ssengar@linux.microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 53c3716d17da4ac0f7c4bf9447e593f4e49aa965)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8ad5d266898be9d8d14442d9d15bb29489b3fb2f
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Tue Feb 20 12:02:31 2024 +0300

    char: xilinx_hwicap: Fix NULL vs IS_ERR() bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 316459ba4051fd91237171fdca88920128a646f1 ]
    
    The devm_platform_ioremap_resource() function returns error pointers.
    It never returns NULL.  Update the check accordingly.
    
    Fixes: 672371832193 ("char: xilinx_hwicap: Modernize driver probe")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Acked-by: Michal Simek <michal.simek@amd.com>
    Link: https://lore.kernel.org/r/ef647a9c-b1b7-4338-9bc0-28165ec2a367@moroto.mountain
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6595eae98ab5363e7aa2ef2592b6ce72231894fe)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e26cd7713396a19e424a32c0026ae4aac76f35fd
Author: Colin Ian King <colin.i.king@gmail.com>
Date:   Thu Mar 7 18:17:34 2024 +0000

    usb: gadget: net2272: Use irqflags in the call to net2272_probe_fin
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 600556809f04eb3bbccd05218215dcd7b285a9a9 ]
    
    Currently the variable irqflags is being set but is not being used,
    it appears it should be used in the call to net2272_probe_fin
    rather than IRQF_TRIGGER_LOW being used. Kudos to Uwe Kleine-König
    for suggesting the fix.
    
    Cleans up clang scan build warning:
    drivers/usb/gadget/udc/net2272.c:2610:15: warning: variable 'irqflags'
    set but not used [-Wunused-but-set-variable]
    
    Fixes: ceb80363b2ec ("USB: net2272: driver for PLX NET2272 USB device controller")
    Signed-off-by: Colin Ian King <colin.i.king@gmail.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20240307181734.2034407-1-colin.i.king@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e1100e7a5a9dbe786cc2e3baa579669e80b8103a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 48ae9144ba64b7f651bad717445dbea7d537247c
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Feb 19 21:58:06 2024 +0200

    mei: vsc: Don't use sleeping condition in wait_event_timeout()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b8b19acfafdeacbedd4e2795cb18c81c4d8bb6cc ]
    
    vsc_tp_wakeup_request() called wait_event_timeout() with
    gpiod_get_value_cansleep() which may sleep, and does so as the
    implementation is that of gpio-ljca.
    
    Move the GPIO state check outside the call.
    
    Fixes: 566f5ca97680 ("mei: Add transport driver for IVSC device")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Tested-and-Reviewed-by: Wentong Wu <wentong.wu@intel.com>
    Link: https://lore.kernel.org/r/20240219195807.517742-3-sakari.ailus@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 982f109fb81b8d7d2220b67a65b9db448d6ab29f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c461c9f8dc325d7bc31d0ca7131e6e6425c49c4
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Feb 19 21:58:05 2024 +0200

    mei: vsc: Call wake_up() in the threaded IRQ handler
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 058a38acba15fd8e7b262ec6e17c4204cb15f984 ]
    
    The hard IRQ handler vsc_tp_irq() is called with a raw spinlock taken.
    wake_up() acquires a spinlock, a sleeping lock on PREEMPT_RT. This leads
    to sleeping in atomic context.
    
    Move the wake_up() call to the threaded IRQ handler vsc_tp_thread_isr()
    where it can be safely called.
    
    Fixes: 566f5ca97680 ("mei: Add transport driver for IVSC device")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Tested-and-Reviewed-by: Wentong Wu <wentong.wu@intel.com>
    Link: https://lore.kernel.org/r/20240219195807.517742-2-sakari.ailus@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 76a5e0951a4f12685261c65f2cab6372c64cf363)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d5bc9280ee12e29390fe819d991801e156308ebf
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Mon Mar 4 10:04:48 2024 +0300

    staging: greybus: fix get_channel_from_mode() failure path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 34164202a5827f60a203ca9acaf2d9f7d432aac8 ]
    
    The get_channel_from_mode() function is supposed to return the channel
    which matches the mode.  But it has a bug where if it doesn't find a
    matching channel then it returns the last channel.  It should return
    NULL instead.
    
    Also remove an unnecessary NULL check on "channel".
    
    Fixes: 2870b52bae4c ("greybus: lights: add lights implementation")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Link: https://lore.kernel.org/r/379c0cb4-39e0-4293-8a18-c7b1298e5420@moroto.mountain
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7fad138dcb4296053ac26822404d35df7991ddd1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0787b8dceb74535e58938887ef4eabc189ccfc48
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Feb 19 17:04:57 2024 +0200

    serial: 8250_exar: Don't remove GPIO device on suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 73b5a5c00be39e23b194bad10e1ea8bb73eee176 ]
    
    It seems a copy&paste mistake that suspend callback removes the GPIO
    device. There is no counterpart of this action, means once suspended
    there is no more GPIO device available untile full unbind-bind cycle
    is performed. Remove suspicious GPIO device removal in suspend.
    
    Fixes: d0aeaa83f0b0 ("serial: exar: split out the exar code from 8250_pci")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20240219150627.2101198-2-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e5969c54dd353714de2575d849a34d9f66395e02)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 29880fd666580e1473b619b8fb415e64601531cb
Author: Antoniu Miclaus <antoniu.miclaus@analog.com>
Date:   Mon Feb 19 11:16:15 2024 +0200

    rtc: max31335: fix interrupt status reg
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c12e67e076cbcb86fd9c3cb003a344ec684138a6 ]
    
    Fix the register value comparison in the `max31335_volatile_reg`
    function for the interrupt status register.
    
    MAX31335_STATUS1 macro definition corresponds to the actual
    interrupt status register.
    
    Fixes: dedaf03b99d6 ("rtc: max31335: add driver support")
    Signed-off-by: Antoniu Miclaus <antoniu.miclaus@analog.com>
    Reviewed-by: Nuno Sa <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20240219091616.24480-1-antoniu.miclaus@analog.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7116c3a91795ceae22fdfa5c029d03e656541c48)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a138d2240d0a825ab81a92be5da7fe0b3ebf70d
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 12 21:02:58 2024 -0800

    rtc: mt6397: select IRQ_DOMAIN instead of depending on it
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 544c42f798e1651dcb04fb0395219bf0f1c2607e ]
    
    IRQ_DOMAIN is a hidden (not user visible) symbol. Users cannot set
    it directly thru "make *config", so drivers should select it instead
    of depending on it if they need it.
    Relying on it being set for a dependency is risky.
    
    Consistently using "select" or "depends on" can also help reduce
    Kconfig circular dependency issues.
    
    Therefore, change the use of "depends on" for IRQ_DOMAIN to
    "select" for RTC_DRV_MT6397.
    
    Fixes: 04d3ba70a3c9 ("rtc: mt6397: add IRQ domain dependency")
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Eddie Huang <eddie.huang@mediatek.com>
    Cc: Sean Wang <sean.wang@mediatek.com>
    Cc: Matthias Brugger <matthias.bgg@gmail.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-mediatek@lists.infradead.org
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Cc: linux-rtc@vger.kernel.org
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: Peter Rosin <peda@axentia.se>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20240213050258.6167-1-rdunlap@infradead.org
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit eedf7a6705e4b3247272e9f96383ae839a673aa4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 280afba834bec21b43dddd55a784718b8a649dab
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Mon Jan 8 12:19:06 2024 +0000

    hwtracing: hisi_ptt: Move type check to the beginning of hisi_ptt_pmu_event_init()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 06226d120a28f146abd3637799958a4dc4dbb7a1 ]
    
    When perf_init_event() calls perf_try_init_event() to init pmu driver,
    searches for the next pmu driver only when the return value is -ENOENT.
    Therefore, hisi_ptt_pmu_event_init() needs to check the type at the
    beginning of the function.
    Otherwise, in the case of perf-task mode, perf_try_init_event() returns
    -EOPNOTSUPP and skips subsequent pmu drivers, causes perf_init_event() to
    fail.
    
    Fixes: ff0de066b463 ("hwtracing: hisi_ptt: Add trace function support for HiSilicon PCIe Tune and Trace device")
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Reviewed-by: Yicong Yang <yangyicong@hisilicon.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Link: https://lore.kernel.org/r/20240108121906.3514820-1-yangjihong1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9e8db18eaee9f9fc2650964f48e596550b22c0cf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9cd0614b154c2cdeb1c4a421453fdc968edcbaf
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Wed Feb 21 09:20:19 2024 +0300

    bus: mhi: ep: check the correct variable in mhi_ep_register_controller()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 27711860c54ccb5e80719df684f49f0bf3f8fb51 ]
    
    There is a copy and paste bug here so it checks "ev_ring_el_cache" instead
    of "ring_item_cache".
    
    Fixes: 62210a26cd4f ("bus: mhi: ep: Use slab allocator where applicable")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/bebcd822-d465-45da-adae-5435ec93e6d4@moroto.mountain
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ca4e4a5aa7ca019ca2b7a183195a24e95dcaf4d1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65c6b679fb3968a85f30d7346db7615672addd12
Author: Matti Vaittinen <mazziesaccount@gmail.com>
Date:   Mon Feb 12 13:20:09 2024 +0200

    iio: gts-helper: Fix division loop
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bb76cc45dcdfcd962a5994b8fe19ab74fc6c3c3a ]
    
    The loop based 64bit division may run for a long time when dividend is a
    lot bigger than the divider. Replace the division loop by the
    div64_u64() which implementation may be significantly faster.
    
    Tested-by: Subhajit Ghosh <subhajit.ghosh@tweaklogic.com>
    Signed-off-by: Matti Vaittinen <mazziesaccount@gmail.com>
    Fixes: 38416c28e168 ("iio: light: Add gain-time-scale helpers")
    Link: https://lore.kernel.org/r/Zcn-6e-0-nh2WcfU@drtxq0yyyyyyyyyyyyyby-3.rev.dnainternet.fi
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f8ca7ac74370e151c20199d0a06618a03301f146)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2204b3599ca7050c4454b65f9bcffeb66e28a07e
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sat Feb 3 00:57:59 2024 +0900

    kconfig: fix infinite loop when expanding a macro at the end of file
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit af8bbce92044dc58e4cc039ab94ee5d470a621f5 ]
    
    A macro placed at the end of a file with no newline causes an infinite
    loop.
    
    [Test Kconfig]
      $(info,hello)
      \ No newline at end of file
    
    I realized that flex-provided input() returns 0 instead of EOF when it
    reaches the end of a file.
    
    Fixes: 104daea149c4 ("kconfig: reference environment variables directly and remove 'option env='")
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 257b26293786443db541ee5b4044719dcdc2ba1b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f24a67abf8886e4b0bbdf0153289859af1fa6e96
Author: Li Zhijian <lizhijian@fujitsu.com>
Date:   Sun Feb 18 16:00:54 2024 +0800

    coccinelle: device_attr_show: Remove useless expression STR
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 173f6cd384ae27bb57af8cc5201b4f4a137d6e55 ]
    
    Commit ff82e84e80fc ("coccinelle: device_attr_show: simplify patch case")
    simplifies the patch case, as a result, STR is no longer needed.
    
    This also helps to fix below coccicheck warning:
    > warning: rp: metavariable STR not used in the - or context code
    
    CC: Julia Lawall <Julia.Lawall@inria.fr>
    CC: Nicolas Palix <nicolas.palix@imag.fr>
    CC: cocci@inria.fr
    Fixes: ff82e84e80fc ("coccinelle: device_attr_show: simplify patch case")
    Signed-off-by: Li Zhijian <lizhijian@fujitsu.com>
    Signed-off-by: Julia Lawall <Julia.Lawall@inria.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 36f99de1d7cf94212133bfbb80c9dae55e14d8b3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b381c6bd296371f245ab44706b274e78835104f
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Feb 16 16:09:31 2024 -0800

    xhci: update event ring dequeue pointer position to controller correctly
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e30e9ad9ed66c049f32ab2ffe38f0b576bebdd2c ]
    
    The event ring dequeue pointer field (ERDP) in xHC hardware is used to
    inform controller how far the driver has processed events on the event
    ring.
    
    In the case all events are handled and event ring is empty then the
    address of the TRB after the last processed one should be written.
    This TRB is both the enqueue and dequeue pointer.
    
    But in case we are writing the ERDP in the middle of processing
    several events then ERDP field should be written with the "up to and
    including" address of the last handled event TRB.
    
    Currenly each ERDP write by driver is done as if all events are handled
    and ring is empty.
    
    Fix this by adjusting the order when software dequeue "inc_deq()"
    is called and hardware dequeue "xhci_update_erst_dequeue()" is updated.
    
    Details in xhci 1.2 specification section 4.9.4:
    
    "System software shall write the Event Ring Dequeue Pointer (ERDP)
     register to inform the xHC that it has completed the processing of Event
     TRBs up to and including the Event TRB referenced by the ERDP.
    
     The detection of a Cycle bit mismatch in an Event TRB processed by
     software indicates the location of the xHC Event Ring Enqueue Pointer
     and that the Event Ring is empty. Software shall write the ERDP with
     the address of this TRB to indicate that it has processed all Events
     in the ring"
    
    This change depends on fixes made to relocate inc_deq() calls captured
    in the below commits:
    
      commit 3321f84bfae0 ("xhci: simplify event ring dequeue tracking for
      transfer events")
    
      commit d1830364e963 ("xhci: Simplify event ring dequeue pointer update
      for port change events")
    
    Fixes: dc0ffbea5729 ("usb: host: xhci: update event ring dequeue pointer on purpose")
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Wesley Cheng <quic_wcheng@quicinc.com>
    Link: https://lore.kernel.org/r/20240217001017.29969-6-quic_wcheng@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c910e447dfba1a864c9d8c7041485ee38eeb4b5c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 29194293a743419b3cd6ed045b771454820564f4
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Feb 16 16:09:30 2024 -0800

    xhci: remove unnecessary event_ring_deq parameter from xhci_handle_event()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 143e64df1bda33310c30ba5e15f72022e6135939 ]
    
    The event_ring_deq parameter is used to check if the event ring dequeue
    position is updated while calling by xhci_handle_event(), meaning there was
    an actual event on the ring to handle. In this case the driver needs to
    inform hardware about the updated dequeue position.
    Basically event_ring_deq just stores the old event ring dequeue position
    before calling the event handler.
    
    Keeping track of software event dequeue updates this way is no longer
    useful as driver anyways reads the current hardware dequeue position
    within the handle event, and checks if it needs to be updated.
    
    The driver might anyway need to modify the EHB (event handler busy) bit in
    the same register as the dequeue pointer even if the actual dequeue
    position did not change.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Wesley Cheng <quic_wcheng@quicinc.com>
    Link: https://lore.kernel.org/r/20240217001017.29969-5-quic_wcheng@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: e30e9ad9ed66 ("xhci: update event ring dequeue pointer position to controller correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a0899323abded82dd4597fc3224d66fa8bcaa47b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9cbeaf9f59e453133ac7993632e4de077b5aab79
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Feb 16 16:09:29 2024 -0800

    xhci: make isoc_bei_interval variable interrupter specific.
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit becbd202af8425e336b1c25e9254616a5c03d819 ]
    
    isoc_bei_interval is used to balance how often completed isochronous
    events cause interrupts. If interval is too large then the event ring
    may fill up before the completed isoc TRBs are handled.
    
    isoc_bei_interval is tuned based on how full the event ring is.
    
    isoc_bei_interval variable needs to be per interrupter as
    with several interrupters each one has its own event ring.
    
    move isoc_bei_interval variable to the interrupter structure.
    
    if a secondary interrupter does not care about this feature then
    keep isoc_bei_interval 0.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Wesley Cheng <quic_wcheng@quicinc.com>
    Link: https://lore.kernel.org/r/20240217001017.29969-4-quic_wcheng@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: e30e9ad9ed66 ("xhci: update event ring dequeue pointer position to controller correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f870a0be20758d9e3daac49e70961e31708ab0f7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8ecfb5a762b4aa9af8c9bb3fbc05c7f5d074dd86
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Feb 16 16:09:27 2024 -0800

    xhci: Add interrupt pending autoclear flag to each interrupter
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4f022aad80dc8b175e309197720f4fca8004fb2e ]
    
    Each interrupter has an interrupt pending (IP) bit that should be cleared
    in the interrupt handler. This is done automatically for systems using
    MSI/MSI-X interrupts.
    
    Secondary interrupters used by audio offload may not actually trigger
    MSI/MSI-X messages, so driver may need to clear the IP bit manually for
    these, even if the primary interrupter IP is cleared automatically.
    
    Add an ip_autoclear flag to each interrupter that driver can configure
    when requesting an interrupt for that xHC interrupter, and move
    the interrupt pending clearing code to its own helper function.
    Use this ip_autoclear flag instead of the current hcd->msi_enabled
    to check if IP flag is cleared by software.
    
    [Moved ip_autoclear into xhci and set based on msi_enabled -wcheng]
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Wesley Cheng <quic_wcheng@quicinc.com>
    Link: https://lore.kernel.org/r/20240217001017.29969-2-quic_wcheng@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: e30e9ad9ed66 ("xhci: update event ring dequeue pointer position to controller correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2c2ba22f9c5537832c127cc0899fbf2e75b48c74)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b0c522b62ae9b497c0767d6f83802575174f0ef1
Author: Mao Jinlong <quic_jinlmao@quicinc.com>
Date:   Wed Jan 31 02:54:19 2024 -0800

    coresight: etm4x: Set skip_power_up in etm4_init_arch_data function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1bbe0a247e5d72f723daeecf41596bfa99e199f1 ]
    
    skip_power_up is used in etm4_init_arch_data when set lpoverride. So
    need to set the value of it before calling using it.
    
    Fixes: 5214b563588e ("coresight: etm4x: Add support for sysreg only devices")
    Signed-off-by: Mao Jinlong <quic_jinlmao@quicinc.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Link: https://lore.kernel.org/r/20240131105423.9519-1-quic_jinlmao@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8f252c20be721b0a8b831625c36593cfd9740415)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a5dbe5d740b3efc1ca8e7cae5c2d7406cc145e4d
Author: James Clark <james.clark@arm.com>
Date:   Mon Jan 29 15:40:32 2024 +0000

    coresight: Fix issue where a source device's helpers aren't disabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f68bbe4dcfa303164922bc331d2e8d38ed2d4f23 ]
    
    The linked commit reverts the change that accidentally used some sysfs
    enable/disable functions from Perf which broke the refcounting, but it
    also removes the fact that the sysfs disable function disabled the
    helpers.
    
    Add a new wrapper function that does both which is used by both Perf and
    sysfs, and label the sysfs disable function appropriately. The naming of
    all of the functions will be tidied up later to avoid this happening
    again.
    
    Fixes: 287e82cf69aa ("coresight: Fix crash when Perf and sysfs modes are used concurrently")
    Signed-off-by: James Clark <james.clark@arm.com>
    Link: https://lore.kernel.org/r/20240129154050.569566-2-james.clark@arm.com
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 368225919bda2576214280f15778b877d6642492)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5747c4380a0a929f40673ee0200275769d0cb0a8
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Jan 11 12:56:36 2024 +0100

    arm64: dts: broadcom: bcmbca: bcm4908: drop invalid switch cells
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 27058b95fbb784406ea4c40b20caa3f04937140c ]
    
    Ethernet switch does not have addressable subnodes.
    
    This fixes:
    arch/arm64/boot/dts/broadcom/bcmbca/bcm4908-asus-gt-ac5300.dtb: ethernet-switch@0: '#address-cells', '#size-cells' do not match any of the regexes: 'pinctrl-[0-9]+'
            from schema $id: http://devicetree.org/schemas/net/dsa/brcm,sf2.yaml#
    
    Fixes: 527a3ac9bdf8 ("arm64: dts: broadcom: bcm4908: describe internal switch")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20240111115636.12095-1-zajec5@gmail.com
    Signed-off-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0ee280afa683223e470605cd80419e00e71a2f21)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 07839dd1c6b8d8d998d7c7efd73d6ff0a12282c6
Author: Tudor Ambarus <tudor.ambarus@linaro.org>
Date:   Fri Jan 19 10:45:08 2024 +0000

    tty: serial: samsung: fix tx_empty() to return TIOCSER_TEMT
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 314c2b399288f0058a8c5b6683292cbde5f1531b ]
    
    The core expects for tx_empty() either TIOCSER_TEMT when the tx is
    empty or 0 otherwise. s3c24xx_serial_txempty_nofifo() might return
    0x4, and at least uart_get_lsr_info() tries to clear exactly
    TIOCSER_TEMT (BIT(1)). Fix tx_empty() to return TIOCSER_TEMT.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Reviewed-by: Sam Protsenko <semen.protsenko@linaro.org>
    Link: https://lore.kernel.org/r/20240119104526.1221243-2-tudor.ambarus@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e95ca650fd0e19e7a1622aa16c05ef52b42549d7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 174c3f59ec3e1a92d80436302bbcc5c451f8fe5f
Author: Hugo Villeneuve <hvilleneuve@dimonoff.com>
Date:   Thu Jan 18 10:22:01 2024 -0500

    serial: max310x: fix syntax error in IRQ error message
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8ede8c6f474255b2213cccd7997b993272a8e2f9 ]
    
    Replace g with q.
    
    Helpful when grepping thru source code or logs for
    "request" keyword.
    
    Fixes: f65444187a66 ("serial: New serial driver MAX310X")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hugo Villeneuve <hvilleneuve@dimonoff.com>
    Link: https://lore.kernel.org/r/20240118152213.2644269-6-hugo@hugovil.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1df186b9a6e8b461da49888e1569bdfe663b3a00)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 67665e2fbde70a797492caa297696b049ec20f3a
Author: Jiri Slaby (SUSE) <jirislaby@kernel.org>
Date:   Mon Jan 22 12:03:17 2024 +0100

    tty: vt: fix 20 vs 0x20 typo in EScsiignore
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0e6a92f67c8a94707f7bb27ac29e2bdf3e7c167d ]
    
    The if (c >= 20 && c <= 0x3f) test added in commit 7a99565f8732 is
    wrong.  20 is DC4 in ascii and it makes no sense to consider that as the
    bottom limit. Instead, it should be 0x20 as in the other test in
    the commit above. This is supposed to NOT change anything as we handle
    interesting 20-0x20 asciis far before this if.
    
    So for sakeness, change to 0x20 (which is SPACE).
    
    Signed-off-by: "Jiri Slaby (SUSE)" <jirislaby@kernel.org>
    Fixes: 7a99565f8732 ("vt: ignore csi sequences with intermediate characters.")
    Cc: Martin Hostettler <textshell@uchuujin.de>
    Link: https://lore.kernel.org/all/ZaP45QY2WEsDqoxg@neutronstar.dyndns.org/
    Tested-by: Helge Deller <deller@gmx.de> # parisc STI console
    Link: https://lore.kernel.org/r/20240122110401.7289-4-jirislaby@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e72d521d838fe2640228ca683e027690bf4ffca2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 261c7861bca91bbf9c93441216e1d280c67b29f8
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Tue Jan 23 17:51:09 2024 -0500

    usb: phy: generic: Get the vbus supply
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 75fd6485cccef269ac9eb3b71cf56753341195ef ]
    
    While support for working with a vbus was added, the regulator was never
    actually gotten (despite what was documented). Fix this by actually
    getting the supply from the device tree.
    
    Fixes: 7acc9973e3c4 ("usb: phy: generic: add vbus support")
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20240123225111.1629405-3-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a7484e9ddc7fae7fd63447a44b08fdb863d3b2aa)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f7780e3f3f821e1473d4b75cd4216ca230602de6
Author: Petre Rodan <petre.rodan@subdimension.ro>
Date:   Fri Dec 29 11:24:32 2023 +0200

    iio: pressure: mprls0025pa fix off-by-one enum
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9e65506ca9c7ff716c8441a33417820ad61d3a16 ]
    
    Fix off-by-one error in transfer-function property.
    The honeywell,transfer-function property takes values between 1-3 so
    make sure the proper enum gets used.
    
    Fixes: 713337d9143ed ("iio: pressure: Honeywell mprls0025pa pressure sensor")
    Co-developed-by: Andreas Klinger <ak@it-klinger.de>
    Signed-off-by: Andreas Klinger <ak@it-klinger.de>
    Signed-off-by: Petre Rodan <petre.rodan@subdimension.ro>
    Link: https://lore.kernel.org/r/20231229092445.30180-5-petre.rodan@subdimension.ro
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ebf5db13510a922bead1214752f5c65e16c3baae)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7e8d7b51de995ef1e0e3cfba91914b7cc58f54a5
Author: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Date:   Wed Jan 17 14:53:12 2024 +0100

    remoteproc: stm32: Fix incorrect type assignment returned by stm32_rproc_get_loaded_rsc_tablef
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c77b35ce66af25bdd6fde60b62e35b9b316ea5c2 ]
    
    The sparse tool complains about the remove of the _iomem attribute.
    
    stm32_rproc.c:660:17: warning: cast removes address space '__iomem' of expression
    
    Add '__force' to explicitly specify that the cast is intentional.
    This conversion is necessary to cast to addresses pointer,
    which are then managed by the remoteproc core as a pointer to a
    resource_table structure.
    
    Fixes: 8a471396d21c ("remoteproc: stm32: Move resource table setup to rproc_ops")
    Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
    Link: https://lore.kernel.org/r/20240117135312.3381936-3-arnaud.pouliquen@foss.st.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c96abf8797ad8c395658845df657b2b2f6107d74)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 057000d492f816b59f15321c0c0c067d7e66e3e9
Author: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Date:   Wed Jan 17 14:53:11 2024 +0100

    remoteproc: stm32: Fix incorrect type in assignment for va
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 32381bbccba4c21145c571701f8f7fb1d9b3a92e ]
    
    The sparse tool complains about the attribute conversion between
    a _iomem void * and a void *:
    
    stm32_rproc.c:122:12: sparse: sparse: incorrect type in assignment (different address spaces) @@     expected void *va @@     got void [noderef] __iomem * @@
    stm32_rproc.c:122:12: sparse:     expected void *va
    stm32_rproc.c:122:12: sparse:     got void [noderef] __iomem *
    
    Add '__force' to explicitly specify that the cast is intentional.
    This conversion is necessary to cast to virtual addresses pointer,used,
    by the remoteproc core.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202312150052.HCiNKlqB-lkp@intel.com/
    Fixes: 13140de09cc2 ("remoteproc: stm32: add an ST stm32_rproc driver")
    Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
    Link: https://lore.kernel.org/r/20240117135312.3381936-2-arnaud.pouliquen@foss.st.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 79ad1a17e42ee2f1701f1bbcaa6eb3b8ed3b2e6c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9ed21ad4aa5bde4a553d40a42f3a1ce48479ad3c
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Fri Mar 1 19:43:48 2024 +0500

    io_uring/net: correct the type of variable
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 86bcacc957fc2d0403aa0e652757eec59a5fd7ca ]
    
    The namelen is of type int. It shouldn't be made size_t which is
    unsigned. The signed number is needed for error checking before use.
    
    Fixes: c55978024d12 ("io_uring/net: move receive multishot out of the generic msghdr path")
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Link: https://lore.kernel.org/r/20240301144349.2807544-1-usama.anjum@collabora.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e8ebb16f4c5f7f6fe31105db99bfa9ee74a69ce7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7a591be288ac4f512db11eccf45d1642d4d9b4fb
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Sun Mar 17 13:59:43 2024 +0200

    ovl: relax WARN_ON in ovl_verify_area()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 77a28aa476873048024ad56daf8f4f17d58ee48e ]
    
    syzbot hit an assertion in copy up data loop which looks like it is
    the result of a lower file whose size is being changed underneath
    overlayfs.
    
    This type of use case is documented to cause undefined behavior, so
    returning EIO error for the copy up makes sense, but it should not be
    causing a WARN_ON assertion.
    
    Reported-and-tested-by: syzbot+3abd99031b42acf367ef@syzkaller.appspotmail.com
    Fixes: ca7ab482401c ("ovl: add permission hooks outside of do_splice_direct()")
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c3c85aefc0da1e5074a06c682542a54ccc99bdca)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5cfa72457b32db19ec24e91a5c5a5b34b04eac64
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Mar 11 11:11:53 2024 -0400

    nfs: fix panic when nfs4_ff_layout_prepare_ds() fails
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 719fcafe07c12646691bd62d7f8d94d657fa0766 ]
    
    We've been seeing the following panic in production
    
    BUG: kernel NULL pointer dereference, address: 0000000000000065
    PGD 2f485f067 P4D 2f485f067 PUD 2cc5d8067 PMD 0
    RIP: 0010:ff_layout_cancel_io+0x3a/0x90 [nfs_layout_flexfiles]
    Call Trace:
     <TASK>
     ? __die+0x78/0xc0
     ? page_fault_oops+0x286/0x380
     ? __rpc_execute+0x2c3/0x470 [sunrpc]
     ? rpc_new_task+0x42/0x1c0 [sunrpc]
     ? exc_page_fault+0x5d/0x110
     ? asm_exc_page_fault+0x22/0x30
     ? ff_layout_free_layoutreturn+0x110/0x110 [nfs_layout_flexfiles]
     ? ff_layout_cancel_io+0x3a/0x90 [nfs_layout_flexfiles]
     ? ff_layout_cancel_io+0x6f/0x90 [nfs_layout_flexfiles]
     pnfs_mark_matching_lsegs_return+0x1b0/0x360 [nfsv4]
     pnfs_error_mark_layout_for_return+0x9e/0x110 [nfsv4]
     ? ff_layout_send_layouterror+0x50/0x160 [nfs_layout_flexfiles]
     nfs4_ff_layout_prepare_ds+0x11f/0x290 [nfs_layout_flexfiles]
     ff_layout_pg_init_write+0xf0/0x1f0 [nfs_layout_flexfiles]
     __nfs_pageio_add_request+0x154/0x6c0 [nfs]
     nfs_pageio_add_request+0x26b/0x380 [nfs]
     nfs_do_writepage+0x111/0x1e0 [nfs]
     nfs_writepages_callback+0xf/0x30 [nfs]
     write_cache_pages+0x17f/0x380
     ? nfs_pageio_init_write+0x50/0x50 [nfs]
     ? nfs_writepages+0x6d/0x210 [nfs]
     ? nfs_writepages+0x6d/0x210 [nfs]
     nfs_writepages+0x125/0x210 [nfs]
     do_writepages+0x67/0x220
     ? generic_perform_write+0x14b/0x210
     filemap_fdatawrite_wbc+0x5b/0x80
     file_write_and_wait_range+0x6d/0xc0
     nfs_file_fsync+0x81/0x170 [nfs]
     ? nfs_file_mmap+0x60/0x60 [nfs]
     __x64_sys_fsync+0x53/0x90
     do_syscall_64+0x3d/0x90
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Inspecting the core with drgn I was able to pull this
    
      >>> prog.crashed_thread().stack_trace()[0]
      #0 at 0xffffffffa079657a (ff_layout_cancel_io+0x3a/0x84) in ff_layout_cancel_io at fs/nfs/flexfilelayout/flexfilelayout.c:2021:27
      >>> prog.crashed_thread().stack_trace()[0]['idx']
      (u32)1
      >>> prog.crashed_thread().stack_trace()[0]['flseg'].mirror_array[1].mirror_ds
      (struct nfs4_ff_layout_ds *)0xffffffffffffffed
    
    This is clear from the stack trace, we call nfs4_ff_layout_prepare_ds()
    which could error out initializing the mirror_ds, and then we go to
    clean it all up and our check is only for if (!mirror->mirror_ds).  This
    is inconsistent with the rest of the users of mirror_ds, which have
    
      if (IS_ERR_OR_NULL(mirror_ds))
    
    to keep from tripping over this exact scenario.  Fix this up in
    ff_layout_cancel_io() to make sure we don't panic when we get an error.
    I also spot checked all the other instances of checking mirror_ds and we
    appear to be doing the correct checks everywhere, only unconditionally
    dereferencing mirror_ds when we know it would be valid.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Fixes: b739a5bd9d9f ("NFSv4/flexfiles: Cancel I/O if the layout is recalled or revoked")
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dac068f164ad05b35e7c0be13f138c3f6adca58f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3dd93a5412cbb75c617a60ca64b60973cad6087e
Author: Chao Yu <chao@kernel.org>
Date:   Thu Mar 14 10:05:28 2024 +0800

    f2fs: fix to avoid use-after-free issue in f2fs_filemap_fault
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit eb70d5a6c932d9d23f4bb3e7b83782c21ac4b064 ]
    
    syzbot reports a f2fs bug as below:
    
    BUG: KASAN: slab-use-after-free in f2fs_filemap_fault+0xd1/0x2c0 fs/f2fs/file.c:49
    Read of size 8 at addr ffff88807bb22680 by task syz-executor184/5058
    
    CPU: 0 PID: 5058 Comm: syz-executor184 Not tainted 6.7.0-syzkaller-09928-g052d534373b7 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106
     print_address_description mm/kasan/report.c:377 [inline]
     print_report+0x163/0x540 mm/kasan/report.c:488
     kasan_report+0x142/0x170 mm/kasan/report.c:601
     f2fs_filemap_fault+0xd1/0x2c0 fs/f2fs/file.c:49
     __do_fault+0x131/0x450 mm/memory.c:4376
     do_shared_fault mm/memory.c:4798 [inline]
     do_fault mm/memory.c:4872 [inline]
     do_pte_missing mm/memory.c:3745 [inline]
     handle_pte_fault mm/memory.c:5144 [inline]
     __handle_mm_fault+0x23b7/0x72b0 mm/memory.c:5285
     handle_mm_fault+0x27e/0x770 mm/memory.c:5450
     do_user_addr_fault arch/x86/mm/fault.c:1364 [inline]
     handle_page_fault arch/x86/mm/fault.c:1507 [inline]
     exc_page_fault+0x456/0x870 arch/x86/mm/fault.c:1563
     asm_exc_page_fault+0x26/0x30 arch/x86/include/asm/idtentry.h:570
    
    The root cause is: in f2fs_filemap_fault(), vmf->vma may be not alive after
    filemap_fault(), so it may cause use-after-free issue when accessing
    vmf->vma->vm_flags in trace_f2fs_filemap_fault(). So it needs to keep vm_flags
    in separated temporary variable for tracepoint use.
    
    Fixes: 87f3afd366f7 ("f2fs: add tracepoint for f2fs_vm_page_mkwrite()")
    Reported-and-tested-by: syzbot+763afad57075d3f862f2@syzkaller.appspotmail.com
    Closes: https://lore.kernel.org/lkml/000000000000e8222b060f00db3b@google.com
    Cc: Ed Tsai <Ed.Tsai@mediatek.com>
    Suggested-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8186e16a766d709a08f188d2f4e84098f364bea1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 338b392a0b46236ec5bdabdd064c06c361faab04
Author: David Howells <dhowells@redhat.com>
Date:   Wed Mar 13 08:15:03 2024 +0000

    afs: Fix occasional rmdir-then-VNOVNODE with generic/011
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b74c02a37987d3ea755f96119c527f5e91950592 ]
    
    Sometimes generic/011 causes kafs to follow up an FS.RemoveDir RPC call by
    spending around a second sending a slew of FS.FetchStatus RPC calls to the
    directory just deleted that then abort with VNOVNODE, indicating deletion
    of the target directory.
    
    This seems to stem from userspace attempting to stat the directory or
    something in it:
    
        afs_select_fileserver+0x46d/0xaa2
        afs_wait_for_operation+0x12/0x17e
        afs_fetch_status+0x56/0x75
        afs_validate+0xfb/0x240
        afs_permission+0xef/0x1b0
        inode_permission+0x90/0x139
        link_path_walk.part.0.constprop.0+0x6f/0x2f0
        path_lookupat+0x4c/0xfa
        filename_lookup+0x63/0xd7
        vfs_statx+0x62/0x13f
        vfs_fstatat+0x72/0x8a
    
    The issue appears to be that afs_dir_remove_subdir() marks the callback
    promise as being cancelled by setting the expiry time to AFS_NO_CB_PROMISE
    - which then confuses afs_validate() which sends the FetchStatus to try and
    get a new one before it checks for the AFS_VNODE_DELETED flag which
    indicates that we know the directory got deleted.
    
    Fix this by:
    
     (1) Make afs_check_validity() return true if AFS_VNODE_DELETED is set, and
         then tweak the return from afs_validate() if the DELETED flag is set.
    
     (2) Move the AFS_VNODE_DELETED check in afs_validate() up above the
         expiration check to immediately after we've grabbed the validate_lock.
    
    Fixes: 453924de6212 ("afs: Overhaul invalidation handling to better support RO volumes")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Link: https://lore.kernel.org/r/20240313081505.3060173-3-dhowells@redhat.com
    Reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ec81bbec4f6bef0c6663053e169294e46b13e436)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fcdc9737fc63b44e806b6b4113e56605c364cfba
Author: David Howells <dhowells@redhat.com>
Date:   Wed Mar 13 08:15:02 2024 +0000

    afs: Don't cache preferred address
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 83505bde45e347f1451d007b3ddd7f06cee4c269 ]
    
    In the AFS fileserver rotation algorithm, don't cache the preferred address
    for the server as that will override the explicit preference if a
    non-preferred address responds first.
    
    Fixes: 495f2ae9e355 ("afs: Fix fileserver rotation")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Link: https://lore.kernel.org/r/20240313081505.3060173-2-dhowells@redhat.com
    Reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7e206bbe227fa1512f545fecfb10f9e7c42606cc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 810d50b8cdd4931dc4ee8e8442d6739497db477a
Author: David Howells <dhowells@redhat.com>
Date:   Wed Mar 13 11:08:41 2024 +0000

    afs: Revert "afs: Hide silly-rename files from userspace"
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0aec3847d044273733285dcff90afda89ad461d2 ]
    
    This reverts commit 57e9d49c54528c49b8bffe6d99d782ea051ea534.
    
    This undoes the hiding of .__afsXXXX silly-rename files.  The problem with
    hiding them is that rm can't then manually delete them.
    
    This also reverts commit 5f7a07646655fb4108da527565dcdc80124b14c4 ("afs: Fix
    endless loop in directory parsing") as that's a bugfix for the above.
    
    Fixes: 57e9d49c5452 ("afs: Hide silly-rename files from userspace")
    Reported-by: Markus Suvanto <markus.suvanto@gmail.com>
    Link: https://lists.infradead.org/pipermail/linux-afs/2024-February/008102.html
    Signed-off-by: David Howells <dhowells@redhat.com>
    Link: https://lore.kernel.org/r/3085695.1710328121@warthog.procyon.org.uk
    Reviewed-by: Jeffrey E Altman <jaltman@auristor.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2afdd0cb02329464d77f3ec59468395c791a51a4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a4d4e86d750601159cb1c5e4afe6ab444fa40fad
Author: Sandipan Das <sandipan.das@amd.com>
Date:   Mon Jan 29 16:36:26 2024 +0530

    perf/x86/amd/core: Avoid register reset when CPU is dead
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ad8c91282c95f801c37812d59d2d9eba6899b384 ]
    
    When bringing a CPU online, some of the PMC and LBR related registers
    are reset. The same is done when a CPU is taken offline although that
    is unnecessary. This currently happens in the "cpu_dead" callback which
    is also incorrect as the callback runs on a control CPU instead of the
    one that is being taken offline. This also affects hibernation and
    suspend to RAM on some platforms as reported in the link below.
    
    Fixes: 21d59e3e2c40 ("perf/x86/amd/core: Detect PerfMonV2 support")
    Reported-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Sandipan Das <sandipan.das@amd.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/550a026764342cf7e5812680e3e2b91fe662b5ac.1706526029.git.sandipan.das@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b0c6df2570769114750187a811ddb23cea98645f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ef2e5375e11af1affa54597f53ed134f2a4362bf
Author: Dave Jiang <dave.jiang@intel.com>
Date:   Fri Mar 1 14:09:48 2024 -0700

    cxl: Fix the incorrect assignment of SSLBIS entry pointer initial location
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 99b52aac2d40203d0f6468325018f68e2c494c24 ]
    
    The 'entry' pointer in cdat_sslbis_handler() is set to header +
    sizeof(common header). However, the math missed the addition of the SSLBIS
    main header. It should be header + sizeof(common header) + sizeof(*sslbis).
    Use a defined struct for all the SSLBIS parts in order to avoid pointer
    math errors.
    
    The bug causes incorrect parsing of the SSLBIS table and introduces incorrect
    performance values to the access_coordinates during the CXL access_coordinate
    calculation path if there are CXL switches present in the topology.
    
    The issue was found during testing of new code being added to add additional
    checks for invalid CDAT values during CXL access_coordinate calculation. The
    testing was done on qemu with a CXL topology including a CXL switch.
    
    Fixes: 80aa780dda20 ("cxl: Add callback to parse the SSLBIS subtable from CDAT")
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Fan Ni <fan.ni@samsung.com>
    Link: https://lore.kernel.org/r/20240301210948.1298075-1-dave.jiang@intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8c41d72e696e21b724a0dbd574aea26da5061b2a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8257ca57d37a1bdf21cfbbb9cbb05d653a841966
Author: Chao Yu <chao@kernel.org>
Date:   Fri Mar 8 11:50:57 2024 +0800

    f2fs: zone: fix to remove pow2 check condition for zoned block device
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 11bec96afbfbc4679863db55258de440d786821e ]
    
    Commit 2e2c6e9b72ce ("f2fs: remove power-of-two limitation of zoned
    device") missed to remove pow2 check condition in init_blkz_info(),
    fix it.
    
    Fixes: 2e2c6e9b72ce ("f2fs: remove power-of-two limitation of zoned device")
    Signed-off-by: Feng Song <songfeng@oppo.com>
    Signed-off-by: Yongpeng Yang <yangyongpeng1@oppo.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 30ab3a5e7a550773368b1b4035a1e016da440bc8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit de18aaba6af9bec6aacad16cc3e2f784bdf2869c
Author: Chao Yu <chao@kernel.org>
Date:   Fri Mar 8 09:08:34 2024 +0800

    f2fs: fix to truncate meta inode pages forcely
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9f0c4a46be1fe9b97dbe66d49204c1371e3ece65 ]
    
    Below race case can cause data corruption:
    
    Thread A                                GC thread
                                            - gc_data_segment
                                             - ra_data_block
                                              - locked meta_inode page
    - f2fs_inplace_write_data
     - invalidate_mapping_pages
     : fail to invalidate meta_inode page
       due to lock failure or dirty|writeback
       status
     - f2fs_submit_page_bio
     : write last dirty data to old blkaddr
                                             - move_data_block
                                              - load old data from meta_inode page
                                              - f2fs_submit_page_write
                                              : write old data to new blkaddr
    
    Because invalidate_mapping_pages() will skip invalidating page which
    has unclear status including locked, dirty, writeback and so on, so
    we need to use truncate_inode_pages_range() instead of
    invalidate_mapping_pages() to make sure meta_inode page will be dropped.
    
    Fixes: 6aa58d8ad20a ("f2fs: readahead encrypted block during GC")
    Fixes: e3b49ea36802 ("f2fs: invalidate META_MAPPING before IPU/DIO write")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 04226d8e3c4028dc451e9d8777356ec0f7919253)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0592791b4aaf9169880642777432efd15ec38a81
Author: Xiuhong Wang <xiuhong.wang@unisoc.com>
Date:   Wed Mar 6 11:47:46 2024 +0800

    f2fs: compress: fix reserve_cblocks counting error when out of space
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2f6d721e14b69d6e1251f69fa238b48e8374e25f ]
    
    When a file only needs one direct_node, performing the following
    operations will cause the file to be unrepairable:
    
    unisoc # ./f2fs_io compress test.apk
    unisoc #df -h | grep dm-48
    /dev/block/dm-48 112G 112G 1.2M 100% /data
    
    unisoc # ./f2fs_io release_cblocks test.apk
    924
    unisoc # df -h | grep dm-48
    /dev/block/dm-48 112G 112G 4.8M 100% /data
    
    unisoc # dd if=/dev/random of=file4 bs=1M count=3
    3145728 bytes (3.0 M) copied, 0.025 s, 120 M/s
    unisoc # df -h | grep dm-48
    /dev/block/dm-48 112G 112G 1.8M 100% /data
    
    unisoc # ./f2fs_io reserve_cblocks test.apk
    F2FS_IOC_RESERVE_COMPRESS_BLOCKS failed: No space left on device
    
    adb reboot
    unisoc # df -h  | grep dm-48
    /dev/block/dm-48             112G 112G   11M 100% /data
    unisoc # ./f2fs_io reserve_cblocks test.apk
    0
    
    This is because the file has only one direct_node. After returning
    to -ENOSPC, reserved_blocks += ret will not be executed. As a result,
    the reserved_blocks at this time is still 0, which is not the real
    number of reserved blocks. Therefore, fsck cannot be set to repair
    the file.
    
    After this patch, the fsck flag will be set to fix this problem.
    
    unisoc # df -h | grep dm-48
    /dev/block/dm-48             112G 112G  1.8M 100% /data
    unisoc # ./f2fs_io reserve_cblocks test.apk
    F2FS_IOC_RESERVE_COMPRESS_BLOCKS failed: No space left on device
    
    adb reboot then fsck will be executed
    unisoc # df -h  | grep dm-48
    /dev/block/dm-48             112G 112G   11M 100% /data
    unisoc # ./f2fs_io reserve_cblocks test.apk
    924
    
    Fixes: c75488fb4d82 ("f2fs: introduce F2FS_IOC_RESERVE_COMPRESS_BLOCKS")
    Signed-off-by: Xiuhong Wang <xiuhong.wang@unisoc.com>
    Signed-off-by: Zhiguo Niu <zhiguo.niu@unisoc.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fc0aed88afbf6f606205129a7466eebdf528e3f3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65a25b302f30f0a3e204c034cf89fb36f538f131
Author: Xiuhong Wang <xiuhong.wang@unisoc.com>
Date:   Wed Mar 6 11:47:45 2024 +0800

    f2fs: compress: relocate some judgments in f2fs_reserve_compress_blocks
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b7d797d241c154d73ec5523f87f3b06d4f299da1 ]
    
    The following f2fs_io test will get a "0" result instead of -EINVAL,
    unisoc # ./f2fs_io compress file
    unisoc # ./f2fs_io reserve_cblocks file
     0
    it's not reasonable, so the judgement of
    atomic_read(&F2FS_I(inode)->i_compr_blocks) should be placed after
    the judgement of is_inode_flag_set(inode, FI_COMPRESS_RELEASED).
    
    Fixes: c75488fb4d82 ("f2fs: introduce F2FS_IOC_RESERVE_COMPRESS_BLOCKS")
    Signed-off-by: Xiuhong Wang <xiuhong.wang@unisoc.com>
    Signed-off-by: Zhiguo Niu <zhiguo.niu@unisoc.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bd164c8f4f842bdc7fcb5caaeef42f8f5e9f04a4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8441a36171928e12164c9b9468354d30b42dc17d
Author: Dave Jiang <dave.jiang@intel.com>
Date:   Fri Mar 8 14:59:20 2024 -0700

    ACPI: HMAT: Remove register of memory node for generic target
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 54b9460b0a28c4c76a7b455ec1b3b61a13e97291 ]
    
    For generic targets, there's no reason to call
    register_memory_node_under_compute_node() with the access levels that are
    only visible to HMAT handling code. Only update the attributes and rename
    hmat_register_generic_target_initiators() to hmat_update_generic_target().
    
    The original call path ends up triggering register_memory_node_under_compute_node().
    Although the access level would be "3" and not impact any current node arrays, it
    introduces unwanted data into the numa node access_coordinate array.
    
    Fixes: a3a3e341f169 ("acpi: numa: Add setting of generic port system locality attributes")
    Cc: Rafael J. Wysocki <rafael@kernel.org>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20240308220055.2172956-2-dave.jiang@intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4cad8b81ea56fb80278630d2a82529db26c598f3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e3184c61367ecd023db710aafff98ccca15ce0ae
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Tue Feb 20 18:25:34 2024 -0500

    NFSv4.1/pnfs: fix NFS with TLS in pnfs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a35518cae4b325632840bc8c3aa9ad9bac430038 ]
    
    Currently, even though xprtsec=tls is specified and used for operations
    to MDS, any operations that go to DS travel over unencrypted connection.
    Or additionally, if more than 1 DS can serve the data, then trunked
    connections are also done unencrypted.
    
    IN GETDEVINCEINFO, we get an entry for the DS which carries a protocol
    type (which is TCP), then nfs4_set_ds_client() gets called with TCP
    instead of TCP with TLS.
    
    Currently, each trunked connection is created and uses clp->cl_hostname
    value which if TLS is used would get passed up in the handshake upcall,
    but instead we need to pass in the appropriate trunked address value.
    
    Fixes: c8407f2e560c ("NFS: Add an "xprtsec=" NFS mount option")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b41e86bfe9d1b26c1f4dab5a5ad45c8ed78f9341)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ce785b0990ab1be2d56fef62c57259fec63cb7dd
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Feb 18 22:16:53 2024 +0100

    NFS: Fix an off by one in root_nfs_cat()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 698ad1a538da0b6bf969cfee630b4e3a026afb87 ]
    
    The intent is to check if 'dest' is truncated or not. So, >= should be
    used instead of >, because strlcat() returns the length of 'dest' and 'src'
    excluding the trailing NULL.
    
    Fixes: 56463e50d1fc ("NFS: Use super.c for NFSROOT mount option parsing")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 138257cb966aee66796301b13a843b30e0722d48)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e7bb964eddcd7290cf61147860cb8a276cab34db
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Wed Jan 31 11:10:06 2024 -0500

    NFS: Fix nfs_netfs_issue_read() xarray locking for writeback interrupt
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fd5860ab6341506004219b080aea40213b299d2e ]
    
    The loop inside nfs_netfs_issue_read() currently does not disable
    interrupts while iterating through pages in the xarray to submit
    for NFS read.  This is not safe though since after taking xa_lock,
    another page in the mapping could be processed for writeback inside
    an interrupt, and deadlock can occur.  The fix is simple and clean
    if we use xa_for_each_range(), which handles the iteration with RCU
    while reducing code complexity.
    
    The problem is easily reproduced with the following test:
     mount -o vers=3,fsc 127.0.0.1:/export /mnt/nfs
     dd if=/dev/zero of=/mnt/nfs/file1.bin bs=4096 count=1
     echo 3 > /proc/sys/vm/drop_caches
     dd if=/mnt/nfs/file1.bin of=/dev/null
     umount /mnt/nfs
    
    On the console with a lockdep-enabled kernel a message similar to
    the following will be seen:
    
     ================================
     WARNING: inconsistent lock state
     6.7.0-lockdbg+ #10 Not tainted
     --------------------------------
     inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage.
     test5/1708 [HC0[0]:SC0[0]:HE1:SE1] takes:
     ffff888127baa598 (&xa->xa_lock#4){+.?.}-{3:3}, at:
    nfs_netfs_issue_read+0x1b2/0x4b0 [nfs]
     {IN-SOFTIRQ-W} state was registered at:
       lock_acquire+0x144/0x380
       _raw_spin_lock_irqsave+0x4e/0xa0
       __folio_end_writeback+0x17e/0x5c0
       folio_end_writeback+0x93/0x1b0
       iomap_finish_ioend+0xeb/0x6a0
       blk_update_request+0x204/0x7f0
       blk_mq_end_request+0x30/0x1c0
       blk_complete_reqs+0x7e/0xa0
       __do_softirq+0x113/0x544
       __irq_exit_rcu+0xfe/0x120
       irq_exit_rcu+0xe/0x20
       sysvec_call_function_single+0x6f/0x90
       asm_sysvec_call_function_single+0x1a/0x20
       pv_native_safe_halt+0xf/0x20
       default_idle+0x9/0x20
       default_idle_call+0x67/0xa0
       do_idle+0x2b5/0x300
       cpu_startup_entry+0x34/0x40
       start_secondary+0x19d/0x1c0
       secondary_startup_64_no_verify+0x18f/0x19b
     irq event stamp: 176891
     hardirqs last  enabled at (176891): [<ffffffffa67a0be4>]
    _raw_spin_unlock_irqrestore+0x44/0x60
     hardirqs last disabled at (176890): [<ffffffffa67a0899>]
    _raw_spin_lock_irqsave+0x79/0xa0
     softirqs last  enabled at (176646): [<ffffffffa515d91e>]
    __irq_exit_rcu+0xfe/0x120
     softirqs last disabled at (176633): [<ffffffffa515d91e>]
    __irq_exit_rcu+0xfe/0x120
    
     other info that might help us debug this:
      Possible unsafe locking scenario:
    
            CPU0
            ----
       lock(&xa->xa_lock#4);
       <Interrupt>
         lock(&xa->xa_lock#4);
    
      *** DEADLOCK ***
    
     2 locks held by test5/1708:
      #0: ffff888127baa498 (&sb->s_type->i_mutex_key#22){++++}-{4:4}, at:
          nfs_start_io_read+0x28/0x90 [nfs]
      #1: ffff888127baa650 (mapping.invalidate_lock#3){.+.+}-{4:4}, at:
          page_cache_ra_unbounded+0xa4/0x280
    
     stack backtrace:
     CPU: 6 PID: 1708 Comm: test5 Kdump: loaded Not tainted 6.7.0-lockdbg+
     Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39
    04/01/2014
     Call Trace:
      dump_stack_lvl+0x5b/0x90
      mark_lock+0xb3f/0xd20
      __lock_acquire+0x77b/0x3360
      _raw_spin_lock+0x34/0x80
      nfs_netfs_issue_read+0x1b2/0x4b0 [nfs]
      netfs_begin_read+0x77f/0x980 [netfs]
      nfs_netfs_readahead+0x45/0x60 [nfs]
      nfs_readahead+0x323/0x5a0 [nfs]
      read_pages+0xf3/0x5c0
      page_cache_ra_unbounded+0x1c8/0x280
      filemap_get_pages+0x38c/0xae0
      filemap_read+0x206/0x5e0
      nfs_file_read+0xb7/0x140 [nfs]
      vfs_read+0x2a9/0x460
      ksys_read+0xb7/0x140
    
    Fixes: 000dbe0bec05 ("NFS: Convert buffered read paths to use netfs when fscache is enabled")
    Suggested-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8a2e5977cecd3cde6a0e3e86b7b914d00240e5dc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 397acb1fb30e7f04039e246e9fe087ae80a60a31
Author: Jeff LaBundy <jeff@labundy.com>
Date:   Wed Mar 6 23:40:21 2024 -0600

    Input: iqs7222 - add support for IQS7222D v1.1 and v1.2
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 992cf65674778e22436807796b2df927de21bb75 ]
    
    The vendor has introduced two new revisions with slightly different
    memory maps; update the driver to support them.
    
    Fixes: dd24e202ac72 ("Input: iqs7222 - add support for Azoteq IQS7222D")
    Signed-off-by: Jeff LaBundy <jeff@labundy.com>
    Link: https://lore.kernel.org/r/ZelTRYX3fenMQuhF@nixie71
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0bb86a015c2cd7fbe76249d0637056ae1290b702)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 01a884320c1a3dd4cdeb3476d64c3a46a6e2b9cf
Author: Konstantin Taranov <kotaranov@microsoft.com>
Date:   Mon Mar 4 05:52:41 2024 -0800

    RDMA/mana_ib: Use virtual address in dma regions for MRs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2d5c00815778ec4f4e0a84e405e3e157b7815db1 ]
    
    Introduce mana_ib_create_dma_region() to create dma regions with iova
    for MRs. It allows creating MRs with any page offset. Previously,
    only page-aligned addresses worked.
    
    For dma regions that must have a zero dma offset (e.g., for queues),
    mana_ib_create_zero_offset_dma_region() is added.
    To get the zero offset, ib_umem_find_best_pgoff() is used with zero
    pgoff_bitmask.
    
    Fixes: 0266a177631d ("RDMA/mana_ib: Add a driver for Microsoft Azure Network Adapter")
    Signed-off-by: Konstantin Taranov <kotaranov@microsoft.com>
    Link: https://lore.kernel.org/r/1709560361-26393-3-git-send-email-kotaranov@linux.microsoft.com
    Reviewed-by: Zhu Yanjun <yanjun.zhu@linux.dev>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 293fcadf2fa7dedcb810dcc46e0de05f6567f4d4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e9317a0c0d2360f0529c5357533edce63fde5e7
Author: Konstantin Taranov <kotaranov@microsoft.com>
Date:   Mon Jan 22 15:23:01 2024 -0800

    RDMA/mana_ib: Introduce mana_ib_install_cq_cb helper function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2a31c5a7e0d87959a03e846523013c75f4395a91 ]
    
    Use a helper function to install callbacks to CQs.
    This patch removes code repetition.
    
    Signed-off-by: Konstantin Taranov <kotaranov@microsoft.com>
    Link: https://lore.kernel.org/r/1705965781-3235-4-git-send-email-kotaranov@linux.microsoft.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Stable-dep-of: 2d5c00815778 ("RDMA/mana_ib: Use virtual address in dma regions for MRs")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cf9cc859d6ff37ce52c09dfbb169b9ee25595a3f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1a1232366c7dfa3562a45b0d9a7fef3e4be2f743
Author: Konstantin Taranov <kotaranov@microsoft.com>
Date:   Mon Jan 22 15:23:00 2024 -0800

    RDMA/mana_ib: Introduce mana_ib_get_netdev helper function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3b73eb3a4acdf563de49d825968bb5f10300acd4 ]
    
    Use a helper function to access netdevs using a port number.
    This patch removes code repetitions as well as removes the need
    to explicitly use gdma_dev, which was error-prone.
    
    Signed-off-by: Konstantin Taranov <kotaranov@microsoft.com>
    Link: https://lore.kernel.org/r/1705965781-3235-3-git-send-email-kotaranov@linux.microsoft.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Stable-dep-of: 2d5c00815778 ("RDMA/mana_ib: Use virtual address in dma regions for MRs")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5413121fdbf240ccaf38ef530229389ce0300201)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 344a74e119e155b26554f2fa17046af16f79ec57
Author: Konstantin Taranov <kotaranov@microsoft.com>
Date:   Mon Jan 22 15:22:59 2024 -0800

    RDMA/mana_ib: Introduce mdev_to_gc helper function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 71c8cbfcdc8f1dc651b976d4c12dc9b9fce675c1 ]
    
    Use a helper function to access gdma_context from mana_ib_dev.
    This patch removes code repetitions as well as removes the need
    to explicitly use gdma_dev, which was error-prone.
    
    Signed-off-by: Konstantin Taranov <kotaranov@microsoft.com>
    Link: https://lore.kernel.org/r/1705965781-3235-2-git-send-email-kotaranov@linux.microsoft.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Stable-dep-of: 2d5c00815778 ("RDMA/mana_ib: Use virtual address in dma regions for MRs")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2fca9516cb252de7284737ac04beb124863c9af7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4bf66aef815d0646390797c318c024cc8deff4f9
Author: Konstantin Taranov <kotaranov@microsoft.com>
Date:   Mon Mar 4 05:52:40 2024 -0800

    RDMA/mana_ib: Fix bug in creation of dma regions
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e02497fb654689049ba8b46f098f17d5f19e0b3c ]
    
    Use ib_umem_dma_offset() helper to calculate correct dma offset.
    
    Fixes: 0266a177631d ("RDMA/mana_ib: Add a driver for Microsoft Azure Network Adapter")
    Signed-off-by: Konstantin Taranov <kotaranov@microsoft.com>
    Link: https://lore.kernel.org/r/1709560361-26393-2-git-send-email-kotaranov@linux.microsoft.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2e7121552e3c84092e8f039c655224f2ded6abea)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 190cfdb9f322b1ad066a7409a8ae344660324f16
Author: Chao Yu <chao@kernel.org>
Date:   Mon Feb 26 15:35:38 2024 +0800

    f2fs: ro: compress: fix to avoid caching unaligned extent
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4b99ecd304290c4ef55666a62c89dfb2dbf0b2cd ]
    
    Mapping info from dump.f2fs:
    i_addr[0x2d] cluster flag               [0xfffffffe : 4294967294]
    i_addr[0x2e]                            [0x   10428 : 66600]
    i_addr[0x2f]                            [0x   10429 : 66601]
    i_addr[0x30]                            [0x   1042a : 66602]
    
    f2fs_io fiemap 37 1 /mnt/f2fs/disk-58390c8c.raw
    
    Previsouly, it missed to align fofs and ofs_in_node to cluster_size,
    result in adding incorrect read extent cache, fix it.
    
    Before:
    f2fs_update_read_extent_tree_range: dev = (253,48), ino = 5, pgofs = 37, len = 4, blkaddr = 66600, c_len = 3
    
    After:
    f2fs_update_read_extent_tree_range: dev = (253,48), ino = 5, pgofs = 36, len = 4, blkaddr = 66600, c_len = 3
    
    Fixes: 94afd6d6e525 ("f2fs: extent cache: support unaligned extent")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d98b5634cd1cb19b894884cfcbed78ace72fbe5d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e092c7147019dee475e54daab002819184e09e2d
Author: Chao Yu <chao@kernel.org>
Date:   Sun Feb 25 14:36:28 2024 +0800

    f2fs: fix to use correct segment type in f2fs_allocate_data_block()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7324858237829733dec9c670170df2377c5ca6e2 ]
    
    @type in f2fs_allocate_data_block() indicates log header's type, it
    can be CURSEG_COLD_DATA_PINNED or CURSEG_ALL_DATA_ATGC, rather than
    type of data/node, however IS_DATASEG()/IS_NODESEG() only accept later
    one, fix it.
    
    Fixes: 093749e296e2 ("f2fs: support age threshold based garbage collection")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7be4f583d11f0ea682efbf2b6e75b094ca3248d8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eac945e4737d59120ae0813a42b5caf8773f8e2e
Author: Ben Wolsieffer <ben.wolsieffer@hefring.com>
Date:   Wed Feb 28 13:27:23 2024 -0500

    watchdog: stm32_iwdg: initialize default timeout
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dbd7c0088b7f44aa0b9276ed3449df075a7b5b54 ]
    
    The driver never sets a default timeout value, therefore it is
    initialized to zero. When CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED is
    enabled, the watchdog is started during probe. The kernel is supposed to
    automatically ping the watchdog from this point until userspace takes
    over, but this does not happen if the configured timeout is zero. A zero
    timeout causes watchdog_need_worker() to return false, so the heartbeat
    worker does not run and the system therefore resets soon after the
    driver is probed.
    
    This patch fixes this by setting an arbitrary non-zero default timeout.
    The default could be read from the hardware instead, but I didn't see
    any reason to add this complexity.
    
    This has been tested on an STM32F746.
    
    Fixes: 85fdc63fe256 ("drivers: watchdog: stm32_iwdg: set WDOG_HW_RUNNING at probe")
    Signed-off-by: Ben Wolsieffer <ben.wolsieffer@hefring.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20240228182723.12855-1-ben.wolsieffer@hefring.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9dd7a4606ee20de9356496eda0d398a08bc62400)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6576210114fd8e08d4e41e1a75ce2d93bc372071
Author: Ji Sheng Teoh <jisheng.teoh@starfivetech.com>
Date:   Fri Jan 19 16:27:21 2024 +0800

    watchdog: starfive: Check pm_runtime_enabled() before decrementing usage counter
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8bc22a2f1bf0f402029087fcb53130233a544fed ]
    
    In the probe function, pm_runtime_put_sync() will fail on platform with
    runtime PM disabled.
    Check if runtime PM is enabled before calling pm_runtime_put_sync() to
    fix it.
    
    Fixes: db728ea9c7be ("drivers: watchdog: Add StarFive Watchdog driver")
    Signed-off-by: Xingyu Wu <xingyu.wu@starfivetech.com>
    Signed-off-by: Ley Foon Tan <leyfoon.tan@starfivetech.com>
    Signed-off-by: Ji Sheng Teoh <jisheng.teoh@starfivetech.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20240119082722.1133024-1-jisheng.teoh@starfivetech.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3a6f3974becb5e81e41cb235e25431de4b00a4d4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 087c6c11c3f7194edbe6bba244732ebdff1ed4e8
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Fri Feb 23 12:32:05 2024 -0800

    f2fs: check number of blocks in a current section
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7af2df0f67a1469762e59be3726a803882d83f6f ]
    
    In cfd66bb715fd ("f2fs: fix deadloop in foreground GC"), we needed to check
    the number of blocks in a section instead of the segment.
    
    Fixes: cfd66bb715fd ("f2fs: fix deadloop in foreground GC")
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cf36c0ad50948267f29de3ab7b1606c51be38c0d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bcaac9ead452d1d3e996ccbaf32a8dd22a9320ec
Author: Chao Yu <chao@kernel.org>
Date:   Mon Feb 19 10:28:44 2024 +0800

    f2fs: compress: fix to check compress flag w/ .i_sem lock
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ea59b12ac69774c08aa95cd5b6100700ea0cce97 ]
    
    It needs to check compress flag w/ .i_sem lock, otherwise, compressed
    inode may be disabled after the check condition, it's not needed to
    set compress option on non-compress inode.
    
    Fixes: e1e8debec656 ("f2fs: add F2FS_IOC_SET_COMPRESS_OPTION ioctl")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 63c1497e48d9e9b3b48448370a11c9ec481bf6b2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 50ed5f9267da533744c4b3526fc287139130aa5d
Author: Jorge Mora <jmora1300@gmail.com>
Date:   Thu Jan 25 07:51:28 2024 -0700

    NFSv4.2: fix listxattr maximum XDR buffer size
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bcac8bff90a6ee1629f90669cdb9d28fb86049b0 ]
    
    Switch order of operations to avoid creating a short XDR buffer:
    e.g., buflen = 12, old xdrlen = 12, new xdrlen = 20.
    
    Having a short XDR buffer leads to lxa_maxcount be a few bytes
    less than what is needed to retrieve the whole list when using
    a buflen as returned by a call with size = 0:
        buflen = listxattr(path, NULL, 0);
        buf = malloc(buflen);
        buflen = listxattr(path, buf, buflen);
    
    For a file with one attribute (name = '123456'), the first call
    with size = 0 will return buflen = 12 ('user.123456\x00').
    The second call with size = 12, sends LISTXATTRS with
    lxa_maxcount = 12 + 8 (cookie) + 4 (array count) = 24. The
    XDR buffer needs 8 (cookie) + 4 (array count) + 4 (name count)
    + 6 (name len) + 2 (padding) + 4 (eof) = 28 which is 4 bytes
    shorter than the lxa_maxcount provided in the call.
    
    Fixes: 04a5da690e8f ("NFSv4.2: define limits and sizes for user xattr handling")
    Signed-off-by: Jorge Mora <mora@netapp.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d61288d9c002afc5a4280ba71b7b3aa4b613a449)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit de8b0066e4dd3ada3497f92ef3e483c3836d9615
Author: Jorge Mora <jmora1300@gmail.com>
Date:   Thu Jan 25 07:56:12 2024 -0700

    NFSv4.2: fix nfs4_listxattr kernel BUG at mm/usercopy.c:102
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 251a658bbfceafb4d58c76b77682c8bf7bcfad65 ]
    
    A call to listxattr() with a buffer size = 0 returns the actual
    size of the buffer needed for a subsequent call. When size > 0,
    nfs4_listxattr() does not return an error because either
    generic_listxattr() or nfs4_listxattr_nfs4_label() consumes
    exactly all the bytes then size is 0 when calling
    nfs4_listxattr_nfs4_user() which then triggers the following
    kernel BUG:
    
      [   99.403778] kernel BUG at mm/usercopy.c:102!
      [   99.404063] Internal error: Oops - BUG: 00000000f2000800 [#1] SMP
      [   99.408463] CPU: 0 PID: 3310 Comm: python3 Not tainted 6.6.0-61.fc40.aarch64 #1
      [   99.415827] Call trace:
      [   99.415985]  usercopy_abort+0x70/0xa0
      [   99.416227]  __check_heap_object+0x134/0x158
      [   99.416505]  check_heap_object+0x150/0x188
      [   99.416696]  __check_object_size.part.0+0x78/0x168
      [   99.416886]  __check_object_size+0x28/0x40
      [   99.417078]  listxattr+0x8c/0x120
      [   99.417252]  path_listxattr+0x78/0xe0
      [   99.417476]  __arm64_sys_listxattr+0x28/0x40
      [   99.417723]  invoke_syscall+0x78/0x100
      [   99.417929]  el0_svc_common.constprop.0+0x48/0xf0
      [   99.418186]  do_el0_svc+0x24/0x38
      [   99.418376]  el0_svc+0x3c/0x110
      [   99.418554]  el0t_64_sync_handler+0x120/0x130
      [   99.418788]  el0t_64_sync+0x194/0x198
      [   99.418994] Code: aa0003e3 d000a3e0 91310000 97f49bdb (d4210000)
    
    Issue is reproduced when generic_listxattr() returns 'system.nfs4_acl',
    thus calling lisxattr() with size = 16 will trigger the bug.
    
    Add check on nfs4_listxattr() to return ERANGE error when it is
    called with size > 0 and the return value is greater than size.
    
    Fixes: 012a211abd5d ("NFSv4.2: hook in the user extended attribute handlers")
    Signed-off-by: Jorge Mora <mora@netapp.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 23bfecb4d852751d5e403557dd500bb563313baf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4571bb8e68370dd535e3a42fe6636beb503901bf
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Oct 24 23:58:20 2023 +0200

    net: sunrpc: Fix an off by one in rpc_sockaddr2uaddr()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d6f4de70f73a106986ee315d7d512539f2f3303a ]
    
    The intent is to check if the strings' are truncated or not. So, >= should
    be used instead of >, because strlcat() and snprintf() return the length of
    the output, excluding the trailing NULL.
    
    Fixes: a02d69261134 ("SUNRPC: Provide functions for managing universal addresses")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d1eea96246177120bd0632d40703187e6840815b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5a7e67c3a20a7db14ec399f6ff3106b83651f208
Author: Chao Yu <chao@kernel.org>
Date:   Tue Feb 13 00:08:18 2024 +0800

    f2fs: compress: fix to check zstd compress level correctly in mount option
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e39602da752cd1d0462e3fa04074146f6f2803f6 ]
    
    f2fs only support to config zstd compress level w/ a positive number due
    to layout design, but since commit e0c1b49f5b67 ("lib: zstd: Upgrade to
    latest upstream zstd version 1.4.10"), zstd supports negative compress
    level, so that zstd_min_clevel() may return a negative number, then w/
    below mount option, .compress_level can be configed w/ a negative number,
    which is not allowed to f2fs, let's add check condition to avoid it.
    
    mount -o compress_algorithm=zstd:4294967295 /dev/sdx /mnt/f2fs
    
    Fixes: 00e120b5e4b5 ("f2fs: assign default compression level")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bdb95f87a7f880eeda7e5380ce6af86dff93ad03)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 07120f976f0079120bb646512aa4fb5e7c8be14f
Author: Chao Yu <chao@kernel.org>
Date:   Wed Feb 7 15:05:48 2024 +0800

    f2fs: fix to create selinux label during whiteout initialization
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 40b2d55e045222dd6de2a54a299f682e0f954b03 ]
    
    #generic/700       - output mismatch (see /media/fstests/results//generic/700.out.bad)
    #    --- tests/generic/700.out  2023-03-28 10:40:42.735529223 +0000
    #    +++ /media/fstests/results//generic/700.out.bad    2024-02-06 04:37:56.000000000 +0000
    #    @@ -1,2 +1,4 @@
    #     QA output created by 700
    #    +/mnt/scratch_f2fs/f1: security.selinux: No such attribute
    #    +/mnt/scratch_f2fs/f2: security.selinux: No such attribute
    #     Silence is golden
    #    ...
    #    (Run 'diff -u /media/fstests/tests/generic/700.out /media/fstests/results//generic/700.out.bad'  to see the entire diff)
    
    HINT: You _MAY_ be missing kernel fix:
          70b589a37e1a xfs: add selinux labels to whiteout inodes
    
    Previously, it missed to create selinux labels during whiteout inode
    initialization, fix this issue.
    
    Fixes: 7e01e7ad746b ("f2fs: support RENAME_WHITEOUT")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 64582cc5357cd984724cfb0835b4a34d9c279d31)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b19d7b5fdcb9ee3bef0c1b36dc956a209108cf6b
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 22 13:44:06 2024 +0100

    scsi: bfa: Fix function pointer type mismatch for hcb_qe->cbfn
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b69600231f751304db914c63b937f7098ed2895c ]
    
    Some callback functions used here take a boolean argument, others take a
    status argument. This breaks KCFI type checking, so clang now warns about
    the function pointer cast:
    
    drivers/scsi/bfa/bfad_bsg.c:2138:29: error: cast from 'void (*)(void *, enum bfa_status)' to 'bfa_cb_cbfn_t' (aka 'void (*)(void *, enum bfa_boolean)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
    
    Assuming the code is actually correct here and the callers always match the
    argument types of the callee, rework this to replace the explicit cast with
    a union of the two pointer types. This does not change the behavior of the
    code, so if something is actually broken here, a larger rework may be
    necessary.
    
    Fixes: 37ea0558b87a ("[SCSI] bfa: Added support to collect and reset fcport stats")
    Fixes: 3ec4f2c8bff2 ("[SCSI] bfa: Added support to configure QOS and collect stats.")
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20240222124433.2046570-1-arnd@kernel.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 42249ebd2480094366cc86b955fce2b4db67c5b6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c877e2258dca0ecad697a21b644871e29c44ead6
Author: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date:   Wed Feb 21 11:32:04 2024 +0000

    RDMA/rtrs-clt: Check strnlen return len in sysfs mpath_policy_store()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7a7b7f575a25aa68ee934ee8107294487efcb3fe ]
    
    strnlen() may return 0 (e.g. for "\0\n" string), it's better to
    check the result of strnlen() before using 'len - 1' expression
    for the 'buf' array index.
    
    Detected using the static analysis tool - Svace.
    
    Fixes: dc3b66a0ce70 ("RDMA/rtrs-clt: Add a minimum latency multipath policy")
    Signed-off-by: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
    Link: https://lore.kernel.org/r/20240221113204.147478-1-aleksei.kodanev@bell-sw.com
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3ccd84edd9edf841a09ef7b62e9aec7d40730c2a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 375aea9c2fd8197c776b621146b9b25de1236e18
Author: Shifeng Li <lishifeng@sangfor.com.cn>
Date:   Fri Feb 2 19:53:13 2024 -0800

    RDMA/device: Fix a race between mad_client and cm_client init
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7a8bccd8b29c321ac181369b42b04fecf05f98e2 ]
    
    The mad_client will be initialized in enable_device_and_get(), while the
    devices_rwsem will be downgraded to a read semaphore. There is a window
    that leads to the failed initialization for cm_client, since it can not
    get matched mad port from ib_mad_port_list, and the matched mad port will
    be added to the list after that.
    
        mad_client    |                       cm_client
    ------------------|--------------------------------------------------------
    ib_register_device|
    enable_device_and_get
    down_write(&devices_rwsem)
    xa_set_mark(&devices, DEVICE_REGISTERED)
    downgrade_write(&devices_rwsem)
                      |
                      |ib_cm_init
                      |ib_register_client(&cm_client)
                      |down_read(&devices_rwsem)
                      |xa_for_each_marked (&devices, DEVICE_REGISTERED)
                      |add_client_context
                      |cm_add_one
                      |ib_register_mad_agent
                      |ib_get_mad_port
                      |__ib_get_mad_port
                      |list_for_each_entry(entry, &ib_mad_port_list, port_list)
                      |return NULL
                      |up_read(&devices_rwsem)
                      |
    add_client_context|
    ib_mad_init_device|
    ib_mad_port_open  |
    list_add_tail(&port_priv->port_list, &ib_mad_port_list)
    up_read(&devices_rwsem)
                      |
    
    Fix it by using down_write(&devices_rwsem) in ib_register_client().
    
    Fixes: d0899892edd0 ("RDMA/device: Provide APIs from the core code to help unregistration")
    Link: https://lore.kernel.org/r/20240203035313.98991-1-lishifeng@sangfor.com.cn
    Suggested-by: Jason Gunthorpe <jgg@ziepe.ca>
    Signed-off-by: Shifeng Li <lishifeng@sangfor.com.cn>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8889bc82faedce55db7849f25de640e8f79791e0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5b2b57404986ad2a08c3fd4008ecae13921604ac
Author: Luoyouming <luoyouming@huawei.com>
Date:   Mon Feb 19 14:18:05 2024 +0800

    RDMA/hns: Fix mis-modifying default congestion control algorithm
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d20a7cf9f714f0763efb56f0f2eeca1cb91315ed ]
    
    Commit 27c5fd271d8b ("RDMA/hns: The UD mode can only be configured
    with DCQCN") adds a check of congest control alorithm for UD. But
    that patch causes a problem: hr_dev->caps.congest_type is global,
    used by all QPs, so modifying this field to DCQCN for UD QPs causes
    other QPs unable to use any other algorithm except DCQCN.
    
    Revert the modification in commit 27c5fd271d8b ("RDMA/hns: The UD
    mode can only be configured with DCQCN"). Add a new field cong_type
    to struct hns_roce_qp and configure DCQCN for UD QPs.
    
    Fixes: 27c5fd271d8b ("RDMA/hns: The UD mode can only be configured with DCQCN")
    Fixes: f91696f2f053 ("RDMA/hns: Support congestion control type selection according to the FW")
    Signed-off-by: Luoyouming <luoyouming@huawei.com>
    Signed-off-by: Junxian Huang <huangjunxian6@hisilicon.com>
    Link: https://lore.kernel.org/r/20240219061805.668170-1-huangjunxian6@hisilicon.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 60def914c46bdef78daada474a57a45bb3c3e789)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4f958bf24a41db3c58527a990c8e51ccde9c0af9
Author: Dylan Hung <dylan_hung@aspeedtech.com>
Date:   Fri Jan 19 13:45:47 2024 +0800

    i3c: dw: Disable IBI IRQ depends on hot-join and SIR enabling
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 10201396ef6455a68ac671fa0163205d327ebb70 ]
    
    Disable IBI IRQ signal and status only when hot-join and SIR enabling of
    all target devices attached to the bus are disabled.
    
    Fixes: e389b1d72a62 ("i3c: dw: Add support for in-band interrupts")
    
    Signed-off-by: Dylan Hung <dylan_hung@aspeedtech.com>
    Link: https://lore.kernel.org/r/20240119054547.983693-1-dylan_hung@aspeedtech.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a1822699f522a76b2b0b4eee42677dccf61da6cd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ac9d7cfdb3d91ebe70970df59cd97a5e3baf57fb
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 13 11:05:00 2024 +0100

    scsi: csiostor: Avoid function pointer casts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9f3dbcb5632d6876226031d552ef6163bb3ad215 ]
    
    csiostor uses function pointer casts to keep the csio_ln_ev state machine
    hidden, but this causes warnings about control flow integrity (KCFI)
    violations in clang-16 and higher:
    
    drivers/scsi/csiostor/csio_lnode.c:1098:33: error: cast from 'void (*)(struct csio_lnode *, enum csio_ln_ev)' to 'csio_sm_state_t' (aka 'void (*)(void *, unsigned int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
     1098 |         return (csio_get_state(ln) == ((csio_sm_state_t)csio_lns_ready));
          |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/scsi/csiostor/csio_lnode.c:1369:29: error: cast from 'void (*)(struct csio_lnode *, enum csio_ln_ev)' to 'csio_sm_state_t' (aka 'void (*)(void *, unsigned int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
     1369 |         if (csio_get_state(ln) == ((csio_sm_state_t)csio_lns_uninit)) {
          |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/scsi/csiostor/csio_lnode.c:1373:29: error: cast from 'void (*)(struct csio_lnode *, enum csio_ln_ev)' to 'csio_sm_state_t' (aka 'void (*)(void *, unsigned int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
     1373 |         if (csio_get_state(ln) == ((csio_sm_state_t)csio_lns_ready)) {
          |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/scsi/csiostor/csio_lnode.c:1377:29: error: cast from 'void (*)(struct csio_lnode *, enum csio_ln_ev)' to 'csio_sm_state_t' (aka 'void (*)(void *, unsigned int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
     1377 |         if (csio_get_state(ln) == ((csio_sm_state_t)csio_lns_offline)) {
          |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Move the enum into a shared header so the correct types can be used without
    the need for casts.
    
    Fixes: a3667aaed569 ("[SCSI] csiostor: Chelsio FCoE offload driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20240213100518.457623-1-arnd@kernel.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1849620fe5d956be15f06504c2170b084f6a9785)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1742f4ae0398333cdad082742f0c3b1eab84fe8d
Author: Chao Yu <chao@kernel.org>
Date:   Wed Jan 24 22:49:15 2024 +0800

    f2fs: fix to avoid potential panic during recovery
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 21ec68234826b1b54ab980a8df6e33c74cfbee58 ]
    
    During recovery, if FAULT_BLOCK is on, it is possible that
    f2fs_reserve_new_block() will return -ENOSPC during recovery,
    then it may trigger panic.
    
    Also, if fault injection rate is 1 and only FAULT_BLOCK fault
    type is on, it may encounter deadloop in loop of block reservation.
    
    Let's change as below to fix these issues:
    - remove bug_on() to avoid panic.
    - limit the loop count of block reservation to avoid potential
    deadloop.
    
    Fixes: 956fa1ddc132 ("f2fs: fix to check return value of f2fs_reserve_new_block()")
    Reported-by: Zhiguo Niu <zhiguo.niu@unisoc.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f26091a981318b5b7451d61f99bc073a6af8db67)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 35a897883defea0f95f5c0f9e686ae2064595072
Author: Chao Yu <chao@kernel.org>
Date:   Mon Jan 22 10:23:13 2024 +0800

    f2fs: compress: fix to cover f2fs_disable_compressed_file() w/ i_sem
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2f9420d3a94aeebd92db88f00f4f2f1a3bd3f6cf ]
    
    - f2fs_disable_compressed_file
      - check inode_has_data
                                            - f2fs_file_mmap
                                            - mkwrite
                                             - f2fs_get_block_locked
                                             : update metadata in compressed
                                               inode's disk layout
      - fi->i_flags &= ~F2FS_COMPR_FL
      - clear_inode_flag(inode, FI_COMPRESSED_FILE);
    
    we should use i_sem lock to prevent above race case.
    
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0e20cc741dcdbff39d0e11d247432efe76f5e9a4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4ac38dd8386de7bd4a0ff18eb24605009b42d42f
Author: Wenjie Qi <qwjhust@gmail.com>
Date:   Tue Jan 16 22:11:38 2024 +0800

    f2fs: fix NULL pointer dereference in f2fs_submit_page_write()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c2034ef6192a65a986a45c2aa2ed05824fdc0e9f ]
    
    BUG: kernel NULL pointer dereference, address: 0000000000000014
    RIP: 0010:f2fs_submit_page_write+0x6cf/0x780 [f2fs]
    Call Trace:
    <TASK>
    ? show_regs+0x6e/0x80
    ? __die+0x29/0x70
    ? page_fault_oops+0x154/0x4a0
    ? prb_read_valid+0x20/0x30
    ? __irq_work_queue_local+0x39/0xd0
    ? irq_work_queue+0x36/0x70
    ? do_user_addr_fault+0x314/0x6c0
    ? exc_page_fault+0x7d/0x190
    ? asm_exc_page_fault+0x2b/0x30
    ? f2fs_submit_page_write+0x6cf/0x780 [f2fs]
    ? f2fs_submit_page_write+0x736/0x780 [f2fs]
    do_write_page+0x50/0x170 [f2fs]
    f2fs_outplace_write_data+0x61/0xb0 [f2fs]
    f2fs_do_write_data_page+0x3f8/0x660 [f2fs]
    f2fs_write_single_data_page+0x5bb/0x7a0 [f2fs]
    f2fs_write_cache_pages+0x3da/0xbe0 [f2fs]
    ...
    It is possible that other threads have added this fio to io->bio
    and submitted the io->bio before entering f2fs_submit_page_write().
    At this point io->bio = NULL.
    If is_end_zone_blkaddr(sbi, fio->new_blkaddr) of this fio is true,
    then an NULL pointer dereference error occurs at bio_get(io->bio).
    The original code for determining zone end was after "out:",
    which would have missed some fio who is zone end. I've moved
     this code before "skip:" to make sure it's done for each fio.
    
    Fixes: e067dc3c6b9c ("f2fs: maintain six open zones for zoned devices")
    Signed-off-by: Wenjie Qi <qwjhust@gmail.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6d102382a11d5e6035f6c98f6e508a38541f7af3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9eca27dddfdf8feee1d9598d8a03427eda2b1764
Author: Chao Yu <chao@kernel.org>
Date:   Mon Jan 29 19:27:40 2024 +0800

    f2fs: zone: fix to wait completion of last bio in zone correctly
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 536af8211586af09c5bea1c15ad28ddec5f66a97 ]
    
    It needs to check last zone_pending_bio and wait IO completion before
    traverse next fio in io->io_list, otherwise, bio in next zone may be
    submitted before all IO completion in current zone.
    
    Fixes: e067dc3c6b9c ("f2fs: maintain six open zones for zoned devices")
    Cc: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3421cd7e909c93a5561f2316db706742fddf6eb5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 32921e506abb2a420033d4119b4db91ff849ac9d
Author: Chao Yu <chao@kernel.org>
Date:   Sat Jan 13 03:41:31 2024 +0800

    f2fs: fix to remove unnecessary f2fs_bug_on() to avoid panic
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b896e302f79678451a94769ddd9e52e954c64fbb ]
    
    verify_blkaddr() will trigger panic once we inject fault into
    f2fs_is_valid_blkaddr(), fix to remove this unnecessary f2fs_bug_on().
    
    Fixes: 18792e64c86d ("f2fs: support fault injection for f2fs_is_valid_blkaddr()")
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit abe98a05e7162f64759bf9111108ebcb11322dec)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3d38fa09f288fdc5183e2942cad448f22c91173d
Author: Chao Yu <chao@kernel.org>
Date:   Sat Jan 13 03:41:30 2024 +0800

    f2fs: compress: fix to avoid inconsistence bewteen i_blocks and dnode
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 54607494875edd636aff3c21ace3ad9a7da758a9 ]
    
    In reserve_compress_blocks(), we update blkaddrs of dnode in prior to
    inc_valid_block_count(), it may cause inconsistent status bewteen
    i_blocks and blkaddrs once inc_valid_block_count() fails.
    
    To fix this issue, it needs to reverse their invoking order.
    
    Fixes: c75488fb4d82 ("f2fs: introduce F2FS_IOC_RESERVE_COMPRESS_BLOCKS")
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8d929bfc43d4979a0188870d0400dce3440e1c2b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8c939e224d3bc267023847a2a288a98563617e6b
Author: Sheng Yong <shengyong@oppo.com>
Date:   Sat Jan 13 03:41:29 2024 +0800

    f2fs: compress: fix to check unreleased compressed cluster
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit eb8fbaa53374e0a2d4381190abfe708481517bbb ]
    
    Compressed cluster may not be released due to we can fail in
    release_compress_blocks(), fix to handle reserved compressed
    cluster correctly in reserve_compress_blocks().
    
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Signed-off-by: Sheng Yong <shengyong@oppo.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7924eb25faeca190782a1d7fc92d98460ed0cca6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b05f07c4e7c619e3e7baf4836dd72b498fec3e9f
Author: Chao Yu <chao@kernel.org>
Date:   Sat Jan 13 03:41:28 2024 +0800

    f2fs: compress: fix to cover normal cluster write with cp_rwsem
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fd244524c2cf07b5f4c3fe8abd6a99225c76544b ]
    
    When we overwrite compressed cluster w/ normal cluster, we should
    not unlock cp_rwsem during f2fs_write_raw_pages(), otherwise data
    will be corrupted if partial blocks were persisted before CP & SPOR,
    due to cluster metadata wasn't updated atomically.
    
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 52982edfcefd475cc34af663d5c47c0cddaa5739)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3dfd8bfd132865c587e54aa3286ec0ec21cbf48f
Author: Chao Yu <chao@kernel.org>
Date:   Sat Jan 13 03:41:27 2024 +0800

    f2fs: compress: fix to guarantee persisting compressed blocks by CP
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8a430dd49e9cb021372b0ad91e60aeef9c6ced00 ]
    
    If data block in compressed cluster is not persisted with metadata
    during checkpoint, after SPOR, the data may be corrupted, let's
    guarantee to write compressed page by checkpoint.
    
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Reviewed-by: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 57e8b17d0522c8f4daf0c4d9969b4d7358033532)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b149afa60489aec7b33f43ce0673699bb61341ff
Author: William Kucharski <william.kucharski@oracle.com>
Date:   Fri Feb 2 02:15:49 2024 -0700

    RDMA/srpt: Do not register event handler until srpt device is fully setup
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c21a8870c98611e8f892511825c9607f1e2cd456 ]
    
    Upon rare occasions, KASAN reports a use-after-free Write
    in srpt_refresh_port().
    
    This seems to be because an event handler is registered before the
    srpt device is fully setup and a race condition upon error may leave a
    partially setup event handler in place.
    
    Instead, only register the event handler after srpt device initialization
    is complete.
    
    Fixes: a42d985bd5b2 ("ib_srpt: Initial SRP Target merge for v3.3-rc1")
    Signed-off-by: William Kucharski <william.kucharski@oracle.com>
    Link: https://lore.kernel.org/r/20240202091549.991784-2-william.kucharski@oracle.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ec77fa12da41260c6bf9e060b89234b980c5130f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b20a29a030cd5c5f4698a8463a00d416b756e5a2
Author: Mustafa Ismail <mustafa.ismail@intel.com>
Date:   Wed Jan 31 17:39:53 2024 -0600

    RDMA/irdma: Remove duplicate assignment
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 926e8ea4b8dac84f6d14a4b60d0653f1f2ba9431 ]
    
    Remove the unneeded assignment of the qp_num which is already
    set in irdma_create_qp().
    
    Fixes: b48c24c2d710 ("RDMA/irdma: Implement device supported verb APIs")
    Signed-off-by: Mustafa Ismail <mustafa.ismail@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Sindhu Devale <sindhu.devale@intel.com>
    Link: https://lore.kernel.org/r/20240131233953.400483-1-sindhu.devale@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d5b8b856040d4210b147fb57e636d59c4466440b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a01733c93cfaee579eb5c60eb3dadd6583937ede
Author: Yihang Li <liyihang9@huawei.com>
Date:   Mon Jan 22 14:25:44 2024 +0800

    scsi: hisi_sas: Fix a deadlock issue related to automatic dump
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3c4f53b2c341ec6428b98cb51a89a09b025d0953 ]
    
    If we issue a disabling PHY command, the device attached with it will go
    offline, if a 2 bit ECC error occurs at the same time, a hung task may be
    found:
    
    [ 4613.652388] INFO: task kworker/u256:0:165233 blocked for more than 120 seconds.
    [ 4613.666297] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 4613.674809] task:kworker/u256:0  state:D stack:    0 pid:165233 ppid:     2 flags:0x00000208
    [ 4613.683959] Workqueue: 0000:74:02.0_disco_q sas_revalidate_domain [libsas]
    [ 4613.691518] Call trace:
    [ 4613.694678]  __switch_to+0xf8/0x17c
    [ 4613.698872]  __schedule+0x660/0xee0
    [ 4613.703063]  schedule+0xac/0x240
    [ 4613.706994]  schedule_timeout+0x500/0x610
    [ 4613.711705]  __down+0x128/0x36c
    [ 4613.715548]  down+0x240/0x2d0
    [ 4613.719221]  hisi_sas_internal_abort_timeout+0x1bc/0x260 [hisi_sas_main]
    [ 4613.726618]  sas_execute_internal_abort+0x144/0x310 [libsas]
    [ 4613.732976]  sas_execute_internal_abort_dev+0x44/0x60 [libsas]
    [ 4613.739504]  hisi_sas_internal_task_abort_dev.isra.0+0xbc/0x1b0 [hisi_sas_main]
    [ 4613.747499]  hisi_sas_dev_gone+0x174/0x250 [hisi_sas_main]
    [ 4613.753682]  sas_notify_lldd_dev_gone+0xec/0x2e0 [libsas]
    [ 4613.759781]  sas_unregister_common_dev+0x4c/0x7a0 [libsas]
    [ 4613.765962]  sas_destruct_devices+0xb8/0x120 [libsas]
    [ 4613.771709]  sas_do_revalidate_domain.constprop.0+0x1b8/0x31c [libsas]
    [ 4613.778930]  sas_revalidate_domain+0x60/0xa4 [libsas]
    [ 4613.784716]  process_one_work+0x248/0x950
    [ 4613.789424]  worker_thread+0x318/0x934
    [ 4613.793878]  kthread+0x190/0x200
    [ 4613.797810]  ret_from_fork+0x10/0x18
    [ 4613.802121] INFO: task kworker/u256:4:316722 blocked for more than 120 seconds.
    [ 4613.816026] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 4613.824538] task:kworker/u256:4  state:D stack:    0 pid:316722 ppid:     2 flags:0x00000208
    [ 4613.833670] Workqueue: 0000:74:02.0 hisi_sas_rst_work_handler [hisi_sas_main]
    [ 4613.841491] Call trace:
    [ 4613.844647]  __switch_to+0xf8/0x17c
    [ 4613.848852]  __schedule+0x660/0xee0
    [ 4613.853052]  schedule+0xac/0x240
    [ 4613.856984]  schedule_timeout+0x500/0x610
    [ 4613.861695]  __down+0x128/0x36c
    [ 4613.865542]  down+0x240/0x2d0
    [ 4613.869216]  hisi_sas_controller_prereset+0x58/0x1fc [hisi_sas_main]
    [ 4613.876324]  hisi_sas_rst_work_handler+0x40/0x8c [hisi_sas_main]
    [ 4613.883019]  process_one_work+0x248/0x950
    [ 4613.887732]  worker_thread+0x318/0x934
    [ 4613.892204]  kthread+0x190/0x200
    [ 4613.896118]  ret_from_fork+0x10/0x18
    [ 4613.900423] INFO: task kworker/u256:1:348985 blocked for more than 121 seconds.
    [ 4613.914341] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 4613.922852] task:kworker/u256:1  state:D stack:    0 pid:348985 ppid:     2 flags:0x00000208
    [ 4613.931984] Workqueue: 0000:74:02.0_event_q sas_port_event_worker [libsas]
    [ 4613.939549] Call trace:
    [ 4613.942702]  __switch_to+0xf8/0x17c
    [ 4613.946892]  __schedule+0x660/0xee0
    [ 4613.951083]  schedule+0xac/0x240
    [ 4613.955015]  schedule_timeout+0x500/0x610
    [ 4613.959725]  wait_for_common+0x200/0x610
    [ 4613.964349]  wait_for_completion+0x3c/0x5c
    [ 4613.969146]  flush_workqueue+0x198/0x790
    [ 4613.973776]  sas_porte_broadcast_rcvd+0x1e8/0x320 [libsas]
    [ 4613.979960]  sas_port_event_worker+0x54/0xa0 [libsas]
    [ 4613.985708]  process_one_work+0x248/0x950
    [ 4613.990420]  worker_thread+0x318/0x934
    [ 4613.994868]  kthread+0x190/0x200
    [ 4613.998800]  ret_from_fork+0x10/0x18
    
    This is because when the device goes offline, we obtain the hisi_hba
    semaphore and send the ABORT_DEV command to the device. However, the
    internal abort timed out due to the 2 bit ECC error and triggers automatic
    dump. In addition, since the hisi_hba semaphore has been obtained, the dump
    cannot be executed and the controller cannot be reset.
    
    Therefore, the deadlocks occur on the following circular dependencies:
    hisi_sas_dev_gone() -> down() -> hisi_sas_internal_task_abort_dev() -> ...
    -> hisi_sas_internal_abort_timeout() -> down().
    
    The deadlock is triggered only when the timeout occurs during device goes
    offline. To fix this issue, use .rst_ha_timeout to distinguish the scenario
    where a device goes offline from other scenarios.
    
    Fixes: 2ff07b5c6fe9 ("scsi: hisi_sas: Directly call register snapshot instead of using workqueue")
    Signed-off-by: Yihang Li <liyihang9@huawei.com>
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Link: https://lore.kernel.org/r/1705904747-62186-2-git-send-email-chenxiang66@hisilicon.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 85c98073ffcfe9e46abfb9c66f3364467119d563)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b918c5d1b71de312ead76a6c80da8538ac03b906
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 17 16:04:24 2024 +0200

    phy: qcom: qmp-usbc: handle CLAMP register in a correct way
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 01b086ccdeffac96f107228d581e0925e1c83f87 ]
    
    The QMP USB PHYs on msm8998, qcm2290 and some other platforms don't have
    the PCS_MISC_CLAMP_ENABLE register. Instead they need to toggle the
    register in the TCSR space. Make the new phy-qcom-qmp-usbc driver
    correctly handle the clamp register.
    
    Fixes: a51969fafc82 ("phy: qcom-qmp: Add QMP V3 USB3 PHY support for msm8998")
    Fixes: 8abe5e778b2c ("phy: qcom-qmp: Add QCM2290 USB3 PHY support")
    Cc: Jeffrey Hugo <quic_jhugo@quicinc.com>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240117-usbc-phy-vls-clamp-v2-3-a950c223f10f@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 03bab95e749a51e87ead76f7727ba6dbd83bfde1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a4e28fe4b57ab237ff79d8d6f4c8713162c757d3
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Jan 13 22:55:55 2024 +0200

    phy: qcom: qmp-usbc: add support for the Type-C handling
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dfdaba27b4660ec26de955cf4459499ddb005e2d ]
    
    The USB-C PHYs on the msm8998, QCM2290 and SM6115 platforms use special
    register to control which lanes of the Type-C port are used for the
    SuperSpeed USB connection. Mimic the qmp-combo driver and handle this
    register.
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20240113-pmi632-typec-v2-12-182d9aa0a5b3@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Stable-dep-of: 01b086ccdeff ("phy: qcom: qmp-usbc: handle CLAMP register in a correct way")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3b1e3639d1b10245333408544f361c29ad6c8c04)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b7ab5ec047b2387492f6123789b6bc097914ada2
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Jan 13 22:55:53 2024 +0200

    phy: qcom: qmp-usb: split USB-C PHY driver
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 19281571a4d5b6049dad9318db081af48818b1d2 ]
    
    In preparation to adding Type-C handling for MSM8998, QCM2290 and SM6115
    platforms, create new QMP USB-C PHY driver by splitting mentioned
    platforms to a separate file. In future it will also be extended with
    support for the DisplayPort handling. It will also be reused later for
    such platforms as SDM660, SM6125, SM6150.
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240113-pmi632-typec-v2-10-182d9aa0a5b3@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Stable-dep-of: 01b086ccdeff ("phy: qcom: qmp-usbc: handle CLAMP register in a correct way")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bdb35fcff34af08fc7a7cb92f99ff1442e975cb1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d1e6c8d805ffc6b9e13d84b981d8323eadaa4257
Author: Johan Carlsson <johan.carlsson@teenage.engineering>
Date:   Wed Mar 13 09:15:09 2024 +0100

    ALSA: usb-audio: Stop parsing channels bits when all channels are found.
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a39d51ff1f52cd0b6fe7d379ac93bd8b4237d1b7 ]
    
    If a usb audio device sets more bits than the amount of channels
    it could write outside of the map array.
    
    Signed-off-by: Johan Carlsson <johan.carlsson@teenage.engineering>
    Fixes: 04324ccc75f9 ("ALSA: usb-audio: add channel map support")
    Message-ID: <20240313081509.9801-1-johan.carlsson@teenage.engineering>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6d88b289fb0a8d055cb79d1c46a56aba7809d96d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 71c3b31836f8281bcf9a01de98cb9b51cb8d30ec
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Mon Mar 4 21:50:03 2024 +0100

    platform/x86/amd/pmf: Do not use readl() for policy buffer access
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e42dddce83a0578a518cb7078930c8269a6083af ]
    
    The policy buffer is allocated using normal memory allocation
    functions, so readl() should not be used on it.
    
    Compile-tested only.
    
    Fixes: 7c45534afa44 ("platform/x86/amd/pmf: Add support for PMF Policy Binary")
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Reviewed-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Link: https://lore.kernel.org/r/20240304205005.10078-3-W_Armin@gmx.de
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit faedc22c0c991b8860181d102414960ce3512f7e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e54f3f5020be4b96e81b5fd3976808647d510136
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Tue Feb 27 11:01:34 2024 -0800

    platform/x86/intel/pmc/arl: Put GNA device in D3
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ac2d1fd9688fcdfba5acc815fb2b13fec83e5dad ]
    
    As is the case on Meteor Lake, the Gaussian & Neural Accelerator (GNA)
    device is powered by BIOS to D0 by default. If no driver is loaded, this
    will cause the Package C state to be limited to PC2, leading to
    significant power consumption and decrease in batter life.  Put the GNA
    device in D3 by default if no driver is loaded for it.
    
    Fixes: 83f168a1a437 ("platform/x86/intel/pmc: Add Arrow Lake S support to intel_pmc_core driver")
    Signed-off-by: "David E. Box" <david.e.box@linux.intel.com>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Link: https://lore.kernel.org/r/20240227190134.1592072-3-david.e.box@linux.intel.com
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 58690276d0962e25deae71703cb3ea9bd08a6ec2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 91c483af2d9cab0daebff1299e21b9c3cc4ef836
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Tue Feb 27 11:01:33 2024 -0800

    platform/x86/intel/pmc/lnl: Remove SSRAM support
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e6ba4acde44957dc9bdc3222b5739217a102752d ]
    
    A recent PMC firmware change in Lunar Lake caused the pmc_core driver to
    fail to probe. This is due to a change in the GUID for PMC telemetry coming
    from the SSRAM device. Until a final release is ready this value may
    change again. In the meantime, disable the SSRAM support for Lunar Lake so
    the driver can load and provide some basic functionality.
    
    Fixes: 3748dfdae2a6 ("platform/x86/intel/pmc: Add Lunar Lake M support to intel_pmc_core driver")
    Signed-off-by: "David E. Box" <david.e.box@linux.intel.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Link: https://lore.kernel.org/r/20240227190134.1592072-2-david.e.box@linux.intel.com
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 954ec92124796497ce237793094d7c398869b005)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd2fc64fde53a9a2d26416ec36474d636f3cb19f
Author: Serge Semin <fancer.lancer@gmail.com>
Date:   Mon Feb 26 13:54:21 2024 +0300

    mips: cm: Convert __mips_cm_l2sync_phys_base() to weak function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8bc8db2ab2832daabdd06feeabdd511dc9575bb6 ]
    
    The __mips_cm_l2sync_phys_base() and mips_cm_l2sync_phys_base() couple was
    introduced in commit 9f98f3dd0c51 ("MIPS: Add generic CM probe & access
    code") where the former method was a weak implementation of the later
    function. Such design pattern permitted to re-define the original method
    and to use the weak implementation in the new function. A similar approach
    was introduced in the framework of another arch-specific programmable
    interface: mips_cm_phys_base() and __mips_cm_phys_base(). The only
    difference is that the underscored method of the later couple was declared
    in the "asm/mips-cm.h" header file, but it wasn't done for the CM L2-sync
    methods in the subject. Due to the missing global function declaration
    the "missing prototype" warning was spotted in the framework of the commit
    9a2036724cd6 ("mips: mark local function static if possible") and fixed
    just be re-qualifying the weak method as static. Doing that broke what was
    originally implied by having the weak implementation globally defined.
    
    Let's fix the broken CM2 L2-sync arch-interface by dropping the static
    qualifier and, seeing the implemented pattern hasn't been used for over 10
    years but will be required soon (see the link for the discussion around
    it), converting it to a single weakly defined method:
    mips_cm_l2sync_phys_base().
    
    Fixes: 9a2036724cd6 ("mips: mark local function static if possible")
    Link: https://lore.kernel.org/linux-mips/20240215171740.14550-3-fancer.lancer@gmail.com
    Signed-off-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ddd34da00c1186120fe2706535c009e95f522f3d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 189eaf318fc7ae2923771306cb56c1f7209e5c7b
Author: Geoffrey D. Bennett <g@b4.vu>
Date:   Mon Mar 11 19:56:08 2024 +1030

    ALSA: scarlett2: Fix Scarlett 4th Gen input gain range again
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6719cd5e45111449f4021e08f2e488f17a9b292b ]
    
    The 4th Gen input preamp gain range is 0dB to +69dB, although the
    control values range from 0 to 70. Replace SCARLETT2_MAX_GAIN with
    SCARLETT2_MAX_GAIN_VALUE and SCARLETT2_MAX_GAIN_DB, and update the TLV
    again.
    
    Signed-off-by: Geoffrey D. Bennett <g@b4.vu>
    Fixes: a45cf0a08347 ("ALSA: scarlett2: Fix Scarlett 4th Gen input gain range")
    Message-ID: <Ze7OMA8ntG7KteGa@m.b4.vu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 056a4f138a428299fe20a294912048c59b0c6752)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e1881c99463461e7e4d2fc8dab477ac1a7bacec
Author: Geoffrey D. Bennett <g@b4.vu>
Date:   Sun Mar 10 21:04:59 2024 +1030

    ALSA: scarlett2: Fix Scarlett 4th Gen input gain range
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a45cf0a0834779c741ac204c0320469e9aaef006 ]
    
    The input gain range TLV was declared as -70dB to 0dB, but the preamp
    gain range is actually 0dB to +70dB. Rename SCARLETT2_GAIN_BIAS to
    SCARLETT2_MAX_GAIN and update the TLV to fix.
    
    Signed-off-by: Geoffrey D. Bennett <g@b4.vu>
    Fixes: 0a995e38dc44 ("ALSA: scarlett2: Add support for software-controllable input gain")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <9168317b5ac5335943d3f14dbcd1cc2d9b2299d0.1710047969.git.g@b4.vu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8358dffff18fdde1f77bc84bd3be206e27e02452)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 44e981c99e2ccb4fa4d6488d8d144905fac6fa55
Author: Geoffrey D. Bennett <g@b4.vu>
Date:   Sun Mar 10 21:04:41 2024 +1030

    ALSA: scarlett2: Fix Scarlett 4th Gen autogain status values
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit be157c4683a91857d3fdf319117c9b9dc6e8a849 ]
    
    The meanings of the raw_auto_gain_status values were originally
    guessed through experimentation, but the official names have now been
    discovered. Update the autogain status control strings accordingly.
    
    Signed-off-by: Geoffrey D. Bennett <g@b4.vu>
    Fixes: 0a995e38dc44 ("ALSA: scarlett2: Add support for software-controllable input gain")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <8bd12a5e7dc714801dd9887c4bc5cb35c384e27c.1710047969.git.g@b4.vu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ae917c82ce11f12b2ac6daa0c85b32ddcaca840d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e4ffd7a15a61517f5a88d6260b2b28a1c5f52470
Author: Geoffrey D. Bennett <g@b4.vu>
Date:   Sun Mar 10 21:04:27 2024 +1030

    ALSA: scarlett2: Fix Scarlett 4th Gen 4i4 low-voltage detection
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6ef1f08b53fdb6f5f00f17f85a60b3247d77fa54 ]
    
    The value currently being read to determine the low-voltage state is
    actually the front panel state. Fix the code to use the correct offset
    for the low-voltage state.
    
    Signed-off-by: Geoffrey D. Bennett <g@b4.vu>
    Fixes: d7cfa2fdfc8a ("ALSA: scarlett2: Add power status control")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <d97b7d87f43b0e54f37e1552394be2f3ae182704.1710047969.git.g@b4.vu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 427ce810fd90504c90ce23a269deaae9c886bcf1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8c2e1db50ded9f7dd2c2f0ea2806a38e284a2274
Author: Gergo Koteles <soyer@irl.hu>
Date:   Fri Mar 8 18:41:44 2024 +0100

    ALSA: hda/tas2781: restore power state after system_resume
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9fc91a6fe37c78ef301aed4251f7e50b8524e72d ]
    
    After system_resume the amplifers will remain off, even if they were on
    before system_suspend.
    
    Use playback_started bool to save the playback state, and restore power
    state based on it.
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <1742b61901781826f6e6212ffe1d21af542d134a.1709918447.git.soyer@irl.hu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2abb2db6ada71a97bab2334a4862a2fab5341fe7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a7dd374a75b4f6128b84f76a75119c74e7cba8d
Author: Gergo Koteles <soyer@irl.hu>
Date:   Fri Mar 8 18:41:43 2024 +0100

    ALSA: hda/tas2781: do not call pm_runtime_force_* in system_resume/suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5f51de7e30c7282162a631af8a425b54a4576346 ]
    
    The runtime_resume function calls prmg_load and apply_calibration
    functions, but system_resume also calls them, so calling
    pm_runtime_force_resume before reset is unnecessary.
    
    For consistency, do not call the pm_runtime_force_suspend in
    system_suspend, as runtime_suspend does the same.
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <d0b4cc1248b9d375d59c009563da42d60d69eac3.1709918447.git.soyer@irl.hu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 75ab1e13660f08f5921b74d1db741502363df2cc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d9c36e616c8b7006b8964519d77fdb9ea1ab1b09
Author: Gergo Koteles <soyer@irl.hu>
Date:   Fri Mar 8 18:41:42 2024 +0100

    ALSA: hda/tas2781: do not reset cur_* values in runtime_suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bec7760a6c5fa59593dac264fa0c628e46815986 ]
    
    The amplifier doesn't loose register state in software shutdown mode, so
    there is no need to reset the cur_* values.
    
    Without these resets, the amplifier can be turned on after
    runtime_suspend without waiting for the program and
    profile to be restored.
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <aa27ae084150988bf6a0ead7e3403bc485d790f8.1709918447.git.soyer@irl.hu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c516c18f170ee99a4f4a6a44df04f5e3081eb214)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 553bf253be62b881dd160d3cc26372175a608677
Author: Gergo Koteles <soyer@irl.hu>
Date:   Fri Mar 8 18:41:41 2024 +0100

    ALSA: hda/tas2781: add lock to system_suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c58e6ed55a1bb9811d6d936d001b068bb0419467 ]
    
    Add the missing lock around tasdevice_tuning_switch().
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <c666da13d4bc48cd1ab1357479e0c6096541372c.1709918447.git.soyer@irl.hu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dd68ea813d0a996e73bce4c7ca15c5f078659bee)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit da64c3f6a4162396b3c7fcdaa87d95e940502bd3
Author: Gergo Koteles <soyer@irl.hu>
Date:   Fri Mar 8 18:41:40 2024 +0100

    ALSA: hda/tas2781: use dev_dbg in system_resume
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c850c9121cc8de867ce3ac36b9ae9d05f62bef14 ]
    
    The system_resume function uses dev_info for tracing, but the other pm
    functions use dev_dbg.
    
    Use dev_dbg as the other pm functions.
    
    Fixes: 5be27f1e3ec9 ("ALSA: hda/tas2781: Add tas2781 HDA driver")
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Message-ID: <140f3c689c9eb5874e6eb48a570fcd8207f06a41.1709918447.git.soyer@irl.hu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 63cca9c8a01d4814c9ef3fe03ada5a90b38ffd60)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 277a4c290745ad0498e7f3348bcf02bb448f8420
Author: Athaariq Ardhiansyah <foss@athaariq.my.id>
Date:   Sun Mar 10 20:58:44 2024 +0700

    ALSA: hda/realtek: fix ALC285 issues on HP Envy x360 laptops
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c062166995c9e57d5cd508b332898f79da319802 ]
    
    Realtek codec on HP Envy laptop series are heavily modified by vendor.
    Therefore, need intervention to make it work properly. The patch fixes:
    
    - B&O soundbar speakers (between lid and keyboard) activation
    - Enable LED on mute button
    - Add missing process coefficient which affects the output amplifier
    - Volume control synchronization between B&O soundbar and side speakers
    - Unmute headset output on several HP Envy models
    - Auto-enable headset mic when plugged
    
    This patch was tested on HP Envy x360 13-AR0107AU with Realtek ALC285
    
    The only unsolved problem is output amplifier of all built-in speakers
    is too weak, which causes volume of built-in speakers cannot be loud
    as vendor's proprietary driver due to missing _DSD parameter in the
    firmware. The solution is currently on research. Expected to has another
    patch in the future.
    
    Potential fix to related issues, need test before close those issues:
    
    - https://bugzilla.kernel.org/show_bug.cgi?id=189331
    - https://bugzilla.kernel.org/show_bug.cgi?id=216632
    - https://bugzilla.kernel.org/show_bug.cgi?id=216311
    - https://bugzilla.kernel.org/show_bug.cgi?id=213507
    
    Signed-off-by: Athaariq Ardhiansyah <foss@athaariq.my.id>
    Message-ID: <20240310140249.3695-1-foss@athaariq.my.id>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 77d28159bafc433909d163fd159692ef89b85ebb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f66af63564de1be795343ce726479f9ab8a15dbb
Author: David Howells <dhowells@redhat.com>
Date:   Thu Feb 22 11:20:26 2024 +0000

    cifs: Fix writeback data corruption
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f3dc1bdb6b0b0693562c7c54a6c28bafa608ba3c ]
    
    cifs writeback doesn't correctly handle the case where
    cifs_extend_writeback() hits a point where it is considering an additional
    folio, but this would overrun the wsize - at which point it drops out of
    the xarray scanning loop and calls xas_pause().  The problem is that
    xas_pause() advances the loop counter - thereby skipping that page.
    
    What needs to happen is for xas_reset() to be called any time we decide we
    don't want to process the page we're looking at, but rather send the
    request we are building and start a new one.
    
    Fix this by copying and adapting the netfslib writepages code as a
    temporary measure, with cifs writeback intending to be offloaded to
    netfslib in the near future.
    
    This also fixes the issue with the use of filemap_get_folios_tag() causing
    retry of a bunch of pages which the extender already dealt with.
    
    This can be tested by creating, say, a 64K file somewhere not on cifs
    (otherwise copy-offload may get underfoot), mounting a cifs share with a
    wsize of 64000, copying the file to it and then comparing the original file
    and the copy:
    
            dd if=/dev/urandom of=/tmp/64K bs=64k count=1
            mount //192.168.6.1/test /mnt -o user=...,pass=...,wsize=64000
            cp /tmp/64K /mnt/64K
            cmp /tmp/64K /mnt/64K
    
    Without the fix, the cmp fails at position 64000 (or shortly thereafter).
    
    Fixes: d08089f649a0 ("cifs: Change the I/O paths to use an iterator rather than a page list")
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Steve French <sfrench@samba.org>
    cc: Paulo Alcantara <pc@manguebit.com>
    cc: Ronnie Sahlberg <ronniesahlberg@gmail.com>
    cc: Shyam Prasad N <sprasad@microsoft.com>
    cc: Tom Talpey <tom@talpey.com>
    cc: Jeff Layton <jlayton@kernel.org>
    cc: linux-cifs@vger.kernel.org
    cc: samba-technical@lists.samba.org
    cc: netfs@lists.linux.dev
    cc: linux-fsdevel@vger.kernel.org
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 844b4e132f57f1333dc79feaa035075a096762e4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 05d5558df51232f1bf30a281394639af79e00c69
Author: Jonathan Bell <jonathan@raspberrypi.com>
Date:   Sat Feb 17 14:37:22 2024 +0100

    PCI: brcmstb: Fix broken brcm_pcie_mdio_write() polling
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 039741a8d7c9a01c1bc84a5ac5aa770a5e138a30 ]
    
    The MDIO_WT_DONE() macro tests bit 31, which is always 0 (== done) as
    readw_poll_timeout_atomic() does a 16-bit read. Replace with the readl
    variant.
    
    [kwilczynski: commit log]
    Fixes: ca5dcc76314d ("PCI: brcmstb: Replace status loops with read_poll_timeout_atomic()")
    Link: https://lore.kernel.org/linux-pci/20240217133722.14391-1-wahrenst@gmx.net
    Signed-off-by: Jonathan Bell <jonathan@raspberrypi.com>
    Signed-off-by: Stefan Wahren <wahrenst@gmx.net>
    Signed-off-by: Krzysztof Wilczyński <kwilczynski@kernel.org>
    Acked-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e130ce1a71677bd45fe9e4f82dffa2a0c6c772d2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 603881b1480af6582a618dd446eace650a23c8dc
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Fri Mar 1 16:44:37 2024 +0800

    clk: zynq: Prevent null pointer dereference caused by kmalloc failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7938e9ce39d6779d2f85d822cc930f73420e54a6 ]
    
    The kmalloc() in zynq_clk_setup() will return null if the
    physical memory has run out. As a result, if we use snprintf()
    to write data to the null address, the null pointer dereference
    bug will happen.
    
    This patch uses a stack variable to replace the kmalloc().
    
    Fixes: 0ee52b157b8e ("clk: zynq: Add clock controller driver")
    Suggested-by: Michal Simek <michal.simek@amd.com>
    Suggested-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Link: https://lore.kernel.org/r/20240301084437.16084-1-duoming@zju.edu.cn
    Acked-by: Michal Simek <michal.simek@amd.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 58a946ab43501f2eba058d24d96af0ad1122475b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a7a0536f5439df354fd1a9b62b4df848a6c5c0c7
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Sat Mar 2 00:52:14 2024 +0000

    clk: Fix clk_core_get NULL dereference
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e97fe4901e0f59a0bfd524578fe3768f8ca42428 ]
    
    It is possible for clk_core_get to dereference a NULL in the following
    sequence:
    
    clk_core_get()
        of_clk_get_hw_from_clkspec()
            __of_clk_get_hw_from_provider()
                __clk_get_hw()
    
    __clk_get_hw() can return NULL which is dereferenced by clk_core_get() at
    hw->core.
    
    Prior to commit dde4eff47c82 ("clk: Look for parents with clkdev based
    clk_lookups") the check IS_ERR_OR_NULL() was performed which would have
    caught the NULL.
    
    Reading the description of this function it talks about returning NULL but
    that cannot be so at the moment.
    
    Update the function to check for hw before dereferencing it and return NULL
    if hw is NULL.
    
    Fixes: dde4eff47c82 ("clk: Look for parents with clkdev based clk_lookups")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Link: https://lore.kernel.org/r/20240302-linux-next-24-03-01-simple-clock-fixes-v1-1-25f348a5982b@linaro.org
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6f073b24a9e2becd25ac4505a9780a87e621bb51)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c21039bea4630dd85b515df7486bf65996fcb9b0
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Feb 24 18:42:28 2024 +0100

    sparc32: Fix section mismatch in leon_pci_grpci
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 24338a6ae13cb743ced77da1b3a12c83f08a0c96 ]
    
    Passing a datastructre marked _initconst to platform_driver_register()
    is wrong. Drop the __initconst notation.
    
    This fixes the following warnings:
    
    WARNING: modpost: vmlinux: section mismatch in reference: grpci1_of_driver+0x30 (section: .data) -> grpci1_of_match (section: .init.rodata)
    WARNING: modpost: vmlinux: section mismatch in reference: grpci2_of_driver+0x30 (section: .data) -> grpci2_of_match (section: .init.rodata)
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Andreas Larsson <andreas@gaisler.com>
    Fixes: 4154bb821f0b ("sparc: leon: grpci1: constify of_device_id")
    Fixes: 03949b1cb9f1 ("sparc: leon: grpci2: constify of_device_id")
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Reviewed-by: Andreas Larsson <andreas@gaisler.com>
    Tested-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240224-sam-fix-sparc32-all-builds-v2-7-1f186603c5c4@ravnborg.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c40f049cf96e67a9e076f212e98cfeae882aed79)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6bab6ba0f0c3ca603394a14738df5ca9d74f2f1b
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Feb 24 18:42:26 2024 +0100

    sparc32: Do not select GENERIC_ISA_DMA
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 99bd9a4f87926e12ce60796d7db1d6b226aca5e3 ]
    
    sparc32 do not support generic isa dma, so do not select the symbol.
    
    This fixes the following warnings:
    dma.c:70:5: error: no previous prototype for 'request_dma' [-Werror=missing-prototypes]
    dma.c:88:6: error: no previous prototype for 'free_dma' [-Werror=missing-prototypes]
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Fixes: 0fcb70851fbf ("Makefile.extrawarn: turn on missing-prototypes globally")
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Cc: Andreas Larsson <andreas@gaisler.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Maciej W. Rozycki <macro@orcam.me.uk>
    Reviewed-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240224-sam-fix-sparc32-all-builds-v2-5-1f186603c5c4@ravnborg.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b78e05ce0ed082395ae70b0ae72a597bda09c6c1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6168470a988b2a50c24e1daf3b738f668ebe4be5
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Feb 24 18:42:24 2024 +0100

    mtd: maps: sun_uflash: Declare uflash_devinit static
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6892982316846d4c40d12b0641d59519d868a784 ]
    
    This fixes the following warning:
    sun_uflash.c:50:5: error: no previous prototype for 'uflash_devinit'
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Fixes: 0fcb70851fbf ("Makefile.extrawarn: turn on missing-prototypes globally")
    Reviewed-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Cc: Andreas Larsson <andreas@gaisler.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Reviewed-by: Andreas Larsson <andreas@gaisler.com>
    Acked-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240224-sam-fix-sparc32-all-builds-v2-3-1f186603c5c4@ravnborg.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8ebe69501194e3b3e9b300fca2308b2abb03987b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 29db6bebe2f91f1b4df984115bbb546b9ebb7410
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Feb 24 18:42:22 2024 +0100

    sparc32: Use generic cmpdi2/ucmpdi2 variants
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 802a8874a3889a4a0d218d4f73e5855c96d5b8a8 ]
    
    Use the generic variants - the implementation is the same.
    As a nice side-effect fix the following warnings:
    
    cmpdi2.c: warning: no previous prototype for '__cmpdi2' [-Wmissing-prototypes]
    ucmpdi2.c: warning: no previous prototype for '__ucmpdi2' [-Wmissing-prototypes]
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Fixes: 0fcb70851fbf ("Makefile.extrawarn: turn on missing-prototypes globally")
    Reviewed-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Reviewed-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Tested-by: Maciej W. Rozycki <macro@orcam.me.uk> # build-tested
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Andreas Larsson <andreas@gaisler.com>
    Reviewed-by: Andreas Larsson <andreas@gaisler.com>
    Tested-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Link: https://lore.kernel.org/r/20240224-sam-fix-sparc32-all-builds-v2-1-1f186603c5c4@ravnborg.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a7d2cd3621672c1669c2d85f4ee4f04354ecd43a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 56b97988317afa418b23ec28dc642fffcb1068ef
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Tue Feb 20 15:35:26 2024 +0000

    backlight: lp8788: Fully initialize backlight_properties during probe
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 392346827fbe8a7fd573dfb145170d7949f639a6 ]
    
    props is stack allocated and the fields that are not explcitly set
    by the probe function need to be zeroed or we'll get undefined behaviour
    (especially so power/blank states)!
    
    Fixes: c5a51053cf3b ("backlight: add new lp8788 backlight driver")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240220153532.76613-4-daniel.thompson@linaro.org
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bda57d3103f727075d5df9d791cf2951b6acb6e6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 68f6dc2c671ab24db45d4155e231742eaa6d4098
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Tue Feb 20 15:35:25 2024 +0000

    backlight: lm3639: Fully initialize backlight_properties during probe
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit abb5a5d951fbea3feb5c4ba179b89bb96a1d3462 ]
    
    props is stack allocated and the fields that are not explcitly set
    by the probe function need to be zeroed or we'll get undefined behaviour
    (especially so power/blank states)!
    
    Fixes: 0f59858d5119 ("backlight: add new lm3639 backlight driver")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240220153532.76613-3-daniel.thompson@linaro.org
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ab48d9151df2c84b7deea5fa8cc4978465cd2755)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 27e5188bcd9bfce2897153a9ae1f5b45f4b3620a
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Tue Feb 20 15:35:24 2024 +0000

    backlight: da9052: Fully initialize backlight_properties during probe
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0285e9efaee8276305db5c52a59baf84e9731556 ]
    
    props is stack allocated and the fields that are not explcitly set
    by the probe function need to be zeroed or we'll get undefined behaviour
    (especially so power/blank states)!
    
    Fixes: 6ede3d832aaa ("backlight: add driver for DA9052/53 PMIC v1")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240220153532.76613-2-daniel.thompson@linaro.org
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5343621087e01b84962127ea7507ce8542edf447)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 017760dae07ed2cba7bff5807acf381de635064e
Author: Luca Weiss <luca@z3ntu.xyz>
Date:   Tue Feb 20 00:11:20 2024 +0100

    backlight: lm3630a: Don't set bl->props.brightness in get_brightness
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4bf7ddd2d2f0f8826f25f74c7eba4e2c323a1446 ]
    
    There's no need to set bl->props.brightness, the get_brightness function
    is just supposed to return the current brightness and not touch the
    struct.
    
    With that done we can also remove the 'goto out' and just return the
    value.
    
    Fixes: 0c2a665a648e ("backlight: add Backlight driver for lm3630 chip")
    Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240220-lm3630a-fixups-v1-2-9ca62f7e4a33@z3ntu.xyz
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ff9f0ab280444ee23eecc3225bc210f26906cf6d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ce8920347d03c4c5bbd65c0eb407f9c4b59aed5f
Author: Luca Weiss <luca@z3ntu.xyz>
Date:   Tue Feb 20 00:11:19 2024 +0100

    backlight: lm3630a: Initialize backlight_properties on init
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ad9aeb0e3aa90ebdad5fabf9c21783740eb95907 ]
    
    The backlight_properties struct should be initialized to zero before
    using, otherwise there will be some random values in the struct.
    
    Fixes: 0c2a665a648e ("backlight: add Backlight driver for lm3630 chip")
    Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240220-lm3630a-fixups-v1-1-9ca62f7e4a33@z3ntu.xyz
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e0663f6f90392aa09335840689208967ade18739)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3a2559c1e901407caa45e2af293daed0691116d7
Author: Jianhua Lu <lujianhua000@gmail.com>
Date:   Mon Jan 29 20:28:29 2024 +0800

    backlight: ktz8866: Correct the check for of_property_read_u32
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f1ac3c9825f99c93a9833beee6b78aa386e55b0b ]
    
    of_property_read_u32 returns 0 when success, so reverse the
    return value to get the true value.
    
    Fixes: f8449c8f7355 ("backlight: ktz8866: Add support for Kinetic KTZ8866 backlight")
    Signed-off-by: Jianhua Lu <lujianhua000@gmail.com>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240129122829.16248-1-lujianhua000@gmail.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3c138e90311e41fc6a804e2fa28f101e626236ef)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 486f8db6aecf1afba487d3480f9f39aff99229bd
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Sun Jan 14 16:39:21 2024 +0200

    backlight: hx8357: Fix potential NULL pointer dereference
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b1ba8bcb2d1ffce11b308ce166c9cc28d989e3b9 ]
    
    The "im" pins are optional. Add missing check in the hx8357_probe().
    
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Closes: https://lore.kernel.org/r/642e1230-3358-4006-a17f-3f297897ae74@moroto.mountain
    Fixes: 7d84a63a39b7 ("backlight: hx8357: Convert to agnostic GPIO API")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20240114143921.550736-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 67e578c8ff2d7df03bf8ca9a7f5436b1796f6ad1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7bf62a7c2b222ac8c28feb1a27cdd0cfe86550a7
Author: Ondrej Jirman <megi@xff.cz>
Date:   Sat Feb 17 20:11:30 2024 +0100

    leds: sgm3140: Add missing timer cleanup and flash gpio control
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 205c29887a333ee4b37596e6533373e38cb23947 ]
    
    Enabling strobe and then setting brightness to 0 causes the driver to enter
    invalid state after strobe end timer fires. We should cancel strobe mode
    resources when changing brightness (aka torch mode).
    
    Fixes: cef8ec8cbd21 ("leds: add sgm3140 driver")
    Signed-off-by: Ondrej Jirman <megi@xff.cz>
    Link: https://lore.kernel.org/r/20240217191133.1757553-1-megi@xff.cz
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c1a929631638ae6802660935d148f85200fc38c6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e48a012a6b109ce1fb936a10564e2e7963dae220
Author: George Stark <gnstark@salutedevices.com>
Date:   Thu Dec 14 20:36:05 2023 +0300

    leds: aw2013: Unlock mutex before destroying it
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6969d0a2ba1adc9ba6a49b9805f24080896c255c ]
    
    In the probe() callback in case of error mutex is destroyed being locked
    which is not allowed so unlock the mutex before destroying.
    
    Fixes: 59ea3c9faf32 ("leds: add aw2013 driver")
    Signed-off-by: George Stark <gnstark@salutedevices.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20231214173614.2820929-2-gnstark@salutedevices.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bc1afa30180736feda0045565673db0280f89902)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 695ec2d4d33e6c7af1b6466e24204fa9411b81ae
Author: Anup Patel <apatel@ventanamicro.com>
Date:   Tue Feb 13 19:04:00 2024 +0530

    RISC-V: KVM: Forward SEED CSR access to user space
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d808f0b1be4888a87524164bc7dad2242734de38 ]
    
    The SEED CSR access from VS/VU mode (guest) will always trap to
    HS-mode (KVM) when Zkr extension is available to the Guest/VM.
    
    Forward this CSR access to KVM user space so that it can be
    emulated based on the method chosen by VMM.
    
    Fixes: f370b4e668f0 ("RISC-V: KVM: Allow scalar crypto extensions for Guest/VM")
    Signed-off-by: Anup Patel <apatel@ventanamicro.com>
    Reviewed-by: Andrew Jones <ajones@ventanamicro.com>
    Signed-off-by: Anup Patel <anup@brainfault.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 928f13dac47d4f70d0c026cdde0fd2fcee47d450)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bc6515a2364977e595f09eb580fd6843b30b0707
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Mar 5 23:34:10 2024 +1100

    powerpc/4xx: Fix warp_gpio_leds build failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5b9e00a6004cf837c43fdb8d5290df619de78024 ]
    
    The 44x/warp_defconfig build fails with:
    
      arch/powerpc/platforms/44x/warp.c:109:15: error: variable ‘warp_gpio_leds’ has initializer but incomplete type
        109 | static struct platform_device warp_gpio_leds = {
            |               ^~~~~~~~~~~~~~~
    
    Fix it by including platform_device.h.
    
    Fixes: ef175b29a242 ("of: Stop circularly including of_device.h and of_platform.h")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20240305123410.3306253-3-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 754a5fc211fb9b1a7c8351f0235d3686ef91944d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8f2af2860671744b1958076d84f266b1e944e198
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Mar 5 23:34:08 2024 +1100

    powerpc/embedded6xx: Fix no previous prototype for avr_uart_send() etc.
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 20933531be0577cdd782216858c26150dbc7936f ]
    
    Move the prototypes into mpc10x.h which is included by all the relevant
    C files, fixes:
    
      arch/powerpc/platforms/embedded6xx/ls_uart.c:59:6: error: no previous prototype for 'avr_uart_configure'
      arch/powerpc/platforms/embedded6xx/ls_uart.c:82:6: error: no previous prototype for 'avr_uart_send'
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20240305123410.3306253-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fd787185b4413c33e3f0f62855bbd17c928a2926)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit beb5e18fa8ff93596881ab1c58ddc750637ea43c
Author: Thomas Weißschuh <linux@weissschuh.net>
Date:   Sun Mar 3 16:31:13 2024 +0100

    power: supply: mm8013: fix "not charging" detection
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cd38a0acca734a1117663d6f0da579d3965b6c93 ]
    
    The charge_behaviours property is meant as a control-knob that can be
    changed by the user.
    
    Page 23 of [0] which documents the flag CHG_INH as follows:
    
      CHG_INH : Charge Inhibit      When the current is more than or equal to charge
                                    threshold current,
                                    charge inhibit temperature (upper/lower limit) ：1
                                    charge permission temperature or the current is
                                    less than charge threshold current ：0
    
    So this is pure read-only information which is better represented as
    POWER_SUPPLY_STATUS_NOT_CHARGING.
    
    [0] https://product.minebeamitsumi.com/en/product/category/ics/battery/fuel_gauge/parts/download/__icsFiles/afieldfile/2023/07/12/1_download_01_12.pdf
    
    Signed-off-by: Thomas Weißschuh <linux@weissschuh.net>
    Link: https://lore.kernel.org/r/20240303-power_supply-charge_behaviour_prop-v2-1-8ebb0a7c2409@weissschuh.net
    Fixes: e39257cde7e8 ("power: supply: mm8013: Add more properties")
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 187c63a409b4bc8b9e57e3d999eb0cbd090ca842)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e86a84ea6e64e050ac868e5fc45e2ce4637d0bcc
Author: Maciej Strozek <mstrozek@opensource.cirrus.com>
Date:   Fri Mar 1 10:15:47 2024 +0000

    mfd: cs42l43: Fix wrong GPIO_FN_SEL and SPI_CLK_CONFIG1 defaults
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 78334c343bef528b911da83a6b041d15a1a72efb ]
    
    Two regs have wrong values in existing fields, change them to match
    the datasheet.
    
    Fixes: ace6d1448138 ("mfd: cs42l43: Add support for cs42l43 core driver")
    
    Signed-off-by: Maciej Strozek <mstrozek@opensource.cirrus.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20240301101547.2136948-1-mstrozek@opensource.cirrus.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fd8e12a1a0e920f1733e366d56f8c53f6bceb729)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9b1232dc99ad4c6d6c1bff54325f9bbfecd9658e
Author: Changbin Du <changbin.du@huawei.com>
Date:   Tue Feb 27 10:35:46 2024 +0800

    modules: wait do_free_init correctly
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8f8cd6c0a43ed637e620bbe45a8d0e0c2f4d5130 ]
    
    The synchronization here is to ensure the ordering of freeing of a module
    init so that it happens before W+X checking.  It is worth noting it is not
    that the freeing was not happening, it is just that our sanity checkers
    raced against the permission checkers which assume init memory is already
    gone.
    
    Commit 1a7b7d922081 ("modules: Use vmalloc special flag") moved calling
    do_free_init() into a global workqueue instead of relying on it being
    called through call_rcu(..., do_free_init), which used to allowed us call
    do_free_init() asynchronously after the end of a subsequent grace period.
    The move to a global workqueue broke the gaurantees for code which needed
    to be sure the do_free_init() would complete with rcu_barrier().  To fix
    this callers which used to rely on rcu_barrier() must now instead use
    flush_work(&init_free_wq).
    
    Without this fix, we still could encounter false positive reports in W+X
    checking since the rcu_barrier() here can not ensure the ordering now.
    
    Even worse, the rcu_barrier() can introduce significant delay.  Eric
    Chanudet reported that the rcu_barrier introduces ~0.1s delay on a
    PREEMPT_RT kernel.
    
      [    0.291444] Freeing unused kernel memory: 5568K
      [    0.402442] Run /sbin/init as init process
    
    With this fix, the above delay can be eliminated.
    
    Link: https://lkml.kernel.org/r/20240227023546.2490667-1-changbin.du@huawei.com
    Fixes: 1a7b7d922081 ("modules: Use vmalloc special flag")
    Signed-off-by: Changbin Du <changbin.du@huawei.com>
    Tested-by: Eric Chanudet <echanude@redhat.com>
    Acked-by: Luis Chamberlain <mcgrof@kernel.org>
    Cc: Xiaoyi Su <suxiaoyi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d9aa328a8b3075c9139cbae2b15634a4ed61cae1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 434093ee01375b94815c69513e5045a5ff260e45
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Fri Feb 23 17:20:13 2024 +0300

    lib/stackdepot: off by one in depot_fetch_stack()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dc24559472a682eb124e869cb110e7a2fd857322 ]
    
    The stack_pools[] array has DEPOT_MAX_POOLS.  The "pools_num" tracks the
    number of pools which are initialized.  See depot_init_pool() for more
    details.
    
    If pool_index == pools_num_cached, this will read one element beyond what
    we want.  If not all the pools are initialized, then the pool will be
    NULL, triggering a WARN(), and if they are all initialized it will read
    one element beyond the end of the array.
    
    Link: https://lkml.kernel.org/r/361ac881-60b7-471f-91e5-5bf8fe8042b2@moroto.mountain
    Fixes: b29d31885814 ("lib/stackdepot: store free stack records in a freelist")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Konovalov <andreyknvl@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7f71a28b0a17ade767c8ff016433d89c4654d305)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 45b5fb6b067c87298664f0a05d6c3a29f917c144
Author: Oscar Salvador <osalvador@suse.de>
Date:   Thu Feb 15 22:59:01 2024 +0100

    lib/stackdepot: fix first entry having a 0-handle
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3ee34eabac2abb6b1b6fcdebffe18870719ad000 ]
    
    Patch series "page_owner: print stacks and their outstanding allocations",
    v10.
    
    page_owner is a great debug functionality tool that lets us know about all
    pages that have been allocated/freed and their specific stacktrace.  This
    comes very handy when debugging memory leaks, since with some scripting we
    can see the outstanding allocations, which might point to a memory leak.
    
    In my experience, that is one of the most useful cases, but it can get
    really tedious to screen through all pages and try to reconstruct the
    stack <-> allocated/freed relationship, becoming most of the time a
    daunting and slow process when we have tons of allocation/free operations.
    
    This patchset aims to ease that by adding a new functionality into
    page_owner.  This functionality creates a new directory called
    'page_owner_stacks' under 'sys/kernel//debug' with a read-only file called
    'show_stacks', which prints out all the stacks followed by their
    outstanding number of allocations (being that the times the stacktrace has
    allocated but not freed yet).  This gives us a clear and a quick overview
    of stacks <-> allocated/free.
    
    We take advantage of the new refcount_f field that stack_record struct
    gained, and increment/decrement the stack refcount on every
    __set_page_owner() (alloc operation) and __reset_page_owner (free
    operation) call.
    
    Unfortunately, we cannot use the new stackdepot api STACK_DEPOT_FLAG_GET
    because it does not fulfill page_owner needs, meaning we would have to
    special case things, at which point makes more sense for page_owner to do
    its own {dec,inc}rementing of the stacks.  E.g: Using
    STACK_DEPOT_FLAG_PUT, once the refcount reaches 0, such stack gets
    evicted, so page_owner would lose information.
    
    This patchset also creates a new file called 'set_threshold' within
    'page_owner_stacks' directory, and by writing a value to it, the stacks
    which refcount is below such value will be filtered out.
    
    A PoC can be found below:
    
     # cat /sys/kernel/debug/page_owner_stacks/show_stacks > page_owner_full_stacks.txt
     # head -40 page_owner_full_stacks.txt
      prep_new_page+0xa9/0x120
      get_page_from_freelist+0x801/0x2210
      __alloc_pages+0x18b/0x350
      alloc_pages_mpol+0x91/0x1f0
      folio_alloc+0x14/0x50
      filemap_alloc_folio+0xb2/0x100
      page_cache_ra_unbounded+0x96/0x180
      filemap_get_pages+0xfd/0x590
      filemap_read+0xcc/0x330
      blkdev_read_iter+0xb8/0x150
      vfs_read+0x285/0x320
      ksys_read+0xa5/0xe0
      do_syscall_64+0x80/0x160
      entry_SYSCALL_64_after_hwframe+0x6e/0x76
     stack_count: 521
    
      prep_new_page+0xa9/0x120
      get_page_from_freelist+0x801/0x2210
      __alloc_pages+0x18b/0x350
      alloc_pages_mpol+0x91/0x1f0
      folio_alloc+0x14/0x50
      filemap_alloc_folio+0xb2/0x100
      __filemap_get_folio+0x14a/0x490
      ext4_write_begin+0xbd/0x4b0 [ext4]
      generic_perform_write+0xc1/0x1e0
      ext4_buffered_write_iter+0x68/0xe0 [ext4]
      ext4_file_write_iter+0x70/0x740 [ext4]
      vfs_write+0x33d/0x420
      ksys_write+0xa5/0xe0
      do_syscall_64+0x80/0x160
      entry_SYSCALL_64_after_hwframe+0x6e/0x76
     stack_count: 4609
    ...
    ...
    
     # echo 5000 > /sys/kernel/debug/page_owner_stacks/set_threshold
     # cat /sys/kernel/debug/page_owner_stacks/show_stacks > page_owner_full_stacks_5000.txt
     # head -40 page_owner_full_stacks_5000.txt
      prep_new_page+0xa9/0x120
      get_page_from_freelist+0x801/0x2210
      __alloc_pages+0x18b/0x350
      alloc_pages_mpol+0x91/0x1f0
      folio_alloc+0x14/0x50
      filemap_alloc_folio+0xb2/0x100
      __filemap_get_folio+0x14a/0x490
      ext4_write_begin+0xbd/0x4b0 [ext4]
      generic_perform_write+0xc1/0x1e0
      ext4_buffered_write_iter+0x68/0xe0 [ext4]
      ext4_file_write_iter+0x70/0x740 [ext4]
      vfs_write+0x33d/0x420
      ksys_pwrite64+0x75/0x90
      do_syscall_64+0x80/0x160
      entry_SYSCALL_64_after_hwframe+0x6e/0x76
     stack_count: 6781
    
      prep_new_page+0xa9/0x120
      get_page_from_freelist+0x801/0x2210
      __alloc_pages+0x18b/0x350
      pcpu_populate_chunk+0xec/0x350
      pcpu_balance_workfn+0x2d1/0x4a0
      process_scheduled_works+0x84/0x380
      worker_thread+0x12a/0x2a0
      kthread+0xe3/0x110
      ret_from_fork+0x30/0x50
      ret_from_fork_asm+0x1b/0x30
     stack_count: 8641
    
    This patch (of 7):
    
    The very first entry of stack_record gets a handle of 0, but this is wrong
    because stackdepot treats a 0-handle as a non-valid one.  E.g: See the
    check in stack_depot_fetch()
    
    Fix this by adding and offset of 1.
    
    This bug has been lurking since the very beginning of stackdepot, but no
    one really cared as it seems.  Because of that I am not adding a Fixes
    tag.
    
    Link: https://lkml.kernel.org/r/20240215215907.20121-1-osalvador@suse.de
    Link: https://lkml.kernel.org/r/20240215215907.20121-2-osalvador@suse.de
    Co-developed-by: Marco Elver <elver@google.com>
    Signed-off-by: Marco Elver <elver@google.com>
    Signed-off-by: Oscar Salvador <osalvador@suse.de>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Andrey Konovalov <andreyknvl@gmail.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Stable-dep-of: dc24559472a6 ("lib/stackdepot: off by one in depot_fetch_stack()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 533fabf94c2e90aeeff046c0b463e3ff2eadaf0a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d1e8f0e275265cd95412151f593a4d6cfc1e9bcd
Author: Dafna Hirschfeld <dhirschfeld@habana.ai>
Date:   Sat Mar 2 17:39:28 2024 +0200

    drm/xe: Replace 'grouped target' in Makefile with pattern rule
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e62d2e00780b4a465c77d2229837495fcbc480d3 ]
    
    Since 'grouped target' is used only in 'make' 4.3, it should
    be avoided. Replace it with 'multi-target pattern rule' which
    has the same behavior.
    
    Fixes: 9616e74b796c ("drm/xe: Add support for OOB workarounds")
    Signed-off-by: Dafna Hirschfeld <dhirschfeld@habana.ai>
    Reviewed-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240302153927.2602241-1-dhirschfeld@habana.ai
    [ reword commit message ]
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    (cherry picked from commit 5224ed586ba7f9bba956655a1bfe5b75df7394d4)
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cb733c9d27b2cbdff96d3efd55521d2a3eced23a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 69b28ad2b581735daa14ec1040712b3030b2ab31
Author: Matthew Brost <matthew.brost@intel.com>
Date:   Thu Feb 29 20:10:36 2024 -0800

    drm/xe: Fix ref counting leak on page fault
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f7da398935f7ddabf1a098714593e032c875cd74 ]
    
    If a page fault occurs on VM not in fault a ref can be leaked. Fix this.
    
    Fixes: dd08ebf6c352 ("drm/xe: Introduce a new DRM driver for Intel GPUs")
    Signed-off-by: Matthew Brost <matthew.brost@intel.com>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240301041036.238471-1-matthew.brost@intel.com
    (cherry picked from commit 27b5a3f237fe66dbf2288c2b50973aee8a427e41)
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 56aba4e947c23e95be951f71da5ec70afcb4303d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 275def6e1938262d202666bada5dbeb07faa2268
Author: Benjamin Gaignard <benjamin.gaignard@collabora.com>
Date:   Sat Mar 2 11:37:08 2024 +0100

    media: usbtv: Remove useless locks in usbtv_video_free()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 65e6a2773d655172143cc0b927cdc89549842895 ]
    
    Remove locks calls in usbtv_video_free() because
    are useless and may led to a deadlock as reported here:
    https://syzkaller.appspot.com/x/bisect.txt?x=166dc872180000
    Also remove usbtv_stop() call since it will be called when
    unregistering the device.
    
    Before 'c838530d230b' this issue would only be noticed if you
    disconnect while streaming and now it is noticeable even when
    disconnecting while not streaming.
    
    Fixes: c838530d230b ("media: media videobuf2: Be more flexible on the number of queue stored buffers")
    Fixes: f3d27f34fdd7 ("[media] usbtv: Add driver for Fushicai USBTV007 video frame grabber")
    
    Signed-off-by: Benjamin Gaignard <benjamin.gaignard@collabora.com>
    Reviewed-by: Tomasz Figa <tfiga@chromium.org>
    Tested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    [hverkuil: fix minor spelling mistake in log message]
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3e7d82ebb86e94643bdb30b0b5b077ed27dce1c2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6fa373f18b5cb87378cf4f86d4460f76748f5a30
Author: Paloma Arellano <quic_parellan@quicinc.com>
Date:   Thu Feb 22 11:39:47 2024 -0800

    drm/msm/dpu: add division of drm_display_mode's hskew parameter
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 551ee0f210991d25f336bc27262353bfe99d3eed ]
    
    Setting up the timing engine when the physical encoder has a split role
    neglects dividing the drm_display_mode's hskew parameter. Let's fix this
    since this must also be done in preparation for implementing YUV420 over
    DP.
    
    Fixes: 25fdd5933e4c ("drm/msm: Add SDM845 DPU support")
    Signed-off-by: Paloma Arellano <quic_parellan@quicinc.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/579605/
    Link: https://lore.kernel.org/r/20240222194025.25329-3-quic_parellan@quicinc.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0b492855578b6dc35c7f93b8083ccc57a363f979)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0a698a7e1110cdea47a7c3f9f432268576e74286
Author: Paloma Arellano <quic_parellan@quicinc.com>
Date:   Thu Feb 22 11:39:46 2024 -0800

    drm/msm/dpu: allow certain formats for CDM for DP
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 32b6ff95b91240e632f55be35c6ccd4bbe7434e4 ]
    
    CDM block supports formats other than H1V2 for DP. Since we are now
    adding support for CDM over DP, relax the checks to allow all other
    formats for DP other than H1V2.
    
    Changes in v2:
            - Add fixes tag
            - Move patch to top of series
    
    Fixes: 0afac0ba6024 ("drm/msm/dpu: add dpu_hw_cdm abstraction for CDM block")
    Signed-off-by: Paloma Arellano <quic_parellan@quicinc.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/579606/
    Link: https://lore.kernel.org/r/20240222194025.25329-2-quic_parellan@quicinc.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c180da571187fb34c17ca3fb6717751955103c50)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e3b5e3c44d3473cd81119aa0b1d7cd6da42b92a0
Author: Sandipan Das <sandipan.das@amd.com>
Date:   Fri Mar 1 14:14:31 2024 +0530

    perf vendor events amd: Fix Zen 4 cache latency events
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 498d3486376befe4e82b5334d44bbc86b1982ee4 ]
    
    L3PMCx0AC and L3PMCx0AD, used in l3_xi_sampled_latency* events, have a
    quirk that requires them to be programmed with SliceId set to 0x3.
    Without this, the events do not count at all and affects dependent
    metrics such as l3_read_miss_latency.
    
    If ThreadMask is not specified, the amd-uncore driver internally sets
    ThreadMask to 0x3, EnAllCores to 0x1 and EnAllSlices to 0x1 but does
    not set SliceId. Since SliceId must also be set to 0x3 in this case,
    specify all the other fields explicitly.
    
    E.g.
    
      $ sudo perf stat -e l3_xi_sampled_latency.all,l3_xi_sampled_latency_requests.all -a sleep 1
    
    Before:
    
       Performance counter stats for 'system wide':
    
                       0      l3_xi_sampled_latency.all
                       0      l3_xi_sampled_latency_requests.all
    
             1.005155399 seconds time elapsed
    
    After:
    
       Performance counter stats for 'system wide':
    
                 921,446      l3_xi_sampled_latency.all
                  54,210      l3_xi_sampled_latency_requests.all
    
             1.005664472 seconds time elapsed
    
    Fixes: 5b2ca349c313 ("perf vendor events amd: Add Zen 4 uncore events")
    Signed-off-by: Sandipan Das <sandipan.das@amd.com>
    Reviewed-by: Ian Rogers <irogers@google.com>
    Cc: ananth.narayan@amd.com
    Cc: ravi.bangoria@amd.com
    Cc: eranian@google.com
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240301084431.646221-1-sandipan.das@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5e4c58a31c2a10f10a9fceca4c8990ba943d3123)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e97c08573a6f2cd587395f042c1db3ce0fc278cf
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Sun Feb 25 18:32:56 2024 +0100

    clk: qcom: gcc-ipq5018: fix register offset for GCC_UBI0_AXI_ARES reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7d474b43087aa356d714d39870c90d77fc6f1186 ]
    
    The current register offset used for the GCC_UBI0_AXI_ARES reset
    seems wrong. Or at least, the downstream driver uses [1] the same
    offset which is used for other the GCC_UBI0_*_ARES resets.
    
    Change the code to use the same offset used in the downstream
    driver and also specify the reset bit explicitly to use the
    same format as the followup entries.
    
    1. https://git.codelinaro.org/clo/qsdk/oss/kernel/linux-ipq-5.4/-/blob/NHSS.QSDK.12.4.r4/drivers/clk/qcom/gcc-ipq5018.c?ref_type=heads#L3773
    
    Fixes: e3fdbef1bab8 ("clk: qcom: Add Global Clock controller (GCC) driver for IPQ5018")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Kathiravan Thirumoorthy <quic_kathirav@quicinc.com>
    Link: https://lore.kernel.org/r/20240225-gcc-ipq5018-register-fixes-v1-3-3c191404d9f0@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3a414f948019f3338c7fc3a5aa86a43fceef6ffa)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e6e7a947039283cbffc463c31e73e6b0ef7beca3
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Sun Feb 25 18:32:55 2024 +0100

    clk: qcom: gcc-ipq5018: fix 'halt_reg' offset of 'gcc_pcie1_pipe_clk'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 11b752ac5a07cbfd95592fac5237a02f45662926 ]
    
    The following table shows the values of the 'halt_reg' and the
    'enable_reg' fields from the pcie clocks defined in the current
    driver:
    
      clock                        halt_reg    enable_reg
    
      gcc_pcie0_ahb_clk            0x75010     0x75010
      gcc_pcie0_aux_clk            0x75014     0x75014
      gcc_pcie0_axi_m_clk          0x75008     0x75008
      gcc_pcie0_axi_s_bridge_clk   0x75048     0x75048
      gcc_pcie0_axi_s_clk          0x7500c     0x7500c
      gcc_pcie0_pipe_clk           0x75018     0x75018
    
      gcc_pcie1_ahb_clk            0x76010     0x76010
      gcc_pcie1_aux_clk            0x76014     0x76014
      gcc_pcie1_axi_m_clk          0x76008     0x76008
      gcc_pcie1_axi_s_bridge_clk   0x76048     0x76048
      gcc_pcie1_axi_s_clk          0x7600c     0x7600c
      gcc_pcie1_pipe_clk                 8*    0x76018
    
    Based on the table, it is quite likely that the pcie0 and the pci1
    clocks are using the same register layout, however it seems that
    the value of the 'halt_reg' field in the 'gcc_pcie1_pipe_clk' clock
    is wrong.
    
    In the downstream driver [1], the same '0x76018' value is used for
    both the 'halt_reg' and for the 'enable_reg' fields of the
    'gcc_pcie1_pipe_clk' clock.
    
    Update the current driver to use the same value used downstream as
    probably that is the correct value.
    
    1. https://git.codelinaro.org/clo/qsdk/oss/kernel/linux-ipq-5.4/-/blob/NHSS.QSDK.12.4.r4/drivers/clk/qcom/gcc-ipq5018.c?ref_type=heads#L2316
    
    Fixes: e3fdbef1bab8 ("clk: qcom: Add Global Clock controller (GCC) driver for IPQ5018")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Kathiravan Thirumoorthy <quic_kathirav@quicinc.com>
    Link: https://lore.kernel.org/r/20240225-gcc-ipq5018-register-fixes-v1-2-3c191404d9f0@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2a3ccd91c930c61eb76ff76507d2d2ab4c6b2d00)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 55e4880e382e25e906bb2e4483c72cb156b93358
Author: Gabor Juhos <j4g8y7@gmail.com>
Date:   Sun Feb 25 18:32:54 2024 +0100

    clk: qcom: gcc-ipq5018: fix 'enable_reg' offset of 'gcc_gmac0_sys_clk'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f982adcc1b1c02a3114f68ac73c811cbfabe90fa ]
    
    The value of the 'enable_reg' field in the 'gcc_gmac0_sys_clk'
    clock definition seems wrong as it is greater than the
    'max_register' value defined in the regmap configuration.
    Additionally, all other gmac specific branch clock definitions
    within the driver uses the same value both for the 'enable_reg'
    and for the 'halt_reg' fields.
    
    Due to the lack of documentation the correct value is not known.
    Looking into the downstream driver does not help either, as that
    uses the same (presumably wrong) value [1].
    
    Nevertheless, change the 'enable_reg' field of 'gcc_gmac0_sys_clk'
    to use the value from the 'halt_reg' field so it follows the pattern
    used in other gmac clock definitions. The change is based on the
    assumption that the register layout of this clock is the same
    as the other gmac clocks.
    
    1. https://git.codelinaro.org/clo/qsdk/oss/kernel/linux-ipq-5.4/-/blob/NHSS.QSDK.12.4.r4/drivers/clk/qcom/gcc-ipq5018.c?ref_type=heads#L1889
    
    Fixes: e3fdbef1bab8 ("clk: qcom: Add Global Clock controller (GCC) driver for IPQ5018")
    Signed-off-by: Gabor Juhos <j4g8y7@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Kathiravan Thirumoorthy <quic_kathirav@quicinc.com>
    Link: https://lore.kernel.org/r/20240225-gcc-ipq5018-register-fixes-v1-1-3c191404d9f0@gmail.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 84fbc2cd3cfc7bdef7d74b9b3a0b473e04e086ce)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 26a9a6230811834c1e7ff71df3400cfa9a9556ad
Author: Kajol Jain <kjain@linux.ibm.com>
Date:   Thu Feb 29 17:58:47 2024 +0530

    powerpc/hv-gpci: Fix the H_GET_PERF_COUNTER_INFO hcall return value checks
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ad86d7ee43b22aa2ed60fb982ae94b285c1be671 ]
    
    Running event hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/
    in one of the system throws below error:
    
     ---Logs---
     # perf list | grep hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles
      hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=?/[Kernel PMU event]
    
     # perf stat -v -e hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/ sleep 2
    Using CPUID 00800200
    Control descriptor is not initialized
    Warning:
    hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/ event is not supported by the kernel.
    failed to read counter hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/
    
     Performance counter stats for 'system wide':
    
       <not supported>      hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/
    
           2.000700771 seconds time elapsed
    
    The above error is because of the hcall failure as required
    permission "Enable Performance Information Collection" is not set.
    Based on current code, single_gpci_request function did not check the
    error type incase hcall fails and by default returns EINVAL. But we can
    have other reasons for hcall failures like H_AUTHORITY/H_PARAMETER with
    detail_rc as GEN_BUF_TOO_SMALL, for which we need to act accordingly.
    
    Fix this issue by adding new checks in the single_gpci_request and
    h_gpci_event_init functions.
    
    Result after fix patch changes:
    
     # perf stat -e hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/ sleep 2
    Error:
    No permission to enable hv_gpci/dispatch_timebase_by_processor_processor_time_in_timebase_cycles,phys_processor_idx=0/ event.
    
    Fixes: 220a0c609ad1 ("powerpc/perf: Add support for the hv gpci (get performance counter info) interface")
    Reported-by: Akanksha J N <akanksha@linux.ibm.com>
    Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20240229122847.101162-1-kjain@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a011a515d749cc5f17a45cb927c9af4b7d03f759)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7bc3ab9fe38c00e479315a6119735c48709dcc09
Author: Qiheng Lin <linqiheng@huawei.com>
Date:   Thu Dec 8 21:34:49 2022 +0800

    powerpc/pseries: Fix potential memleak in papr_get_attr()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cda9c0d556283e2d4adaa9960b2dc19b16156bae ]
    
    `buf` is allocated in papr_get_attr(), and krealloc() of `buf`
    could fail. We need to free the original `buf` in the case of failure.
    
    Fixes: 3c14b73454cf ("powerpc/pseries: Interface to represent PAPR firmware attributes")
    Signed-off-by: Qiheng Lin <linqiheng@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20221208133449.16284-1-linqiheng@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d0647c3e81eff62b66d46fd4e475318cb8cb3610)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 88e318054289072e6e00284839e48e77fc38dd20
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Sun Feb 11 14:16:23 2024 -0800

    powerpc/32: fix ADB_CUDA kconfig warning
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b72c066ba85a131091498a15a62d6068997278a4 ]
    
    Fix a (randconfig) kconfig warning by correcting the select
    statement:
    
    WARNING: unmet direct dependencies detected for ADB_CUDA
      Depends on [n]: MACINTOSH_DRIVERS [=n] && (ADB [=n] || PPC_PMAC [=y]) && !PPC_PMAC64 [=n]
      Selected by [y]:
      - PPC_PMAC [=y] && PPC_BOOK3S [=y] && CPU_BIG_ENDIAN [=y] && POWER_RESET [=y] && PPC32 [=y]
    
    The PPC32 isn't needed because ADB depends on (PPC_PMAC && PPC32).
    
    Fixes: a3ef2fef198c ("powerpc/32: Add dependencies of POWER_RESET for pmac32")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20240211221623.31112-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6bdb9e3510c7e047bbaabc9649f245b0cab58cb4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6b8904802496709f49cc36ef1a94f733aa84b307
Author: Maciej Strozek <mstrozek@opensource.cirrus.com>
Date:   Thu Feb 29 15:56:14 2024 +0000

    mfd: cs42l43: Fix wrong register defaults
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c9e1e505cde1a8ddd0968b4d54ec2ea1937dfe00 ]
    
    A few regs have unnecessary values in defaults, change them to match the
    datasheet
    
    Fixes: ace6d1448138 ("mfd: cs42l43: Add support for cs42l43 core driver")
    
    Signed-off-by: Maciej Strozek <mstrozek@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20240229155616.118457-1-mstrozek@opensource.cirrus.com
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 67bcea76efe5915807e739c28a7d78a42088ea9b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 086c0224a698745a1c05b5bd28ae35900c865bec
Author: Hsin-Yi Wang <hsinyi@chromium.org>
Date:   Fri Feb 23 13:23:29 2024 -0800

    drm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c958e86e9cc1b48cac004a6e245154dfba8e163b ]
    
    It's possible that mtk_crtc->event is NULL in
    mtk_drm_crtc_finish_page_flip().
    
    pending_needs_vblank value is set by mtk_crtc->event, but in
    mtk_drm_crtc_atomic_flush(), it's is not guarded by the same
    lock in mtk_drm_finish_page_flip(), thus a race condition happens.
    
    Consider the following case:
    
    CPU1                              CPU2
    step 1:
    mtk_drm_crtc_atomic_begin()
    mtk_crtc->event is not null,
                                      step 1:
                                      mtk_drm_crtc_atomic_flush:
                                      mtk_drm_crtc_update_config(
                                          !!mtk_crtc->event)
    step 2:
    mtk_crtc_ddp_irq ->
    mtk_drm_finish_page_flip:
    lock
    mtk_crtc->event set to null,
    pending_needs_vblank set to false
    unlock
                                      pending_needs_vblank set to true,
    
                                      step 2:
                                      mtk_crtc_ddp_irq ->
                                      mtk_drm_finish_page_flip called again,
                                      pending_needs_vblank is still true
                                      //null pointer
    
    Instead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more
    efficient to just check if mtk_crtc->event is null before use.
    
    Fixes: 119f5173628a ("drm/mediatek: Add DRM Driver for Mediatek SoC MT8173.")
    Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Reviewed-by: CK Hu <ck.hu@mediatek.com>
    Link: https://patchwork.kernel.org/project/dri-devel/patch/20240223212404.3709690-1-hsinyi@chromium.org/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3fc88b246a2fc16014e374040fc15af1d3752535)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a09d48b303efa7b1ddd29f0e972c79be92202b44
Author: Théo Lebrun <theo.lebrun@bootlin.com>
Date:   Wed Feb 28 12:28:03 2024 +0100

    gpio: nomadik: fix offset bug in nmk_pmx_set()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 53cf6b72e074864b94ade97dcb6f30b5ac1a82dc ]
    
    Previously, the statement looked like:
    
        slpm[x] &= ~BIT(g->grp.pins[i]);
    
    Where:
     - slpm is a unsigned int pointer;
     - g->grp.pins[i] is a pin number. It can grow to more than 32.
    
    The expected shift amount is a pin bank offset.
    
    This bug does not occur on every group or pin: the altsetting must be
    NMK_GPIO_ALT_C and the pin must be 32 or above. It might have occured.
    For example, in pinctrl-nomadik-db8500.c, pin group i2c3_c_2 has the
    right altsetting and pins 229 and 230.
    
    Fixes: dbfe8ca259e1 ("pinctrl/nomadik: implement pin multiplexing")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Théo Lebrun <theo.lebrun@bootlin.com>
    Link: https://lore.kernel.org/r/20240228-mbly-gpio-v2-5-3ba757474006@bootlin.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1f409905631faca13af42398bec264bc51157cf2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a72e7c99efd77402cf03ed97eca16de69c5d826
Author: Asad Kamal <asad.kamal@amd.com>
Date:   Wed Feb 28 12:24:15 2024 +0800

    drm/amd/pm: Fix esm reg mask use to get pcie speed
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b485b899e5b8f83723833feca30a1a1e3df778df ]
    
    Fix mask used for esm ctrl register to get pcie link
    speed on smu_v11_0_3, smu_v13_0_2 & smu_v13_0_6
    
    Fixes: 511a95552ec8 ("drm/amd/pm: Add SMU 13.0.6 support")
    Fixes: c05d1c401572 ("drm/amd/swsmu: add aldebaran smu13 ip support (v3)")
    Fixes: f1c378593153 ("drm/amd/powerplay: add Arcturus support for gpu metrics export")
    Signed-off-by: Asad Kamal <asad.kamal@amd.com>
    Reviewed-by: Lijo Lazar <lijo.lazar@amd.com>
    Reviewed-by: Le Ma <le.ma@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 897a6f43ec887f60bb516caefb7d2bbb3687569d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a4c984b266703b0a59c59c39319896fc52fde13f
Author: Maxime Ripard <mripard@kernel.org>
Date:   Thu Feb 22 19:13:47 2024 +0100

    drm/tests: helpers: Include missing drm_drv header
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 73984daf07a1a89ace8f0db6dd2d640654ebbbee ]
    
    We have a few functions declared in our kunit helpers header, some of
    them dereferencing the struct drm_driver.
    
    However, we don't include the drm_drv.h header file defining that
    structure, leading to compilation errors if we don't include both
    headers.
    
    Fixes: d98780310719 ("drm/tests: helpers: Allow to pass a custom drm_driver")
    Reviewed-by: Maíra Canal <mcanal@igalia.com>
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240222-kms-hdmi-connector-state-v7-1-8f4af575fce2@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 322c3ba6d1496236dd3e823fe73d60c53e45e8a2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 731fb9a434abc1fd67c41f7d952373634b5f0eb3
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Thu Feb 22 22:40:29 2024 -0800

    arm64: ftrace: Don't forbid CALL_OPS+CC_OPTIMIZE_FOR_SIZE with Clang
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a743f26d03a96593c0f3d05dc26b388f45de67c9 ]
    
    Per commit b3f11af9b2ce ("arm64: ftrace: forbid CALL_OPS with
    CC_OPTIMIZE_FOR_SIZE"), GCC is silently ignoring `-falign-functions=N`
    when passed `-Os`, causing functions to be improperly aligned. This
    doesn't seem to be a problem with Clang though, where enabling CALL_OPS
    with CC_OPTIMIZE_FOR_SIZE doesn't spit out any warnings at boot about
    misaligned patch-sites. Only forbid CALL_OPS if GCC is used and we're
    optimizing for size so that CALL_OPS can be used with clang optimizing
    for size.
    
    Cc: Jason Ling <jasonling@chromium.org>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Bill Wendling <morbo@google.com>
    Cc: Justin Stitt <justinstitt@google.com>
    Cc: llvm@lists.linux.dev
    Fixes: b3f11af9b2ce ("arm64: ftrace: forbid CALL_OPS with CC_OPTIMIZE_FOR_SIZE")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/r/20240223064032.3463229-1-swboyd@chromium.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 20a2090438337a58d5c57928954f32e4b90da020)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 734c53199e690a4d0feb13d5e03b07b74432511a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat Feb 24 13:10:22 2024 +0100

    media: mediatek: vcodec: avoid -Wcast-function-type-strict warning
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bfb1b99802ef16045402deb855c197591dc78886 ]
    
    The ipi handler here tries hard to maintain const-ness of its argument,
    but by doing that causes a warning about function type casts:
    
    drivers/media/platform/mediatek/vcodec/common/mtk_vcodec_fw_vpu.c:38:32: error: cast from 'mtk_vcodec_ipi_handler' (aka 'void (*)(void *, unsigned int, void *)') to 'ipi_handler_t' (aka 'void (*)(const void *, unsigned int, void *)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
       38 |         ipi_handler_t handler_const = (ipi_handler_t)handler;
          |                                       ^~~~~~~~~~~~~~~~~~~~~~
    
    Remove the hack and just use a non-const argument.
    
    Fixes: bf1d556ad4e0 ("media: mtk-vcodec: abstract firmware interface")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 67416acf254d7ff639596e49bd5ae3191617fc76)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d43a3c748e8a065c249b1050c58f322b81584fb
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Wed Feb 21 13:17:04 2024 +0800

    media: ttpci: fix two memleaks in budget_av_attach
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d0b07f712bf61e1a3cf23c87c663791c42e50837 ]
    
    When saa7146_register_device and saa7146_vv_init fails, budget_av_attach
    should free the resources it allocates, like the error-handling of
    ttpci_budget_init does. Besides, there are two fixme comment refers to
    such deallocations.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 656b8cc123d7635dd399d9f02594f27aa797ac3c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 582989a9074d754c72f6ffe653856aa196124915
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Wed Feb 21 12:37:13 2024 +0800

    media: go7007: fix a memleak in go7007_load_encoder
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b9b683844b01d171a72b9c0419a2d760d946ee12 ]
    
    In go7007_load_encoder, bounce(i.e. go->boot_fw), is allocated without
    a deallocation thereafter. After the following call chain:
    
    saa7134_go7007_init
      |-> go7007_boot_encoder
            |-> go7007_load_encoder
      |-> kfree(go)
    
    go is freed and thus bounce is leaked.
    
    Fixes: 95ef39403f89 ("[media] go7007: remember boot firmware")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7405a0d4442792988e9ae834e7d84f9d163731a4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 15659321fdbb0fe208b6ed5f2358b02140ef78e8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 17:31:44 2024 +0100

    media: dvb-frontends: avoid stack overflow warnings with clang
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7a4cf27d1f0538f779bf31b8c99eda394e277119 ]
    
    A previous patch worked around a KASAN issue in stv0367, now a similar
    problem showed up with clang:
    
    drivers/media/dvb-frontends/stv0367.c:1222:12: error: stack frame size (3624) exceeds limit (2048) in 'stv0367ter_set_frontend' [-Werror,-Wframe-larger-than]
     1214 | static int stv0367ter_set_frontend(struct dvb_frontend *fe)
    
    Rework the stv0367_writereg() function to be simpler and mark both
    register access functions as noinline_for_stack so the temporary
    i2c_msg structures do not get duplicated on the stack when KASAN_STACK
    is enabled.
    
    Fixes: 3cd890dbe2a4 ("media: dvb-frontends: fix i2c access helpers for KASAN")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ed514ecf4f29c80a2f09ae3c877059b401efe893)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9ace65e12d6a14e26fe3a9a9b90c9ed64d062e27
Author: Edward Adam Davis <eadavis@qq.com>
Date:   Fri Feb 16 15:30:47 2024 +0800

    media: pvrusb2: fix uaf in pvr2_context_set_notify
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0a0b79ea55de8514e1750884e5fec77f9fdd01ee ]
    
    [Syzbot reported]
    BUG: KASAN: slab-use-after-free in pvr2_context_set_notify+0x2c4/0x310 drivers/media/usb/pvrusb2/pvrusb2-context.c:35
    Read of size 4 at addr ffff888113aeb0d8 by task kworker/1:1/26
    
    CPU: 1 PID: 26 Comm: kworker/1:1 Not tainted 6.8.0-rc1-syzkaller-00046-gf1a27f081c1f #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024
    Workqueue: usb_hub_wq hub_event
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xd9/0x1b0 lib/dump_stack.c:106
     print_address_description mm/kasan/report.c:377 [inline]
     print_report+0xc4/0x620 mm/kasan/report.c:488
     kasan_report+0xda/0x110 mm/kasan/report.c:601
     pvr2_context_set_notify+0x2c4/0x310 drivers/media/usb/pvrusb2/pvrusb2-context.c:35
     pvr2_context_notify drivers/media/usb/pvrusb2/pvrusb2-context.c:95 [inline]
     pvr2_context_disconnect+0x94/0xb0 drivers/media/usb/pvrusb2/pvrusb2-context.c:272
    
    Freed by task 906:
    kasan_save_stack+0x33/0x50 mm/kasan/common.c:47
    kasan_save_track+0x14/0x30 mm/kasan/common.c:68
    kasan_save_free_info+0x3f/0x60 mm/kasan/generic.c:640
    poison_slab_object mm/kasan/common.c:241 [inline]
    __kasan_slab_free+0x106/0x1b0 mm/kasan/common.c:257
    kasan_slab_free include/linux/kasan.h:184 [inline]
    slab_free_hook mm/slub.c:2121 [inline]
    slab_free mm/slub.c:4299 [inline]
    kfree+0x105/0x340 mm/slub.c:4409
    pvr2_context_check drivers/media/usb/pvrusb2/pvrusb2-context.c:137 [inline]
    pvr2_context_thread_func+0x69d/0x960 drivers/media/usb/pvrusb2/pvrusb2-context.c:158
    
    [Analyze]
    Task A set disconnect_flag = !0, which resulted in Task B's condition being met
    and releasing mp, leading to this issue.
    
    [Fix]
    Place the disconnect_flag assignment operation after all code in pvr2_context_disconnect()
    to avoid this issue.
    
    Reported-and-tested-by: syzbot+ce750e124675d4599449@syzkaller.appspotmail.com
    Fixes: e5be15c63804 ("V4L/DVB (7711): pvrusb2: Fix race on module unload")
    Signed-off-by: Edward Adam Davis <eadavis@qq.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit eaa410e05bdf562c90b23cdf2d9327f9c4625e16)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit de6c4f8f78733f348cdc2a006db3d8ebdef18d2c
Author: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
Date:   Sat Feb 24 07:48:52 2024 +0530

    drm/amdgpu: Fix missing break in ATOM_ARG_IMM Case of atom_get_src_int()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7cf1ad2fe10634238b38442a851d89514cb14ea2 ]
    
    Missing break statement in the ATOM_ARG_IMM case of a switch statement,
    adds the missing break statement, ensuring that the program's control
    flow is as intended.
    
    Fixes the below:
    drivers/gpu/drm/amd/amdgpu/atom.c:323 atom_get_src_int() warn: ignoring unreachable code.
    
    Fixes: d38ceaf99ed0 ("drm/amdgpu: add core driver (v4)")
    Cc: Jammy Zhou <Jammy.Zhou@amd.com>
    Cc: Christian König <christian.koenig@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e482e321796823d9f606bb4e9f5d96bb31aa1446)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ae32a88cbeaedbb6a3bdb1270fbe868d55c40a4d
Author: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
Date:   Wed Feb 14 20:11:42 2024 +0530

    HID: amd_sfh: Avoid disabling the interrupt
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c1db0073212ef39d5a46c2aea5e49bf884375ce4 ]
    
    HP ProBook x360 435 G7 using older version of firmware which doesn't
    support disabling the interrupt for all commands. Hence avoid disabling
    the interrupt for that particular model.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=218104
    Fixes: b300667b33b2 ("HID: amd_sfh: Disable the interrupt for all command")
    Co-developed-by: Akshata MukundShetty <akshata.mukundshetty@amd.com>
    Signed-off-by: Akshata MukundShetty <akshata.mukundshetty@amd.com>
    Signed-off-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d8b0c90c1dabbbd42e3d57686dd6674f30efcdf7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d3d16dc923f35f88fafa756f82ed433f6dd3f60d
Author: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
Date:   Wed Feb 14 20:11:41 2024 +0530

    HID: amd_sfh: Update HPD sensor structure elements
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bbf0dec30696638b8bdc28cb2f5bf23f8d760b52 ]
    
    HPD sensor data is not populating properly because of wrong order of HPD
    sensor structure elements. So update the order of structure elements to
    match the HPD sensor data received from the firmware.
    
    Fixes: 24a31ea94922 ("HID: amd_sfh: Add initial support for HPD sensor")
    Co-developed-by: Akshata MukundShetty <akshata.mukundshetty@amd.com>
    Signed-off-by: Akshata MukundShetty <akshata.mukundshetty@amd.com>
    Signed-off-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 19c2d5809ccf1c8cb0eaae274aee7aa5d21f4867)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit aea4b53285a88beec440689de52efc3c7aa31a7a
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 26 23:32:45 2023 +0200

    perf pmu: Fix a potential memory leak in perf_pmu__lookup()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ef5de1613d7d92bdc975e6beb34bb0fa94f34078 ]
    
    The commit in Fixes has reordered some code, but missed an error handling
    path.
    
    'goto err' now, in order to avoid a memory leak in case of error.
    
    Fixes: f63a536f03a2 ("perf pmu: Merge JSON events with sysfs at load time")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Ian Rogers <irogers@google.com>
    Cc: kernel-janitors@vger.kernel.org
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/9538b2b634894c33168dfe9d848d4df31fd4d801.1693085544.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 432a06b33153190ebb3fff47eb19c1ca608a557d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8e62d9b49ee2a21413dae69fe49289b34a1c3db5
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Fri Feb 16 12:03:49 2024 +0100

    dt-bindings: arm-smmu: fix SM8[45]50 GPU SMMU if condition
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dc94d0cc718329a39ea2e986a123421a9203b471 ]
    
    The if condition for the SM8[45]50 GPU SMMU is too large,
    add the other compatible strings to the condition to only
    allow the clocks for the GPU SMMU nodes.
    
    Fixes: 4fff78dc2490 ("dt-bindings: arm-smmu: Document SM8[45]50 GPU SMMU")
    Suggested-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/578686/
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 770c2ba4fe9485216eacb4e70d531ada297ba325)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit acb7df105e68e6a8b8e7a43e636d08d59a312265
Author: Rob Clark <robdclark@chromium.org>
Date:   Tue Jan 2 11:33:45 2024 -0800

    drm/msm/a7xx: Fix LLC typo
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0776ad9274d96d132131af66a5941df45b9d46b4 ]
    
    We'd miss actually activating LLC.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Fixes: af66706accdf ("drm/msm/a6xx: Add skeleton A7xx support")
    Patchwork: https://patchwork.freedesktop.org/patch/573043/
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e4bf4d13e13444f7197f6cf13592866543fa42ec)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 109239e4bdfee24fe01d9266a0a6dcf08a1a0fa2
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Tue Feb 20 19:12:10 2024 +0200

    drm/msm/a6xx: specify UBWC config for sc7180
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0d7dfc79fb9b4b81f642f84796111f2bae8427e2 ]
    
    Historically the Adreno driver has not been updating memory
    configuration registers on a618 (SC7180 platform) implying that the
    default configuration is fine. After the rework performed in the commit
    8814455a0e54 ("drm/msm: Refactor UBWC config setting") the function
    a6xx_calc_ubwc_config() still contained this shortcut and did not
    calculate UBWC configuration. However the function which now actually
    updates hardware registers, a6xx_set_ubwc_config(), doesn't contain such
    check.
    
    Rather than adding the check to a6xx_set_ubwc_config(), fill in the
    UBWC config for a618 (based on readings from SC7180).
    
    Reported-by: Leonard Lausen <leonard@lausen.nl>
    Link: https://gitlab.freedesktop.org/drm/msm/-/issues/49
    Fixes: 8814455a0e54 ("drm/msm: Refactor UBWC config setting")
    Cc: Connor Abbott <cwabbott0@gmail.com>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Connor Abbott <cwabbott0@gmail.com>
    Patchwork: https://patchwork.freedesktop.org/patch/579113/
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 51226b74656b9c65064b5b55053660d08ca97739)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d29221151878a7e56d5934a1d98acd80273e2d7c
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Fri Feb 23 18:51:08 2024 +0100

    ASoC: meson: axg-tdm-interface: add frame rate constraint
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 59c6a3a43b221cc2a211181b1298e43b2c2df782 ]
    
    According to Amlogic datasheets for the SoCs supported by this driver, the
    maximum bit clock rate is 100MHz.
    
    The tdm interface allows the rates listed by the DAI driver, regardless of
    the number slots or their width. However, these will impact the bit clock
    rate.
    
    Hitting the 100MHz limit is very unlikely for most use cases but it is
    possible.
    
    For example with 32 slots / 32 bits wide, the maximum rate is no longer
    384kHz but ~96kHz.
    
    Add the constraint accordingly if the component is not already active.
    If it is active, the rate is already constrained by the first stream rate.
    
    Fixes: d60e4f1e4be5 ("ASoC: meson: add tdm interface driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://msgid.link/r/20240223175116.2005407-3-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 640b0b020956f27669efdd50064f9970c968ae11)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 591100ae28881c4a1ab47f3c57e1ef216433ab2c
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Fri Feb 23 18:51:07 2024 +0100

    ASoC: meson: axg-tdm-interface: fix mclk setup without mclk-fs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e3741a8d28a1137f8b19ae6f3d6e3be69a454a0a ]
    
    By default, when mclk-fs is not provided, the tdm-interface driver
    requests an MCLK that is 4x the bit clock, SCLK.
    
    However there is no justification for this:
    
    * If the codec needs MCLK for its operation, mclk-fs is expected to be set
      according to the codec requirements.
    * If the codec does not need MCLK the minimum is 2 * SCLK, because this is
      minimum the divider between SCLK and MCLK can do.
    
    Multiplying by 4 may cause problems because the PLL limit may be reached
    sooner than it should, so use 2x instead.
    
    Fixes: d60e4f1e4be5 ("ASoC: meson: add tdm interface driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://msgid.link/r/20240223175116.2005407-2-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5202e5c2240a214ac6829a92d4283b87c6476441)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8dd478310cbdab3dd0dccd3ca6f94b5a647b89d7
Author: David Regan <dregan@broadcom.com>
Date:   Thu Feb 22 19:47:46 2024 -0800

    mtd: rawnand: brcmnand: exec_op helper functions return type fixes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d4bba1501f72e8af09f2cde3d327147de1b69f5d ]
    
    Fix return types for exec_op reset and status helper functions.
    
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Closes: http://lists.infradead.org/pipermail/linux-mtd/2023-December/102423.html
    Fixes: 3c8260ce7663 ("mtd: rawnand: brcmnand: exec_op implementation")
    Signed-off-by: David Regan <dregan@broadcom.com>
    Signed-off-by: William Zhang <william.zhang@broadcom.com>
    Reviewed-by: William Zhang <william.zhang@broadcom.com>
    Reviewed-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240223034758.13753-2-william.zhang@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9dcb97888502ca238580755c9872b97763d22fce)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4eb7908cbaebdefe1104806eac1c925d9bac0943
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 13 11:00:09 2024 +0100

    mtd: rawnand: lpc32xx_mlc: fix irq handler prototype
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 347b828882e6334690e7003ce5e2fe5f233dc508 ]
    
    clang-16 warns about mismatched function prototypes:
    
    drivers/mtd/nand/raw/lpc32xx_mlc.c:783:29: error: cast from 'irqreturn_t (*)(int, struct lpc32xx_nand_host *)' (aka 'enum irqreturn (*)(int, struct lpc32xx_nand_host *)') to 'irq_handler_t' (aka 'enum irqreturn (*)(int, void *)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
    
    Change the interrupt handler to the normal way of just passing
    a void* pointer and converting it inside the function..
    
    Fixes: 70f7cb78ec53 ("mtd: add LPC32xx MLC NAND driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240213100146.455811-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 10c0a6b9e4c6ecbe39d151d22e70950fc393316a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 28b9aebc03f8d6a12b89f2248d55bf6b26fbe654
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Thu Feb 8 12:34:18 2024 +0200

    mtd: maps: physmap-core: fix flash size larger than 32-bit
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3884f03edd34887514a0865a80769cd5362d5c3b ]
    
    mtd-ram can potentially be larger than 4GB. get_bitmask_order() uses
    fls() that is not guaranteed to work with values larger than 32-bit.
    Specifically on aarch64 fls() returns 0 when all 32 LSB bits are clear.
    Use fls64() instead.
    
    Fixes: ba32ce95cbd987 ("mtd: maps: Merge gpio-addr-flash.c into physmap-core.c")
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/9fbf3664ce00f8b07867f1011834015f21d162a5.1707388458.git.baruch@tkos.co.il
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ee341933239ddee18be1515452c3dc2e8c36d9aa)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 33cdd610aca412981a460624cf2d303e04f5f42f
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Feb 23 18:15:51 2024 +0800

    clk: imx: imx8mp: Fix SAI_MCLK_SEL definition
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 13269dc6c70444528f0093585e3559cd2f38850a ]
    
    There is SAI1, SAI2, SAI3, SAI5, SAI6, SAI7 existing in this block
    control, the order is discontinuous. The definition of SAI_MCLK_SEL(n)
    is not match with the usage of CLK_SAIn(n).
    
    So define SAI##n##_MCLK_SEL separately to fix the issue.
    
    Fixes: 6cd95f7b151c ("clk: imx: imx8mp: Add audiomix block control")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/1708683351-8504-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit eb1ef9d4e0dc6c2dd8cb2e9709ed94f8bdddf941)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f33b679a1c2a3531d683854a3e17ff2d4f394ac3
Author: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
Date:   Tue Feb 13 10:16:37 2024 +0200

    drm/tidss: Fix sync-lost issue with two displays
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c079e2e113f2ec2803ba859bbb442a6ab82c96bd ]
    
    A sync lost issue can be observed with two displays, when moving a plane
    from one disabled display to an another disabled display, and then
    enabling the display to which the plane was moved to. The exact
    requirements for this to trigger are not clear.
    
    It looks like the issue is that the layers are left enabled in the first
    display's OVR registers. Even if the corresponding VP is disabled, it
    still causes an issue, as if the disabled VP and its OVR would still be
    in use, leading to the same VID being used by two OVRs. However, this is
    just speculation based on testing the DSS behavior.
    
    Experimentation shows that as a workaround, we can disable all the
    layers in the OVR when disabling a VP. There should be no downside to
    this, as the OVR is anyway effectively disabled if its VP is disabled,
    and it seems to solve the sync lost issue.
    
    However, there may be a bigger issue in play here, related to J721e
    erratum i2097 ("DSS: Disabling a Layer Connected to Overlay May Result
    in Synclost During the Next Frame"). Experimentation also shows that the
    OVR's CHANNELIN field has similar issue. So we may need to revisit this
    when we find out more about the core issue.
    
    Fixes: 32a1795f57ee ("drm/tidss: New driver for TI Keystone platform Display SubSystem")
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240213-tidss-fixes-v1-2-d709e8dfa505@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 41260bf41ba6de4759c2abb26464d07480325719)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 731ad40de79da75347d7c309a384fd10c94156ed
Author: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
Date:   Tue Feb 13 10:16:36 2024 +0200

    drm/tidss: Fix initial plane zpos values
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3ec948ccb2c4b99e8fbfdd950adbe92ea577b395 ]
    
    When the driver sets up the zpos property it sets the default zpos value
    to the HW id of the plane. That is fine as such, but as on many DSS
    versions the driver arranges the DRM planes in a different order than
    the HW planes (to keep the non-scalable planes first), this leads to odd
    initial zpos values. An example is J721e, where the initial zpos values
    for DRM planes are 1, 3, 0, 2.
    
    In theory the userspace should configure the zpos values properly when
    using multiple planes, and in that sense the initial zpos values
    shouldn't matter, but there's really no reason not to fix this and help
    the userspace apps which don't handle zpos perfectly. In particular,
    some versions of Weston seem to have issues dealing with the planes
    with the current default zpos values.
    
    So let's change the zpos values for the DRM planes to 0, 1, 2, 3.
    
    Another option would be to configure the planes marked as primary planes
    to zpos 0. On a two display system this would give us plane zpos values
    of 0, 0, 1, 2. The end result and behavior would be very similar in this
    option, and I'm not aware that this would actually help us in any way.
    So, to keep the code simple, I opted for the 0, 1, 2, 3 values.
    
    Fixes: 32a1795f57ee ("drm/tidss: New driver for TI Keystone platform Display SubSystem")
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240213-tidss-fixes-v1-1-d709e8dfa505@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 255e163f74a1bcfd74322fbff4cbc0b8050b87a9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5b99ca653d5b016fdb1b56273e46ecef36217747
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Feb 17 08:55:13 2024 -0800

    crypto: jitter - fix CRYPTO_JITTERENTROPY help text
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e63df1ec9a16dd9e13e9068243e64876de06f795 ]
    
    Correct various small problems in the help text:
    a. change 2 spaces to ", "
    b. finish an incomplete sentence
    c. change non-working URL to working URL
    
    Fixes: a9a98d49da52 ("crypto: Kconfig - simplify compression/RNG entries")
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218458
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Bagas Sanjaya <bagasdotme@gmail.com>
    Cc: Robert Elliott <elliott@hpe.com>
    Cc: Christoph Biedl <bugzilla.kernel.bpeb@manchmal.in-ulm.de>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: linux-crypto@vger.kernel.org
    Acked-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3524a88db372d719dd653eb03827555eb91b1eb9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 779316ed636c459f98763f04d07d653673e28563
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Fri Feb 16 18:21:55 2024 +0100

    crypto: qat - fix ring to service map for dcc in 420xx
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a20a6060e0dd57fecaf55487985aef28bd08c6bf ]
    
    If a device is configured for data compression chaining (dcc), half of the
    engines are loaded with the symmetric crypto image and the rest are loaded
    with the compression image.
    However, in such configuration all rings can handle compression requests.
    
    Fix the ring to service mapping so that when a device is configured for
    dcc, the ring to service mapping reports that all rings in a bank can
    be used for compression.
    
    Fixes: fcf60f4bcf54 ("crypto: qat - add support for 420xx devices")
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a15e259f45fe05c76cef7155e91e8d74307043b9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 529d98ef1a9943d3822e8c17239cd09dc462d82a
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Fri Feb 16 18:21:54 2024 +0100

    crypto: qat - fix ring to service map for dcc in 4xxx
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit df018f82002a8b4dc407bc9a6f416b9241d14415 ]
    
    If a device is configured for data compression chaining (dcc), half of the
    engines are loaded with the symmetric crypto image and the rest are loaded
    with the compression image.
    However, in such configuration all rings can handle compression requests.
    
    Fix the ring to service mapping so that when a device is configured for
    dcc, the ring to service mapping reports that all rings in a bank can
    be used for compression.
    
    Fixes: a238487f7965 ("crypto: qat - fix ring to service map for QAT GEN4")
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b538b7f7b1829b632fe86883dab816709cbf0b61)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 633b148236d3ce01342f4797894b21903a2d4e24
Author: Adam Guerin <adam.guerin@intel.com>
Date:   Fri Feb 16 15:19:58 2024 +0000

    crypto: qat - remove double initialization of value
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a66cf93ab33853f17b8cc33a99263dd0a383a1a1 ]
    
    Remove double initialization of the reg variable.
    
    This is to fix the following warning when compiling the QAT driver
    using clang scan-build:
        drivers/crypto/intel/qat/qat_common/adf_gen4_ras.c:1010:6: warning: Value stored to 'reg' during its initialization is never read [deadcode.DeadStores]
         1010 |         u32 reg = ADF_CSR_RD(csr, ADF_GEN4_SSMCPPERR);
              |             ^~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        drivers/crypto/intel/qat/qat_common/adf_gen4_ras.c:1109:6: warning: Value stored to 'reg' during its initialization is never read [deadcode.DeadStores]
         1109 |         u32 reg = ADF_CSR_RD(csr, ADF_GEN4_SER_ERR_SSMSH);
              |             ^~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Fixes: 99b1c9826e48 ("crypto: qat - count QAT GEN4 errors")
    Signed-off-by: Adam Guerin <adam.guerin@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1243f982b6a48ddc05e441ae2ed648bd2add4162)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 40cf0ecf55571a8af7522467b3cff912a4c2496d
Author: Adam Guerin <adam.guerin@intel.com>
Date:   Fri Feb 16 15:19:57 2024 +0000

    crypto: qat - avoid division by zero
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f99fb7d660f7c818105803f1f1915396a14d18ad ]
    
    Check if delta_us is not zero and return -EINVAL if it is.
    delta_us is unlikely to be zero as there is a sleep between the reads of
    the two timestamps.
    
    This is to fix the following warning when compiling the QAT driver
    using clang scan-build:
        drivers/crypto/intel/qat/qat_common/adf_clock.c:87:9: warning: Division by zero [core.DivideZero]
           87 |         temp = DIV_ROUND_CLOSEST_ULL(temp, delta_us);
              |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Fixes: e2980ba57e79 ("crypto: qat - add measure clock frequency")
    Signed-off-by: Adam Guerin <adam.guerin@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit defeb70636bf812f2a7a1bdef21126952ead7b5a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d3e538eb63e736f8d16a19740423366f6e81f6ac
Author: Adam Guerin <adam.guerin@intel.com>
Date:   Fri Feb 16 15:19:56 2024 +0000

    crypto: qat - removed unused macro in adf_cnv_dbgfs.c
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9a5dcada14d5e027856a1bc38443e54111438da6 ]
    
    This macro was added but never used, remove it.
    
    This is to fix the following warning when compiling the QAT driver
    using the clang compiler with CC=clang W=2:
        drivers/crypto/intel/qat/qat_common/adf_cnv_dbgfs.c:19:9: warning: macro is not used [-Wunused-macros]
           19 | #define CNV_SLICE_ERR_MASK              GENMASK(7, 0)
              |         ^
    
    Fixes: d807f0240c71 ("crypto: qat - add cnv_errors debugfs file")
    Signed-off-by: Adam Guerin <adam.guerin@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a4e9212c9f2cc31c698a2eaa1d622b4bd38d9ce2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9f14fe4bbd1c3fb1cfe72450f8c35519eff5e827
Author: Adam Guerin <adam.guerin@intel.com>
Date:   Fri Feb 16 15:19:55 2024 +0000

    crypto: qat - remove unused macros in qat_comp_alg.c
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dfff0e35fa5dd84ae75052ba129b0219d83e46dc ]
    
    As a result of the removal of qat_zlib_deflate, some defines where not
    removed. Remove them.
    
    This is to fix the following warning when compiling the QAT driver
    using the clang compiler with CC=clang W=2:
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:21:9: warning: macro is not used [-Wunused-macros]
           21 | #define QAT_RFC_1950_CM_OFFSET 4
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:16:9: warning: macro is not used [-Wunused-macros]
           16 | #define QAT_RFC_1950_HDR_SIZE 2
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:17:9: warning: macro is not used [-Wunused-macros]
           17 | #define QAT_RFC_1950_FOOTER_SIZE 4
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:22:9: warning: macro is not used [-Wunused-macros]
           22 | #define QAT_RFC_1950_DICT_MASK 0x20
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:18:9: warning: macro is not used [-Wunused-macros]
           18 | #define QAT_RFC_1950_CM_DEFLATE 8
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:20:9: warning: macro is not used [-Wunused-macros]
           20 | #define QAT_RFC_1950_CM_MASK 0x0f
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:23:9: warning: macro is not used [-Wunused-macros]
           23 | #define QAT_RFC_1950_COMP_HDR 0x785e
              |         ^
        drivers/crypto/intel/qat/qat_common/qat_comp_algs.c:19:9: warning: macro is not used [-Wunused-macros]
           19 | #define QAT_RFC_1950_CM_DEFLATE_CINFO_32K 7
              |         ^
    
    Fixes: e9dd20e0e5f6 ("crypto: qat - Remove zlib-deflate")
    Signed-off-by: Adam Guerin <adam.guerin@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b4bf8295892924fca60d0704ac7cbc3b5897d233)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2d746f37e6e65e71c24e8a7f3838690acde19017
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Tue Feb 13 11:34:28 2024 -0600

    crypto: ccp - Avoid discarding errors in psp_send_platform_access_msg()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0e8fca2f12ceb77c3a6b6f210135031f264aa612 ]
    
    Errors can potentially occur in the "processing" of PSP commands or
    commands can be processed successfully but still return an error code in
    the header.
    
    This second case was being discarded because PSP communication worked but
    the command returned an error code in the payload header.
    
    Capture both cases and return them to the caller as -EIO for the caller
    to investigate. The caller can detect the latter by looking at
    `req->header->status`.
    
    Reported-and-tested-by: Tim Van Patten <timvp@google.com>
    Fixes: 7ccc4f4e2e50 ("crypto: ccp - Add support for an interface for platform features")
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit aa89cf8f084919da367d677ed6bfc052128f48b4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4e15cc08f9aad1a1758139e03caac8f382e0c4ae
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 13 14:49:46 2024 +0100

    crypto: arm/sha - fix function cast warnings
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 53cc9baeb9bc2a187eb9c9790d30995148852b12 ]
    
    clang-16 warns about casting between incompatible function types:
    
    arch/arm/crypto/sha256_glue.c:37:5: error: cast from 'void (*)(u32 *, const void *, unsigned int)' (aka 'void (*)(unsigned int *, const void *, unsigned int)') to 'sha256_block_fn *' (aka 'void (*)(struct sha256_state *, const unsigned char *, int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
       37 |                                 (sha256_block_fn *)sha256_block_data_order);
          |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    arch/arm/crypto/sha512-glue.c:34:3: error: cast from 'void (*)(u64 *, const u8 *, int)' (aka 'void (*)(unsigned long long *, const unsigned char *, int)') to 'sha512_block_fn *' (aka 'void (*)(struct sha512_state *, const unsigned char *, int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
       34 |                 (sha512_block_fn *)sha512_block_data_order);
          |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Fix the prototypes for the assembler functions to match the typedef.
    The code already relies on the digest being the first part of the
    state structure, so there is no change in behavior.
    
    Fixes: c80ae7ca3726 ("crypto: arm/sha512 - accelerated SHA-512 using ARM generic ASM and NEON")
    Fixes: b59e2ae3690c ("crypto: arm/sha256 - move SHA-224/256 ASM/NEON implementation to base layer")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7f8f8a83d387beade576f3310224019ad0aae51f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 25b358d499824c03d110488db9677230c1060284
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Fri Jan 26 14:56:05 2024 +0000

    perf print-events: make is_event_supported() more robust
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 25412c0364f7110faa6053c73e3fd47ca956b8c3 ]
    
    Currently the perf tool doesn't detect support for extended event types
    on Apple M1/M2 systems, and will not auto-expand plain PERF_EVENT_TYPE
    hardware events into per-PMU events. This is due to the detection of
    extended event types not handling mandatory filters required by the
    M1/M2 PMU driver.
    
    PMU drivers and the core perf_events code can require that
    perf_event_attr::exclude_* filters are configured in a specific way and
    may reject certain configurations of filters, for example:
    
    (a) Many PMUs lack support for any event filtering, and require all
        perf_event_attr::exclude_* bits to be clear. This includes Alpha's
        CPU PMU, and ARM CPU PMUs prior to the introduction of PMUv2 in
        ARMv7,
    
    (b) When /proc/sys/kernel/perf_event_paranoid >= 2, the perf core
        requires that perf_event_attr::exclude_kernel is set.
    
    (c) The Apple M1/M2 PMU requires that perf_event_attr::exclude_guest is
        set as the hardware PMU does not count while a guest is running (but
        might be extended in future to do so).
    
    In is_event_supported(), we try to account for cases (a) and (b), first
    attempting to open an event without any filters, and if this fails,
    retrying with perf_event_attr::exclude_kernel set. We do not account for
    case (c), or any other filters that drivers could theoretically require
    to be set.
    
    Thus is_event_supported() will fail to detect support for any events
    targeting an Apple M1/M2 PMU, even where events would be supported with
    perf_event_attr:::exclude_guest set.
    
    Since commit:
    
      82fe2e45cdb00de4 ("perf pmus: Check if we can encode the PMU number in perf_event_attr.type")
    
    ... we use is_event_supported() to detect support for extended types,
    with the PMU ID encoded into the perf_event_attr::type. As above, on an
    Apple M1/M2 system this will always fail to detect that the event is
    supported, and consequently we fail to detect support for extended types
    even when these are supported, as they have been since commit:
    
      5c816728651ae425 ("arm_pmu: Add PERF_PMU_CAP_EXTENDED_HW_TYPE capability")
    
    Due to this, the perf tool will not automatically expand plain
    PERF_TYPE_HARDWARE events into per-PMU events, even when all the
    necessary kernel support is present.
    
    This patch updates is_event_supported() to additionally try opening
    events with perf_event_attr::exclude_guest set, allowing support for
    events to be detected on Apple M1/M2 systems. I believe that this is
    sufficient for all contemporary CPU PMU drivers, though in future it may
    be necessary to check for other combinations of filter bits.
    
    I've deliberately changed the check to not expect a specific error code
    for missing filters, as today ;the kernel may return a number of
    different error codes for missing filters (e.g. -EACCESS, -EINVAL, or
    -EOPNOTSUPP) depending on why and where the filter configuration is
    rejected, and retrying for any error is more robust.
    
    Note that this does not remove the need for commit:
    
      a24d9d9dc096fc0d ("perf parse-events: Make legacy events lower priority than sysfs/JSON")
    
    ... which is still necessary so that named-pmu/event/ events work on
    kernels without extended type support, even if the event name happens to
    be the same as a PERF_EVENT_TYPE_HARDWARE event (e.g. as is the case for
    the M1/M2 PMU's 'cycles' and 'instructions' events).
    
    Fixes: 82fe2e45cdb00de4 ("perf pmus: Check if we can encode the PMU number in perf_event_attr.type")
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Ian Rogers <irogers@google.com>
    Tested-by: James Clark <james.clark@arm.com>
    Tested-by: Marc Zyngier <maz@kernel.org>
    Cc: Hector Martin <marcan@marcan.st>
    Cc: James Clark <james.clark@arm.com>
    Cc: John Garry <john.g.garry@oracle.com>
    Cc: Leo Yan <leo.yan@linux.dev>
    Cc: Mike Leach <mike.leach@linaro.org>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240126145605.1005472-1-mark.rutland@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8c7fe0a5db5bcb9dfa597ad2c758f4f45a037d54)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 00d0e7185157aad9834d6dd7f9ef58783dbf6fc3
Author: Peter Griffin <peter.griffin@linaro.org>
Date:   Tue Feb 20 11:50:12 2024 +0000

    mfd: altera-sysmgr: Call of_node_put() only when of_parse_phandle() takes a ref
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e28c28a34ee9fa2ea671a20e5e7064e6220d55e7 ]
    
    of_parse_phandle() returns a device_node with refcount incremented, which
    the callee needs to call of_node_put() on when done. We should only call
    of_node_put() when the property argument is provided though as otherwise
    nothing has taken a reference on the node.
    
    Fixes: f36e789a1f8d ("mfd: altera-sysmgr: Add SOCFPGA System Manager")
    Signed-off-by: Peter Griffin <peter.griffin@linaro.org>
    Link: https://lore.kernel.org/r/20240220115012.471689-4-peter.griffin@linaro.org
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a96f09abb3bf1b3c9fed65404ee36108a43f6a31)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 742cad29c7d8dee202983d79eeeb641ab0cd624d
Author: Peter Griffin <peter.griffin@linaro.org>
Date:   Tue Feb 20 11:50:10 2024 +0000

    mfd: syscon: Call of_node_put() only when of_parse_phandle() takes a ref
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d2b0680cf3b05490b579e71b0df6e07451977745 ]
    
    of_parse_phandle() returns a device_node with refcount incremented, which
    the callee needs to call of_node_put() on when done. We should only call
    of_node_put() when the property argument is provided though as otherwise
    nothing has taken a reference on the node.
    
    Fixes: 45330bb43421 ("mfd: syscon: Allow property as NULL in syscon_regmap_lookup_by_phandle")
    Signed-off-by: Peter Griffin <peter.griffin@linaro.org>
    Link: https://lore.kernel.org/r/20240220115012.471689-2-peter.griffin@linaro.org
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1a64727ff6e87c91ff9c6fbbc595cc93fb25fab6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9579d7f3bea26ee9d390fdc3ace51cba1313b102
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Wed Feb 21 08:15:50 2024 +0100

    media: i2c: imx290: Fix IMX920 typo
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6fc62efa266b0918c7b226f45c2eccfcf99a6d8e ]
    
    Replace IMX920 by IMX290.
    
    Fixes: b4ab57b07c5b9 ("media: i2c: imx290: Add crop selection targets support")
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 790dcafc7f374867e9e2a18718da3fb775e85fc1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c40f544cc87c6a128c9502946d4e92c6d859edb7
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed Feb 7 14:17:09 2024 +0200

    media: ivsc: csi: Swap SINK and SOURCE pads
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 48f5fd8967f8dd01679fc1618b0cba02095cddc5 ]
    
    This patch swaps SINK and SOURCE pads of the MEI CSI sub-device. While
    this does change the UAPI by swapping the pads, the driver has never been
    usable in upstream kernel as the Intel IPU6 driver it depends on any
    functionality has not yet been merged.
    
    Fixes: 29006e196a56 ("media: pci: intel: ivsc: Add CSI submodule")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c198e33bd8db970aaf7cc5c77f927e17a5120ae2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1b40d8c97cd43ed965748e2cd9d5d722f2ea503e
Author: Serge Semin <fancer.lancer@gmail.com>
Date:   Thu Feb 15 20:17:29 2024 +0300

    tty: mips_ejtag_fdc: Fix passing incompatible pointer type warning
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 188942f05ce45f80c06f7242ad7478bd204c3387 ]
    
    mips_ejtag_fdc_encode() method expects having a first argument passed of
    the "u8 **" type, meanwhile the driver passes the "const char **" type.
    That causes the next build-warning:
    
    drivers/tty/mips_ejtag_fdc.c: In function ‘mips_ejtag_fdc_console_write’:
    drivers/tty/mips_ejtag_fdc.c:343:32: error: passing argument 1 of ‘mips_ejtag_fdc_encode’ from incompatible pointer type [-Werror=incompatible-pointer-types]
       word = mips_ejtag_fdc_encode(&buf_ptr, &buf_len, 1);
                                    ^
    drivers/tty/mips_ejtag_fdc.c:216:24: note: expected ‘const u8 ** {aka const unsigned char **}’ but argument is of type ‘const char **’
     static struct fdc_word mips_ejtag_fdc_encode(const u8 **ptrs,
                            ^~~~~~~~~~~~~~~~~~~~~
    
    Fix it by altering the type of the pointer which is passed to the
    mips_ejtag_fdc_encode() method.
    
    Fixes: ce7cbd9a6c81 ("tty: mips_ejtag_fdc: use u8 for character pointers")
    Signed-off-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 495911afdc8ac49cfaeda9cc5bf246648a0b6139)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5a9f65bdd1b16e08f6018e272de2702faa207d86
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Fri Dec 15 12:33:55 2023 +0300

    drm/tegra: put drm_gem_object ref on error in tegra_fb_create
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 32e5a120a5105bce01561978ee55aee8e40ac0dc ]
    
    Inside tegra_fb_create(), drm_gem_object_lookup() increments ref count of
    the found object. But if the following size check fails then the last
    found object's ref count should be put there as the unreferencing loop
    can't detect this situation.
    
    Found by Linux Verification Center (linuxtesting.org).
    
    Fixes: de2ba664c30f ("gpu: host1x: drm: Add memory manager and fb")
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231215093356.12067-1-pchelkin@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0bd2c443c84ec007fd1cf4ad276e276de2f7b401)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0fc4d190011e27dbd927c811074feb1d8248ac6e
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sun Feb 18 03:11:15 2024 +0000

    clk: mediatek: mt7981-topckgen: flag SGM_REG_SEL as critical
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aa690050c00a251ab69e3c5204d582833d0b958c ]
    
    Without the SGM_REG_SEL clock enabled the cpu freezes if trying to
    access registers used by MT7981 clock drivers itself.
    Mark SGM_REG_SEL as critical to make sure it is always enabled to
    prevent freezes on boot even if the Ethernet driver which prepares
    and enables the clock is not loaded or probed at a later point.
    
    Fixes: 813c3b53b55b ("clk: mediatek: add MT7981 clock support")
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Link: https://lore.kernel.org/r/fc157139e6b7f8dfb6430ac7191ba754027705e8.1708221995.git.daniel@makrotopia.org
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 416d67e94ec7a996f6859283523f45e01e8e7a21)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e5d5dfb7b2b46eb9b2071c5d201a678178da5ed
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Mon Feb 19 18:51:24 2024 +0800

    clk: mediatek: mt8183: Correct parent of CLK_INFRA_SSPM_32K_SELF
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a65083fa663a335008e34f65e184041174a9dc7e ]
    
    CLK_INFRA_SSPM_32K_SELF has the "f_f26m_ck" clock assigned as its parent.
    This is inconsistent as the clock is part of a group that are all gates
    without dividers, and this makes the kernel think it runs at 26 MHz.
    
    After clarification from MediaTek engineers, the correct parent is
    actually the system 32 KHz clock.
    
    Fixes: 1eb8d61ac5c9 ("clk: mediatek: mt8183: Add back SSPM related clocks")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Link: https://lore.kernel.org/r/20240219105125.956278-1-wenst@chromium.org
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3c9b19c068b5214dbd7c2f003dc23add3d8f1613)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8435b78b4b288364b50f0fa69d72367d0fdb9ce0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 7 09:29:28 2024 +0100

    clk: mediatek: mt7622-apmixedsys: Fix an error handling path in clk_mt8135_apmixed_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a32e88f2b20259f5fe4f8eed598bbc85dc4879ed ]
    
    'clk_data' is allocated with mtk_devm_alloc_clk_data(). So calling
    mtk_free_clk_data() explicitly in the remove function would lead to a
    double-free.
    
    Remove the redundant call.
    
    Fixes: c50e2ea6507b ("clk: mediatek: mt7622-apmixedsys: Add .remove() callback for module build")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/2c553c2a5077757e4f7af0bb895acc43881cf62c.1704616152.git.christophe.jaillet@wanadoo.fr
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fa761ce7a1d15cca1a306b3635f81a22b15fee5b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7e5a78adfce62ee2d9af128fda1ea762de422bb2
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 7 09:12:17 2024 +0100

    clk: mediatek: mt8135: Fix an error handling path in clk_mt8135_apmixed_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 03c1c51eba6be49b42816af9db114553131af6c8 ]
    
    If an error occurs after mtk_alloc_clk_data(), mtk_free_clk_data() should
    be called, as already done in the remove function.
    
    Fixes: 54b7026f011e ("clk: mediatek: mt8135-apmixedsys: Convert to platform_driver and module")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/6cd6af61e5a91598068227f1f68cfcfde1507453.1704615011.git.christophe.jaillet@wanadoo.fr
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8fbf6f0431af2d8b7ddf47d00ab2579d370ea0c0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 73ddc5530237dc2015a7fa77caba1c90de37c59b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 21 16:16:24 2024 +0100

    clk: hisilicon: hi3559a: Fix an erroneous devm_kfree()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 64c6a38136b74a2f18c42199830975edd9fbc379 ]
    
    'p_clk' is an array allocated just before the for loop for all clk that
    need to be registered.
    It is incremented at each loop iteration.
    
    If a clk_register() call fails, 'p_clk' may point to something different
    from what should be freed.
    
    The best we can do, is to avoid this wrong release of memory.
    
    Fixes: 6c81966107dc ("clk: hisilicon: Add clock driver for hi3559A SoC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/773fc8425c3b8f5b0ca7c1d89f15b65831a85ca9.1705850155.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d575765b1b62e8bdb00af11caa1aabeb01763d9f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 57041975668220e852fa9d6ba894a49eadb0e138
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Jan 10 19:58:21 2024 +0100

    clk: hisilicon: hi3519: Release the correct number of gates in hi3519_clk_unregister()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 74e39f526d95c0c119ada1874871ee328c59fbee ]
    
    The gates are stored in 'hi3519_gate_clks', not 'hi3519_mux_clks'.
    This is also in line with how hisi_clk_register_gate() is called in the
    probe.
    
    Fixes: 224b3b262c52 ("clk: hisilicon: hi3519: add driver remove path and fix some issues")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/c3f1877c9a0886fa35c949c8f0ef25547f284f18.1704912510.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b3e3fb27525e2b94cfa494557bddab5d692b8813)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 476955372a57e2b1972828682bd75430d2557e01
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Feb 21 12:13:59 2024 +0100

    pinctrl: renesas: Allow the compiler to optimize away sh_pfc_pm
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a6f06b909fee72c679c565adfa7f080f9595e336 ]
    
    The conversion to DEFINE_NOIRQ_DEV_PM_OPS() lost the ability of the
    compiler to optimize away the struct dev_pm_ops object when it is not
    needed.
    
    Fix this by replacing the use of pm_sleep_ptr() by a custom wrapper.
    
    Fixes: 727eb02eb753375e ("pinctrl: renesas: Switch to use DEFINE_NOIRQ_DEV_PM_OPS() helper")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/6238a78e32fa21f0c795406b6cba7bce7af92577.1708513940.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a02e9bd417d2c2027004630e0b8d649813ea9ac1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 69fdfe20639003824b1b71f36bdc6f4a4e525ffa
Author: Mads Bligaard Nielsen <bli@bang-olufsen.dk>
Date:   Mon Feb 19 21:21:47 2024 +0100

    drm/bridge: adv7511: fix crash on irq during probe
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aeedaee5ef5468caf59e2bb1265c2116e0c9a924 ]
    
    Moved IRQ registration down to end of adv7511_probe().
    
    If an IRQ already is pending during adv7511_probe
    (before adv7511_cec_init) then cec_received_msg_ts
    could crash using uninitialized data:
    
        Unable to handle kernel read from unreadable memory at virtual address 00000000000003d5
        Internal error: Oops: 96000004 [#1] PREEMPT_RT SMP
        Call trace:
         cec_received_msg_ts+0x48/0x990 [cec]
         adv7511_cec_irq_process+0x1cc/0x308 [adv7511]
         adv7511_irq_process+0xd8/0x120 [adv7511]
         adv7511_irq_handler+0x1c/0x30 [adv7511]
         irq_thread_fn+0x30/0xa0
         irq_thread+0x14c/0x238
         kthread+0x190/0x1a8
    
    Fixes: 3b1b975003e4 ("drm: adv7511/33: add HDMI CEC support")
    Signed-off-by: Mads Bligaard Nielsen <bli@bang-olufsen.dk>
    Signed-off-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Reviewed-by: Robert Foss <rfoss@kernel.org>
    Signed-off-by: Robert Foss <rfoss@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240219-adv7511-cec-irq-crash-fix-v2-1-245e53c4b96f@bang-olufsen.dk
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 28a94271bd50e4cf498df0381f776f8ea40a289e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c67977d49ee62eb8e3ecea627c47f0b676a60de2
Author: Jörg Wedekind <joerg@wedekind.de>
Date:   Mon Feb 19 14:28:11 2024 +0100

    PCI: Mark 3ware-9650SE Root Port Extended Tags as broken
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit baf67aefbe7d7deafa59ca49612d163f8889934c ]
    
    Per PCIe r6.1, sec 2.2.6.2 and 7.5.3.4, a Requester may not use 8-bit Tags
    unless its Extended Tag Field Enable is set, but all Receivers/Completers
    must handle 8-bit Tags correctly regardless of their Extended Tag Field
    Enable.
    
    Some devices do not handle 8-bit Tags as Completers, so add a quirk for
    them.  If we find such a device, we disable Extended Tags for the entire
    hierarchy to make peer-to-peer DMA possible.
    
    The 3ware 9650SE seems to have issues with handling 8-bit tags. Mark it as
    broken.
    
    This fixes PCI Parity Errors like :
    
      3w-9xxx: scsi0: ERROR: (0x06:0x000C): PCI Parity Error: clearing.
      3w-9xxx: scsi0: ERROR: (0x06:0x000D): PCI Abort: clearing.
      3w-9xxx: scsi0: ERROR: (0x06:0x000E): Controller Queue Error: clearing.
      3w-9xxx: scsi0: ERROR: (0x06:0x0010): Microcontroller Error: clearing.
    
    Link: https://lore.kernel.org/r/20240219132811.8351-1-joerg@wedekind.de
    Fixes: 60db3a4d8cc9 ("PCI: Enable PCIe Extended Tags if supported")
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=202425
    Signed-off-by: Jörg Wedekind <joerg@wedekind.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 58a273392ecfc1cf3f7c03d76e42e406e59887d4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eb875c3074a4b8eb9aa65f79d94b2c50d8a68c5f
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Feb 15 09:53:09 2024 +0100

    drm/mediatek: dsi: Fix DSI RGB666 formats and definitions
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fae6f815505301b92d9113764f4d76d0bfe45607 ]
    
    The register bits definitions for RGB666 formats are wrong in multiple
    ways: first, in the DSI_PS_SEL bits region, the Packed 18-bits RGB666
    format is selected with bit 1, while the Loosely Packed one is bit 2,
    and second - the definition name "LOOSELY_PS_18BIT_RGB666" is wrong
    because the loosely packed format is 24 bits instead!
    
    Either way, functions mtk_dsi_ps_control_vact() and mtk_dsi_ps_control()
    do not even agree on the DSI_PS_SEL bit to set in DSI_PSCTRL: one sets
    loosely packed (24) on RGB666, the other sets packed (18), and the other
    way around for RGB666_PACKED.
    
    Fixing this entire stack of issues is done in one go:
     - Use the correct bit for the Loosely Packed RGB666 definition
     - Rename LOOSELY_PS_18BIT_RGB666 to LOOSELY_PS_24BIT_RGB666
     - Change ps_bpp_mode in mtk_dsi_ps_control_vact() to set:
        - Loosely Packed, 24-bits for MIPI_DSI_FMT_RGB666
        - Packed, 18-bits for MIPI_DSI_FMT_RGB666_PACKED
    
    Fixes: 2e54c14e310f ("drm/mediatek: Add DSI sub driver")
    Reviewed-by: Alexandre Mergnat <amergnat@baylibre.com>
    Reviewed-by: CK Hu <ck.hu@mediatek.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://patchwork.kernel.org/project/dri-devel/patch/20240215085316.56835-3-angelogioacchino.delregno@collabora.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b30e40b235d0d1c21eb143ef3208ef5cee4a3d52)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c1d5cb0ab363106dad046310c1784900f34e66a2
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Dec 3 03:05:29 2023 +0300

    drm/msm/dpu: finalise global state object
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 49e27d3c9cd67fd5851f8b5518645b9bf3d2c6c0 ]
    
    Add calls to finalise global state object and corresponding lock.
    
    Fixes: de3916c70a24 ("drm/msm/dpu: Track resources in global state")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/570175/
    Link: https://lore.kernel.org/r/20231203000532.1290480-3-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4275a4e53e0e3809342fd413fe5f3a0264adf2fc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit de523bc5323d075df6781e20c570be509f7452a6
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri Feb 16 12:31:12 2024 -0800

    drm/panel: boe-tv101wum-nl6: make use of prepare_prev_first
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 42a7a16bedc991190310a02dd202e29cfac52525 ]
    
    The panel on sc7180-trogdor-wormdingler and
    sc7180-trogdor-quackingstick hasn't been coming up since commit
    9e15123eca79 ("drm/msm/dsi: Stop unconditionally powering up DSI hosts
    at modeset"). Let's add "prepare_prev_first" as has been done for many
    other DSI panels.
    
    Fixes: 9e15123eca79 ("drm/msm/dsi: Stop unconditionally powering up DSI hosts at modeset")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Jessica Zhang <quic_jesszhan@quicinc.com>
    Link: https://lore.kernel.org/r/20240216123111.1.I71c103720909790e1ec5a3f5bd96b18ab7b596fa@changeid
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240216123111.1.I71c103720909790e1ec5a3f5bd96b18ab7b596fa@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 724b1d0a0dece2ad622ee4ad70eed8bba2b28dba)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e21b94c62b16b3be68a755704b1c1de4ff04713f
Author: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
Date:   Thu Feb 15 18:38:16 2024 +0530

    drm/amd/display: Add 'replay' NULL check in 'edp_set_replay_allow_active()'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f6aed043ee5d75b3d1bfc452b1a9584b63c8f76b ]
    
    In the first if statement, we're checking if 'replay' is NULL. But in
    the second if statement, we're not checking if 'replay' is NULL again
    before calling replay->funcs->replay_set_power_opt().
    
    if (replay == NULL && force_static)
        return false;
    
    ...
    
    if (link->replay_settings.replay_feature_enabled &&
        replay->funcs->replay_set_power_opt) {
            replay->funcs->replay_set_power_opt(replay, *power_opts, panel_inst);
            link->replay_settings.replay_power_opt_active = *power_opts;
    }
    
    If 'replay' is NULL, this will cause a null pointer dereference.
    
    Fixes the below found by smatch:
    drivers/gpu/drm/amd/amdgpu/../display/dc/link/protocols/link_edp_panel_control.c:895 edp_set_replay_allow_active() error: we previously assumed 'replay' could be null (see line 887)
    
    Fixes: c7ddc0a800bc ("drm/amd/display: Add Functions to enable Freesync Panel Replay")
    Cc: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
    Cc: Roman Li <roman.li@amd.com>
    Cc: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Cc: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Cc: Tom Chung <chiahsuan.chung@amd.com>
    Suggested-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
    Reviewed-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d0e94f4807ff0df66cf447d6b4bbb8ac830e99c3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 51a151c0e4912888da9d3532506e1ad834ff7227
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Wed Jan 3 21:20:18 2024 +0100

    clk: qcom: dispcc-sdm845: Adjust internal GDSC wait times
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 117e7dc697c2739d754db8fe0c1e2d4f1f5d5f82 ]
    
    SDM845 downstream uses non-default values for GDSC internal waits.
    Program them accordingly to avoid surprises.
    
    Fixes: 81351776c9fb ("clk: qcom: Add display clock controller driver for SDM845")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Tested-by: Caleb Connolly <caleb.connolly@linaro.org> # OnePlus 6
    Link: https://lore.kernel.org/r/20240103-topic-845gdsc-v1-1-368efbe1a61d@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5309b67c2ce9d5c99ad2f9ea3dd997874224e599)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d6688a9cdc132f9068796912ae4312321779a496
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 13 11:04:27 2024 +0100

    media: pvrusb2: fix pvr2_stream_callback casts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 30baa4a96b23add91a87305baaeba82c4e109e1f ]
    
    clang-16 complains about a control flow integrity (KCFI) issue in pvrusb2,
    which casts three different prototypes into pvr2_stream_callback:
    
    drivers/media/usb/pvrusb2/pvrusb2-v4l2.c:1070:30: error: cast from 'void (*)(struct pvr2_v4l2_fh *)' to 'pvr2_stream_callback' (aka 'void (*)(void *)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
     1070 |         pvr2_stream_set_callback(sp,(pvr2_stream_callback)pvr2_v4l2_notify,fh);
          |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/media/usb/pvrusb2/pvrusb2-context.c:110:6: error: cast from 'void (*)(struct pvr2_context *)' to 'void (*)(void *)' converts to incompatible function type [-Werror,-Wcast-function-type-strict]
      110 |                                         (void (*)(void *))pvr2_context_notify,
          |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/media/usb/pvrusb2/pvrusb2-dvb.c:152:6: error: cast from 'void (*)(struct pvr2_dvb_adapter *)' to 'pvr2_stream_callback' (aka 'void (*)(void *)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
      152 |                                  (pvr2_stream_callback) pvr2_dvb_notify, adap);
          |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Change the functions to actually take a void* argument so the cast is no longer
    needed.
    
    Fixes: bb8ce9d9143c ("V4L/DVB (7682): pvrusb2-dvb: finish up stream & buffer handling")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 103da4f1a1ec5ea05a691c4800bf84392f2dbfd3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e84f6e0ca21c7c28499b2e96cd15193ec7c9b5cf
Author: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
Date:   Mon Feb 12 20:12:03 2024 +0100

    media: videobuf2: Add missing doc comment for waiting_in_dqbuf
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 26a3a10342748862dcc8d22222563f6ca03d6ca3 ]
    
    While at it rearrange other comments to match the order of struct members.
    
    Fixes: d65842f7126a ("media: vb2: add waiting_in_dqbuf flag")
    
    Signed-off-by: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Acked-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5dcc0df49382506b0ba2aa5842a399a289fa4721)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab52235229e45096963dcb4f1db5c77cd992d0ee
Author: Daniil Dulov <d.dulov@aladdin.ru>
Date:   Sun Feb 11 07:07:25 2024 -0800

    media: pvrusb2: remove redundant NULL check
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 95ac1210fb2753f968ebce0730d4fbc553c2a3dc ]
    
    Pointer dip->stream cannot be NULL due to a shift, thus remove redundant
    NULL check.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: c74e0062684b ("V4L/DVB (5059): Pvrusb2: Be smarter about mode restoration")
    Signed-off-by: Daniil Dulov <d.dulov@aladdin.ru>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7d061b3308ab62bcebbadceab6999eee76491820)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d737503ace7545661782622fceef90841443dd00
Author: Daniil Dulov <d.dulov@aladdin.ru>
Date:   Sun Feb 11 07:07:05 2024 -0800

    media: go7007: add check of return value of go7007_read_addr()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0b70530ee740861f4776ff724fcc25023df1799a ]
    
    If go7007_read_addr() returns error channel is not assigned a value.
    In this case go to allocfail.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 866b8695d67e ("Staging: add the go7007 video driver")
    Signed-off-by: Daniil Dulov <d.dulov@aladdin.ru>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6d281ce5fa647d837109c0e868149e18a278d858)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5cb4662f63458be7cd48373ef00f7e7784ef6a4f
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed Jan 31 13:00:33 2024 +0100

    media: imx: csc/scaler: fix v4l2_ctrl_handler memory leak
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4797a3dd46f220e6d83daf54d70c5b33db6deb01 ]
    
    Free the memory allocated in v4l2_ctrl_handler_init on release.
    
    Fixes: a8ef0488cc59 ("media: imx: add csc/scaler mem2mem device")
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6c92224721a439d6350db5933a1060768dcd565e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3980b563f3762d9d4147236fe146de70cee76eb8
Author: Changhuang Liang <changhuang.liang@starfivetech.com>
Date:   Wed Jan 31 01:24:32 2024 -0800

    staging: media: starfive: Set 16 bpp for capture_raw device
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a38cd27c9ee8c25308b71ea16393d0c231e9bde4 ]
    
    For StarFive JH7110 Camera Subsystem, capture_raw video device output
    raw10 pixelformat requires 16bit of alignment.
    
    Fixes: e080f339c80a ("media: staging: media: starfive: camss: Add capture driver")
    Signed-off-by: Changhuang Liang <changhuang.liang@starfivetech.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ad91318190c2a2082aef1887eeecb0699fde8b88)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 81a9d90b71b9abfd17e5c433216c0713b889422a
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Sat Dec 16 14:34:22 2023 +0100

    media: sun8i-di: Fix chroma difference threshold
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 856525e8db272b0ce6d9c6e6c2eeb97892b485a6 ]
    
    While there is no good explanation what this value does, vendor driver
    uses value 31 for it. Align driver with it.
    
    Fixes: a4260ea49547 ("media: sun4i: Add H3 deinterlace driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d25286ed8051d3e609275e526f972252fea69df7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8678158904569609f0c6b5e613f2b7ef7bf304b4
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Sat Dec 16 14:34:21 2023 +0100

    media: sun8i-di: Fix power on/off sequences
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cff104e33bad38f4b2c8d58816a7accfaa2879f9 ]
    
    According to user manual, reset line should be deasserted before clocks
    are enabled. Also fix power down sequence to be reverse of that.
    
    Fixes: a4260ea49547 ("media: sun4i: Add H3 deinterlace driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9c5a97408c7609fdbc0d422f044c36a08f37c031)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fc4bc5470142702bde0a91d00ff5ba43598d4d42
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Sat Dec 16 14:34:20 2023 +0100

    media: sun8i-di: Fix coefficient writes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 794b581f8c6eb7b60fe468ccb96dd3cd38ff779f ]
    
    Currently coefficients are applied only once, since they don't change.
    However, this is done before enable bit is set and thus it doesn't get
    applied properly.
    
    Fix that by applying coefficients after enable bit is set. While this
    means that it will be done evey time, it doesn't bring much time
    penalty.
    
    Fixes: a4260ea49547 ("media: sun4i: Add H3 deinterlace driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 244bface036cd97272ab3e83c365ad32d8c96069)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 85b4ea18de1bdeb0aa39d1853de5dad3e113edae
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Sat Dec 16 14:09:25 2023 +0100

    media: cedrus: h265: Fix configuring bitstream size
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3a11887f7f11a6bb1f05e7f67b3ea20dadfec443 ]
    
    bit_size field holds size of slice, not slice + header. Because of HW
    quirks, driver can't program in just slice, but also preceding header.
    But that means that currently used bit_size is wrong (too small).
    Instead, just use size of whole buffer. There is no harm in doing this.
    
    Fixes: 86caab29da78 ("media: cedrus: Add HEVC/H.265 decoding support")
    Suggested-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cd7c3fef2f3a51d13730fd4ad2fae72e98b43e86)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 72e87a9135fb65a31b00b9a6ecf071c0e7ae13f2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Dec 1 11:30:56 2023 +0800

    NTB: fix possible name leak in ntb_register_device()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aebfdfe39b9327a3077d0df8db3beb3160c9bdd0 ]
    
    If device_register() fails in ntb_register_device(), the device name
    allocated by dev_set_name() should be freed. As per the comment in
    device_register(), callers should use put_device() to give up the
    reference in the error path. So fix this by calling put_device() in the
    error path so that the name can be freed in kobject_cleanup().
    
    As a result of this, put_device() in the error path of
    ntb_register_device() is removed and the actual error is returned.
    
    Fixes: a1bd3baeb2f1 ("NTB: Add NTB hardware abstraction layer")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20231201033057.1399131-1-yangyingliang@huaweicloud.com
    [mani: reworded commit message]
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 913421f9f7fd8324dcc41753d0f28b52e177ef04)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3ebcdbabcf31ecb9fac2cfb15dbcf511033272c4
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Feb 14 10:37:08 2024 +0200

    drm: ci: use clk_ignore_unused for apq8016
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aa1267e673fe5307cf00d02add4017d2878598b6 ]
    
    If the ADV7511 bridge driver is compiled as a module, while DRM_MSM is
    built-in, the clk_disable_unused congests with the runtime PM handling
    of the DSI PHY for the clk_prepare_lock(). This causes apq8016 runner to
    fail without completing any jobs ([1]). Drop the BM_CMDLINE which
    duplicate the command line from the .baremetal-igt-arm64 clause and
    enforce the clk_ignore_unused kernelarg instead to make apq8016 runner
    work.
    
    [1] https://gitlab.freedesktop.org/drm/msm/-/jobs/54990475
    
    Fixes: 0119c894ab0d ("drm: Add initial ci/ subdirectory")
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Helen Koike <helen.koike@collabora.com>
    Signed-off-by: Helen Koike <helen.koike@collabora.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240214083708.2323967-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 31d441f65c102e11c4a6b93633068d421507037e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit afa63dd7fc7ae89b6fc992834a1232f7dd20fdbd
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Fri Feb 9 16:02:16 2024 +0300

    ASoC: SOF: Add some bounds checking to firmware data
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 98f681b0f84cfc3a1d83287b77697679e0398306 ]
    
    Smatch complains about "head->full_size - head->header_size" can
    underflow.  To some extent, we're always going to have to trust the
    firmware a bit.  However, it's easy enough to add a check for negatives,
    and let's add a upper bounds check as well.
    
    Fixes: d2458baa799f ("ASoC: SOF: ipc3-loader: Implement firmware parsing and loading")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://msgid.link/r/5593d147-058c-4de3-a6f5-540ecb96f6f8@moroto.mountain
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9eeb8e1231f6450c574c1db979122e171a1813ab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6cbf5a4dfb84da0a5811aa233830604066225168
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Tue Feb 13 14:58:37 2024 +0100

    powerpc: Force inlining of arch_vmap_p{u/m}d_supported()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c5aebb53b32460bc52680dd4e2a2f6b84d5ea521 ]
    
    arch_vmap_pud_supported() and arch_vmap_pmd_supported() are
    expected to constant-fold to false when RADIX is not enabled.
    
    Force inlining in order to avoid following failure which
    leads to unexpected call of non-existing pud_set_huge() and
    pmd_set_huge() on powerpc 8xx.
    
    In function 'pud_huge_tests',
        inlined from 'debug_vm_pgtable' at mm/debug_vm_pgtable.c:1399:2:
    ./arch/powerpc/include/asm/vmalloc.h:9:33: warning: inlining failed in call to 'arch_vmap_pud_supported.isra': call is unlikely and code size would grow [-Winline]
        9 | #define arch_vmap_pud_supported arch_vmap_pud_supported
          |                                 ^~~~~~~~~~~~~~~~~~~~~~~
    ./arch/powerpc/include/asm/vmalloc.h:10:20: note: in expansion of macro 'arch_vmap_pud_supported'
       10 | static inline bool arch_vmap_pud_supported(pgprot_t prot)
          |                    ^~~~~~~~~~~~~~~~~~~~~~~
    ./arch/powerpc/include/asm/vmalloc.h:9:33: note: called from here
        9 | #define arch_vmap_pud_supported arch_vmap_pud_supported
    mm/debug_vm_pgtable.c:458:14: note: in expansion of macro 'arch_vmap_pud_supported'
      458 |         if (!arch_vmap_pud_supported(args->page_prot) ||
          |              ^~~~~~~~~~~~~~~~~~~~~~~
    
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202402131836.OU1TDuoi-lkp@intel.com/
    Fixes: 8309c9d71702 ("powerpc: inline huge vmap supported functions")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/bbd84ad52bf377e8d3b5865a906f2dc5d99964ba.1707832677.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit db1ce27e11b44342d78f9a971da3d7f28f4d9c60)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b282bc36750cde67a8632dc48a15f3208bb80588
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Feb 13 22:58:04 2024 +0100

    ASoC: meson: t9015: fix function pointer type mismatch
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5ad992c71b6a8e8a547954addc7af9fbde6ca10a ]
    
    clang-16 warns about casting functions to incompatible types, as is done
    here to call clk_disable_unprepare:
    
    sound/soc/meson/t9015.c:274:4: error: cast from 'void (*)(struct clk *)' to 'void (*)(void *)' converts to incompatible function type [-Werror,-Wcast-function-type-strict]
      274 |                         (void(*)(void *))clk_disable_unprepare,
    
    The pattern of getting, enabling and setting a disable callback for a
    clock can be replaced with devm_clk_get_enabled(), which also fixes
    this warning.
    
    Fixes: 33901f5b9b16 ("ASoC: meson: add t9015 internal DAC driver")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Link: https://msgid.link/r/20240213215807.3326688-3-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a1acd5a6c4d6036bdc142b761c977b1d6a9c18e3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f5fef6f3d0d39b9b81cf7d1c51504127214d61d4
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Feb 13 22:58:03 2024 +0100

    ASoC: meson: aiu: fix function pointer type mismatch
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 98ac85a00f31d2e9d5452b825a9ed0153d934043 ]
    
    clang-16 warns about casting functions to incompatible types, as is done
    here to call clk_disable_unprepare:
    
    sound/soc/meson/aiu.c:243:12: error: cast from 'void (*)(struct clk *)' to 'void (*)(void *)' converts to incompatible function type [-Werror,-Wcast-function-type-strict]
      243 |                                        (void(*)(void *))clk_disable_unprepare,
    
    The pattern of getting, enabling and setting a disable callback for a
    clock can be replaced with devm_clk_get_enabled(), which also fixes
    this warning.
    
    Fixes: 6ae9ca9ce986 ("ASoC: meson: aiu: add i2s and spdif support")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Link: https://msgid.link/r/20240213215807.3326688-2-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c38f64a071389d99ef980c9d07befa4277df8136)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 603687ecbdc96fd0214a02af10023cac89df28f0
Author: Ian Rogers <irogers@google.com>
Date:   Fri Feb 9 12:49:47 2024 -0800

    perf metric: Don't remove scale from counts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6d6be5eb45b423a37d746d3ee0fd0c78f76ead9f ]
    
    Counts were switched from the scaled saved value form to the
    aggregated count to avoid double accounting. When this happened the
    removing of scaling for a count should have been removed, however, it
    wasn't and this wasn't observed as it normally doesn't matter because
    a counter's scale is 1. A problem was observed with RAPL events that
    are scaled.
    
    Fixes: 37cc8ad77cf8 ("perf metric: Directly use counts rather than saved_value")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Cc: K Prateek Nayak <kprateek.nayak@amd.com>
    Cc: James Clark <james.clark@arm.com>
    Cc: Kaige Ye <ye@kaige.org>
    Cc: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240209204947.3873294-5-irogers@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 75cd29db31e36707f57a31fc23b236233dcd50f2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 29747244764bdc315556378a28cfdd3fafbfe202
Author: Ian Rogers <irogers@google.com>
Date:   Fri Feb 9 12:49:46 2024 -0800

    perf stat: Avoid metric-only segv
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2543947c77e0e224bda86b4e7220c2f6714da463 ]
    
    Cycles is recognized as part of a hard coded metric in stat-shadow.c,
    it may call print_metric_only with a NULL fmt string leading to a
    segfault. Handle the NULL fmt explicitly.
    
    Fixes: 088519f318be ("perf stat: Move the display functions to stat-display.c")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Cc: K Prateek Nayak <kprateek.nayak@amd.com>
    Cc: James Clark <james.clark@arm.com>
    Cc: Kaige Ye <ye@kaige.org>
    Cc: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240209204947.3873294-4-irogers@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2e01d247a945ce8364241af3c38b61d7d44fce6b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 916d832f226b3bedea63b972af4f8ac83197b66e
Author: Ian Rogers <irogers@google.com>
Date:   Fri Feb 9 12:49:45 2024 -0800

    perf expr: Fix "has_event" function for metric style events
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6dd76680b925228312756c13b9b983661b552a64 ]
    
    Events in metrics cannot use '/' as a separator, it would be
    recognized as a divide, so they use '@'. The '@' is recognized in the
    metricgroups code and changed to '/', do the same in the has_event
    function so that the parsing is only tried without the @s.
    
    Fixes: 4a4a9bf9075f ("perf expr: Add has_event function")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Cc: K Prateek Nayak <kprateek.nayak@amd.com>
    Cc: James Clark <james.clark@arm.com>
    Cc: Kaige Ye <ye@kaige.org>
    Cc: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240209204947.3873294-3-irogers@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f7e001e47b54cb9038529eeb448e81a0e2bfd85c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 54f699be604093a312e446c4aff0a2cfe9897ded
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 13 14:53:43 2024 +0100

    ALSA: seq: fix function cast warnings
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d7bf73809849463f76de42aad62c850305dd6c5d ]
    
    clang-16 points out a control flow integrity (kcfi) issue when event
    callbacks get converted to incompatible types:
    
    sound/core/seq/seq_midi.c:135:30: error: cast from 'int (*)(struct snd_rawmidi_substream *, const char *, int)' to 'snd_seq_dump_func_t' (aka 'int (*)(void *, void *, int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
      135 |                 snd_seq_dump_var_event(ev, (snd_seq_dump_func_t)dump_midi, substream);
          |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    sound/core/seq/seq_virmidi.c:83:31: error: cast from 'int (*)(struct snd_rawmidi_substream *, const unsigned char *, int)' to 'snd_seq_dump_func_t' (aka 'int (*)(void *, void *, int)') converts to incompatible function type [-Werror,-Wcast-function-type-strict]
       83 |                         snd_seq_dump_var_event(ev, (snd_seq_dump_func_t)snd_rawmidi_receive, vmidi->substream);
          |                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    For addressing those errors, introduce wrapper functions that are used
    for callbacks and bridge to the actual function call with pointer
    cast.
    
    The code was originally added with the initial ALSA merge in linux-2.5.4.
    
    [ the patch description shamelessly copied from Arnd's original patch
      -- tiwai ]
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20240213101020.459183-1-arnd@kernel.org
    Link: https://lore.kernel.org/r/20240213135343.16411-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0abbd9b5e9578279e62618119518e940b5085b03)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a7df1f1c6f339c1be5b5bbd23d01e863cfc83958
Author: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
Date:   Wed Jan 31 12:29:29 2024 +0200

    clk: renesas: r9a07g04[34]: Use SEL_SDHI1_STS status configuration for SD1 mux
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9b2a11c83859c06233049b134bd8ee974b284559 ]
    
    The status configuration for SD1 mux clock is SEL_SDHI1_STS. Fix it.
    
    Fixes: 16b86e5c03c5 ("clk: renesas: rzg2l: Refactor SD mux driver")
    Reported-by: Hien Huynh <hien.huynh.px@renesas.com>
    Signed-off-by: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20240131102930.1841901-2-claudiu.beznea.uj@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1cb9d3381607b763f055b4b15567fc5a10e3ef36)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 68dfaae139055382b8f156962b8c998b2e595123
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 25 16:45:13 2024 +0100

    clk: renesas: r8a779f0: Correct PFC/GPIO parent clock
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d1b32a83a02d9433dbd8c5f4d6fc44aa597755bd ]
    
    According to the R-Car S4 Series Hardware User’s Manual Rev.0.81, the
    parent clock of the Pin Function (PFC/GPIO) module clock is the CP
    clock.
    
    As this clock is not documented to exist on R-Car S4, use the CPEX clock
    instead.
    
    Fixes: 73421f2a48e6bd1d ("clk: renesas: r8a779f0: Add PFC clock")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/f88ec4aede0eaf0107c8bb7b28ba719ac6cd418f.1706197415.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4e0f065e2d7e3ff60b49d97250f888b89b1c7e14)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1e153890ec132b3d0cc84883a0d1349e84f6bb6f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 25 16:43:26 2024 +0100

    clk: renesas: r8a779g0: Correct PFC/GPIO parent clocks
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit abb3fa662b8f8eaed1590b0e7a4e19eda467cdd3 ]
    
    According to the R-Car V4H Series Hardware User’s Manual Rev.1.00, the
    parent clock of the Pin Function (PFC/GPIO) module clocks is the CP
    clock.
    
    Fix this by adding the missing CP clock, and correcting the PFC parents.
    
    Fixes: f2afa78d5a0c0b0b ("dt-bindings: clock: Add r8a779g0 CPG Core Clock Definitions")
    Fixes: 36ff366033f0dde1 ("clk: renesas: r8a779g0: Add PFC/GPIO clocks")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/5401fccd204dc90b44f0013e7f53b9eff8df8214.1706197297.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 96cc2f847262f6d34dab2318fc962e1d43a0dfed)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4cefd758ddfc13b83a0450b08b9c7b3fa4fe8a1a
Author: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
Date:   Tue Feb 6 08:50:56 2024 -0800

    drm/amd/display: fix NULL checks for adev->dm.dc in amdgpu_dm_fini()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2a3cfb9a24a28da9cc13d2c525a76548865e182c ]
    
    Since 'adev->dm.dc' in amdgpu_dm_fini() might turn out to be NULL
    before the call to dc_enable_dmub_notifications(), check
    beforehand to ensure there will not be a possible NULL-ptr-deref
    there.
    
    Also, since commit 1e88eb1b2c25 ("drm/amd/display: Drop
    CONFIG_DRM_AMD_DC_HDCP") there are two separate checks for NULL in
    'adev->dm.dc' before dc_deinit_callbacks() and dc_dmub_srv_destroy().
    Clean up by combining them all under one 'if'.
    
    Found by Linux Verification Center (linuxtesting.org) with static
    analysis tool SVACE.
    
    Fixes: 81927e2808be ("drm/amd/display: Support for DMUB AUX")
    Signed-off-by: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1c62697e4086de988b31124fb8c79c244ea05f2b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3bf50a89dd60baed26f5bd9d2a3c2da9a39df8a6
Author: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
Date:   Tue Feb 6 08:48:14 2024 -0800

    drm/radeon/ni: Fix wrong firmware size logging in ni_init_microcode()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c4891d979c7668b195a0a75787967ec95a24ecef ]
    
    Clean up a typo in pr_err() erroneously printing NI MC 'rdev->mc_fw->size'
    during SMC firmware load. Log 'rdev->smc_fw->size' instead.
    
    Found by Linux Verification Center (linuxtesting.org) with static
    analysis tool SVACE.
    
    Fixes: 6596afd48af4 ("drm/radeon/kms: add dpm support for btc (v3)")
    Signed-off-by: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 00d37cc9354ff79bafd7ca5a3f60631b22006f02)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 011f5193c5ba548c3fc15fc0e09e27b7b817653e
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Sun Feb 4 18:45:27 2024 +0100

    drm/msm/dpu: Only enable DSC_MODE_MULTIPLEX if dsc_merge is enabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 06267d22f9ee6fd34150b6dcdb2fa6983e1a85bc ]
    
    When the topology calls for two interfaces on the current fixed topology
    of 2 DSC blocks, or uses 1 DSC block for a single interface (e.g. SC7280
    with only one DSC block), there should be no merging of DSC output.
    
    This is already represented by the return value of
    dpu_encoder_use_dsc_merge(), but not yet used to correctly configure
    this flag.
    
    Fixes: 58dca9810749 ("drm/msm/disp/dpu1: Add support for DSC in encoder")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/577067/
    Link: https://lore.kernel.org/r/20240204-dpu-dsc-multiplex-v1-1-080963233c52@somainline.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a5d274f4a8d6681c35ee5c7c2a10319317ab7d34)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3efc710bddfee8f7828caa0e40f58fae8721ea46
Author: Abhinav Kumar <quic_abhinavk@quicinc.com>
Date:   Wed Jan 31 16:47:36 2024 -0800

    drm/msm/dpu: fix the programming of INTF_CFG2_DATA_HCTL_EN
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2f4a67a3894e15c135125cb54edc5b43abc1b70e ]
    
    Currently INTF_CFG2_DATA_HCTL_EN is coupled with the enablement
    of widebus but this is incorrect because we should be enabling
    this bit independent of widebus except for cases where compression
    is enabled in one pixel per clock mode.
    
    Fix this by making the condition checks more explicit and enabling
    INTF_CFG2_DATA_HCTL_EN for all other cases when supported by DPU.
    
    Fixes: 3309a7563971 ("drm/msm/dpu: revise timing engine programming to support widebus feature")
    Suggested-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/576722/
    Link: https://lore.kernel.org/r/20240201004737.2478-1-quic_abhinavk@quicinc.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8400ca1044db3dd56dce6d3a88a9d68809c3a63b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8e1eaada647c2f8ef86f2a71a66329ea2ccf8a64
Author: Adam Skladowski <a39.skl@gmail.com>
Date:   Sun Jan 21 20:41:01 2024 +0100

    dt-bindings: msm: qcom, mdss: Include ommited fam-b compatible
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3b63880de42bd3cb79c2a99949135a8f2441c088 ]
    
    During conversion 28nm-hpm-fam-b compat got lost, add it.
    
    Signed-off-by: Adam Skladowski <a39.skl@gmail.com>
    Fixes: f7d46c5efee2 ("dt-bindings: display/msm: split qcom, mdss bindings")
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/575290/
    Link: https://lore.kernel.org/r/20240121194221.13513-4-a39.skl@gmail.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8be5c50431b818876b28c9ff1cdbb49c6d617777)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6963888ce91d21fe69cf4a14fee594e0cba3c7db
Author: Ian Rogers <irogers@google.com>
Date:   Wed Jan 31 16:15:02 2024 -0800

    perf srcline: Add missed addr2line closes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c7ba9d18ae47924a6ea6a47ca139779f58eb83c0 ]
    
    The child_process for addr2line sets in and out to -1 so that pipes
    get created. It is the caller's responsibility to close the pipes,
    finish_command doesn't do it. Add the missed closes.
    
    Fixes: b3801e791231 ("perf srcline: Simplify addr2line subprocess")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Cc: Ravi Bangoria <ravi.bangoria@amd.com>
    Cc: James Clark <james.clark@arm.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: John Garry <john.g.garry@oracle.com>
    Cc: Tom Rix <trix@redhat.com>
    Cc: llvm@lists.linux.dev
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240201001504.1348511-8-irogers@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cca715666ad355b3e6011385e15bfae650170e59)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 30187985cb965e51422b4054d0d5f62376d6428e
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Tue Feb 6 08:32:28 2024 +0000

    perf thread_map: Free strlist on normal path in thread_map__new_by_tid_str()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1eb3d924e3c0b8c27388b0583a989d757866efb6 ]
    
    slist needs to be freed in both error path and normal path in
    thread_map__new_by_tid_str().
    
    Fixes: b52956c961be3a04 ("perf tools: Allow multiple threads or processes in record, stat, top")
    Reviewed-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240206083228.172607-6-yangjihong1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6a480b3ad283b1691d1940800864abd436c47355)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 79e942b5ca98b0b21a3db476fe45c6cf7b46ff6b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Feb 7 08:13:22 2024 -0800

    drivers/ps3: select VIDEO to provide cmdline functions
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7edd06233958d9086a9e3eb723a8768d3c5a9ce1 ]
    
    When VIDEO is not set, there is a build error. Fix that by selecting
    VIDEO for PS3_PS3AV.
    
    ERROR: modpost: ".video_get_options" [drivers/ps3/ps3av_mod.ko] undefined!
    
    Fixes: dae7fbf43fd0 ("driver/ps3: Include <video/cmdline.h> for mode parsing")
    Fixes: a3b6792e990d ("video/cmdline: Introduce CONFIG_VIDEO for video= parameter")
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: Aneesh Kumar K.V <aneesh.kumar@kernel.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: Geoff Levand <geoff@infradead.org>
    Acked-by: Geoff Levand <geoff@infradead.org>
    Cc: linux-fbdev@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Thomas Zimmermann <tzimmermann@suse.de>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240207161322.8073-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 082c23a1a3079d7d30de9cbff97d977f8bd0d537)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0d58284765e14456c7bdfe47ffbdc93a14e0d438
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Sun Jan 28 12:29:06 2024 +0800

    crypto: xilinx - call finalize with bh disabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a853450bf4c752e664abab0b2fad395b7ad7701c ]
    
    When calling crypto_finalize_request, BH should be disabled to avoid
    triggering the following calltrace:
    
        ------------[ cut here ]------------
        WARNING: CPU: 2 PID: 74 at crypto/crypto_engine.c:58 crypto_finalize_request+0xa0/0x118
        Modules linked in: cryptodev(O)
        CPU: 2 PID: 74 Comm: firmware:zynqmp Tainted: G           O       6.8.0-rc1-yocto-standard #323
        Hardware name: ZynqMP ZCU102 Rev1.0 (DT)
        pstate: 40000005 (nZcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
        pc : crypto_finalize_request+0xa0/0x118
        lr : crypto_finalize_request+0x104/0x118
        sp : ffffffc085353ce0
        x29: ffffffc085353ce0 x28: 0000000000000000 x27: ffffff8808ea8688
        x26: ffffffc081715038 x25: 0000000000000000 x24: ffffff880100db00
        x23: ffffff880100da80 x22: 0000000000000000 x21: 0000000000000000
        x20: ffffff8805b14000 x19: ffffff880100da80 x18: 0000000000010450
        x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000
        x14: 0000000000000003 x13: 0000000000000000 x12: ffffff880100dad0
        x11: 0000000000000000 x10: ffffffc0832dcd08 x9 : ffffffc0812416d8
        x8 : 00000000000001f4 x7 : ffffffc0830d2830 x6 : 0000000000000001
        x5 : ffffffc082091000 x4 : ffffffc082091658 x3 : 0000000000000000
        x2 : ffffffc7f9653000 x1 : 0000000000000000 x0 : ffffff8802d20000
        Call trace:
         crypto_finalize_request+0xa0/0x118
         crypto_finalize_aead_request+0x18/0x30
         zynqmp_handle_aes_req+0xcc/0x388
         crypto_pump_work+0x168/0x2d8
         kthread_worker_fn+0xfc/0x3a0
         kthread+0x118/0x138
         ret_from_fork+0x10/0x20
        irq event stamp: 40
        hardirqs last  enabled at (39): [<ffffffc0812416f8>] _raw_spin_unlock_irqrestore+0x70/0xb0
        hardirqs last disabled at (40): [<ffffffc08122d208>] el1_dbg+0x28/0x90
        softirqs last  enabled at (36): [<ffffffc080017dec>] kernel_neon_begin+0x8c/0xf0
        softirqs last disabled at (34): [<ffffffc080017dc0>] kernel_neon_begin+0x60/0xf0
        ---[ end trace 0000000000000000 ]---
    
    Fixes: 4d96f7d48131 ("crypto: xilinx - Add Xilinx AES driver")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dbf291d8ffffb70f48286176a15c6c54f0bb0743)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 482a95393c7dd292e17cf9b0c990122b6b982b57
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 24 15:30:01 2023 +0100

    PCI: switchtec: Fix an error handling path in switchtec_pci_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dec529b0b0572b32f9eb91c882dd1f08ca657efb ]
    
    The commit in Fixes changed the logic on how resources are released and
    introduced a new switchtec_exit_pci() that need to be called explicitly in
    order to undo a corresponding switchtec_init_pci().
    
    This was done in the remove function, but not in the probe.
    
    Fix the probe now.
    
    Fixes: df25461119d9 ("PCI: switchtec: Fix stdev_release() crash after surprise hot remove")
    Link: https://lore.kernel.org/r/01446d2ccb91a578239915812f2b7dfbeb2882af.1703428183.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3a38ad77b5bb47d0eeb1d0f593569aee8f5be433)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 02b94a5d89e6359d1330ffdb7591d822e34b5a19
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Jan 4 20:52:35 2024 +0100

    PCI/P2PDMA: Fix a sleeping issue in a RCU read section
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1e5c66afd4a40bb7be17cb33cbb1a1085f727730 ]
    
    It is not allowed to sleep within a RCU read section, so use GFP_ATOMIC
    instead of GFP_KERNEL here.
    
    Link: https://lore.kernel.org/r/02d9ec4a10235def0e764ff1f5be881ba12e16e8.1704397858.git.christophe.jaillet@wanadoo.fr
    Fixes: ae21f835a5bd ("PCI/P2PDMA: Finish RCU conversion of pdev->p2pdma")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 558d8fedded841edb0d90276f60df7c49c9a7ad2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cc6124d0ea6ef88b8d8ad9f71caed4f8ddab86d4
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Feb 8 10:55:41 2024 -0600

    ASoC: Intel: ssp-common: Add stub for sof_ssp_get_codec_name
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c1469c3a8a306e5f1eab1ae9585640d08e183f87 ]
    
    As this function is now used in sof_board_helpers it requires a build
    stub for the case SSP_COMMON is not built in.
    
    Fixes: ba0c7c328762 ("ASoC: Intel: board_helpers: support amp link initialization")
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Reviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20240208165545.93811-21-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 773264c2879a979fae9a36d88677302a2af6900e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 61bf0a0cd83a55d10586dc2b5c0838f846a9bfe2
Author: Jan Kara <jack@suse.cz>
Date:   Tue Feb 6 15:08:19 2024 +0100

    quota: Properly annotate i_dquot arrays with __rcu
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ccb49011bb2ebfd66164dbf68c5bff48917bb5ef ]
    
    Dquots pointed to from i_dquot arrays in inodes are protected by
    dquot_srcu. Annotate them as such and change .get_dquots callback to
    return properly annotated pointer to make sparse happy.
    
    Fixes: b9ba6f94b238 ("quota: remove dqptr_sem")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d4d40e12197f2239ed39829204c6482d7242419a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit aff0425af3c9e71c044a283d44abdf875dbf8836
Author: Jan Kara <jack@suse.cz>
Date:   Tue Feb 6 15:32:09 2024 +0100

    quota: Fix rcu annotations of inode dquot pointers
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 179b8c97ebf63429589f5afeba59a181fe70603e ]
    
    Dquot pointers in i_dquot array in the inode are protected by
    dquot_srcu. Annotate the array pointers with __rcu, perform the locked
    dereferences with srcu_dereference_check() instead of plain reads, and
    set the array elements with rcu_assign_pointer().
    
    Fixes: b9ba6f94b238 ("quota: remove dqptr_sem")
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202402061900.rTuYDlo6-lkp@intel.com/
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4772b81037c15dd8699c5ff6b04760490a87e438)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 243be6c1a8a8cdeb1900fd1f2c0a21f1b4298247
Author: Wang Jianjian <wangjianjian3@huawei.com>
Date:   Fri Feb 2 16:18:52 2024 +0800

    quota: Fix potential NULL pointer dereference
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d0aa72604fbd80c8aabb46eda00535ed35570f1f ]
    
    Below race may cause NULL pointer dereference
    
    P1                                      P2
    dquot_free_inode                        quota_off
                                              drop_dquot_ref
                                               remove_dquot_ref
                                               dquots = i_dquot(inode)
      dquots = i_dquot(inode)
      srcu_read_lock
      dquots[cnt]) != NULL (1)
                                                 dquots[type] = NULL (2)
      spin_lock(&dquots[cnt]->dq_dqb_lock) (3)
       ....
    
    If dquot_free_inode(or other routines) checks inode's quota pointers (1)
    before quota_off sets it to NULL(2) and use it (3) after that, NULL pointer
    dereference will be triggered.
    
    So let's fix it by using a temporary pointer to avoid this issue.
    
    Signed-off-by: Wang Jianjian <wangjianjian3@huawei.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Message-Id: <20240202081852.2514092-1-wangjianjian3@huawei.com>
    Stable-dep-of: 179b8c97ebf6 ("quota: Fix rcu annotations of inode dquot pointers")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6afc9f4434fa8063aa768c2bf5bf98583aee0877)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b7126677ea925c0728692df211b444fcb66f5eb
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Tue Feb 6 19:43:36 2024 +0100

    clk: qcom: reset: Ensure write completion on reset de/assertion
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2f8cf2c3f3e3f7ef61bd19abb4b0bb797ad50aaf ]
    
    Trying to toggle the resets in a rapid fashion can lead to the changes
    not actually arriving at the clock controller block when we expect them
    to. This was observed at least on SM8250.
    
    Read back the value after regmap_update_bits to ensure write completion.
    
    Fixes: b36ba30c8ac6 ("clk: qcom: Add reset controller support")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240105-topic-venus_reset-v2-3-c37eba13b5ce@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 29635d12291023b249834bce0a4756f329ee15a5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e77e16f9ca6ce1b5b90f48a2fcc1c0e70d6010e8
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Tue Feb 6 19:43:35 2024 +0100

    clk: qcom: reset: Commonize the de/assert functions
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit eda40d9c583e95e0b6ac69d2950eec10f802e0e8 ]
    
    They do the same thing, except the last argument of the last function
    call differs. Commonize them.
    
    Reviewed-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240105-topic-venus_reset-v2-2-c37eba13b5ce@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Stable-dep-of: 2f8cf2c3f3e3 ("clk: qcom: reset: Ensure write completion on reset de/assertion")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e0971f76f19901122374549163b5f71085e89329)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 072fb22afc38a716325b151562e35a65f78a4b64
Author: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
Date:   Thu Feb 1 22:47:15 2024 +0530

    drm/amdgpu: Fix potential out-of-bounds access in 'amdgpu_discovery_reg_base_init()'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cdb637d339572398821204a1142d8d615668f1e9 ]
    
    The issue arises when the array 'adev->vcn.vcn_config' is accessed
    before checking if the index 'adev->vcn.num_vcn_inst' is within the
    bounds of the array.
    
    The fix involves moving the bounds check before the array access. This
    ensures that 'adev->vcn.num_vcn_inst' is within the bounds of the array
    before it is used as an index.
    
    Fixes the below:
    drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c:1289 amdgpu_discovery_reg_base_init() error: testing array offset 'adev->vcn.num_vcn_inst' after use.
    
    Fixes: a0ccc717c4ab ("drm/amdgpu/discovery: validate VCN and SDMA instances")
    Cc: Christian König <christian.koenig@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8db10cee51e3e11a6658742465edc21986cf1e8d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1851d3db36677fbb159c8bc69d59def0b2f6b566
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Wed Jan 31 15:19:08 2024 +0800

    pinctrl: mediatek: Drop bogus slew rate register range for MT8192
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e15ab05a6b3ed42f2f43f8bd1a1abdbde64afecd ]
    
    The MT8192 does not support configuring pin slew rate. This is evident
    from both the datasheet, and the fact that the driver points the slew
    rate register range at the GPIO direction register range.
    
    Drop the bogus setting.
    
    Fixes: d32f38f2a8fc ("pinctrl: mediatek: Add pinctrl driver for mt8192")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20240131071910.3950450-2-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1ed607ce690aed96c76a5ea8151131b1ed812982)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3b2b026def58021f079f82b8a8804e6f00facc79
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Wed Jan 31 15:19:07 2024 +0800

    pinctrl: mediatek: Drop bogus slew rate register range for MT8186
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3a29c87548809405bcbc66acc69cbe6f15184d94 ]
    
    The MT8186 does not support configuring pin slew rate. This is evident
    from both the datasheet, and the fact that the driver points the slew
    rate register range at the GPIO direction register range.
    
    Drop the bogus setting.
    
    Fixes: 8b483bda1e46 ("pinctrl: add pinctrl driver on mt8186")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20240131071910.3950450-1-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1b5b3ab230d4b72bd859a81bed645aad0e633deb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c36c84c98766aec499be9f154e69d3df312baf22
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Sat Feb 3 14:40:43 2024 +0100

    media: edia: dvbdev: fix a use-after-free
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8c64f4cdf4e6cc5682c52523713af8c39c94e6d5 ]
    
    In dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed
    in several error-handling paths. However, *pdvbdev is not set to NULL
    after dvbdev's deallocation, causing use-after-frees in many places,
    for example, in the following call chain:
    
    budget_register
      |-> dvb_dmxdev_init
            |-> dvb_register_device
      |-> dvb_dmxdev_release
            |-> dvb_unregister_device
                  |-> dvb_remove_device
                        |-> dvb_device_put
                              |-> kref_put
    
    When calling dvb_unregister_device, dmxdev->dvbdev (i.e. *pdvbdev in
    dvb_register_device) could point to memory that had been freed in
    dvb_register_device. Thereafter, this pointer is transferred to
    kref_put and triggering a use-after-free.
    
    Link: https://lore.kernel.org/linux-media/20240203134046.3120099-1-alexious@zju.edu.cn
    Fixes: b61901024776 ("V4L/DVB (5244): Dvbdev: fix illegal re-usage of fileoperations struct")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b7586e902128e4fb7bfbb661cb52e4215a65637b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f7276659c64a88ebb1d274fbd64fe8d6eb1908a3
Author: Ezra Buehler <ezra.buehler@husqvarnagroup.com>
Date:   Thu Jan 25 22:01:08 2024 +0200

    mtd: spinand: esmt: Extend IDs to 5 bytes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4bd14b2fd8a83a2f5220ba4ef323f741e11bfdfd ]
    
    According to the datasheets, the ESMT chips in question will return a 5
    byte long identification code where the last 3 bytes are the JEDEC
    continuation codes (7Fh). Although, I would have expected 4 continuation
    codes as Powerchip Semiconductor (C8h, corresponding to the parameter
    page data) is located in bank 5 of the JEDEC database.
    
    By matching the full 5 bytes we can avoid clashes with GigaDevice NAND
    flashes.
    
    This fix allows the MT7688-based GARDENA smart Gateway to boot again.
    
    Fixes: aa08bf187f32 ("mtd: spinand: esmt: add support for F50D2G41KA")
    Signed-off-by: Ezra Buehler <ezra.buehler@husqvarnagroup.com>
    Reviewed-by: Martin Kurbanov <mmkurbanov@salutedevices.com>
    Tested-by: Martin Kurbanov <mmkurbanov@salutedevices.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20240125200108.24374-3-ezra@easyb.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a41636ceb39f1675bb90e4dbaaf14d9c1d36a87f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0e30cbaa15405c805ff683c680b0a832953ca777
Author: Rob Herring <robh@kernel.org>
Date:   Fri Feb 2 16:23:25 2024 -0600

    media: dt-bindings: techwell,tw9900: Fix port schema ref
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c9cd7308d64b13741ee03be81836a324fc4d657d ]
    
    The port@0 node doesn't define any extra properties in the port or endpoint
    nodes, so the $ref should be to "/properties/port" instead as it restricts
    extra properties.
    
    Fixes: 0f82ffa9a295 ("media: dt-bindings: media: i2c: Add bindings for TW9900")
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e550dc1b126862b8d27afb412b00746eed07272e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cec061732d7d51a5808caa5f04101186cc1017a0
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Thu Feb 1 20:48:44 2024 +0800

    media: v4l2-mem2mem: fix a memleak in v4l2_m2m_register_entity
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8f94b49a5b5d386c038e355bef6347298aabd211 ]
    
    The entity->name (i.e. name) is allocated in v4l2_m2m_register_entity
    but isn't freed in its following error-handling paths. This patch
    adds such deallocation to prevent memleak of entity->name.
    
    Fixes: be2fff656322 ("media: add helpers for memory-to-memory media controller")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9c23ef30e840fedc66948299509f6c2777c9cf4f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 473d83b1f3ea54225e53cfe6934e2b95710bac8f
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Thu Feb 1 20:47:53 2024 +0800

    media: v4l2-tpg: fix some memleaks in tpg_alloc
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8cf9c5051076e0eb958f4361d50d8b0c3ee6691c ]
    
    In tpg_alloc, resources should be deallocated in each and every
    error-handling paths, since they are allocated in for statements.
    Otherwise there would be memleaks because tpg_free is called only when
    tpg_alloc return 0.
    
    Fixes: 63881df94d3e ("[media] vivid: add the Test Pattern Generator")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 622b1cf38521569869c8f7b9fbe9e4f1a289add7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2cf236cb873535e85fb9822ed9035bca52ff1d7e
Author: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
Date:   Fri Jan 12 05:42:26 2024 -0800

    media: em28xx: annotate unchecked call to media_device_register()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fd61d77a3d28444b2635f0c8b5a2ecd6a4d94026 ]
    
    Static analyzers generate alerts for an unchecked call to
    `media_device_register()`. However, in this case, the device will work
    reliably without the media controller API.
    
    Add a comment above the call to prevent future unnecessary changes.
    
    Suggested-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Fixes: 37ecc7b1278f ("[media] em28xx: add media controller support")
    Signed-off-by: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 53eb703487ca273fc620f737fb561699a4e960d3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d99504d9caeec4259f9be52f16ec4230679f3ae3
Author: Igor Prusov <ivprusov@salutedevices.com>
Date:   Fri Feb 2 17:25:48 2024 +0300

    clk: meson: Add missing clocks to axg_clk_regmaps
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ba535bce57e71463a86f8b33a0ea88c26e3a6418 ]
    
    Some clocks were missing from axg_clk_regmaps, which caused kernel panic
    during cat /sys/kernel/debug/clk/clk_summary
    
    [   57.349402] Unable to handle kernel NULL pointer dereference at virtual address 00000000000001fc
    ...
    [   57.430002] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [   57.436900] pc : regmap_read+0x1c/0x88
    [   57.440608] lr : clk_regmap_gate_is_enabled+0x3c/0xb0
    [   57.445611] sp : ffff800082f1b690
    [   57.448888] x29: ffff800082f1b690 x28: 0000000000000000 x27: ffff800080eb9a70
    [   57.455961] x26: 0000000000000007 x25: 0000000000000016 x24: 0000000000000000
    [   57.463033] x23: ffff800080e8b488 x22: 0000000000000015 x21: ffff00000e7e7000
    [   57.470106] x20: ffff00000400ec00 x19: 0000000000000000 x18: ffffffffffffffff
    [   57.477178] x17: 0000000000000000 x16: 0000000000000000 x15: ffff0000042a3000
    [   57.484251] x14: 0000000000000000 x13: ffff0000042a2fec x12: 0000000005f5e100
    [   57.491323] x11: abcc77118461cefd x10: 0000000000000020 x9 : ffff8000805e4b24
    [   57.498396] x8 : ffff0000028063c0 x7 : ffff800082f1b710 x6 : ffff800082f1b710
    [   57.505468] x5 : 00000000ffffffd0 x4 : ffff800082f1b6e0 x3 : 0000000000001000
    [   57.512541] x2 : ffff800082f1b6e4 x1 : 000000000000012c x0 : 0000000000000000
    [   57.519615] Call trace:
    [   57.522030]  regmap_read+0x1c/0x88
    [   57.525393]  clk_regmap_gate_is_enabled+0x3c/0xb0
    [   57.530050]  clk_core_is_enabled+0x44/0x120
    [   57.534190]  clk_summary_show_subtree+0x154/0x2f0
    [   57.538847]  clk_summary_show_subtree+0x220/0x2f0
    [   57.543505]  clk_summary_show_subtree+0x220/0x2f0
    [   57.548162]  clk_summary_show_subtree+0x220/0x2f0
    [   57.552820]  clk_summary_show_subtree+0x220/0x2f0
    [   57.557477]  clk_summary_show_subtree+0x220/0x2f0
    [   57.562135]  clk_summary_show_subtree+0x220/0x2f0
    [   57.566792]  clk_summary_show_subtree+0x220/0x2f0
    [   57.571450]  clk_summary_show+0x84/0xb8
    [   57.575245]  seq_read_iter+0x1bc/0x4b8
    [   57.578954]  seq_read+0x8c/0xd0
    [   57.582059]  full_proxy_read+0x68/0xc8
    [   57.585767]  vfs_read+0xb0/0x268
    [   57.588959]  ksys_read+0x70/0x108
    [   57.592236]  __arm64_sys_read+0x24/0x38
    [   57.596031]  invoke_syscall+0x50/0x128
    [   57.599740]  el0_svc_common.constprop.0+0x48/0xf8
    [   57.604397]  do_el0_svc+0x28/0x40
    [   57.607675]  el0_svc+0x34/0xb8
    [   57.610694]  el0t_64_sync_handler+0x13c/0x158
    [   57.615006]  el0t_64_sync+0x190/0x198
    [   57.618635] Code: a9bd7bfd 910003fd a90153f3 aa0003f3 (b941fc00)
    [   57.624668] ---[ end trace 0000000000000000 ]---
    
    [jbrunet: add missing Fixes tag]
    Signed-off-by: Igor Prusov <ivprusov@salutedevices.com>
    Link: https://lore.kernel.org/r/20240202172537.1.I64656c75d84284bc91e6126b50b33c502be7c42a@changeid
    Fixes: 14ebb3154b8f ("clk: meson: axg: add Video Clocks")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9f3e5df38b4528213449e55b80f0316864f2a1c8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d0e3a8b6db0fd5836f3281fc7b8e1955e1e2f2cb
Author: Arnaldo Carvalho de Melo <acme@kernel.org>
Date:   Fri Feb 2 11:32:20 2024 -0300

    perf bpf: Clean up the generated/copied vmlinux.h
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ffd856537b95dd65facb4e0c78ca1cb92c2048ff ]
    
    When building perf with BPF skels we either copy the minimalistic
    tools/perf/util/bpf_skel/vmlinux/vmlinux.h or use bpftool to generate a
    vmlinux from BTF, storing the result in $(SKEL_OUT)/vmlinux.h.
    
    We need to remove that when doing a 'make -C tools/perf clean', fix it.
    
    Fixes: b7a2d774c9c5a9a3 ("perf build: Add ability to build with a generated vmlinux.h")
    Reviewed-by: Ian Rogers <irogers@google.com>
    Cc: Andrii Nakryiko <andrii@kernel.org>
    Cc: James Clark <james.clark@arm.com>
    Cc: Tiezhu Yang <yangtiezhu@loongson.cn>
    Cc: Yang Jihong <yangjihong1@huawei.com>
    Cc: bpf@vger.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/Zbz89KK5wHfZ82jv@x1
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 53a46fb075114c43724ceeb35fde7f0fe00f8af6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 899852f5bd743b02d4f273411db026d0f16c6d22
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Sat Jan 27 02:57:56 2024 +0000

    perf evsel: Fix duplicate initialization of data->id in evsel__parse_sample()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4962aec0d684c8edb14574ccd0da53e4926ff834 ]
    
    data->id has been initialized at line 2362, remove duplicate initialization.
    
    Fixes: 3ad31d8a0df2 ("perf evsel: Centralize perf_sample initialization")
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Reviewed-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Reviewed-by: Ian Rogers <irogers@google.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240127025756.4041808-1-yangjihong1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1a0535e552b2eb865239e5e8e9275038f944d3ab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit db67561d3a643cbec2736a72b4ae4d210c06e66e
Author: Julien Massot <julien.massot@collabora.com>
Date:   Thu Jan 11 14:20:03 2024 +0100

    media: v4l2: cci: print leading 0 on error
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 58ab1f9e140006e9e5686640f1773260038fe889 ]
    
    In some error cases leading '0' for register address
    were missing.
    
    Fixes: 613cbb91e9ce ("media: Add MIPI CCI register access helper functions")
    Signed-off-by: Julien Massot <julien.massot@collabora.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2cfa7ffe312dc939629453effb84737f0c2f3f6b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2cc1e19183903ae17ec0666ed376466cbcf1019a
Author: Sam Protsenko <semen.protsenko@linaro.org>
Date:   Wed Jan 24 19:38:56 2024 -0600

    clk: samsung: exynos850: Propagate SPI IPCLK rate change
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 67c15187d4910ee353374676d4dddf09d8cb227e ]
    
    When SPI transfer is being prepared, the spi-s3c64xx driver will call
    clk_set_rate() to change the rate of SPI source clock (IPCLK). But IPCLK
    is a gate (leaf) clock, so it must propagate the rate change up the
    clock tree, so that corresponding DIV clocks can actually change their
    divider values. Add CLK_SET_RATE_PARENT flag to corresponding clocks for
    all SPI instances in Exynos850 (spi_0, spi_1 and spi_2) to make it
    possible. This change involves next clocks:
    
    usi_spi_0:
    
        Clock                  Block       Div range
        --------------------------------------------
        gout_spi0_ipclk        CMU_PERI    -
        dout_peri_spi0         CMU_PERI    /1..32
        mout_peri_spi_user     CMU_PERI    -
        dout_peri_ip           CMU_TOP     /1..16
    
    usi_cmgp0:
    
        Clock                  Block       Div range
        --------------------------------------------
        gout_cmgp_usi0_ipclk   CMU_CMGP    -
        dout_cmgp_usi0         CMU_CMGP    /1..32
        mout_cmgp_usi0         CMU_CMGP    -
        gout_clkcmu_cmgp_bus   CMU_APM     -
        dout_apm_bus           CMU_APM     /1..8
    
    usi_cmgp1:
    
        Clock                  Block       Div range
        --------------------------------------------
        gout_cmgp_usi1_ipclk   CMU_CMGP    -
        dout_cmgp_usi1         CMU_CMGP    /1..32
        mout_cmgp_usi1         CMU_CMGP    -
        gout_clkcmu_cmgp_bus   CMU_APM     -
        dout_apm_bus           CMU_APM     /1..8
    
    With input clock of 400 MHz, this scheme provides next IPCLK rate range,
    for each SPI block:
    
        SPI0:   781 kHz ... 400 MHz
        SPI1/2: 1.6 MHz ... 400 MHz
    
    Accounting for internal /4 divider in SPI blocks, and because the max
    SPI frequency is limited at 50 MHz, it gives us next SPI SCK rates:
    
        SPI0:   200 kHz ... 49.9 MHz
        SPI1/2: 400 kHz ... 49.9 MHz
    
    Which should cover all possible applications of SPI bus. Of course,
    setting SPI frequency to values as low as 500 kHz will also affect the
    common bus dividers (dout_apm_bus or dout_peri_ip), which in turn
    effectively lowers the rates for all leaf bus clocks derived from those
    dividers, like HSI2C and I3C clocks. But at least it gives the board
    designer a choice, whether to keep all clocks (SPI/HSI2C/I3C) at high
    frequencies, or make all those clocks have lower frequencies. Not
    propagating the rate change to those common dividers would limit this
    choice to "only high frequencies are allowed for SPI/HSI2C/I3C" option,
    making the common dividers useless. This decision follows the "Worse is
    better" approach, relying on the users/engineers to know the system
    internals when working with such low-level features, instead of trying
    to account for all possible use-cases.
    
    Fixes: 7dd05578198b ("clk: samsung: Introduce Exynos850 clock driver")
    Signed-off-by: Sam Protsenko <semen.protsenko@linaro.org>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Link: https://lore.kernel.org/r/20240125013858.3986-2-semen.protsenko@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dbf2fb2ab19d9173aba1b62fb27fb33600027ebe)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 56d10b43cbf92085391013d4021903596798d3af
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 18 17:32:36 2024 +0100

    pinctrl: renesas: r8a779g0: Add missing SCIF_CLK2 pin group/function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 68540257cdf1d07ff8a649aa94c21c5804bbb9b0 ]
    
    R-Car V4H actually has two SCIF_CLK pins.
    The second pin provides the SCIF_CLK signal for HSCIF2 and SCIF4.
    
    Fixes: 050442ae4c74f830 ("pinctrl: renesas: r8a779g0: Add pins, groups and functions")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/6352ec9b63fdd38c2c70d8d203e46f21fbfeccdc.1705589612.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c96427ebb59d72bd3da7d3e2ffab933dd9a04379)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5a4673b1fb00c844881b5c659e1fc2633b752ce5
Author: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
Date:   Mon Jan 15 17:34:53 2024 +0200

    pinctrl: renesas: rzg2l: Fix locking in rzg2l_dt_subnode_to_map()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bd433c25ca81b2ac6dca7ea288a8474eea4fb8a0 ]
    
    Commit d3aaa7203a17 ("pinctrl: renesas: rzg2l: Add pin configuration
    support for pinmux groups") introduced the possibility to parse pin
    configuration for pinmux groups. It did that by calling
    rzg2l_map_add_config() at the end of rzg2l_dt_subnode_to_map() and
    jumping to the remove_group label in case rzg2l_map_add_config() failed.
    But if that happens, the mutex will already be unlocked, thus this it will
    lead to double mutex unlock operation. To fix this move the
    rzg2l_map_add_config() call just after all the name argument is ready and
    before the mutex is locked. There is no harm in doing this, as this only
    parses the data from device tree that will be further processed by
    pinctrl core code.
    
    Fixes: d3aaa7203a17 ("pinctrl: renesas: rzg2l: Add pin configuration support for pinmux groups")
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Closes: https://lore.kernel.org/all/f8c3a3a0-7c48-4e40-8af0-ed4e9d9b049f@moroto.mountain
    Signed-off-by: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20240115153453.99226-1-claudiu.beznea.uj@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e8b63587feed5b6bae35ebb4fe541f32c202d9a0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 28215b53c1395e89f6985c97997a2197a2601d36
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Jan 30 10:47:49 2024 +0100

    clk: renesas: r8a779g0: Fix PCIe clock name
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 096311157d2a6bb8f06e28e1143e2a5de6a0183b ]
    
    Fix a typo in the name of the module clock for the second PCIe channel.
    
    Fixes: 5ab16198b431ca48 ("clk: renesas: r8a779g0: Add PCIe clocks")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Link: https://lore.kernel.org/r/f582067564f357e2183d3db67b217084ecb51888.1706608032.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 57ba901242123cbb0966aa842ce712e1d4072f9e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 53b0001af59318815ff32a83e865ef576193780a
Author: Martin Krastev <martin.krastev@broadcom.com>
Date:   Fri Jan 26 15:08:03 2024 -0500

    drm/vmwgfx: Fix vmw_du_get_cursor_mob fencing of newly-created MOBs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ed96cf7ad590989b009d6da5cd26387d995dac13 ]
    
    The fencing of MOB creation used in vmw_du_get_cursor_mob was incompatible
    with register-based device communication employed by this routine. As a
    result cursor MOB creation was racy, leading to potentially broken/missing
    mouse cursor on desktops using CursorMob device feature.
    
    Fixes: 53bc3f6fb6b3 ("drm/vmwgfx: Clean up cursor mobs")
    Signed-off-by: Martin Krastev <martin.krastev@broadcom.com>
    Reviewed-by: Maaz Mombasawala <maaz.mombasawala@broadcom.com>
    Reviewed-by: Zack Rusin <zack.rusin@broadcom.com>
    Signed-off-by: Zack Rusin <zack.rusin@broadcom.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240126200804.732454-5-zack.rusin@broadcom.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 97add0305735d1c05a21efb77a682487b94e848c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f712c6b515447d66b52c49a6dc64a509a075426c
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Tue Jan 30 15:08:22 2024 +0000

    ASoC: sh: rz-ssi: Fix error message print
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9a6d7c4fb2801b675a9c31a7ceb78c84b8c439bc ]
    
    The devm_request_irq() call is done for "dma_rt" interrupt but the error
    message printed "dma_tx" interrupt on failure, fix this by updating
    dma_tx -> dma_rt in dev_err_probe() message. While at it aligned the code.
    
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Fixes: 38c042b59af0248a ("ASoC: sh: rz-ssi: Update interrupt handling for half duplex channels")
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://msgid.link/r/20240130150822.327434-1-prabhakar.mahadev-lad.rj@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3490c8f9c66f1bc1910843e6a3cb9f44ae9c320e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d94fc291d556e4faab7a59acb29944166bd10884
Author: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
Date:   Thu Jan 25 21:16:04 2024 +0530

    drm/amd/display: Fix potential NULL pointer dereferences in 'dcn10_set_output_transfer_func()'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9ccfe80d022df7c595f1925afb31de2232900656 ]
    
    The 'stream' pointer is used in dcn10_set_output_transfer_func() before
    the check if 'stream' is NULL.
    
    Fixes the below:
    drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn10/dcn10_hwseq.c:1892 dcn10_set_output_transfer_func() warn: variable dereferenced before check 'stream' (see line 1875)
    
    Fixes: ddef02de0d71 ("drm/amd/display: add null checks before logging")
    Cc: Wyatt Wood <wyatt.wood@amd.com>
    Cc: Anthony Koo <Anthony.Koo@amd.com>
    Cc: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Cc: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
    Reviewed-by: Anthony Koo <Anthony.Koo@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7874ab3105ca4657102fee1cc14b0af70883c484)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 47ae5c205ee33697323bcd98ebfade19f87ae9b6
Author: Stefan Binding <sbinding@opensource.cirrus.com>
Date:   Fri Jan 26 16:40:02 2024 +0000

    ALSA: hda: cs35l41: Set Channel Index correctly when system is missing _DSD
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 135096ebfab656823d0037102a00776f3914fee3 ]
    
    Current method to set Channel Index when the system is missing _DSD
    assumes that the channels alternate, which is not guaranteed.
    Instead use the same methodology as the main driver does when _DSD
    exists.
    
    Fixes: 8c4c216db8fb ("ALSA: hda: cs35l41: Add config table to support many laptops without _DSD")
    
    Signed-off-by: Stefan Binding <sbinding@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20240126164005.367021-2-sbinding@opensource.cirrus.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 01bc16ee10081a1a3ed34714a00485d746a662b6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 26e0d482c017ac8ce36df227566d71384f7dfd20
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 3 17:26:02 2024 +0100

    crypto: qat - avoid memcpy() overflow warning
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 23a22e831ed4e6aa0831312e8cc8b7c60a657f60 ]
    
    The use of array_size() leads gcc to assume the memcpy() can have a larger
    limit than actually possible, which triggers a string fortification warning:
    
    In file included from include/linux/string.h:296,
                     from include/linux/bitmap.h:12,
                     from include/linux/cpumask.h:12,
                     from include/linux/sched.h:16,
                     from include/linux/delay.h:23,
                     from include/linux/iopoll.h:12,
                     from drivers/crypto/intel/qat/qat_common/adf_gen4_hw_data.c:3:
    In function 'fortify_memcpy_chk',
        inlined from 'adf_gen4_init_thd2arb_map' at drivers/crypto/intel/qat/qat_common/adf_gen4_hw_data.c:401:3:
    include/linux/fortify-string.h:579:4: error: call to '__write_overflow_field' declared with attribute warning: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror=attribute-warning]
      579 |    __write_overflow_field(p_size_field, size);
          |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    include/linux/fortify-string.h:588:4: error: call to '__read_overflow2_field' declared with attribute warning: detected read beyond size of field (2nd parameter); maybe use struct_group()? [-Werror=attribute-warning]
      588 |    __read_overflow2_field(q_size_field, size);
          |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Add an explicit range check to avoid this.
    
    Fixes: 5da6a2d5353e ("crypto: qat - generate dynamically arbiter mappings")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2bccb4973866d5a3cf78d994934260bfce5e67f6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 496426b5e3001ecca8e41565dd56f9157e8f2cde
Author: Ian Rogers <irogers@google.com>
Date:   Wed Jan 24 15:42:00 2024 -0800

    perf pmu: Treat the msr pmu as software
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 24852ef2e2d5c555c2da05baff112ea414b6e0f5 ]
    
    The msr PMU is a software one, meaning msr events may be grouped
    with events in a hardware context. As the msr PMU isn't marked as a
    software PMU by perf_pmu__is_software, groups with the msr PMU in
    are broken and the msr events placed in a different group. This
    may lead to multiplexing errors where a hardware event isn't
    counted while the msr event, such as tsc, is. Fix all of this by
    marking the msr PMU as software, which agrees with the driver.
    
    Before:
    ```
    $ perf stat -e '{slots,tsc}' -a true
    WARNING: events were regrouped to match PMUs
    
     Performance counter stats for 'system wide':
    
             1,750,335      slots
             4,243,557      tsc
    
           0.001456717 seconds time elapsed
    ```
    
    After:
    ```
    $ perf stat -e '{slots,tsc}' -a true
     Performance counter stats for 'system wide':
    
            12,526,380      slots
             3,415,163      tsc
    
           0.001488360 seconds time elapsed
    ```
    
    Fixes: 251aa040244a ("perf parse-events: Wildcard most "numeric" events")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Cc: James Clark <james.clark@arm.com>
    Cc: Caleb Biggers <caleb.biggers@intel.com>
    Cc: Edward Baker <edward.baker@intel.com>
    Cc: Perry Taylor <perry.taylor@intel.com>
    Cc: Samantha Alt <samantha.alt@intel.com>
    Cc: Weilin Wang <weilin.wang@intel.com>
    Link: https://lore.kernel.org/r/20240124234200.1510417-1-irogers@google.com
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7b3a278f29f28b36f71ca263b882e3120e12f881)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2297b87b9cd546911ab8859e8b6624d926593c90
Author: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
Date:   Tue Jan 23 20:18:07 2024 +0530

    drm/amd/display: Fix a potential buffer overflow in 'dp_dsc_clock_en_read()'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4b09715f1504f1b6e8dff0e9643630610bc05141 ]
    
    Tell snprintf() to store at most 10 bytes in the output buffer
    instead of 30.
    
    Fixes the below:
    drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_debugfs.c:1508 dp_dsc_clock_en_read() error: snprintf() is printing too much 30 vs 10
    
    Fixes: c06e09b76639 ("drm/amd/display: Add DSC parameters logging to debugfs")
    Cc: Alex Hung <alex.hung@amd.com>
    Cc: Qingqing Zhuo <qingqing.zhuo@amd.com>
    Cc: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Cc: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cf114d8d4a8d78df272116a745bb43b48cef65f4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9aac70319c274cb4593d65a4dd71f89d5a23ba4
Author: Mikhail Khvainitski <me@khvoinitsky.org>
Date:   Sat Dec 23 21:12:13 2023 +0200

    HID: lenovo: Add middleclick_workaround sysfs knob for cptkbd
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2814646f76f8518326964f12ff20aaee70ba154d ]
    
    Previous attempt to autodetect well-behaving patched firmware
    introduced in commit 46a0a2c96f0f ("HID: lenovo: Detect quirk-free fw
    on cptkbd and stop applying workaround") has shown that there are
    false-positives on original firmware (on both 1st gen and 2nd gen
    keyboards) which causes the middle button click workaround to be
    mistakenly disabled.
    
    This commit adds explicit parameter to sysfs to control this
    workaround.
    
    Fixes: 46a0a2c96f0f ("HID: lenovo: Detect quirk-free fw on cptkbd and stop applying workaround")
    Fixes: 43527a0094c1 ("HID: lenovo: Restrict detection of patched firmware only to USB cptkbd")
    Signed-off-by: Mikhail Khvainitski <me@khvoinitsky.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3108f864895477d23e280383575e828701d6f076)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cebd01c2a2e48d3a37dc31e572e85747fa42b586
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Fri Jan 19 04:03:03 2024 +0000

    perf record: Check conflict between '--timestamp-filename' option and pipe mode before recording
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 02f9b50e04812782fd006ed21c6da1c5e3e373da ]
    
    In pipe mode, no need to switch perf data output, therefore,
    '--timestamp-filename' option should not take effect.
    Check the conflict before recording and output WARNING.
    In this case, the check pipe mode in perf_data__switch() can be removed.
    
    Before:
    
      # perf record --timestamp-filename -o- perf test -w noploop | perf report -i- --percent-limit=1
      # To display the perf.data header info, please use --header/--header-only options.
      #
      [ perf record: Woken up 1 times to write data ]
      [ perf record: Dump -.2024011812110182 ]
      #
      # Total Lost Samples: 0
      #
      # Samples: 4K of event 'cycles:P'
      # Event count (approx.): 2176784359
      #
      # Overhead  Command  Shared Object         Symbol
      # ........  .......  ....................  ......................................
      #
          97.83%  perf     perf                  [.] noploop
    
      #
      # (Tip: Print event counts in CSV format with: perf stat -x,)
      #
    
    After:
    
      # perf record --timestamp-filename -o- perf test -w noploop | perf report -i- --percent-limit=1
      WARNING: --timestamp-filename option is not available in pipe mode.
      # To display the perf.data header info, please use --header/--header-only options.
      #
      [ perf record: Woken up 1 times to write data ]
      [ perf record: Captured and wrote 0.000 MB - ]
      #
      # Total Lost Samples: 0
      #
      # Samples: 4K of event 'cycles:P'
      # Event count (approx.): 2185575421
      #
      # Overhead  Command  Shared Object          Symbol
      # ........  .......  .....................  .............................................
      #
          97.75%  perf     perf                   [.] noploop
    
      #
      # (Tip: Profiling branch (mis)predictions with: perf record -b / perf report)
      #
    
    Fixes: ecfd7a9c044e ("perf record: Add '--timestamp-filename' option to append timestamp to output file name")
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240119040304.3708522-3-yangjihong1@huawei.com
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 877c08e04e887738447e624374ef1110e6e46b68)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 17dc926a32da617c21759a04179df33a26019b18
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Fri Jan 19 04:03:02 2024 +0000

    perf record: Fix possible incorrect free in record__switch_output()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aff10a165201f6f60cff225083ce301ad3f5d8f1 ]
    
    perf_data__switch() may not assign a legal value to 'new_filename'.
    In this case, 'new_filename' uses the on-stack value, which may cause a
    incorrect free and unexpected result.
    
    Fixes: 03724b2e9c45 ("perf record: Allow to limit number of reported perf.data files")
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20240119040304.3708522-2-yangjihong1@huawei.com
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 27ee265043ac0b18e6ea960a2a5d4c3383c01bea)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dcb76eb81c2cf0a2f58b4ea64741354679d2475b
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Thu Jan 18 13:08:15 2024 +0200

    PCI/DPC: Print all TLP Prefixes, not just the first
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6568d82512b0a64809acff3d7a747362fa4288c8 ]
    
    The TLP Prefix Log Register consists of multiple DWORDs (PCIe r6.1 sec
    7.9.14.13) but the loop in dpc_process_rp_pio_error() keeps reading from
    the first DWORD, so we print only the first PIO TLP Prefix (duplicated
    several times), and we never print the second, third, etc., Prefixes.
    
    Add the iteration count based offset calculation into the config read.
    
    Fixes: f20c4ea49ec4 ("PCI/DPC: Add eDPC support")
    Link: https://lore.kernel.org/r/20240118110815.3867-1-ilpo.jarvinen@linux.intel.com
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    [bhelgaas: add user-visible details to commit log]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a0188ea3dce9b0a99c0a05b86a1d33af5b9a6bfb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 965711e46df89364f22edcac1b2a5a9d3eacf70f
Author: Julien Massot <julien.massot@collabora.com>
Date:   Fri Jan 5 10:00:21 2024 +0100

    media: cadence: csi2rx: use match fwnode for media link
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 448699c522af9e3266f168c3f51f4c3713c7bee1 ]
    
    Since commit 1029939b3782 ("media: v4l: async: Simplify async sub-device fwnode matching"),
    async connections are matched using the async sub-device fwnode, not that
    of the endpoint. Fix this by using the fwnode of the connection match to
    find the pad.
    
    Fixes: 1029939b3782 ("media: v4l: async: Simplify async sub-device fwnode matching")
    Signed-off-by: Julien Massot <julien.massot@collabora.com>
    Reviewed-by: Jai Luthra <j-luthra@ti.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b9544352daf29bdf408538672825529c108ee39f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e7a810d2b3a1475224a2917e3e277498079304f
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Wed Jan 10 10:01:11 2024 +0100

    media: tc358743: register v4l2 async device only after successful setup
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 87399f1ff92203d65f1febf5919429f4bb613a02 ]
    
    Ensure the device has been setup correctly before registering the v4l2
    async device, thus allowing userspace to access.
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Reviewed-by: Robert Foss <rfoss@kernel.org>
    Fixes: 4c5211a10039 ("[media] tc358743: register v4l2 asynchronous subdevice")
    Signed-off-by: Robert Foss <rfoss@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240110090111.458115-1-alexander.stein@ew.tq-group.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4f1490a5d7a0472ee5d9f36547bc4ba46be755c7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7c27df34046f38463623661d3f8566c929f6b2a9
Author: Peter Robinson <pbrobinson@gmail.com>
Date:   Fri Jan 12 09:32:56 2024 +0000

    dmaengine: tegra210-adma: Update dependency to ARCH_TEGRA
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 33b7db45533af240fe44e809f9dc4d604cf82d07 ]
    
    Update the architecture dependency to be the generic Tegra
    because the driver works on the four latest Tegra generations
    not just T210, if you build a kernel with a specific
    ARCH_TEGRA_xxx_SOC option that excludes 210 you don't get
    this driver.
    
    Fixes: 433de642a76c9 ("dmaengine: tegra210-adma: add support for Tegra186/Tegra194")
    Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
    Cc: Jon Hunter <jonathanh@nvidia.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: Sameer Pujar <spujar@nvidia.com>
    Cc: Laxman Dewangan <ldewangan@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20240112093310.329642-2-pbrobinson@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit df756953435d9c340d5eca8cb519a860aabf29ca)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9c98f7774581ae80d478d4625788fd2d9425c7b1
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Jan 17 17:06:39 2024 +0100

    soundwire: stream: add missing const to Documentation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0707496ff4e416ea08c90053fd5fde5811b11b22 ]
    
    Commit 21f4c443731f ("soundwire: stream: constify sdw_port_config when
    adding devices") added const to sdw_port_config argument, but forgot
    documentation.
    
    Fixes: 21f4c443731f ("soundwire: stream: constify sdw_port_config when adding devices")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20240117160639.1327266-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b2872ab982d0feeabe3038753cea717eeeae75f7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f445ed9faaee1ea52a45f3dcbf3c8d2321aad357
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue Dec 19 05:07:26 2023 +0200

    ASoC: SOF: amd: Compute file paths on firmware load
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d9cacc1a2af2e1cd781b5cd2a3e57fbde64f5a2d ]
    
    Commit 6c393ebbd74a ("ASoC: SOF: core: Implement IPC version fallback if
    firmware files are missing") changed the order of some operations and
    the firmware paths are not available anymore at snd_sof_probe() time.
    
    Precisely, fw_filename_prefix is set by sof_select_ipc_and_paths() via
    
      plat_data->fw_filename_prefix = out_profile.fw_path;
    
    but sof_init_environment() which calls this function was moved from
    snd_sof_device_probe() to sof_probe_continue(). Moreover,
    snd_sof_probe() was moved from sof_probe_continue() to
    sof_init_environment(), but before the call to
    sof_select_ipc_and_paths().
    
    The problem here is that amd_sof_acp_probe() uses fw_filename_prefix to
    compute fw_code_bin and fw_data_bin paths, and because the field is not
    yet initialized, the paths end up containing (null):
    
    snd_sof_amd_vangogh 0000:04:00.5: Direct firmware load for (null)/sof-vangogh-code.bin failed with error -2
    snd_sof_amd_vangogh 0000:04:00.5: sof signed firmware code bin is missing
    snd_sof_amd_vangogh 0000:04:00.5: error: failed to load DSP firmware -2
    snd_sof_amd_vangogh: probe of 0000:04:00.5 failed with error -2
    
    Move usage of fw_filename_prefix right before request_firmware() calls
    in acp_sof_load_signed_firmware().
    
    Fixes: 6c393ebbd74a ("ASoC: SOF: core: Implement IPC version fallback if firmware files are missing")
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Reviewed-by: Emil Velikov <emil.velikov@collabora.com>
    Link: https://msgid.link/r/20231219030728.2431640-9-cristian.ciocaltea@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fb327c4553ceeb5273e35f14b351762859948693)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fa94e305ed4663828c672f8054f38fd1db9b9495
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue Dec 19 05:07:25 2023 +0200

    ASoC: SOF: core: Skip firmware test for custom loaders
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 369b997a1371aeecd0a1fb0f9f4ef3747a1d07a4 ]
    
    The ACP driver for Vangogh platform uses a quirk for Valve Galileo
    device to setup a custom firmware loader, which neither requires nor
    uses the firmware file indicated via the default_fw_filename member of
    struct sof_dev_desc.
    
    Since commit 6c393ebbd74a ("ASoC: SOF: core: Implement IPC version
    fallback if firmware files are missing"), the provided filename gets
    verified and triggers a fatal error on probe:
    
    [ 7.719337] snd_sof_amd_vangogh 0000:04:00.5: enabling device (0000 -> 0002)
    [ 7.721486] snd_sof_amd_vangogh 0000:04:00.5: SOF firmware and/or topology file not found.
    [ 7.721565] snd_sof_amd_vangogh 0000:04:00.5: Supported default profiles
    [ 7.721569] snd_sof_amd_vangogh 0000:04:00.5: - ipc type 0 (Requested):
    [ 7.721573] snd_sof_amd_vangogh 0000:04:00.5:  Firmware file: amd/sof/sof-vangogh.ri
    [ 7.721577] snd_sof_amd_vangogh 0000:04:00.5:  Topology file: amd/sof-tplg/sof-vangogh-nau8821-max.tplg
    [ 7.721582] snd_sof_amd_vangogh 0000:04:00.5: Check if you have 'sof-firmware' package installed.
    [ 7.721585] snd_sof_amd_vangogh 0000:04:00.5: Optionally it can be manually downloaded from:
    [ 7.721589] snd_sof_amd_vangogh 0000:04:00.5:    https://github.com/thesofproject/sof-bin/
    [ 7.721997] snd_sof_amd_vangogh: probe of 0000:04:00.5 failed with error -2
    
    According to AMD, a combined ".ri" file which includes the code and data
    segments cannot be used due to a limitation preventing the code image to
    be signed on build time.
    
    Fix the issue by skipping the firmware file test if a custom loader is
    being used instead of the generic one.
    
    Fixes: 6c393ebbd74a ("ASoC: SOF: core: Implement IPC version fallback if firmware files are missing")
    Co-developed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Signed-off-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Link: https://msgid.link/r/20231219030728.2431640-8-cristian.ciocaltea@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 15633c6c3a7fb0289b42b4533776ed88aae65020)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit df19b35a7473778c6b56c3c096f6dd4e54b285fb
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue Dec 19 05:07:23 2023 +0200

    ASoC: SOF: amd: Fix memory leak in amd_sof_acp_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 222be59e5eed1554119294edc743ee548c2371d0 ]
    
    Driver uses kasprintf() to initialize fw_{code,data}_bin members of
    struct acp_dev_data, but kfree() is never called to deallocate the
    memory, which results in a memory leak.
    
    Fix the issue by switching to devm_kasprintf(). Additionally, ensure the
    allocation was successful by checking the pointer validity.
    
    Fixes: f7da88003c53 ("ASoC: SOF: amd: Enable signed firmware image loading for Vangogh platform")
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Reviewed-by: Emil Velikov <emil.velikov@collabora.com>
    Link: https://msgid.link/r/20231219030728.2431640-6-cristian.ciocaltea@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7296152e58858f928db448826eb7ba5ae611297b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f127ac3f353a0737c3171f347aa777ed97ed87ad
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue Dec 19 05:07:21 2023 +0200

    ASoC: amd: acp: Add missing error handling in sof-mach
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d0ada20279db2649a7549a2b8a4a3379c59f238d ]
    
    Handle potential acp_sofdsp_dai_links_create() errors in ACP SOF machine
    driver's probe function.  Note there is no need for an undo.
    
    While at it, switch to dev_err_probe().
    
    Fixes: 9f84940f5004 ("ASoC: amd: acp: Add SOF audio support on Chrome board")
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Reviewed-by: Emil Velikov <emil.velikov@collabora.com>
    Link: https://msgid.link/r/20231219030728.2431640-4-cristian.ciocaltea@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0cd1f708e3e1dcb750116d916154ca8f3264e9cf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f2b84ed18dc45026a4631313eae2a033b89c1afb
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Wed Jan 17 15:13:28 2024 +0800

    drm/lima: fix a memleak in lima_heap_alloc
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 04ae3eb470e52a3c41babe85ff8cee195e4dcbea ]
    
    When lima_vm_map_bo fails, the resources need to be deallocated, or
    there will be memleaks.
    
    Fixes: 6aebc51d7aef ("drm/lima: support heap buffer creation")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Qiang Yu <yuq825@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20240117071328.3811480-1-alexious@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ec6bb037e4a35fcbb5cd7bc78242d034ed893fcd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9f781916adb17aebc463b4f437e5f23783428981
Author: Hsin-Yi Wang <hsinyi@chromium.org>
Date:   Wed Dec 20 14:13:11 2023 -0800

    drm/panel-edp: use put_sync in unprepare
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 49ddab089611ae5ddd0201ddbbf633da75bfcc25 ]
    
    Some edp panel requires T10 (Delay from end of valid video data transmitted
    by the Source device to power-off) less than 500ms. Using autosuspend with
    delay set as 1000 violates this requirement.
    
    Use put_sync_suspend in unprepare to meet the spec. For other cases (such
    as getting EDID), it still uses autosuspend.
    
    Suggested-by: Douglas Anderson <dianders@chromium.org>
    Fixes: 3235b0f20a0a ("drm/panel: panel-simple: Use runtime pm to avoid excessive unprepare / prepare")
    Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231220221418.2610185-1-hsinyi@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bb0ce2b7b2219cd77dda8201dde17fb46fbae55e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 48d81fad646444b404ee1e4c8f13184ed228246e
Author: Quentin Schulz <quentin.schulz@theobroma-systems.com>
Date:   Mon Nov 20 13:29:49 2023 +0100

    drm/rockchip: lvds: do not print scary message when probing defer
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 52d11c863ac92e36a0365249f7f6d27ac48c78bc ]
    
    This scary message can misled the user into thinking something bad has
    happened and needs to be fixed, however it could simply be part of a
    normal boot process where EPROBE_DEFER is taken into account. Therefore,
    let's use dev_err_probe so that this message doesn't get shown (by
    default) when the return code is EPROBE_DEFER.
    
    Fixes: 34cc0aa25456 ("drm/rockchip: Add support for Rockchip Soc LVDS")
    Cc: Quentin Schulz <foss+kernel@0leil.net>
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231120-rk-lvds-defer-msg-v2-2-9c59a5779cf9@theobroma-systems.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fec213b3e12a096f66ce6550e3f893409161231e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c9cfda35cffb6fb137f10bf4be0e18a4c8a878e1
Author: Quentin Schulz <quentin.schulz@theobroma-systems.com>
Date:   Mon Nov 20 13:29:48 2023 +0100

    drm/rockchip: lvds: do not overwrite error code
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 79b09453c4e369ca81cfb670d0136d089e3b92f0 ]
    
    ret variable stores the return value of drm_of_find_panel_or_bridge
    which can return error codes different from EPROBE_DEFER. Therefore,
    let's just return that error code instead of forcing it to EPROBE_DEFER.
    
    Fixes: 34cc0aa25456 ("drm/rockchip: Add support for Rockchip Soc LVDS")
    Cc: Quentin Schulz <foss+kernel@0leil.net>
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231120-rk-lvds-defer-msg-v2-1-9c59a5779cf9@theobroma-systems.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3443d33564380bc2d0a59a54629a571afa95a1ce)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 69fc8e814f48151e99d3712443e47f78d8d64f6e
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Mon Dec 4 17:14:16 2023 +0800

    drm/vmwgfx: fix a memleak in vmw_gmrid_man_get_node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 89709105a6091948ffb6ec2427954cbfe45358ce ]
    
    When ida_alloc_max fails, resources allocated before should be freed,
    including *res allocated by kmalloc and ttm_resource_init.
    
    Fixes: d3bcb4b02fe9 ("drm/vmwgfx: switch the TTM backends to self alloc")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Zack Rusin <zack.rusin@broadcom.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231204091416.3308430-1-alexious@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d1e546ab91c670e536a274a75481034ab7534876)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a3017cc462bc2e2fe308d827da97c61b249927ec
Author: Harry Wentland <harry.wentland@amd.com>
Date:   Wed Nov 8 11:36:24 2023 -0500

    drm/vkms: Avoid reading beyond LUT array
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2fee84030d12d9fddfa874e4562d71761a129277 ]
    
    When the floor LUT index (drm_fixp2int(lut_index) is the last
    index of the array the ceil LUT index will point to an entry
    beyond the array. Make sure we guard against it and use the
    value of the floor LUT index.
    
    v3:
     - Drop bits from commit description that didn't contribute
       anything of value
    
    Fixes: db1f254f2cfa ("drm/vkms: Add support to 1D gamma LUT")
    Signed-off-by: Harry Wentland <harry.wentland@amd.com>
    Cc: Arthur Grillo <arthurgrillo@riseup.net>
    Reviewed-by: Arthur Grillo <arthurgrillo@riseup.net>
    Reviewed-by: Melissa Wen <mwen@igalia.com>
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231108163647.106853-6-harry.wentland@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 92800aaeff51b8358d1e0a7eb74daf8aa2d7ce9d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit aeae27f4d5007b896050f5a6dd9ccbfc2a607010
Author: Harry Wentland <harry.wentland@amd.com>
Date:   Wed Nov 8 11:36:20 2023 -0500

    drm: Don't treat 0 as -1 in drm_fixp2int_ceil
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cf8837d7204481026335461629b84ac7f4538fa5 ]
    
    Unit testing this in VKMS shows that passing 0 into
    this function returns -1, which is highly counter-
    intuitive. Fix it by checking whether the input is
    >= 0 instead of > 0.
    
    Fixes: 64566b5e767f ("drm: Add drm_fixp_from_fraction and drm_fixp2int_ceil")
    Signed-off-by: Harry Wentland <harry.wentland@amd.com>
    Reviewed-by: Simon Ser <contact@emersion.fr>
    Reviewed-by: Melissa Wen <mwen@igalia.com>
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231108163647.106853-2-harry.wentland@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit da2d94af7ba950b33ce7dfd326894460c5536988)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 56ae3174330f501591e3f92bef4437ba88ddc834
Author: Alex Bee <knaerzche@gmail.com>
Date:   Fri Dec 22 18:41:54 2023 +0100

    drm/rockchip: inno_hdmi: Fix video timing
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 47a145c03484d33e65d773169d5ca1b9fe2a492e ]
    
    The controller wants the difference between *total and *sync_start in the
    HDMI_VIDEO_EXT_*DELAY registers. Otherwise the signal is very unstable for
    certain non-VIC modes. See downstream commit [0].
    
    [0] https://github.com/rockchip-linux/kernel/commit/8eb559f2502c
    
    Fixes: 412d4ae6b7a5 ("drm/rockchip: hdmi: add Innosilicon HDMI support")
    Co-developed-by: Zheng Yang <zhengyang@rock-chips.com>
    Signed-off-by: Zheng Yang <zhengyang@rock-chips.com>
    Signed-off-by: Alex Bee <knaerzche@gmail.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231222174220.55249-4-knaerzche@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit eca3c242c5cc7d2e182e2f410431f9d1810970ab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 27c939caf3f07d9486bd3ce81f9e7afce1057d39
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 2 17:22:13 2023 +0200

    drm/tegra: output: Fix missing i2c_put_adapter() in the error handling paths of tegra_output_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2db4578ef6ffb2b52115ca0ebf897b60ec559556 ]
    
    If an error occurs after a successful of_get_i2c_adapter_by_node() call, it
    should be undone by a corresponding i2c_put_adapter().
    
    Add the missing i2c_put_adapter() call.
    
    Fixes: 9be7d864cf07 ("drm/tegra: Implement panel support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/b38604178991e1f08b2cda219103be266be2d680.1693667005.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 89ef8e4982cd28e106b4e0289d450eb473d64217)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fadcee25ed7b4f281ff78df9e61691d6e75f214d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 2 17:22:12 2023 +0200

    drm/tegra: rgb: Fix missing clk_put() in the error handling paths of tegra_dc_rgb_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 45c8034db47842b25a3ab6139d71e13b4e67b9b3 ]
    
    If clk_get_sys(..., "pll_d2_out0") fails, the clk_get_sys() call must be
    undone.
    
    Add the missing clk_put and a new 'put_pll_d_out0' label in the error
    handling path, and use it.
    
    Fixes: 0c921b6d4ba0 ("drm/tegra: dc: rgb: Allow changing PLLD rate on Tegra30+")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/0182895ead4e4730426616b0d9995954c960b634.1693667005.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fa74e4f5d0821829545b9f7034a0e577c205c101)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e13309c5847dcea7983c5367dac044c23492db7c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 2 17:22:11 2023 +0200

    drm/tegra: rgb: Fix some error handling paths in tegra_dc_rgb_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bc456b5d93dbfdbd89f2a036f4f3d8026595f9e4 ]
    
    If an error occurs after calling tegra_output_probe(),
    tegra_output_remove() should be called as already done in the remove
    function.
    
    Fixes: 59d29c0ec93f ("drm/tegra: Allocate resources at probe time")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/0001f61eb89048bc36241629b564195689cf54b6.1693667005.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 604d50b9ceb27446dbcc639c09bc563747365bde)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit be9d97ef08d6a9213c011723ddfc67f3f045ed7f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 2 17:22:10 2023 +0200

    drm/tegra: hdmi: Fix some error handling paths in tegra_hdmi_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 643ae131b8598fb2940c92c7d23fe62823a119c8 ]
    
    If an error occurs after calling tegra_output_probe(),
    tegra_output_remove() should be called as already done in the remove
    function.
    
    Fixes: 59d29c0ec93f ("drm/tegra: Allocate resources at probe time")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/9b7c564eb71977678b20abd73ee52001a51cf327.1693667005.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bebacbe976c6bfad87e1d43f36e50d7ee1c45075)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 225598b625f2a67e1e350edfa667315ecdb76b4d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 2 17:22:09 2023 +0200

    drm/tegra: dsi: Fix missing pm_runtime_disable() in the error handling path of tegra_dsi_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5286a9fc280c45b6b307ee1b07f7a997e042252c ]
    
    If an error occurs after calling pm_runtime_enable(), pm_runtime_disable()
    should be called as already done in the remove function.
    
    Fixes: ef8187d75265 ("drm/tegra: dsi: Implement runtime PM")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/ee4a15c9cd4b574a55cd67c30d2411239ba2cee9.1693667005.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c5733762aef1ddac27b54f82a9cb3deeb84ee9d9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c9682d5a9bbf9e4505c9a5c4203de4023d3a0a08
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 2 17:22:08 2023 +0200

    drm/tegra: dsi: Fix some error handling paths in tegra_dsi_probe()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 830c1ded356369cd1303e8bb87ce3fea6e744de8 ]
    
    If an error occurs after calling tegra_output_probe(),
    tegra_output_remove() should be called as already done in the remove
    function.
    
    Fixes: dec727399a4b ("drm/tegra: Add DSI support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/16820073278d031f6c474a08d5f22a255158585e.1693667005.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 374068b3e629d57ce44318297a3903c10ba07357)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 551a3894cc1ff62a502124a59eff23cfd2cc192d
Author: Zhang Shurong <zhang_shurong@foxmail.com>
Date:   Wed Oct 4 22:10:55 2023 +0800

    drm/tegra: dpaux: Fix PM disable depth imbalance in tegra_dpaux_probe
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0800880f4eb789b7d299db40f2e86e056bd33a4e ]
    
    The pm_runtime_enable function increases the power disable depth,
    which means that we must perform a matching decrement on the error
    handling path to maintain balance within the given context.
    Additionally, we need to address the same issue for pm_runtime_get_sync.
    We fix this by invoking pm_runtime_disable and pm_runtime_put_sync
    when error returns.
    
    Fixes: 82b81b3ec1a7 ("drm/tegra: dpaux: Implement runtime PM")
    Signed-off-by: Zhang Shurong <zhang_shurong@foxmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/tencent_B13DB7F6C0023C46157250A524966F326A09@qq.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b8cde2bb3cd3eb24d6b732f884dd8b7c380601e5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1883c93da11dc41178939d3b8e81dad31e871841
Author: Chen Ni <nichen@iscas.ac.cn>
Date:   Tue Oct 24 08:07:38 2023 +0000

    drm/tegra: dsi: Add missing check for of_find_device_by_node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit afe6fcb9775882230cd29b529203eabd5d2a638d ]
    
    Add check for the return value of of_find_device_by_node() and return
    the error if it fails in order to avoid NULL pointer dereference.
    
    Fixes: e94236cde4d5 ("drm/tegra: dsi: Add ganged mode support")
    Signed-off-by: Chen Ni <nichen@iscas.ac.cn>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231024080738.825553-1-nichen@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3169eaf1365541fd8e521091010c44fbe14691fc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a9148b103089a581cb056de658217ed0fe7c870
Author: Brian Masney <bmasney@redhat.com>
Date:   Tue Dec 12 14:57:54 2023 -0500

    fbdev/simplefb: change loglevel when the power domains cannot be parsed
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4350aa21cca48a5d951ba108290bad703fbc0630 ]
    
    When the power domains cannot be parsed, the message is incorrectly
    logged as an info message. Let's change this to an error since an error
    is returned.
    
    Fixes: 92a511a568e4 ("fbdev/simplefb: Add support for generic power-domains")
    Signed-off-by: Brian Masney <bmasney@redhat.com>
    Acked-by: Andrew Halaney <ahalaney@redhat.com>
    Acked-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20231212195754.232303-1-bmasney@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e45095a0c37742b6c22b0a74a94c1ca4229e322f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 644d60667e6ebd81b95405be05ba073be7227e1c
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Mar 11 15:06:39 2024 +0100

    dm: call the resume method on internal suspend
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 65e8fbde64520001abf1c8d0e573561b4746ef38 ]
    
    There is this reported crash when experimenting with the lvm2 testsuite.
    The list corruption is caused by the fact that the postsuspend and resume
    methods were not paired correctly; there were two consecutive calls to the
    origin_postsuspend function. The second call attempts to remove the
    "hash_list" entry from a list, while it was already removed by the first
    call.
    
    Fix __dm_internal_resume so that it calls the preresume and resume
    methods of the table's targets.
    
    If a preresume method of some target fails, we are in a tricky situation.
    We can't return an error because dm_internal_resume isn't supposed to
    return errors. We can't return success, because then the "resume" and
    "postsuspend" methods would not be paired correctly. So, we set the
    DMF_SUSPENDED flag and we fake normal suspend - it may confuse userspace
    tools, but it won't cause a kernel crash.
    
    ------------[ cut here ]------------
    kernel BUG at lib/list_debug.c:56!
    invalid opcode: 0000 [#1] PREEMPT SMP
    CPU: 1 PID: 8343 Comm: dmsetup Not tainted 6.8.0-rc6 #4
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
    RIP: 0010:__list_del_entry_valid_or_report+0x77/0xc0
    <snip>
    RSP: 0018:ffff8881b831bcc0 EFLAGS: 00010282
    RAX: 000000000000004e RBX: ffff888143b6eb80 RCX: 0000000000000000
    RDX: 0000000000000001 RSI: ffffffff819053d0 RDI: 00000000ffffffff
    RBP: ffff8881b83a3400 R08: 00000000fffeffff R09: 0000000000000058
    R10: 0000000000000000 R11: ffffffff81a24080 R12: 0000000000000001
    R13: ffff88814538e000 R14: ffff888143bc6dc0 R15: ffffffffa02e4bb0
    FS:  00000000f7c0f780(0000) GS:ffff8893f0a40000(0000) knlGS:0000000000000000
    CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
    CR2: 0000000057fb5000 CR3: 0000000143474000 CR4: 00000000000006b0
    Call Trace:
     <TASK>
     ? die+0x2d/0x80
     ? do_trap+0xeb/0xf0
     ? __list_del_entry_valid_or_report+0x77/0xc0
     ? do_error_trap+0x60/0x80
     ? __list_del_entry_valid_or_report+0x77/0xc0
     ? exc_invalid_op+0x49/0x60
     ? __list_del_entry_valid_or_report+0x77/0xc0
     ? asm_exc_invalid_op+0x16/0x20
     ? table_deps+0x1b0/0x1b0 [dm_mod]
     ? __list_del_entry_valid_or_report+0x77/0xc0
     origin_postsuspend+0x1a/0x50 [dm_snapshot]
     dm_table_postsuspend_targets+0x34/0x50 [dm_mod]
     dm_suspend+0xd8/0xf0 [dm_mod]
     dev_suspend+0x1f2/0x2f0 [dm_mod]
     ? table_deps+0x1b0/0x1b0 [dm_mod]
     ctl_ioctl+0x300/0x5f0 [dm_mod]
     dm_compat_ctl_ioctl+0x7/0x10 [dm_mod]
     __x64_compat_sys_ioctl+0x104/0x170
     do_syscall_64+0x184/0x1b0
     entry_SYSCALL_64_after_hwframe+0x46/0x4e
    RIP: 0033:0xf7e6aead
    <snip>
    ---[ end trace 0000000000000000 ]---
    
    Fixes: ffcc39364160 ("dm: enhance internal suspend and resume interface")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 360a7d1be8112654f1fb328ed3862be630bca3f4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7d98d294687a77656e6222c7cc0d7ea45fe4f891
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Mar 11 13:42:55 2024 -0400

    dm raid: fix false positive for requeue needed during reshape
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b25b8f4b8ecef0f48c05f0c3572daeabefe16526 ]
    
    An empty flush doesn't have a payload, so it should never be looked at
    when considering to possibly requeue a bio for the case when a reshape
    is in progress.
    
    Fixes: 9dbd1aa3a81c ("dm raid: add reshaping support to the target")
    Reported-by: Patrick Plenefisch <simonpatp@gmail.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ff0966568041e104e491940e8ea4aee027138f4f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ee32aaa79c240b0b744842383c36e7369591c196
Author: Puranjay Mohan <puranjay12@gmail.com>
Date:   Mon Mar 11 12:27:22 2024 +0000

    bpf: hardcode BPF_PROG_PACK_SIZE to 2MB * num_possible_nodes()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d6170e4aaf86424c24ce06e355b4573daa891b17 ]
    
    On some architectures like ARM64, PMD_SIZE can be really large in some
    configurations. Like with CONFIG_ARM64_64K_PAGES=y the PMD_SIZE is
    512MB.
    
    Use 2MB * num_possible_nodes() as the size for allocations done through
    the prog pack allocator. On most architectures, PMD_SIZE will be equal
    to 2MB in case of 4KB pages and will be greater than 2MB for bigger page
    sizes.
    
    Fixes: ea2babac63d4 ("bpf: Simplify bpf_prog_pack_[size|mask]")
    Reported-by: "kernelci.org bot" <bot@kernelci.org>
    Closes: https://lore.kernel.org/all/7e216c88-77ee-47b8-becc-a0f780868d3c@sirena.org.uk/
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202403092219.dhgcuz2G-lkp@intel.com/
    Suggested-by: Song Liu <song@kernel.org>
    Signed-off-by: Puranjay Mohan <puranjay12@gmail.com>
    Message-ID: <20240311122722.86232-1-puranjay12@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 989d8a754385fbc2f22a7139f00229ae4df63387)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0b25c3f8c0e91f9e9a17d60787d26fa1e475c1e3
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Fri Mar 8 22:25:40 2024 +0800

    nfp: flower: handle acti_netdevs allocation failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 84e95149bd341705f0eca6a7fcb955c548805002 ]
    
    The kmalloc_array() in nfp_fl_lag_do_work() will return null, if
    the physical memory has run out. As a result, if we dereference
    the acti_netdevs, the null pointer dereference bugs will happen.
    
    This patch adds a check to judge whether allocation failure occurs.
    If it happens, the delayed work will be rescheduled and try again.
    
    Fixes: bb9a8d031140 ("nfp: flower: monitor and offload LAG groups")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Louis Peens <louis.peens@corigine.com>
    Link: https://lore.kernel.org/r/20240308142540.9674-1-duoming@zju.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9d8eb1238377cd994829f9162ae396a84ae037b2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 589439dc3606ed46f01532ba3c2edd75f6e97052
Author: Hayes Wang <hayeswang@realtek.com>
Date:   Fri Mar 8 15:52:06 2024 +0800

    r8152: fix unknown device for choose_configuration
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 46590b545df636aea0f9f7f2100d9963c0af5824 ]
    
    For the unknown device, rtl8152_cfgselector_choose_configuration()
    should return a negative value. Then, usb_choose_configuration() would
    set a configuration for CDC ECM or NCM mode. Otherwise, there is no
    usb interface driver for the device.
    
    Fixes: aa4f2b3e418e ("r8152: Choose our USB config with choose_configuration() rather than probe()")
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Link: https://lore.kernel.org/r/20240308075206.33553-436-nic_swsd@realtek.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0a7bad4d66fd49f7f3acd33d1341d7def20d1fb7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 73543ede981d67735a2d8da84578bb9f17cdd793
Author: William Tu <witu@nvidia.com>
Date:   Sun Mar 10 18:45:47 2024 +0200

    devlink: Fix length of eswitch inline-mode
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8f4cd89bf10607de08231d6d91a73dd63336808e ]
    
    Set eswitch inline-mode to be u8, not u16. Otherwise, errors below
    
    $ devlink dev eswitch set pci/0000:08:00.0 mode switchdev \
      inline-mode network
        Error: Attribute failed policy validation.
        kernel answers: Numerical result out of rang
        netlink: 'devlink': attribute type 26 has an invalid length.
    
    Fixes: f2f9dd164db0 ("netlink: specs: devlink: add the remaining command to generate complete split_ops")
    Signed-off-by: William Tu <witu@nvidia.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Link: https://lore.kernel.org/r/20240310164547.35219-1-witu@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7e48f2b8384a9f8e4cc7757c6724f9bc518ba7ab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4ae37bf83666e5a3d33778b7d6a360d8fd0affaf
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Thu Mar 7 14:23:50 2024 +0000

    net/x25: fix incorrect parameter validation in the x25_getsockopt() function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d6eb8de2015f0c24822e47356f839167ebde2945 ]
    
    The 'len' variable can't be negative when assigned the result of
    'min_t' because all 'min_t' parameters are cast to unsigned int,
    and then the minimum one is chosen.
    
    To fix the logic, check 'len' as read from 'optlen',
    where the types of relevant variables are (signed) int.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 856c83241271ece3cbcf2758195acddf9b815891)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit df0ff097825ab41ff03249b58737e087ce225f96
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Thu Mar 7 14:23:50 2024 +0000

    net: kcm: fix incorrect parameter validation in the kcm_getsockopt) function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3ed5f415133f9b7518fbe55ba9ae9a3f5e700929 ]
    
    The 'len' variable can't be negative when assigned the result of
    'min_t' because all 'min_t' parameters are cast to unsigned int,
    and then the minimum one is chosen.
    
    To fix the logic, check 'len' as read from 'optlen',
    where the types of relevant variables are (signed) int.
    
    Fixes: ab7ac4eb9832 ("kcm: Kernel Connection Multiplexor module")
    Signed-off-by: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8b409c7cf3600ef3307fcde582d925fd1a6a76e8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a7e5358a60469df71e1848f10a00435bd9bad38
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Thu Mar 7 14:23:50 2024 +0000

    udp: fix incorrect parameter validation in the udp_lib_getsockopt() function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4bb3ba7b74fceec6f558745b25a43c6521cf5506 ]
    
    The 'len' variable can't be negative when assigned the result of
    'min_t' because all 'min_t' parameters are cast to unsigned int,
    and then the minimum one is chosen.
    
    To fix the logic, check 'len' as read from 'optlen',
    where the types of relevant variables are (signed) int.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2773d355f05052b0dd43d10d87c9d1c1bbd28dcc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7c842f249253ba5ba5f51d2b75c9bea488ce9d50
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Thu Mar 7 14:23:50 2024 +0000

    l2tp: fix incorrect parameter validation in the pppol2tp_getsockopt() function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 955e9876ba4ee26eeaab1b13517f5b2c88e73d55 ]
    
    The 'len' variable can't be negative when assigned the result of
    'min_t' because all 'min_t' parameters are cast to unsigned int,
    and then the minimum one is chosen.
    
    To fix the logic, check 'len' as read from 'optlen',
    where the types of relevant variables are (signed) int.
    
    Fixes: 3557baabf280 ("[L2TP]: PPP over L2TP driver core")
    Reviewed-by: Tom Parkin <tparkin@katalix.com>
    Signed-off-by: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 393f4d390ec0ef839ebda8d63ff720f90493fb5c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7df31cb7e1d21c5989aa34ab683462c2994ed7d2
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Thu Mar 7 14:23:50 2024 +0000

    ipmr: fix incorrect parameter validation in the ip_mroute_getsockopt() function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5c3be3e0eb44b7f978bb6cbb20ad956adb93f736 ]
    
    The 'olr' variable can't be negative when assigned the result of
    'min_t' because all 'min_t' parameters are cast to unsigned int,
    and then the minimum one is chosen.
    
    To fix the logic, check 'olr' as read from 'optlen',
    where the types of relevant variables are (signed) int.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8f8b3881d46b13773307c65251bafb2929c5820d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3f24bee5e704312363c3e11e8155942c04aee5f4
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Thu Mar 7 14:23:49 2024 +0000

    tcp: fix incorrect parameter validation in the do_tcp_getsockopt() function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 716edc9706deb3bb2ff56e2eeb83559cea8f22db ]
    
    The 'len' variable can't be negative when assigned the result of
    'min_t' because all 'min_t' parameters are cast to unsigned int,
    and then the minimum one is chosen.
    
    To fix the logic, check 'len' as read from 'optlen',
    where the types of relevant variables are (signed) int.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
    Reviewed-by: Jason Xing <kerneljasonxing@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 693a17d5e57e6fd7f295417562322857c4aaedfd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4fd9ba80f99e9b9661e3e9081a073401571a0f12
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Mon Mar 4 16:48:28 2024 +0530

    OPP: debugfs: Fix warning around icc_get_name()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 28330ceb953e39880ea77da4895bb902a1244860 ]
    
    If the kernel isn't built with interconnect support, icc_get_name()
    returns NULL and we get following warning:
    
    drivers/opp/debugfs.c: In function 'bw_name_read':
    drivers/opp/debugfs.c:43:42: error: '%.62s' directive argument is null [-Werror=format-overflow=]
             i = scnprintf(buf, sizeof(buf), "%.62s\n", icc_get_name(path));
    
    Fix it.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202402141313.81ltVF5g-lkp@intel.com/
    Fixes: 0430b1d5704b0 ("opp: Expose bandwidth information via debugfs")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Dhruva Gole <d-gole@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dbfd6752af430dae4b3807843313072bbd88715c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 01cc7c76ac4334065f20ea1186beff3477512800
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Mar 7 18:10:18 2024 +0800

    erofs: fix lockdep false positives on initializing erofs_pseudo_mnt
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0f28be64d132aaf95d06375c8002ad9ecea69d71 ]
    
    Lockdep reported the following issue when mounting erofs with a domain_id:
    
    ============================================
    WARNING: possible recursive locking detected
    6.8.0-rc7-xfstests #521 Not tainted
    --------------------------------------------
    mount/396 is trying to acquire lock:
    ffff907a8aaaa0e0 (&type->s_umount_key#50/1){+.+.}-{3:3},
                                                    at: alloc_super+0xe3/0x3d0
    
    but task is already holding lock:
    ffff907a8aaa90e0 (&type->s_umount_key#50/1){+.+.}-{3:3},
                                                    at: alloc_super+0xe3/0x3d0
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(&type->s_umount_key#50/1);
      lock(&type->s_umount_key#50/1);
    
     *** DEADLOCK ***
    
     May be due to missing lock nesting notation
    
    2 locks held by mount/396:
     #0: ffff907a8aaa90e0 (&type->s_umount_key#50/1){+.+.}-{3:3},
                            at: alloc_super+0xe3/0x3d0
     #1: ffffffffc00e6f28 (erofs_domain_list_lock){+.+.}-{3:3},
                            at: erofs_fscache_register_fs+0x3d/0x270 [erofs]
    
    stack backtrace:
    CPU: 1 PID: 396 Comm: mount Not tainted 6.8.0-rc7-xfstests #521
    Call Trace:
     <TASK>
     dump_stack_lvl+0x64/0xb0
     validate_chain+0x5c4/0xa00
     __lock_acquire+0x6a9/0xd50
     lock_acquire+0xcd/0x2b0
     down_write_nested+0x45/0xd0
     alloc_super+0xe3/0x3d0
     sget_fc+0x62/0x2f0
     vfs_get_super+0x21/0x90
     vfs_get_tree+0x2c/0xf0
     fc_mount+0x12/0x40
     vfs_kern_mount.part.0+0x75/0x90
     kern_mount+0x24/0x40
     erofs_fscache_register_fs+0x1ef/0x270 [erofs]
     erofs_fc_fill_super+0x213/0x380 [erofs]
    
    This is because the file_system_type of both erofs and the pseudo-mount
    point of domain_id is erofs_fs_type, so two successive calls to
    alloc_super() are considered to be using the same lock and trigger the
    warning above.
    
    Therefore add a nodev file_system_type called erofs_anon_fs_type in
    fscache.c to silence this complaint. Because kern_mount() takes a
    pointer to struct file_system_type, not its (string) name. So we don't
    need to call register_filesystem(). In addition, call init_pseudo() in
    erofs_anon_init_fs_context() as suggested by Al Viro, so that we can
    remove erofs_fc_fill_pseudo_super(), erofs_fc_anon_get_tree(), and
    erofs_anon_context_ops.
    
    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
    Fixes: a9849560c55e ("erofs: introduce a pseudo mnt to manage shared cookies")
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-and-tested-by: Jingbo Xu <jefflexu@linux.alibaba.com>
    Reviewed-by: Yang Erkun <yangerkun@huawei.com>
    Link: https://lore.kernel.org/r/20240307101018.2021925-1-libaokun1@huawei.com
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b50efb417caf610f3300095f93bd23adfb4b2218)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bd35de2f126a59ab6c79ee94411abb55c126ec5e
Author: Tim Pambor <tp@osasysteme.de>
Date:   Tue Mar 5 12:06:08 2024 +0100

    net: phy: dp83822: Fix RGMII TX delay configuration
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c8a5c731fd1223090af57da33838c671a7fc6a78 ]
    
    The logic for enabling the TX clock shift is inverse of enabling the RX
    clock shift. The TX clock shift is disabled when DP83822_TX_CLK_SHIFT is
    set. Correct the current behavior and always write the delay configuration
    to ensure consistent delay settings regardless of bootloader configuration.
    
    Reference: https://www.ti.com/lit/ds/symlink/dp83822i.pdf p. 69
    
    Fixes: 8095295292b5 ("net: phy: DP83822: Add setting the fixed internal delay")
    Signed-off-by: Tim Pambor <tp@osasysteme.de>
    Link: https://lore.kernel.org/r/20240305110608.104072-1-tp@osasysteme.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c1ff4934c2c04ce6278ad2578e8228aaa7c9272e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c013bf1b5873f6721482fef7c94c470e6e496779
Author: Frédéric Danis <frederic.danis@collabora.com>
Date:   Thu Mar 7 17:42:05 2024 +0100

    Bluetooth: Fix eir name length
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2ab3e8d67fc1d4a7638b769cf83023ec209fc0a9 ]
    
    According to Section 1.2 of Core Specification Supplement Part A the
    complete or short name strings are defined as utf8s, which should not
    include the trailing NULL for variable length array as defined in Core
    Specification Vol1 Part E Section 2.9.3.
    
    Removing the trailing NULL allows PTS to retrieve the random address based
    on device name, e.g. for SM/PER/KDU/BV-02-C, SM/PER/KDU/BV-08-C or
    GAP/BROB/BCST/BV-03-C.
    
    Fixes: f61851f64b17 ("Bluetooth: Fix append max 11 bytes of name to scan rsp data")
    Signed-off-by: Frédéric Danis <frederic.danis@collabora.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 11265bbeefd2574ddbcb4361204ebe481af82245)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c9131c851fc519488482290c4689c03faff901f1
Author: Jie Wang <wangjie125@huawei.com>
Date:   Thu Mar 7 09:01:14 2024 +0800

    net: hns3: fix port duplex configure error in IMP reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 11d80f79dd9f871a52feba4bf24b5ac39f448eb7 ]
    
    Currently, the mac port is fixed to configured as full dplex mode in
    hclge_mac_init() when driver initialization or reset restore. Users may
    change the mode to half duplex with ethtool,  so it may cause the user
    configuration dropped after reset.
    
    To fix it, don't change the duplex mode when resetting.
    
    Fixes: 2d03eacc0b7e ("net: hns3: Only update mac configuation when necessary")
    Signed-off-by: Jie Wang <wangjie125@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e9ecdddb4577310c2652b6ce9dc8f7700926979f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 97a78fc5e4645626a61abff070c3369420335ef4
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Thu Mar 7 09:01:11 2024 +0800

    net: hns3: fix kernel crash when 1588 is received on HIP08 devices
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0fbcf2366ba9888cf02eda23e35fde7f7fcc07c3 ]
    
    The HIP08 devices does not register the ptp devices, so the
    hdev->ptp is NULL, but the hardware can receive 1588 messages,
    and set the HNS3_RXD_TS_VLD_B bit, so, if match this case, the
    access of hdev->ptp->flags will cause a kernel crash:
    
    [ 5888.946472] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000018
    [ 5888.946475] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000018
    ...
    [ 5889.266118] pc : hclge_ptp_get_rx_hwts+0x40/0x170 [hclge]
    [ 5889.272612] lr : hclge_ptp_get_rx_hwts+0x34/0x170 [hclge]
    [ 5889.279101] sp : ffff800012c3bc50
    [ 5889.283516] x29: ffff800012c3bc50 x28: ffff2040002be040
    [ 5889.289927] x27: ffff800009116484 x26: 0000000080007500
    [ 5889.296333] x25: 0000000000000000 x24: ffff204001c6f000
    [ 5889.302738] x23: ffff204144f53c00 x22: 0000000000000000
    [ 5889.309134] x21: 0000000000000000 x20: ffff204004220080
    [ 5889.315520] x19: ffff204144f53c00 x18: 0000000000000000
    [ 5889.321897] x17: 0000000000000000 x16: 0000000000000000
    [ 5889.328263] x15: 0000004000140ec8 x14: 0000000000000000
    [ 5889.334617] x13: 0000000000000000 x12: 00000000010011df
    [ 5889.340965] x11: bbfeff4d22000000 x10: 0000000000000000
    [ 5889.347303] x9 : ffff800009402124 x8 : 0200f78811dfbb4d
    [ 5889.353637] x7 : 2200000000191b01 x6 : ffff208002a7d480
    [ 5889.359959] x5 : 0000000000000000 x4 : 0000000000000000
    [ 5889.366271] x3 : 0000000000000000 x2 : 0000000000000000
    [ 5889.372567] x1 : 0000000000000000 x0 : ffff20400095c080
    [ 5889.378857] Call trace:
    [ 5889.382285] hclge_ptp_get_rx_hwts+0x40/0x170 [hclge]
    [ 5889.388304] hns3_handle_bdinfo+0x324/0x410 [hns3]
    [ 5889.394055] hns3_handle_rx_bd+0x60/0x150 [hns3]
    [ 5889.399624] hns3_clean_rx_ring+0x84/0x170 [hns3]
    [ 5889.405270] hns3_nic_common_poll+0xa8/0x220 [hns3]
    [ 5889.411084] napi_poll+0xcc/0x264
    [ 5889.415329] net_rx_action+0xd4/0x21c
    [ 5889.419911] __do_softirq+0x130/0x358
    [ 5889.424484] irq_exit+0x134/0x154
    [ 5889.428700] __handle_domain_irq+0x88/0xf0
    [ 5889.433684] gic_handle_irq+0x78/0x2c0
    [ 5889.438319] el1_irq+0xb8/0x140
    [ 5889.442354] arch_cpu_idle+0x18/0x40
    [ 5889.446816] default_idle_call+0x5c/0x1c0
    [ 5889.451714] cpuidle_idle_call+0x174/0x1b0
    [ 5889.456692] do_idle+0xc8/0x160
    [ 5889.460717] cpu_startup_entry+0x30/0xfc
    [ 5889.465523] secondary_start_kernel+0x158/0x1ec
    [ 5889.470936] Code: 97ffab78 f9411c14 91408294 f9457284 (f9400c80)
    [ 5889.477950] SMP: stopping secondary CPUs
    [ 5890.514626] SMP: failed to stop secondary CPUs 0-69,71-95
    [ 5890.522951] Starting crashdump kernel...
    
    Fixes: 0bf5eb788512 ("net: hns3: add support for PTP")
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 11b998360d96f6c76f04a95f54b49f24d3c858e4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 99b375593bcd153b99dd43a3e1253062541cdebc
Author: Jijie Shao <shaojijie@huawei.com>
Date:   Thu Mar 7 09:01:08 2024 +0800

    net: hns3: fix wrong judgment condition issue
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 07a1d6dc90baedcf5d713e2b003b9e387130ee30 ]
    
    In hns3_dcbnl_ieee_delapp, should check ieee_delapp not ieee_setapp.
    This path fix the wrong judgment.
    
    Fixes: 0ba22bcb222d ("net: hns3: add support config dscp map to tc")
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 864ce01eec2ae0a6eb07ce5f3ac1fde083c86dc5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f4216723f6bf48aacee132ea5e12b729d35100dc
Author: Jiri Pirko <jiri@resnulli.us>
Date:   Wed Mar 6 16:12:40 2024 +0100

    dpll: fix dpll_xa_ref_*_del() for multiple registrations
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b446631f355ece73b13c311dd712c47381a23172 ]
    
    Currently, if there are multiple registrations of the same pin on the
    same dpll device, following warnings are observed:
    WARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:143 dpll_xa_ref_pin_del.isra.0+0x21e/0x230
    WARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:223 __dpll_pin_unregister+0x2b3/0x2c0
    
    The problem is, that in both dpll_xa_ref_dpll_del() and
    dpll_xa_ref_pin_del() registration is only removed from list in case the
    reference count drops to zero. That is wrong, the registration has to
    be removed always.
    
    To fix this, remove the registration from the list and free
    it unconditionally, instead of doing it only when the ref reference
    counter reaches zero.
    
    Fixes: 9431063ad323 ("dpll: core: Add DPLL framework base functions")
    Signed-off-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Rahul Rameshbabu <rrameshbabu@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b27e32e9367dac024cd6f61f22655714f483fd67)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cfe541c05d4023a51cc361935fa7abf3f2aeeac1
Author: Kévin L'hôpital <kevin.lhopital@savoirfairelinux.com>
Date:   Thu Mar 7 12:19:06 2024 +0100

    net: phy: fix phy_get_internal_delay accessing an empty array
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4469c0c5b14a0919f5965c7ceac96b523eb57b79 ]
    
    The phy_get_internal_delay function could try to access to an empty
    array in the case that the driver is calling phy_get_internal_delay
    without defining delay_values and rx-internal-delay-ps or
    tx-internal-delay-ps is defined to 0 in the device-tree.
    This will lead to "unable to handle kernel NULL pointer dereference at
    virtual address 0". To avoid this kernel oops, the test should be delay
    >= 0. As there is already delay < 0 test just before, the test could
    only be size == 0.
    
    Fixes: 92252eec913b ("net: phy: Add a helper to return the index for of the internal delay")
    Co-developed-by: Enguerrand de Ribaucourt <enguerrand.de-ribaucourt@savoirfairelinux.com>
    Signed-off-by: Enguerrand de Ribaucourt <enguerrand.de-ribaucourt@savoirfairelinux.com>
    Signed-off-by: Kévin L'hôpital <kevin.lhopital@savoirfairelinux.com>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0307cf443308ecc6be9b2ca312bb31bae5e5a7ad)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 05c15637ac38b51f5cd8a402490468630170f7e2
Author: Sunil Goutham <sgoutham@marvell.com>
Date:   Thu Mar 7 16:26:23 2024 +0530

    octeontx2-af: Fix devlink params
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fc1b2901e0feed933aaee273d0b0ca961539f4d7 ]
    
    Devlink param for adjusting NPC MCAM high zone
    area is in wrong param list and is not getting
    activated on CN10KA silicon.
    That patch fixes this issue.
    
    Fixes: dd7842878633 ("octeontx2-af: Add new devlink param to configure maximum usable NIX block LFs")
    Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
    Signed-off-by: Sai Krishna <saikrishnag@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b40e216f58dc02df97715cca79e603cc3f8f7d72)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6aee343ec5c68c24f6ce024d7578c42eb7fab4e0
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 7 10:07:16 2024 +0000

    net: ip_tunnel: make sure to pull inner header in ip_tunnel_rcv()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b0ec2abf98267f14d032102551581c833b0659d3 ]
    
    Apply the same fix than ones found in :
    
    8d975c15c0cd ("ip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()")
    1ca1ba465e55 ("geneve: make sure to pull inner header in geneve_rx()")
    
    We have to save skb->network_header in a temporary variable
    in order to be able to recompute the network_header pointer
    after a pskb_inet_may_pull() call.
    
    pskb_inet_may_pull() makes sure the needed headers are in skb->head.
    
    syzbot reported:
    BUG: KMSAN: uninit-value in __INET_ECN_decapsulate include/net/inet_ecn.h:253 [inline]
     BUG: KMSAN: uninit-value in INET_ECN_decapsulate include/net/inet_ecn.h:275 [inline]
     BUG: KMSAN: uninit-value in IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]
     BUG: KMSAN: uninit-value in ip_tunnel_rcv+0xed9/0x2ed0 net/ipv4/ip_tunnel.c:409
      __INET_ECN_decapsulate include/net/inet_ecn.h:253 [inline]
      INET_ECN_decapsulate include/net/inet_ecn.h:275 [inline]
      IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]
      ip_tunnel_rcv+0xed9/0x2ed0 net/ipv4/ip_tunnel.c:409
      __ipgre_rcv+0x9bc/0xbc0 net/ipv4/ip_gre.c:389
      ipgre_rcv net/ipv4/ip_gre.c:411 [inline]
      gre_rcv+0x423/0x19f0 net/ipv4/ip_gre.c:447
      gre_rcv+0x2a4/0x390 net/ipv4/gre_demux.c:163
      ip_protocol_deliver_rcu+0x264/0x1300 net/ipv4/ip_input.c:205
      ip_local_deliver_finish+0x2b8/0x440 net/ipv4/ip_input.c:233
      NF_HOOK include/linux/netfilter.h:314 [inline]
      ip_local_deliver+0x21f/0x490 net/ipv4/ip_input.c:254
      dst_input include/net/dst.h:461 [inline]
      ip_rcv_finish net/ipv4/ip_input.c:449 [inline]
      NF_HOOK include/linux/netfilter.h:314 [inline]
      ip_rcv+0x46f/0x760 net/ipv4/ip_input.c:569
      __netif_receive_skb_one_core net/core/dev.c:5534 [inline]
      __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5648
      netif_receive_skb_internal net/core/dev.c:5734 [inline]
      netif_receive_skb+0x58/0x660 net/core/dev.c:5793
      tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1556
      tun_get_user+0x53b9/0x66e0 drivers/net/tun.c:2009
      tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2055
      call_write_iter include/linux/fs.h:2087 [inline]
      new_sync_write fs/read_write.c:497 [inline]
      vfs_write+0xb6b/0x1520 fs/read_write.c:590
      ksys_write+0x20f/0x4c0 fs/read_write.c:643
      __do_sys_write fs/read_write.c:655 [inline]
      __se_sys_write fs/read_write.c:652 [inline]
      __x64_sys_write+0x93/0xd0 fs/read_write.c:652
      do_syscall_x64 arch/x86/entry/common.c:52 [inline]
      do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
     entry_SYSCALL_64_after_hwframe+0x63/0x6b
    
    Uninit was created at:
      __alloc_pages+0x9a6/0xe00 mm/page_alloc.c:4590
      alloc_pages_mpol+0x62b/0x9d0 mm/mempolicy.c:2133
      alloc_pages+0x1be/0x1e0 mm/mempolicy.c:2204
      skb_page_frag_refill+0x2bf/0x7c0 net/core/sock.c:2909
      tun_build_skb drivers/net/tun.c:1686 [inline]
      tun_get_user+0xe0a/0x66e0 drivers/net/tun.c:1826
      tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2055
      call_write_iter include/linux/fs.h:2087 [inline]
      new_sync_write fs/read_write.c:497 [inline]
      vfs_write+0xb6b/0x1520 fs/read_write.c:590
      ksys_write+0x20f/0x4c0 fs/read_write.c:643
      __do_sys_write fs/read_write.c:655 [inline]
      __se_sys_write fs/read_write.c:652 [inline]
      __x64_sys_write+0x93/0xd0 fs/read_write.c:652
      do_syscall_x64 arch/x86/entry/common.c:52 [inline]
      do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
     entry_SYSCALL_64_after_hwframe+0x63/0x6b
    
    Fixes: c54419321455 ("GRE: Refactor GRE tunneling code.")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ca914f1cdee8a85799942c9b0ce5015bbd6844e1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 143d6a6e696c71f108f2cc0917cb60979edb8953
Author: Shiming Cheng <shiming.cheng@mediatek.com>
Date:   Thu Mar 7 18:01:57 2024 +0800

    ipv6: fib6_rules: flush route cache when rule is changed
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c4386ab4f6c600f75fdfd21143f89bac3e625d0d ]
    
    When rule policy is changed, ipv6 socket cache is not refreshed.
    The sock's skb still uses a outdated route cache and was sent to
    a wrong interface.
    
    To avoid this error we should update fib node's version when
    rule is changed. Then skb's route will be reroute checked as
    route cache version is already different with fib node version.
    The route cache is refreshed to match the latest rule.
    
    Fixes: 101367c2f8c4 ("[IPV6]: Policy Routing Rules")
    Signed-off-by: Shiming Cheng <shiming.cheng@mediatek.com>
    Signed-off-by: Lena Wang <lena.wang@mediatek.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d27460be824241af3ff12a08dee33220da8c33c1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0580672a1a7f7cdb23bcad6262b0ec03b5d4d0bd
Author: Bert Karwatzki <spasswolf@web.de>
Date:   Thu Mar 7 20:44:19 2024 +0100

    iommu: Fix compilation without CONFIG_IOMMU_INTEL
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 70bad345e622c23bb530016925c936ab04a646ac ]
    
    When the kernel is comiled with CONFIG_IRQ_REMAP=y but without
    CONFIG_IOMMU_INTEL compilation fails since commit def054b01a8678 with an
    undefined reference to device_rbtree_find(). This patch makes sure that
    intel specific code is only compiled with CONFIG_IOMMU_INTEL=y.
    
    Signed-off-by: Bert Karwatzki <spasswolf@web.de>
    Fixes: 80a9b50c0b9e ("iommu/vt-d: Improve ITE fault handling if target  device isn't present")
    Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20240307194419.15801-1-spasswolf@web.de
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6e28b03a1545a992fdb5baa1ec4202bc6aa07bf2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b8c5a0f9b33f2ef229ceaa53278b51e9a24fcfc6
Author: Jiri Pirko <jiri@resnulli.us>
Date:   Wed Mar 6 13:07:39 2024 +0100

    dpll: spec: use proper enum for pin capabilities attribute
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5c497a64820ef9f10962a9c37607df45d6395fa5 ]
    
    The enum is defined, however the pin capabilities attribute does
    refer to it. Add this missing enum field.
    
    This fixes ynl cli output:
    
    Example current output:
    $ sudo ./tools/net/ynl/cli.py --spec Documentation/netlink/specs/dpll.yaml --do pin-get --json '{"id": 0}'
    {'capabilities': 4,
     ...
    Example new output:
    $ sudo ./tools/net/ynl/cli.py --spec Documentation/netlink/specs/dpll.yaml --do pin-get --json '{"id": 0}'
    {'capabilities': {'state-can-change'},
     ...
    
    Fixes: 3badff3a25d8 ("dpll: spec: Add Netlink spec in YAML")
    Signed-off-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Link: https://lore.kernel.org/r/20240306120739.1447621-1-jiri@resnulli.us
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cfad6598c4c916fb9236a3d85384f999f91e7026)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 022f7ff0b3c23f7a589f261d3138677b1f428b8c
Author: Oleksij Rempel <o.rempel@pengutronix.de>
Date:   Mon Mar 4 14:56:12 2024 +0100

    net: dsa: microchip: make sure drive strength configuration is not lost by soft reset
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e3fb8e8ba72b053d05ca2602acdd6b869f9f296f ]
    
    This driver has two separate reset sequence in different places:
    - gpio/HW reset on start of ksz_switch_register()
    - SW reset on start of ksz_setup()
    
    The second one will overwrite drive strength configuration made in the
    ksz_switch_register().
    
    To fix it, move ksz_parse_drive_strength() from ksz_switch_register() to
    ksz_setup().
    
    Fixes: d67d7247f641 ("net: dsa: microchip: Add drive strength configuration")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/r/20240304135612.814404-1-o.rempel@pengutronix.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 35fd74e345a06506b4b8bc2847722c8870538585)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 157ed520d4e64393fd2d37ae39f8005adfa00cce
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Mar 7 13:03:37 2024 +0100

    bpf: Fix stackmap overflow check on 32-bit arches
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7a4b21250bf79eef26543d35bd390448646c536b ]
    
    The stackmap code relies on roundup_pow_of_two() to compute the number
    of hash buckets, and contains an overflow check by checking if the
    resulting value is 0. However, on 32-bit arches, the roundup code itself
    can overflow by doing a 32-bit left-shift of an unsigned long value,
    which is undefined behaviour, so it is not guaranteed to truncate
    neatly. This was triggered by syzbot on the DEVMAP_HASH type, which
    contains the same check, copied from the hashtab code.
    
    The commit in the fixes tag actually attempted to fix this, but the fix
    did not account for the UB, so the fix only works on CPUs where an
    overflow does result in a neat truncation to zero, which is not
    guaranteed. Checking the value before rounding does not have this
    problem.
    
    Fixes: 6183f4d3a0a2 ("bpf: Check for integer overflow when using roundup_pow_of_two()")
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Reviewed-by: Bui Quang Minh <minhquangbui99@gmail.com>
    Message-ID: <20240307120340.99577-4-toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0971126c8164abe2004b8536b49690a0d6005b0a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 377e74f845a18d624d442f4789236a0cdaf86bf4
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Mar 7 13:03:36 2024 +0100

    bpf: Fix hashtab overflow check on 32-bit arches
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6787d916c2cf9850c97a0a3f73e08c43e7d973b1 ]
    
    The hashtab code relies on roundup_pow_of_two() to compute the number of
    hash buckets, and contains an overflow check by checking if the
    resulting value is 0. However, on 32-bit arches, the roundup code itself
    can overflow by doing a 32-bit left-shift of an unsigned long value,
    which is undefined behaviour, so it is not guaranteed to truncate
    neatly. This was triggered by syzbot on the DEVMAP_HASH type, which
    contains the same check, copied from the hashtab code. So apply the same
    fix to hashtab, by moving the overflow check to before the roundup.
    
    Fixes: daaf427c6ab3 ("bpf: fix arraymap NULL deref and missing overflow and zero size checks")
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Message-ID: <20240307120340.99577-3-toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a6fa75b5096c0f9826a4fabe22d907b0a5bb1016)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit babb541724ee97d1a19c1495af6b34c61f244b79
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Mar 7 13:03:35 2024 +0100

    bpf: Fix DEVMAP_HASH overflow check on 32-bit arches
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 281d464a34f540de166cee74b723e97ac2515ec3 ]
    
    The devmap code allocates a number hash buckets equal to the next power
    of two of the max_entries value provided when creating the map. When
    rounding up to the next power of two, the 32-bit variable storing the
    number of buckets can overflow, and the code checks for overflow by
    checking if the truncated 32-bit value is equal to 0. However, on 32-bit
    arches the rounding up itself can overflow mid-way through, because it
    ends up doing a left-shift of 32 bits on an unsigned long value. If the
    size of an unsigned long is four bytes, this is undefined behaviour, so
    there is no guarantee that we'll end up with a nice and tidy 0-value at
    the end.
    
    Syzbot managed to turn this into a crash on arm32 by creating a
    DEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.
    Fix this by moving the overflow check to before the rounding up
    operation.
    
    Fixes: 6f9d451ab1a3 ("xdp: Add devmap_hash map type for looking up devices by hashed index")
    Link: https://lore.kernel.org/r/000000000000ed666a0611af6818@google.com
    Reported-and-tested-by: syzbot+8cd36f6b65f3cafd400a@syzkaller.appspotmail.com
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Message-ID: <20240307120340.99577-2-toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e89386f62ce9a9ab9a94835a9890883c23d9d52c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea270dd36d0f98ce20df5bdd798a188cd8a3c8dc
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Sat Mar 2 20:22:09 2024 +0100

    s390/cache: prevent rebuild of shared_cpu_list
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cb0cd4ee11142339f2d47eef6db274290b7a482d ]
    
    With commit 36bbc5b4ffab ("cacheinfo: Allow early detection and population
    of cache attributes") the shared cpu list for each cache level higher than
    L1 is rebuilt even if the list already has been set up.
    
    This is caused by the removal of the cpumask_empty() check within
    cache_shared_cpu_map_setup().
    
    However architectures can enforce that the shared cpu list is not rebuilt
    by simply setting cpu_map_populated of the per cpu cache info structure to
    true, which is also the fix for this problem.
    
    Before:
    $ cat /sys/devices/system/cpu/cpu1/cache/index2/shared_cpu_list
    0-7
    
    After:
    $ cat /sys/devices/system/cpu/cpu1/cache/index2/shared_cpu_list
    1
    
    Fixes: 36bbc5b4ffab ("cacheinfo: Allow early detection and population of cache attributes")
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit db52c7c363d2dd85a90fb1690a2ee6e687c5cf68)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bbbd3297c0c270b62bcd9cf50a9a8208922de258
Author: Chen Ni <nichen@iscas.ac.cn>
Date:   Tue Mar 5 07:59:27 2024 +0000

    sr9800: Add check for usbnet_get_endpoints
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 07161b2416f740a2cb87faa5566873f401440a61 ]
    
    Add check for usbnet_get_endpoints() and return the error if it fails
    in order to transfer the error.
    
    Signed-off-by: Chen Ni <nichen@iscas.ac.cn>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Fixes: 19a38d8e0aa3 ("USB2NET : SR9800 : One chip USB2.0 USB2NET SR9800 Device Driver Support")
    Link: https://lore.kernel.org/r/20240305075927.261284-1-nichen@iscas.ac.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f546cc19f9b82975238d0ba413adc27714750774)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c32e0eba083419e467783b0929651ee4cc58c64
Author: Pauli Virtanen <pav@iki.fi>
Date:   Sat Mar 2 19:06:23 2024 +0200

    Bluetooth: fix use-after-free in accessing skb after sending it
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 947ec0d002dce8577b655793dcc6fc78d67b7cb6 ]
    
    hci_send_cmd_sync first sends skb and then tries to clone it.  However,
    the driver may have already freed the skb at that point.
    
    Fix by cloning the sent_cmd cloned just above, instead of the original.
    
    Log:
    ================================================================
    BUG: KASAN: slab-use-after-free in __copy_skb_header+0x1a/0x240
    ...
    Call Trace: ..
     __skb_clone+0x59/0x2c0
     hci_cmd_work+0x3b3/0x3d0 [bluetooth]
     process_one_work+0x459/0x900
    ...
    Allocated by task 129: ...
     __alloc_skb+0x1ae/0x220
     __hci_cmd_sync_sk+0x44c/0x7a0 [bluetooth]
     __hci_cmd_sync_status+0x24/0xb0 [bluetooth]
     set_cig_params_sync+0x778/0x7d0 [bluetooth]
    ...
    Freed by task 0: ...
     kmem_cache_free+0x157/0x3c0
     __usb_hcd_giveback_urb+0x11e/0x1e0
     usb_giveback_urb_bh+0x1ad/0x2a0
     tasklet_action_common.isra.0+0x259/0x4a0
     __do_softirq+0x15b/0x5a7
    ================================================================
    
    Fixes: 2615fd9a7c25 ("Bluetooth: hci_sync: Fix overwriting request callback")
    Signed-off-by: Pauli Virtanen <pav@iki.fi>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0b17904f3aa3b05e1486aca8f2addc627ce5e0b2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0ced250aaccc3162218e26b780d4d8589544cb00
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Fri Mar 1 12:58:11 2024 -0500

    Bluetooth: af_bluetooth: Fix deadlock
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f7b94bdc1ec107c92262716b073b3e816d4784fb ]
    
    Attemting to do sock_lock on .recvmsg may cause a deadlock as shown
    bellow, so instead of using sock_sock this uses sk_receive_queue.lock
    on bt_sock_ioctl to avoid the UAF:
    
    INFO: task kworker/u9:1:121 blocked for more than 30 seconds.
          Not tainted 6.7.6-lemon #183
    Workqueue: hci0 hci_rx_work
    Call Trace:
     <TASK>
     __schedule+0x37d/0xa00
     schedule+0x32/0xe0
     __lock_sock+0x68/0xa0
     ? __pfx_autoremove_wake_function+0x10/0x10
     lock_sock_nested+0x43/0x50
     l2cap_sock_recv_cb+0x21/0xa0
     l2cap_recv_frame+0x55b/0x30a0
     ? psi_task_switch+0xeb/0x270
     ? finish_task_switch.isra.0+0x93/0x2a0
     hci_rx_work+0x33a/0x3f0
     process_one_work+0x13a/0x2f0
     worker_thread+0x2f0/0x410
     ? __pfx_worker_thread+0x10/0x10
     kthread+0xe0/0x110
     ? __pfx_kthread+0x10/0x10
     ret_from_fork+0x2c/0x50
     ? __pfx_kthread+0x10/0x10
     ret_from_fork_asm+0x1b/0x30
     </TASK>
    
    Fixes: 2e07e8348ea4 ("Bluetooth: af_bluetooth: Fix Use-After-Free in bt_sock_recvmsg")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2c9e2df022ef8b9d7fac58a04a2ef4ed25288955)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1fa3214b216d7d5e4018671558c4302b46679d5d
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Feb 28 11:17:24 2024 -0500

    Bluetooth: btusb: Fix memory leak
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 79f4127a502c5905f04da1f20a7bbe07103fb77c ]
    
    This checks if CONFIG_DEV_COREDUMP is enabled before attempting to clone
    the skb and also make sure btmtk_process_coredump frees the skb passed
    following the same logic.
    
    Fixes: 0b7015132878 ("Bluetooth: btusb: mediatek: add MediaTek devcoredump support")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b08bd8f02a24e2b82fece5ac51dc1c3d9aa6c404)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d170a075b282cd3595bf7b51421e733f8bf0920
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Feb 28 10:56:49 2024 -0500

    Bluetooth: msft: Fix memory leak
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a6e06258f4c31eba0fcd503e19828b5f8fe7b08b ]
    
    Fix leaking buffer allocated to send MSFT_OP_LE_MONITOR_ADVERTISEMENT.
    
    Fixes: 9e14606d8f38 ("Bluetooth: msft: Extended monitor tracking by address filter")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5cb93417c93716a5404f762f331f5de3653fd952)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4442894c0c8b3c02377d33b506aa2d0d47cef25
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Feb 28 10:49:26 2024 -0500

    Bluetooth: hci_core: Fix possible buffer overflow
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 81137162bfaa7278785b24c1fd2e9e74f082e8e4 ]
    
    struct hci_dev_info has a fixed size name[8] field so in the event that
    hdev->name is bigger than that strcpy would attempt to write past its
    size, so this fixes this problem by switching to use strscpy.
    
    Fixes: dcda165706b9 ("Bluetooth: hci_core: Fix build warnings")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2edce8e9a99dd5e4404259d52e754fdc97fb42c2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cf4ce6537f45b4bb44fb6ac26b794fa2c51d11a8
Author: Andrey Skvortsov <andrej.skvortzov@gmail.com>
Date:   Sat Feb 24 00:37:04 2024 +0300

    Bluetooth: btrtl: fix out of bounds memory access
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit de4e88ec58c4202efd1f02eebb4939bbf6945358 ]
    
    The problem is detected by KASAN.
    btrtl driver uses private hci data to store 'struct btrealtek_data'.
    If btrtl driver is used with btusb, then memory for private hci data
    is allocated in btusb. But no private data is allocated after hci_dev,
    when btrtl is used with hci_h5.
    
    This commit adds memory allocation for hci_h5 case.
    
     ==================================================================
     BUG: KASAN: slab-out-of-bounds in btrtl_initialize+0x6cc/0x958 [btrtl]
     Write of size 8 at addr ffff00000f5a5748 by task kworker/u9:0/76
    
     Hardware name: Pine64 PinePhone (1.2) (DT)
     Workqueue: hci0 hci_power_on [bluetooth]
     Call trace:
      dump_backtrace+0x9c/0x128
      show_stack+0x20/0x38
      dump_stack_lvl+0x48/0x60
      print_report+0xf8/0x5d8
      kasan_report+0x90/0xd0
      __asan_store8+0x9c/0xc0
             [btrtl]
      h5_btrtl_setup+0xd0/0x2f8 [hci_uart]
      h5_setup+0x50/0x80 [hci_uart]
      hci_uart_setup+0xd4/0x260 [hci_uart]
      hci_dev_open_sync+0x1cc/0xf68 [bluetooth]
      hci_dev_do_open+0x34/0x90 [bluetooth]
      hci_power_on+0xc4/0x3c8 [bluetooth]
      process_one_work+0x328/0x6f0
      worker_thread+0x410/0x778
      kthread+0x168/0x178
      ret_from_fork+0x10/0x20
    
     Allocated by task 53:
      kasan_save_stack+0x3c/0x68
      kasan_save_track+0x20/0x40
      kasan_save_alloc_info+0x68/0x78
      __kasan_kmalloc+0xd4/0xd8
      __kmalloc+0x1b4/0x3b0
      hci_alloc_dev_priv+0x28/0xa58 [bluetooth]
      hci_uart_register_device+0x118/0x4f8 [hci_uart]
      h5_serdev_probe+0xf4/0x178 [hci_uart]
      serdev_drv_probe+0x54/0xa0
      really_probe+0x254/0x588
      __driver_probe_device+0xc4/0x210
      driver_probe_device+0x64/0x160
      __driver_attach_async_helper+0x88/0x158
      async_run_entry_fn+0xd0/0x388
      process_one_work+0x328/0x6f0
      worker_thread+0x410/0x778
      kthread+0x168/0x178
      ret_from_fork+0x10/0x20
    
     Last potentially related work creation:
      kasan_save_stack+0x3c/0x68
      __kasan_record_aux_stack+0xb0/0x150
      kasan_record_aux_stack_noalloc+0x14/0x20
      __queue_work+0x33c/0x960
      queue_work_on+0x98/0xc0
      hci_recv_frame+0xc8/0x1e8 [bluetooth]
      h5_complete_rx_pkt+0x2c8/0x800 [hci_uart]
      h5_rx_payload+0x98/0xb8 [hci_uart]
      h5_recv+0x158/0x3d8 [hci_uart]
      hci_uart_receive_buf+0xa0/0xe8 [hci_uart]
      ttyport_receive_buf+0xac/0x178
      flush_to_ldisc+0x130/0x2c8
      process_one_work+0x328/0x6f0
      worker_thread+0x410/0x778
      kthread+0x168/0x178
      ret_from_fork+0x10/0x20
    
     Second to last potentially related work creation:
      kasan_save_stack+0x3c/0x68
      __kasan_record_aux_stack+0xb0/0x150
      kasan_record_aux_stack_noalloc+0x14/0x20
      __queue_work+0x788/0x960
      queue_work_on+0x98/0xc0
      __hci_cmd_sync_sk+0x23c/0x7a0 [bluetooth]
      __hci_cmd_sync+0x24/0x38 [bluetooth]
      btrtl_initialize+0x760/0x958 [btrtl]
      h5_btrtl_setup+0xd0/0x2f8 [hci_uart]
      h5_setup+0x50/0x80 [hci_uart]
      hci_uart_setup+0xd4/0x260 [hci_uart]
      hci_dev_open_sync+0x1cc/0xf68 [bluetooth]
      hci_dev_do_open+0x34/0x90 [bluetooth]
      hci_power_on+0xc4/0x3c8 [bluetooth]
      process_one_work+0x328/0x6f0
      worker_thread+0x410/0x778
      kthread+0x168/0x178
      ret_from_fork+0x10/0x20
     ==================================================================
    
    Fixes: 5b355944b190 ("Bluetooth: btrtl: Add btrealtek data struct")
    Fixes: 044014ce85a1 ("Bluetooth: btrtl: Add Realtek devcoredump support")
    Signed-off-by: Andrey Skvortsov <andrej.skvortzov@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0c657e641df1e77d6087688190f632cad9c0439b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2fc737bc125df93e087118c9a8556af3340ced03
Author: Andrey Skvortsov <andrej.skvortzov@gmail.com>
Date:   Sat Feb 24 00:37:03 2024 +0300

    Bluetooth: hci_h5: Add ability to allocate memory for private data
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7a6d793e9ca8bc0c1d2f0aa0a02ec380d1124c74 ]
    
    In some cases uart-base drivers may need to use priv data. For
    example, to store information needed for devcoredump.
    
    Fixes: 044014ce85a1 ("Bluetooth: btrtl: Add Realtek devcoredump support")
    Signed-off-by: Andrey Skvortsov <andrej.skvortzov@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 46a7d9aa6e456c161746744cc08961bb83dc97b3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 827dbbb07b0f9cd1fd0b09c8cb96afdb4db3f76c
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Fri Feb 16 16:20:11 2024 -0500

    Bluetooth: hci_sync: Fix overwriting request callback
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2615fd9a7c2507eb3be3fbe49dcec88a2f56454a ]
    
    In a few cases the stack may generate commands as responses to events
    which would happen to overwrite the sent_cmd, so this attempts to store
    the request in req_skb so even if sent_cmd is replaced with a new
    command the pending request will remain in stored in req_skb.
    
    Fixes: 6a98e3836fa2 ("Bluetooth: Add helper for serialized HCI command execution")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 18a4c59af609994552c8b39c5438304e070e55c7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9cc872a330391d157bab29799b95eb720726ecc8
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Tue Jan 9 13:45:40 2024 -0500

    Bluetooth: hci_core: Cancel request on command timeout
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 63298d6e752fc0ec7f5093860af8bc9f047b30c8 ]
    
    If command has timed out call __hci_cmd_sync_cancel to notify the
    hci_req since it will inevitably cause a timeout.
    
    This also rework the code around __hci_cmd_sync_cancel since it was
    wrongly assuming it needs to cancel timer as well, but sometimes the
    timers have not been started or in fact they already had timed out in
    which case they don't need to be cancel yet again.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Stable-dep-of: 2615fd9a7c25 ("Bluetooth: hci_sync: Fix overwriting request callback")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b53e5ef62fe9853648b4478bd6cb3aba970a6f1f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab4e8dd60d006f09566e68d2bb2214d8eeb48991
Author: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
Date:   Thu Feb 8 17:40:17 2024 +0100

    Bluetooth: hci_qca: don't use IS_ERR_OR_NULL() with gpiod_get_optional()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 56d074d26c5828773b00b2185dd7e1d08273b8e8 ]
    
    The optional variants for the gpiod_get() family of functions return NULL
    if the GPIO in question is not associated with this device. They return
    ERR_PTR() on any other error. NULL descriptors are graciously handled by
    GPIOLIB and can be safely passed to any of the GPIO consumer interfaces
    as they will return 0 and act as if the function succeeded. If one is
    using the optional variant, then there's no point in checking for NULL.
    
    Fixes: 6845667146a2 ("Bluetooth: hci_qca: Fix NULL vs IS_ERR_OR_NULL check in qca_serdev_probe")
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d8c7785e8104359f139cdfa99e2511575c4d4823)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4a48549b05444e0f1433d6b64ad0d9ef0ede09a8
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Jan 31 11:24:19 2024 -0500

    Bluetooth: hci_event: Fix not indicating new connection for BIG Sync
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit eeda1bf97bb500a901f7a9ee5615bad2160f2378 ]
    
    BIG Sync (aka. Broadcast sink) requires to inform that the device is
    connected when a data path is active otherwise userspace could attempt
    to free resources allocated to the device object while scanning.
    
    Fixes: 1d11d70d1f6b ("Bluetooth: ISO: Pass BIG encryption info through QoS")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 81526f2920bf8a03b670dbc2d45f35f204344d55)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7e34054055707d4c33c5eb54502ffa9e9c54518a
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Feb 1 11:18:58 2024 -0500

    Bluetooth: Remove BT_HS
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e7b02296fb400ee64822fbdd81a0718449066333 ]
    
    High Speed, Alternate MAC and PHY (AMP) extension, has been removed from
    Bluetooth Core specification on 5.3:
    
    https://www.bluetooth.com/blog/new-core-specification-v5-3-feature-enhancements/
    
    Fixes: 244bc377591c ("Bluetooth: Add BT_HS config option")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 54db3630deff566224de6cfb0767d2d398e68ed5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 799175f44d27e3e04a8e380e5d4a90a9833508b4
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Mon Jan 8 23:46:06 2024 +0100

    Bluetooth: Remove superfluous call to hci_conn_check_pending()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 78e3639fc8031275010c3287ac548c0bc8de83b1 ]
    
    The "pending connections" feature was originally introduced with commit
    4c67bc74f016 ("[Bluetooth] Support concurrent connect requests") and
    6bd57416127e ("[Bluetooth] Handling pending connect attempts after
    inquiry") to handle controllers supporting only a single connection request
    at a time. Later things were extended to also cancel ongoing inquiries on
    connect() with commit 89e65975fea5 ("Bluetooth: Cancel Inquiry before
    Create Connection").
    
    With commit a9de9248064b ("[Bluetooth] Switch from OGF+OCF to using only
    opcodes"), hci_conn_check_pending() was introduced as a helper to
    consolidate a few places where we check for pending connections (indicated
    by the BT_CONNECT2 flag) and then try to connect.
    
    This refactoring commit also snuck in two more calls to
    hci_conn_check_pending():
    
    - One is in the failure callback of hci_cs_inquiry(), this one probably
    makes sense: If we send an "HCI Inquiry" command and then immediately
    after a "Create Connection" command, the "Create Connection" command might
    fail before the "HCI Inquiry" command, and then we want to retry the
    "Create Connection" on failure of the "HCI Inquiry".
    
    - The other added call to hci_conn_check_pending() is in the event handler
    for the "Remote Name" event, this seems unrelated and is possibly a
    copy-paste error, so remove that one.
    
    Fixes: a9de9248064b ("[Bluetooth] Switch from OGF+OCF to using only opcodes")
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 70f8388a95459f1693a8e7bc6eefc1925ffce327)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab6cd832a4a2b265627441e99e7e05c117ca0c0c
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Sun Jan 7 19:02:48 2024 +0100

    Bluetooth: mgmt: Remove leftover queuing of power_off work
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fee054b7579fe252f8b9e6c17b9c5bfdaa84dd7e ]
    
    Queuing of power_off work was introduced in these functions with commits
    8b064a3ad377 ("Bluetooth: Clean up HCI state when doing power off") and
    c9910d0fb4fc ("Bluetooth: Fix disconnecting connections in non-connected
    states") in an effort to clean up state and do things like disconnecting
    devices before actually powering off the device.
    
    After that, commit a3172b7eb4a2 ("Bluetooth: Add timer to force power off")
    introduced a timeout to ensure that the device actually got powered off,
    even if some of the cleanup work would never complete.
    
    This code later got refactored with commit cf75ad8b41d2 ("Bluetooth:
    hci_sync: Convert MGMT_SET_POWERED"), which made powering off the device
    synchronous and removed the need for initiating the power_off work from
    other places. The timeout mentioned above got removed too, because we now
    also made use of the command timeout during power on/off.
    
    These days the power_off work still exists, but it only seems to only be
    used for HCI_AUTO_OFF functionality, which is why we never noticed
    those two leftover places where we queue power_off work. So let's remove
    that code.
    
    Fixes: cf75ad8b41d2 ("Bluetooth: hci_sync: Convert MGMT_SET_POWERED")
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit da0de50013c160f76b0d4c1869be25875f48015b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d74a8a63d22fd5c868a625523cb1833481508ce3
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Sun Jan 7 19:02:47 2024 +0100

    Bluetooth: Remove HCI_POWER_OFF_TIMEOUT
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 968667f2e0345a67a6eea5a502f4659085666564 ]
    
    With commit cf75ad8b41d2 ("Bluetooth: hci_sync: Convert MGMT_SET_POWERED"),
    the power off sequence got refactored so that this timeout was no longer
    necessary, let's remove the leftover define from the header too.
    
    Fixes: cf75ad8b41d2 ("Bluetooth: hci_sync: Convert MGMT_SET_POWERED")
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 96958d8164d08e9ff0623e2849e8ea2c7cdb9160)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f80d435a46d9f71bfff3646848c5ea2c24fc43c3
Author: Przemek Kitszel <przemyslaw.kitszel@intel.com>
Date:   Tue Feb 27 15:31:06 2024 +0100

    ice: fix stats being updated by way too large values
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 257310e998700e60382fbd3f4fd275fdbd9b2aaf ]
    
    Simplify stats accumulation logic to fix the case where we don't take
    previous stat value into account, we should always respect it.
    
    Main netdev stats of our PF (Tx/Rx packets/bytes) were reported orders of
    magnitude too big during OpenStack reconfiguration events, possibly other
    reconfiguration cases too.
    
    The regression was reported to be between 6.1 and 6.2, so I was almost
    certain that on of the two "preserve stats over reset" commits were the
    culprit. While reading the code, it was found that in some cases we will
    increase the stats by arbitrarily large number (thanks to ignoring "-prev"
    part of condition, after zeroing it).
    
    Note that this fixes also the case where we were around limits of u64, but
    that was not the regression reported.
    
    Full disclosure: I remember suggesting this particular piece of code to
    Ben a few years ago, so blame on me.
    
    Fixes: 2fd5e433cd26 ("ice: Accumulate HW and Netdev statistics over reset")
    Reported-by: Nebojsa Stevanovic <nebojsa.stevanovic@gcore.com>
    Link: https://lore.kernel.org/intel-wired-lan/VI1PR02MB439744DEDAA7B59B9A2833FE912EA@VI1PR02MB4397.eurprd02.prod.outlook.com
    Reported-by: Christian Rohmann <christian.rohmann@inovex.de>
    Link: https://lore.kernel.org/intel-wired-lan/f38a6ca4-af05-48b1-a3e6-17ef2054e525@inovex.de
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Przemek Kitszel <przemyslaw.kitszel@intel.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Tested-by: Pucha Himasekhar Reddy <himasekharx.reddy.pucha@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 696a2cef5457ee156e65b3589fffeaf44fbcb5c8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7436f031d1d1354e29d703cb315af5f06c34cd26
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Tue Feb 20 15:57:11 2024 -0800

    igb: Fix missing time sync events
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ee14cc9ea19ba9678177e2224a9c58cce5937c73 ]
    
    Fix "double" clearing of interrupts, which can cause external events
    or timestamps to be missed.
    
    The E1000_TSIRC Time Sync Interrupt Cause register can be cleared in two
    ways, by either reading it or by writing '1' into the specific cause
    bit. This is documented in section 8.16.1.
    
    The following flow was used:
        1. read E1000_TSIRC into 'tsicr';
        2. handle the interrupts present into 'tsirc' and mark them in 'ack';
        3. write 'ack' into E1000_TSICR;
    
    As both (1) and (3) will clear the interrupt cause, if the same
    interrupt happens again between (1) and (3) it will be ignored,
    causing events to be missed.
    
    Remove the extra clear in (3).
    
    Fixes: 00c65578b47b ("igb: enable internal PPS for the i210")
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Pucha Himasekhar Reddy <himasekharx.reddy.pucha@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 900f1aee1bfad116554c5eb0559e41008738284e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0e398c6c0923dd07919e8a7af9c3e71d990bd2be
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Tue Feb 20 15:57:10 2024 -0800

    igc: Fix missing time sync events
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 244ae992e3e80e5c9c272c77324c831148457f95 ]
    
    Fix "double" clearing of interrupts, which can cause external events
    or timestamps to be missed.
    
    The IGC_TSIRC Time Sync Interrupt Cause register can be cleared in two
    ways, by either reading it or by writing '1' into the specific cause
    bit. This is documented in section 8.16.1.
    
    The following flow was used:
     1. read IGC_TSIRC into 'tsicr';
     2. handle the interrupts present in 'tsirc' and mark them in 'ack';
     3. write 'ack' into IGC_TSICR;
    
    As both (1) and (3) will clear the interrupt cause, if the same
    interrupt happens again between (1) and (3) it will be ignored,
    causing events to be missed.
    
    Remove the extra clear in (3).
    
    Fixes: 2c344ae24501 ("igc: Add support for TX timestamping")
    Reviewed-by: Kurt Kanzenbach <kurt@linutronix.de>
    Tested-by: Kurt Kanzenbach <kurt@linutronix.de> # Intel i225
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 48a933d8b93991543b162c37fda970e57a4cc543)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7ca7b6bcce0a9ffea7b366974feeef2556bbd201
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Mar 5 20:21:18 2024 +0800

    iommu/vt-d: Fix NULL domain on device release
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 81e921fd321614c2ad8ac333b041aae1da7a1c6d ]
    
    In the kdump kernel, the IOMMU operates in deferred_attach mode. In this
    mode, info->domain may not yet be assigned by the time the release_device
    function is called. It leads to the following crash in the crash kernel:
    
        BUG: kernel NULL pointer dereference, address: 000000000000003c
        ...
        RIP: 0010:do_raw_spin_lock+0xa/0xa0
        ...
        _raw_spin_lock_irqsave+0x1b/0x30
        intel_iommu_release_device+0x96/0x170
        iommu_deinit_device+0x39/0xf0
        __iommu_group_remove_device+0xa0/0xd0
        iommu_bus_notifier+0x55/0xb0
        notifier_call_chain+0x5a/0xd0
        blocking_notifier_call_chain+0x41/0x60
        bus_notify+0x34/0x50
        device_del+0x269/0x3d0
        pci_remove_bus_device+0x77/0x100
        p2sb_bar+0xae/0x1d0
        ...
        i801_probe+0x423/0x740
    
    Use the release_domain mechanism to fix it. The scalable mode context
    entry which is not part of release domain should be cleared in
    release_device().
    
    Fixes: 586081d3f6b1 ("iommu/vt-d: Remove DEFER_DEVICE_DOMAIN_INFO")
    Reported-by: Eric Badger <ebadger@purestorage.com>
    Closes: https://lore.kernel.org/r/20240113181713.1817855-1-ebadger@purestorage.com
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Link: https://lore.kernel.org/r/20240305013305.204605-3-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 333fe86968482ca701c609af590003bcea450e8f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ffaac518ee0c74c5ceafac2417cd000ba8b82f21
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Mar 5 20:21:17 2024 +0800

    iommu: Add static iommu_ops->release_domain
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0061ffe289e19caabeea8103e69cb0f1896e34d8 ]
    
    The current device_release callback for individual iommu drivers does the
    following:
    
    1) Silent IOMMU DMA translation: It detaches any existing domain from the
       device and puts it into a blocking state (some drivers might use the
       identity state).
    2) Resource release: It releases resources allocated during the
       device_probe callback and restores the device to its pre-probe state.
    
    Step 1 is challenging for individual iommu drivers because each must check
    if a domain is already attached to the device. Additionally, if a deferred
    attach never occurred, the device_release should avoid modifying hardware
    configuration regardless of the reason for its call.
    
    To simplify this process, introduce a static release_domain within the
    iommu_ops structure. It can be either a blocking or identity domain
    depending on the iommu hardware. The iommu core will decide whether to
    attach this domain before the device_release callback, eliminating the
    need for repetitive code in various drivers.
    
    Consequently, the device_release callback can focus solely on the opposite
    operations of device_probe, including releasing all resources allocated
    during that callback.
    
    Co-developed-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Link: https://lore.kernel.org/r/20240305013305.204605-2-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Stable-dep-of: 81e921fd3216 ("iommu/vt-d: Fix NULL domain on device release")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b5a67afbeaa1c7eca21a7afcdd15038b6ae7e115)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 781a7c8187b9cce035e2f93a4697df2e3006b654
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Feb 27 10:14:41 2024 +0800

    iommu/vt-d: Use device rbtree in iopf reporting path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit def054b01a867822254e1dda13d587f5c7a99e2a ]
    
    The existing I/O page fault handler currently locates the PCI device by
    calling pci_get_domain_bus_and_slot(). This function searches the list
    of all PCI devices until the desired device is found. To improve lookup
    efficiency, replace it with device_rbtree_find() to search the device
    within the probed device rbtree.
    
    The I/O page fault is initiated by the device, which does not have any
    synchronization mechanism with the software to ensure that the device
    stays in the probed device tree. Theoretically, a device could be released
    by the IOMMU subsystem after device_rbtree_find() and before
    iopf_get_dev_fault_param(), which would cause a use-after-free problem.
    
    Add a mutex to synchronize the I/O page fault reporting path and the IOMMU
    release device path. This lock doesn't introduce any performance overhead,
    as the conflict between I/O page fault reporting and device releasing is
    very rare.
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Link: https://lore.kernel.org/r/20240220065939.121116-3-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Stable-dep-of: 81e921fd3216 ("iommu/vt-d: Fix NULL domain on device release")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3d39238991e745c5df85785604f037f35d9d1b15)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 109480dd11c2b892d9de56a80a137fbf10cc1f8f
Author: Ethan Zhao <haifeng.zhao@linux.intel.com>
Date:   Tue Mar 5 20:21:16 2024 +0800

    iommu/vt-d: Improve ITE fault handling if target device isn't present
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 80a9b50c0b9e297669a8a400eb35468cd87a9aed ]
    
    Because surprise removal could happen anytime, e.g. user could request safe
    removal to EP(endpoint device) via sysfs and brings its link down to do
    surprise removal cocurrently. such aggressive cases would cause ATS
    invalidation request issued to non-existence target device, then deadly
    loop to retry that request after ITE fault triggered in interrupt context.
    this patch aims to optimize the ITE handling by checking the target device
    presence state to avoid retrying the timeout request blindly, thus avoid
    hard lockup or system hang.
    
    Devices TLB should only be invalidated when devices are in the
    iommu->device_rbtree (probed, not released) and present.
    
    Fixes: 6ba6c3a4cacf ("VT-d: add device IOTLB invalidation support")
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Signed-off-by: Ethan Zhao <haifeng.zhao@linux.intel.com>
    Link: https://lore.kernel.org/r/20240301080727.3529832-4-haifeng.zhao@linux.intel.com
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e0dbec2f8ba49ce43548f929a3135e92276103a2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3bd61a7ba7eb4754a4ac5571b1d2e6664ebdd698
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Feb 27 10:14:40 2024 +0800

    iommu/vt-d: Use rbtree to track iommu probed devices
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1a75cc710b956010137b4fe1d1fa3282bfd8f86c ]
    
    Use a red-black tree(rbtree) to track devices probed by the driver's
    probe_device callback. These devices need to be looked up quickly by
    a source ID when the hardware reports a fault, either recoverable or
    unrecoverable.
    
    Fault reporting paths are critical. Searching a list in this scenario
    is inefficient, with an algorithm complexity of O(n). An rbtree is a
    self-balancing binary search tree, offering an average search time
    complexity of O(log(n)). This significant performance improvement
    makes rbtrees a better choice.
    
    Furthermore, rbtrees are implemented on a per-iommu basis, eliminating
    the need for global searches and further enhancing efficiency in
    critical fault paths. The rbtree is protected by a spin lock with
    interrupts disabled to ensure thread-safe access even within interrupt
    contexts.
    
    Co-developed-by: Huang Jiaqing <jiaqing.huang@intel.com>
    Signed-off-by: Huang Jiaqing <jiaqing.huang@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Link: https://lore.kernel.org/r/20240220065939.121116-2-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Stable-dep-of: 80a9b50c0b9e ("iommu/vt-d: Improve ITE fault handling if target device isn't present")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c618d446f1d64bdc9e426bab5e8619f224cde2ae)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e88ab448eb2e3673f958a0a7b0fd909b2bb244b3
Author: Ethan Zhao <haifeng.zhao@linux.intel.com>
Date:   Tue Mar 5 20:21:15 2024 +0800

    iommu/vt-d: Don't issue ATS Invalidation request when device is disconnected
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4fc82cd907ac075648789cc3a00877778aa1838b ]
    
    For those endpoint devices connect to system via hotplug capable ports,
    users could request a hot reset to the device by flapping device's link
    through setting the slot's link control register, as pciehp_ist() DLLSC
    interrupt sequence response, pciehp will unload the device driver and
    then power it off. thus cause an IOMMU device-TLB invalidation (Intel
    VT-d spec, or ATS Invalidation in PCIe spec r6.1) request for non-existence
    target device to be sent and deadly loop to retry that request after ITE
    fault triggered in interrupt context.
    
    That would cause following continuous hard lockup warning and system hang
    
    [ 4211.433662] pcieport 0000:17:01.0: pciehp: Slot(108): Link Down
    [ 4211.433664] pcieport 0000:17:01.0: pciehp: Slot(108): Card not present
    [ 4223.822591] NMI watchdog: Watchdog detected hard LOCKUP on cpu 144
    [ 4223.822622] CPU: 144 PID: 1422 Comm: irq/57-pciehp Kdump: loaded Tainted: G S
             OE    kernel version xxxx
    [ 4223.822623] Hardware name: vendorname xxxx 666-106,
    BIOS 01.01.02.03.01 05/15/2023
    [ 4223.822623] RIP: 0010:qi_submit_sync+0x2c0/0x490
    [ 4223.822624] Code: 48 be 00 00 00 00 00 08 00 00 49 85 74 24 20 0f 95 c1 48 8b
     57 10 83 c1 04 83 3c 1a 03 0f 84 a2 01 00 00 49 8b 04 24 8b 70 34 <40> f6 c6 1
    0 74 17 49 8b 04 24 8b 80 80 00 00 00 89 c2 d3 fa 41 39
    [ 4223.822624] RSP: 0018:ffffc4f074f0bbb8 EFLAGS: 00000093
    [ 4223.822625] RAX: ffffc4f040059000 RBX: 0000000000000014 RCX: 0000000000000005
    [ 4223.822625] RDX: ffff9f3841315800 RSI: 0000000000000000 RDI: ffff9f38401a8340
    [ 4223.822625] RBP: ffff9f38401a8340 R08: ffffc4f074f0bc00 R09: 0000000000000000
    [ 4223.822626] R10: 0000000000000010 R11: 0000000000000018 R12: ffff9f384005e200
    [ 4223.822626] R13: 0000000000000004 R14: 0000000000000046 R15: 0000000000000004
    [ 4223.822626] FS:  0000000000000000(0000) GS:ffffa237ae400000(0000)
    knlGS:0000000000000000
    [ 4223.822627] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 4223.822627] CR2: 00007ffe86515d80 CR3: 000002fd3000a001 CR4: 0000000000770ee0
    [ 4223.822627] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 4223.822628] DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
    [ 4223.822628] PKRU: 55555554
    [ 4223.822628] Call Trace:
    [ 4223.822628]  qi_flush_dev_iotlb+0xb1/0xd0
    [ 4223.822628]  __dmar_remove_one_dev_info+0x224/0x250
    [ 4223.822629]  dmar_remove_one_dev_info+0x3e/0x50
    [ 4223.822629]  intel_iommu_release_device+0x1f/0x30
    [ 4223.822629]  iommu_release_device+0x33/0x60
    [ 4223.822629]  iommu_bus_notifier+0x7f/0x90
    [ 4223.822630]  blocking_notifier_call_chain+0x60/0x90
    [ 4223.822630]  device_del+0x2e5/0x420
    [ 4223.822630]  pci_remove_bus_device+0x70/0x110
    [ 4223.822630]  pciehp_unconfigure_device+0x7c/0x130
    [ 4223.822631]  pciehp_disable_slot+0x6b/0x100
    [ 4223.822631]  pciehp_handle_presence_or_link_change+0xd8/0x320
    [ 4223.822631]  pciehp_ist+0x176/0x180
    [ 4223.822631]  ? irq_finalize_oneshot.part.50+0x110/0x110
    [ 4223.822632]  irq_thread_fn+0x19/0x50
    [ 4223.822632]  irq_thread+0x104/0x190
    [ 4223.822632]  ? irq_forced_thread_fn+0x90/0x90
    [ 4223.822632]  ? irq_thread_check_affinity+0xe0/0xe0
    [ 4223.822633]  kthread+0x114/0x130
    [ 4223.822633]  ? __kthread_cancel_work+0x40/0x40
    [ 4223.822633]  ret_from_fork+0x1f/0x30
    [ 4223.822633] Kernel panic - not syncing: Hard LOCKUP
    [ 4223.822634] CPU: 144 PID: 1422 Comm: irq/57-pciehp Kdump: loaded Tainted: G S
             OE     kernel version xxxx
    [ 4223.822634] Hardware name: vendorname xxxx 666-106,
    BIOS 01.01.02.03.01 05/15/2023
    [ 4223.822634] Call Trace:
    [ 4223.822634]  <NMI>
    [ 4223.822635]  dump_stack+0x6d/0x88
    [ 4223.822635]  panic+0x101/0x2d0
    [ 4223.822635]  ? ret_from_fork+0x11/0x30
    [ 4223.822635]  nmi_panic.cold.14+0xc/0xc
    [ 4223.822636]  watchdog_overflow_callback.cold.8+0x6d/0x81
    [ 4223.822636]  __perf_event_overflow+0x4f/0xf0
    [ 4223.822636]  handle_pmi_common+0x1ef/0x290
    [ 4223.822636]  ? __set_pte_vaddr+0x28/0x40
    [ 4223.822637]  ? flush_tlb_one_kernel+0xa/0x20
    [ 4223.822637]  ? __native_set_fixmap+0x24/0x30
    [ 4223.822637]  ? ghes_copy_tofrom_phys+0x70/0x100
    [ 4223.822637]  ? __ghes_peek_estatus.isra.16+0x49/0xa0
    [ 4223.822637]  intel_pmu_handle_irq+0xba/0x2b0
    [ 4223.822638]  perf_event_nmi_handler+0x24/0x40
    [ 4223.822638]  nmi_handle+0x4d/0xf0
    [ 4223.822638]  default_do_nmi+0x49/0x100
    [ 4223.822638]  exc_nmi+0x134/0x180
    [ 4223.822639]  end_repeat_nmi+0x16/0x67
    [ 4223.822639] RIP: 0010:qi_submit_sync+0x2c0/0x490
    [ 4223.822639] Code: 48 be 00 00 00 00 00 08 00 00 49 85 74 24 20 0f 95 c1 48 8b
     57 10 83 c1 04 83 3c 1a 03 0f 84 a2 01 00 00 49 8b 04 24 8b 70 34 <40> f6 c6 10
     74 17 49 8b 04 24 8b 80 80 00 00 00 89 c2 d3 fa 41 39
    [ 4223.822640] RSP: 0018:ffffc4f074f0bbb8 EFLAGS: 00000093
    [ 4223.822640] RAX: ffffc4f040059000 RBX: 0000000000000014 RCX: 0000000000000005
    [ 4223.822640] RDX: ffff9f3841315800 RSI: 0000000000000000 RDI: ffff9f38401a8340
    [ 4223.822641] RBP: ffff9f38401a8340 R08: ffffc4f074f0bc00 R09: 0000000000000000
    [ 4223.822641] R10: 0000000000000010 R11: 0000000000000018 R12: ffff9f384005e200
    [ 4223.822641] R13: 0000000000000004 R14: 0000000000000046 R15: 0000000000000004
    [ 4223.822641]  ? qi_submit_sync+0x2c0/0x490
    [ 4223.822642]  ? qi_submit_sync+0x2c0/0x490
    [ 4223.822642]  </NMI>
    [ 4223.822642]  qi_flush_dev_iotlb+0xb1/0xd0
    [ 4223.822642]  __dmar_remove_one_dev_info+0x224/0x250
    [ 4223.822643]  dmar_remove_one_dev_info+0x3e/0x50
    [ 4223.822643]  intel_iommu_release_device+0x1f/0x30
    [ 4223.822643]  iommu_release_device+0x33/0x60
    [ 4223.822643]  iommu_bus_notifier+0x7f/0x90
    [ 4223.822644]  blocking_notifier_call_chain+0x60/0x90
    [ 4223.822644]  device_del+0x2e5/0x420
    [ 4223.822644]  pci_remove_bus_device+0x70/0x110
    [ 4223.822644]  pciehp_unconfigure_device+0x7c/0x130
    [ 4223.822644]  pciehp_disable_slot+0x6b/0x100
    [ 4223.822645]  pciehp_handle_presence_or_link_change+0xd8/0x320
    [ 4223.822645]  pciehp_ist+0x176/0x180
    [ 4223.822645]  ? irq_finalize_oneshot.part.50+0x110/0x110
    [ 4223.822645]  irq_thread_fn+0x19/0x50
    [ 4223.822646]  irq_thread+0x104/0x190
    [ 4223.822646]  ? irq_forced_thread_fn+0x90/0x90
    [ 4223.822646]  ? irq_thread_check_affinity+0xe0/0xe0
    [ 4223.822646]  kthread+0x114/0x130
    [ 4223.822647]  ? __kthread_cancel_work+0x40/0x40
    [ 4223.822647]  ret_from_fork+0x1f/0x30
    [ 4223.822647] Kernel Offset: 0x6400000 from 0xffffffff81000000 (relocation
    range: 0xffffffff80000000-0xffffffffbfffffff)
    
    Such issue could be triggered by all kinds of regular surprise removal
    hotplug operation. like:
    
    1. pull EP(endpoint device) out directly.
    2. turn off EP's power.
    3. bring the link down.
    etc.
    
    this patch aims to work for regular safe removal and surprise removal
    unplug. these hot unplug handling process could be optimized for fix the
    ATS Invalidation hang issue by calling pci_dev_is_disconnected() in
    function devtlb_invalidation_with_pasid() to check target device state to
    avoid sending meaningless ATS Invalidation request to iommu when device is
    gone. (see IMPLEMENTATION NOTE in PCIe spec r6.1 section 10.3.1)
    
    For safe removal, device wouldn't be removed until the whole software
    handling process is done, it wouldn't trigger the hard lock up issue
    caused by too long ATS Invalidation timeout wait. In safe removal path,
    device state isn't set to pci_channel_io_perm_failure in
    pciehp_unconfigure_device() by checking 'presence' parameter, calling
    pci_dev_is_disconnected() in devtlb_invalidation_with_pasid() will return
    false there, wouldn't break the function.
    
    For surprise removal, device state is set to pci_channel_io_perm_failure in
    pciehp_unconfigure_device(), means device is already gone (disconnected)
    call pci_dev_is_disconnected() in devtlb_invalidation_with_pasid() will
    return true to break the function not to send ATS Invalidation request to
    the disconnected device blindly, thus avoid to trigger further ITE fault,
    and ITE fault will block all invalidation request to be handled.
    furthermore retry the timeout request could trigger hard lockup.
    
    safe removal (present) & surprise removal (not present)
    
    pciehp_ist()
       pciehp_handle_presence_or_link_change()
         pciehp_disable_slot()
           remove_board()
             pciehp_unconfigure_device(presence) {
               if (!presence)
                    pci_walk_bus(parent, pci_dev_set_disconnected, NULL);
               }
    
    this patch works for regular safe removal and surprise removal of ATS
    capable endpoint on PCIe switch downstream ports.
    
    Fixes: 6f7db75e1c46 ("iommu/vt-d: Add second level page table interface")
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Tested-by: Haorong Ye <yehaorong@bytedance.com>
    Signed-off-by: Ethan Zhao <haifeng.zhao@linux.intel.com>
    Link: https://lore.kernel.org/r/20240301080727.3529832-3-haifeng.zhao@linux.intel.com
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 025bc6b41e020aeb1e71f84ae3ffce945026de05)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 78a343d912482d9bc3ecea8d11c4c026d37add09
Author: Ethan Zhao <haifeng.zhao@linux.intel.com>
Date:   Tue Mar 5 20:21:14 2024 +0800

    PCI: Make pci_dev_is_disconnected() helper public for other drivers
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 39714fd73c6b60a8d27bcc5b431afb0828bf4434 ]
    
    Make pci_dev_is_disconnected() public so that it can be called from
    Intel VT-d driver to quickly fix/workaround the surprise removal
    unplug hang issue for those ATS capable devices on PCIe switch downstream
    hotplug capable ports.
    
    Beside pci_device_is_present() function, this one has no config space
    space access, so is light enough to optimize the normal pure surprise
    removal and safe removal flow.
    
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Tested-by: Haorong Ye <yehaorong@bytedance.com>
    Signed-off-by: Ethan Zhao <haifeng.zhao@linux.intel.com>
    Link: https://lore.kernel.org/r/20240301080727.3529832-2-haifeng.zhao@linux.intel.com
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Stable-dep-of: 4fc82cd907ac ("iommu/vt-d: Don't issue ATS Invalidation request when device is disconnected")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4a09d0236854360d0c33fec01d3c7d9703cca570)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e04554b4b9eaab123f43218b57f478f371790d53
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Tue Mar 5 17:00:46 2024 +0100

    riscv: dts: starfive: jh7100: fix root clock names
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7921e231f85a349d5927b26c812c86e03f4cd37b ]
    
    JH7100 clock controller driver depends on certain root clock names.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Closes: https://lore.kernel.org/all/CAMuHMdWw0dteXO2jw4cwGvzKcL6vmnb96C=qgPgUqNDMtF6X0Q@mail.gmail.com/
    Fixes: f03606470886 ("riscv: dts: starfive: replace underscores in node names")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Conor Dooley <conor.dooley@microchip.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1949d652d7fa6f6af18e24583406227d49300a54)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4765658dd36a89bd48407f3b7209b4413a53cc99
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Thu Feb 29 18:31:53 2024 +0800

    wifi: brcm80211: handle pmk_op allocation failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b4152222e04cb8afeeca239c90e3fcaf4c553b42 ]
    
    The kzalloc() in brcmf_pmksa_v3_op() will return null if the
    physical memory has run out. As a result, if we dereference
    the null value, the null pointer dereference bug will happen.
    
    Return -ENOMEM from brcmf_pmksa_v3_op() if kzalloc() fails
    for pmk_op.
    
    Fixes: a96202acaea4 ("wifi: brcmfmac: cfg80211: Add support for PMKID_V3 operations")
    Acked-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240229103153.18533-1-duoming@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6138a82f3bccfc67ed7ac059493579fc326c02e5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 36b9f311f3d19dfa472734397dfa68a9f8d0036c
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Fri Mar 1 00:35:58 2024 +0200

    wifi: rtw88: 8821c: Fix false alarm count
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c238adbc578eeb70cbc8fdd1bef3666b0f585b13 ]
    
    total_fa_cnt is supposed to include cck_fa_cnt and ofdm_fa_cnt, not just
    ofdm_fa_cnt.
    
    Fixes: 960361238b86 ("rtw88: 8821c: add false alarm statistics")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/f3cb6d17-e4e4-44a7-9c9b-72aed994b5c9@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 56bf9dbb3aa39b3a68322e50fadacead5a8c3bb3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d61411fb960995a5cebb03384bbea14e7a0a1e62
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Fri Mar 1 00:35:09 2024 +0200

    wifi: rtw88: 8821c: Fix beacon loss and disconnect
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e1dfa21427baeb813f9a2f9ceab6b7d32c3ca425 ]
    
    Tenda U9 V2.0, which contains RTL8811CU, is practically unusable because
    of frequent disconnections:
    
    Feb 23 14:46:45 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-BEACON-LOSS
    Feb 23 14:46:46 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-DISCONNECTED
            bssid=90:55:de:__:__:__ reason=4 locally_generated=1
    
    Feb 23 14:46:52 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-CONNECTED
            - Connection to 90:55:de:__:__:__ completed [id=0 id_str=]
    Feb 23 14:46:54 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-BEACON-LOSS
    Feb 23 14:46:55 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-DISCONNECTED
            bssid=90:55:de:__:__:__ reason=4 locally_generated=1
    
    Feb 23 14:47:01 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-CONNECTED
            - Connection to 90:55:de:__:__:__ completed [id=0 id_str=]
    Feb 23 14:47:04 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-BEACON-LOSS
    Feb 23 14:47:05 ideapad2 wpa_supplicant[427]: wlp3s0f3u2: CTRL-EVENT-DISCONNECTED
            bssid=90:55:de:__:__:__ reason=4 locally_generated=1
    
    This is caused by a mistake in the chip initialisation. This version of
    the chip requires loading an extra AGC table right after the main one,
    but the extra table is being loaded at the wrong time, in
    rtw_chip_board_info_setup().
    
    Move the extra AGC table loading to the right place, in
    rtw_phy_load_tables().
    
    The rtw_chip_board_info_setup() can only do "software" things, and
    rtw_phy_load_tables() can really do IO.
    
    Fixes: 5d6651fe8583 ("rtw88: 8821c: support RFE type2 wifi NIC")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/276c31d8-b9a8-4e54-a3ac-09b74657aff7@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 53243f1ad40872ad6317a267313e03943b8660a0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 947a5273be8d954f6b2cf521f42cba1c4676b2d8
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Fri Mar 1 00:32:45 2024 +0200

    wifi: rtw88: 8821cu: Fix firmware upload fail
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 41a7acb7dde8395f52a707bbba7712a898dfafb0 ]
    
    RTL8822CU, RTL8822BU, and RTL8821CU need an extra register write after
    reading and writing certain addresses.
    
    Without this, the firmware upload fails approximately more than 50% of
    the time.
    
    Tested with RTL8811CU (Tenda U9 V2.0) which is the same as RTL8821CU
    but without Bluetooth.
    
    Fixes: a82dfd33d123 ("wifi: rtw88: Add common USB chip support")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/f12ed39d-28e8-4b8b-8d22-447bcf295afc@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3a82ec6fba1f127feff3071c99ee8ced1ad35c6e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3a0da7869f4d6b90f2e388ac8d4755d66d7fc96e
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Feb 28 11:37:56 2024 +0000

    btrfs: fix race when detecting delalloc ranges during fiemap
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 978b63f7464abcfd364a6c95f734282c50f3decf ]
    
    For fiemap we recently stopped locking the target extent range for the
    whole duration of the fiemap call, in order to avoid a deadlock in a
    scenario where the fiemap buffer happens to be a memory mapped range of
    the same file. This use case is very unlikely to be useful in practice but
    it may be triggered by fuzz testing (syzbot, etc).
    
    This however introduced a race that makes us miss delalloc ranges for
    file regions that are currently holes, so the caller of fiemap will not
    be aware that there's data for some file regions. This can be quite
    serious for some use cases - for example in coreutils versions before 9.0,
    the cp program used fiemap to detect holes and data in the source file,
    copying only regions with data (extents or delalloc) from the source file
    to the destination file in order to preserve holes (see the documentation
    for its --sparse command line option). This means that if cp was used
    with a source file that had delalloc in a hole, the destination file could
    end up without that data, which is effectively a data loss issue, if it
    happened to hit the race described below.
    
    The race happens like this:
    
    1) Fiemap is called, without the FIEMAP_FLAG_SYNC flag, for a file that
       has delalloc in the file range [64M, 65M[, which is currently a hole;
    
    2) Fiemap locks the inode in shared mode, then starts iterating the
       inode's subvolume tree searching for file extent items, without having
       the whole fiemap target range locked in the inode's io tree - the
       change introduced recently by commit b0ad381fa769 ("btrfs: fix
       deadlock with fiemap and extent locking"). It only locks ranges in
       the io tree when it finds a hole or prealloc extent since that
       commit;
    
    3) Note that fiemap clones each leaf before using it, and this is to
       avoid deadlocks when locking a file range in the inode's io tree and
       the fiemap buffer is memory mapped to some file, because writing
       to the page with btrfs_page_mkwrite() will wait on any ordered extent
       for the page's range and the ordered extent needs to lock the range
       and may need to modify the same leaf, therefore leading to a deadlock
       on the leaf;
    
    4) While iterating the file extent items in the cloned leaf before
       finding the hole in the range [64M, 65M[, the delalloc in that range
       is flushed and its ordered extent completes - meaning the corresponding
       file extent item is in the inode's subvolume tree, but not present in
       the cloned leaf that fiemap is iterating over;
    
    5) When fiemap finds the hole in the [64M, 65M[ range by seeing the gap in
       the cloned leaf (or a file extent item with disk_bytenr == 0 in case
       the NO_HOLES feature is not enabled), it will lock that file range in
       the inode's io tree and then search for delalloc by checking for the
       EXTENT_DELALLOC bit in the io tree for that range and ordered extents
       (with btrfs_find_delalloc_in_range()). But it finds nothing since the
       delalloc in that range was already flushed and the ordered extent
       completed and is gone - as a result fiemap will not report that there's
       delalloc or an extent for the range [64M, 65M[, so user space will be
       mislead into thinking that there's a hole in that range.
    
    This could actually be sporadically triggered with test case generic/094
    from fstests, which reports a missing extent/delalloc range like this:
    
    #  generic/094 2s ... - output mismatch (see /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad)
    #      --- tests/generic/094.out        2020-06-10 19:29:03.830519425 +0100
    #      +++ /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad 2024-02-28 11:00:00.381071525 +0000
    #      @@ -1,3 +1,9 @@
    #       QA output created by 094
    #       fiemap run with sync
    #       fiemap run without sync
    #      +ERROR: couldn't find extent at 7
    #      +map is 'HHDDHPPDPHPH'
    #      +logical: [       5..       6] phys:   301517..  301518 flags: 0x800 tot: 2
    #      +logical: [       8..       8] phys:   301520..  301520 flags: 0x800 tot: 1
    #      ...
    #      (Run 'diff -u /home/fdmanana/git/hub/xfstests/tests/generic/094.out /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad'  to see the entire diff)
    
    So in order to fix this, while still avoiding deadlocks in the case where
    the fiemap buffer is memory mapped to the same file, change fiemap to work
    like the following:
    
    1) Always lock the whole range in the inode's io tree before starting to
       iterate the inode's subvolume tree searching for file extent items,
       just like we did before commit b0ad381fa769 ("btrfs: fix deadlock with
       fiemap and extent locking");
    
    2) Now instead of writing to the fiemap buffer every time we have an extent
       to report, write instead to a temporary buffer (1 page), and when that
       buffer becomes full, stop iterating the file extent items, unlock the
       range in the io tree, release the search path, submit all the entries
       kept in that buffer to the fiemap buffer, and then resume the search
       for file extent items after locking again the remainder of the range in
       the io tree.
    
       The buffer having a size of a page, allows for 146 entries in a system
       with 4K pages. This is a large enough value to have a good performance
       by avoiding too many restarts of the search for file extent items.
       In other words this preserves the huge performance gains made in the
       last two years to fiemap, while avoiding the deadlocks in case the
       fiemap buffer is memory mapped to the same file (useless in practice,
       but possible and exercised by fuzz testing and syzbot).
    
    Fixes: b0ad381fa769 ("btrfs: fix deadlock with fiemap and extent locking")
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ced63fffd63072c0ca55d5a451010d71bf08c0b3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c057ad6c7a097665b2ad868c984c7c12d1fbbe7d
Author: Perry Yuan <perry.yuan@amd.com>
Date:   Thu Feb 8 11:46:28 2024 +0800

    ACPI: CPPC: enable AMD CPPC V2 support for family 17h processors
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a51ab63b297ce9e26e3ffb9be896018a42d5f32f ]
    
    As there are some AMD processors which only support CPPC V2 firmware and
    BIOS implementation, the amd_pstate driver will be failed to load when
    system booting with below kernel warning message:
    
    [    0.477523] amd_pstate: the _CPC object is not present in SBIOS or ACPI disabled
    
    To make the amd_pstate driver can be loaded on those TR40 processors, it
    needs to match x86_model from 0x30 to 0x7F for family 17H.
    With the change, the system can load amd_pstate driver as expected.
    
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Reported-by: Gino Badouri <badouri.g@gmail.com>
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218171
    Fixes: fbd74d1689 ("ACPI: CPPC: Fix enabling CPPC on AMD systems with shared memory")
    Signed-off-by: Perry Yuan <perry.yuan@amd.com>
    Reviewed-by: Gautham R. Shenoy <gautham.shenoy@amd.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 50a5eeb566eb8e36d3575475dcfd7afb36d76fe9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 80d08f14a0162250965a4479480847bf8b57834f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Feb 26 22:37:39 2024 +0100

    mmc: wmt-sdmmc: remove an incorrect release_mem_region() call in the .remove function
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ae5004a40a262d329039b99b62bd3fe7645b66ad ]
    
    This looks strange to call release_mem_region() in a remove function
    without any request_mem_region() in the probe or "struct resource"
    somewhere.
    
    So remove the corresponding code.
    
    Fixes: 3a96dff0f828 ("mmc: SD/MMC Host Controller for Wondermedia WM8505/WM8650")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/bb0bb1ed1e18de55e8c0547625bde271e64b8c31.1708983064.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fc0cc76f551cfb283aa457f7ca0459ba2ebea825)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d78ce0aea2929ea460c8f04f7b9733fdbcbb8a3b
Author: Abel Vesa <abel.vesa@linaro.org>
Date:   Wed Feb 21 15:04:26 2024 +0200

    arm64: dts: qcom: sm8650: Fix SPMI channels size
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a4f82b8045e3c7913266aa6ea1ee15752a062abd ]
    
    The actual size of the channels registers region is 4MB, according to the
    documentation. This issue was not caught until now because the driver was
    supposed to allow same regions being mapped multiple times for supporting
    multiple buses. Thie driver is using platform_get_resource_byname() and
    devm_ioremap() towards that purpose, which intentionally avoids
    devm_request_mem_region() altogether.
    
    Fixes: 10e024671295 ("arm64: dts: qcom: sm8650: add interconnect dependent device nodes")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Tested-by: Neil Armstrong <neil.armstrong@linaro.org> # on SM8650-QRD
    Link: https://lore.kernel.org/r/20240221-dts-qcom-sm8550-fix-spmi-chnls-size-v2-2-72b5efd9dc4f@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 43b580d11de2eeb48dff2e6cc12afe5c3f537074)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 20c0123714cc32d5dbe3efc16ae31ebef2bf6f8e
Author: Abel Vesa <abel.vesa@linaro.org>
Date:   Wed Feb 21 15:04:25 2024 +0200

    arm64: dts: qcom: sm8550: Fix SPMI channels size
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 77dd1e50ffcba33c3195ae4fc78f354368ddacb2 ]
    
    The actual size of the channels registers region is 4MB, according to the
    documentation. This issue was not caught until now because the driver was
    supposed to allow same regions being mapped multiple times for supporting
    multiple buses. Thie driver is using platform_get_resource_byname() and
    devm_ioremap() towards that purpose, which intentionally avoids
    devm_request_mem_region() altogether.
    
    Fixes: ffc50b2d3828 ("arm64: dts: qcom: Add base SM8550 dtsi")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Tested-by: Neil Armstrong <neil.armstrong@linaro.org> # on SM8550-QRD
    Link: https://lore.kernel.org/r/20240221-dts-qcom-sm8550-fix-spmi-chnls-size-v2-1-72b5efd9dc4f@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bbbd49356b927d9f5ce0eab0f6eb5f41aefa5adf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e6d2a068adb94ae695c4f4219904a52d4462e715
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Tue Jan 2 13:38:13 2024 +0800

    SUNRPC: fix some memleaks in gssx_dec_option_array
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3cfcfc102a5e57b021b786a755a38935e357797d ]
    
    The creds and oa->data need to be freed in the error-handling paths after
    their allocation. So this patch add these deallocations in the
    corresponding paths.
    
    Fixes: 1d658336b05f ("SUNRPC: Add RPC based upcall mechanism for RPCGSS auth")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 996997d1fb2126feda550d6adcedcbd94911fc69)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ce3839a96c3b14bc6ea0f73c4431f8ac7f314152
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Sun Dec 24 16:20:33 2023 +0800

    SUNRPC: fix a memleak in gss_import_v2_context
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e67b652d8e8591d3b1e569dbcdfcee15993e91fa ]
    
    The ctx->mech_used.data allocated by kmemdup is not freed in neither
    gss_import_v2_context nor it only caller gss_krb5_import_sec_context,
    which frees ctx on error.
    
    Thus, this patch reform the last call of gss_import_v2_context to the
    gss_krb5_import_ctx_v2, preventing the memleak while keepping the return
    formation.
    
    Fixes: 47d848077629 ("gss_krb5: handle new context format from gssd")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d111e30d9cd846bb368faf3637dc0f71fcbcf822)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 66ab746a378555a3e815d1073db4472c015e19a0
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Feb 27 09:51:12 2024 -0800

    x86, relocs: Ignore relocations in .notes section
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aaa8736370db1a78f0e8434344a484f9fd20be3b ]
    
    When building with CONFIG_XEN_PV=y, .text symbols are emitted into
    the .notes section so that Xen can find the "startup_xen" entry point.
    This information is used prior to booting the kernel, so relocations
    are not useful. In fact, performing relocations against the .notes
    section means that the KASLR base is exposed since /sys/kernel/notes
    is world-readable.
    
    To avoid leaking the KASLR base without breaking unprivileged tools that
    are expecting to read /sys/kernel/notes, skip performing relocations in
    the .notes section. The values readable in .notes are then identical to
    those found in System.map.
    
    Reported-by: Guixiong Wei <guixiongwei@gmail.com>
    Closes: https://lore.kernel.org/all/20240218073501.54555-1-guixiongwei@gmail.com/
    Fixes: 5ead97c84fa7 ("xen: Core Xen implementation")
    Fixes: da1a679cde9b ("Add /sys/kernel/notes")
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5cb59db49c9c0fccfd33b2209af4f7ae3c6ddf40)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eac7d7bcd0e57358e5b55bb3285bda3ae73dbf31
Author: Josh Poimboeuf <jpoimboe@kernel.org>
Date:   Mon Feb 26 23:35:27 2024 -0800

    objtool: Fix UNWIND_HINT_{SAVE,RESTORE} across basic blocks
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 10b4c4bce3f5541f54bcc2039720b11d2bc96d79 ]
    
    If SAVE and RESTORE unwind hints are in different basic blocks, and
    objtool sees the RESTORE before the SAVE, it errors out with:
    
      vmlinux.o: warning: objtool: vmw_port_hb_in+0x242: objtool isn't smart enough to handle this CFI save/restore combo
    
    In such a case, defer following the RESTORE block until the
    straight-line path gets followed later.
    
    Fixes: 8faea26e6111 ("objtool: Re-add UNWIND_HINT_{SAVE_RESTORE}")
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202402240702.zJFNmahW-lkp@intel.com/
    Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Link: https://lore.kernel.org/r/20240227073527.avcm5naavbv3cj5s@treble
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 39ee8d8c265392dafd90217b48711ce747ebe7e6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d911605e9ff463bf05272d6c8d7230849c850422
Author: Heiko Stuebner <heiko.stuebner@cherry.de>
Date:   Tue Feb 27 17:46:56 2024 +0100

    arm64: dts: rockchip: drop rockchip,trcm-sync-tx-only from rk3588 i2s
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a8037ceb89649659831e86a87a9329d1bb43c735 ]
    
    The rockchip,trcm-sync-tx-only property is at this time only documented
    for the tdm variant of Rockchip i2s controllers.
    
    While there was a series [0] adding code and binding for the property,
    it doesn't seem to have gone forward back in 2021.
    
    So for now fix the devicetree check by removing the property from rk3588
    i2s controllers until support for it gets merged.
    
    [0] https://patchwork.kernel.org/project/linux-rockchip/patch/1629796734-4243-5-git-send-email-sugar.zhang@rock-chips.com/
    
    Fixes: 8ae112a5554f ("arm64: dts: rockchip: Add rk3588s I2S nodes")
    Cc: Sugar Zhang <sugar.zhang@rock-chips.com>
    Cc: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Signed-off-by: Heiko Stuebner <heiko.stuebner@cherry.de>
    Reviewed-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20240227164659.705271-2-heiko@sntech.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3428e59f5b56dc2a8986ffe768be784407a24b27)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f5b4a6acf5197e1dbe166ef406d9faefa23b7aef
Author: Heiko Stuebner <heiko@sntech.de>
Date:   Tue Feb 27 18:35:26 2024 +0100

    arm64: dts: rockchip: fix reset-names for rk356x i2s2 controller
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0fc19ab75acde78558bd0f6fe3e5f63cf8ee88b0 ]
    
    The dtbscheck reports a warning for a wrong reset-names property for
    the i2s2 controller on rk356x socs.
    
    The other controllers on the soc provide tx and rx directions and hence
    two resets and separate clocks for each direction, while i2s2 only
    provides one reset. This was so far named just "m" which isn't part of
    the binding.
    
    The clock-names the controller uses all end in "tx", so use the matching
    "tx-m" reset-name for the i2s controller.
    
    Fixes: 755f37010f3e ("arm64: dts: rockchip: RK356x: Add I2S2 device node")
    Acked-by: Uwe Kleine-König <ukleinek@debian.org>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://lore.kernel.org/r/20240227173526.710056-2-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e5d16f2d4014e98bbed4e3d7d05895d107e3a39d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a4a1b1897a9c161eda1a195a890372112c64723d
Author: Heiko Stuebner <heiko@sntech.de>
Date:   Tue Feb 27 18:35:25 2024 +0100

    arm64: dts: rockchip: add missing interrupt-names for rk356x vdpu
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d1c44d9afa6f89aa0e10a191f30868eb12cd719f ]
    
    The video-codec@fdea0400 was missing the interrupt-names property that is
    part of the binding. Add it.
    
    Fixes: 944be6fba401 ("arm64: dts: rockchip: Add VPU support for RK3568/RK3566")
    Cc: Piotr Oniszczuk <piotr.oniszczuk@gmail.com>
    Acked-by: Uwe Kleine-König <ukleinek@debian.org>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://lore.kernel.org/r/20240227173526.710056-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d03398a424847b61e0a87b944ba7693d036d4319)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3b5cffd26dff02f1b2cb0880e864ca30b2a7a4e4
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 26 17:35:27 2024 +0100

    ACPI: scan: Fix device check notification handling
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 793551c965116d9dfaf0550dacae1396a20efa69 ]
    
    It is generally invalid to fail a Device Check notification if the scan
    handler has not been attached to the given device after a bus rescan,
    because there may be valid reasons for the scan handler to refuse
    attaching to the device (for example, the device is not ready).
    
    For this reason, modify acpi_scan_device_check() to return 0 in that
    case without printing a warning.
    
    While at it, reduce the log level of the "already enumerated" message
    in the same function, because it is only interesting when debugging
    notification handling
    
    Fixes: 443fc8202272 ("ACPI / hotplug: Rework generic code to handle suprise removals")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e6794c8ffe50aefcab53633100d45d45145be2de)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d8482414532d1d3bd9c147607d6c5afc68b51fbd
Author: Maxim Kudinov <m.kudinovv@gmail.com>
Date:   Fri Feb 23 19:24:08 2024 +0300

    ACPI: resource: Add MAIBENBEN X577 to irq1_edge_low_force_override
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 021a67d096154893cd1d883c7be0097e2ee327fd ]
    
    A known issue on some Zen laptops, keyboard stopped working due to commit
    9946e39fe8d0 fael@kernel.org("ACPI: resource: skip IRQ override on AMD
    Zen platforms") on kernel 5.19.10.
    
    The ACPI IRQ override is required for this board due to buggy DSDT, thus
    adding the board vendor and name to irq1_edge_low_force_override fixes
    the issue.
    
    Fixes: 9946e39fe8d0 ("ACPI: resource: skip IRQ override on AMD Zen platforms")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217394
    Link: https://lore.kernel.org/linux-acpi/20231006123304.32686-1-hdegoede@redhat.com/
    Tested-by: Maxim Trofimov <maxvereschagin@gmail.com>
    Signed-off-by: Maxim Kudinov <m.kudinovv@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ad6828022e735aeeb5f24fb2b6a519074f90cf8f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 032f7fd7d747a6514f0490ff758deaf00e38e7cb
Author: Alexey I. Froloff <raorn@raorn.name>
Date:   Fri Feb 16 12:30:09 2024 +0000

    ACPI: resource: Do IRQ override on Lunnen Ground laptops
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e23ad54fef186aa66007895be1382c88f1ee2bf7 ]
    
    The Lunnen Ground 15 and 16 needs IRQ overriding for the keyboard to
    work.
    
    Adding an entries for these laptops to the override_table makes the
    internal keyboard functional.
    
    Signed-off-by: Alexey I. Froloff <raorn@raorn.name>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Stable-dep-of: 021a67d09615 ("ACPI: resource: Add MAIBENBEN X577 to irq1_edge_low_force_override")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 875c708b255b7da2c747c9a4f67145bd2bc5e4f9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2482688a192e239db694f28071177f9e59d4eaea
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Tue Jan 23 13:22:58 2024 +0100

    arm64: dts: marvell: reorder crypto interrupts on Armada SoCs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ec55a22149d64f9ac41845d923b884d4a666bf4d ]
    
    Match order specified in binding documentation. It says "mem" should be
    the last interrupt.
    
    This fixes:
    arch/arm64/boot/dts/marvell/armada-3720-db.dtb: crypto@90000: interrupt-names:0: 'ring0' was expected
            from schema $id: http://devicetree.org/schemas/crypto/inside-secure,safexcel.yaml#
    arch/arm64/boot/dts/marvell/armada-3720-db.dtb: crypto@90000: interrupt-names:1: 'ring1' was expected
            from schema $id: http://devicetree.org/schemas/crypto/inside-secure,safexcel.yaml#
    arch/arm64/boot/dts/marvell/armada-3720-db.dtb: crypto@90000: interrupt-names:2: 'ring2' was expected
            from schema $id: http://devicetree.org/schemas/crypto/inside-secure,safexcel.yaml#
    arch/arm64/boot/dts/marvell/armada-3720-db.dtb: crypto@90000: interrupt-names:3: 'ring3' was expected
            from schema $id: http://devicetree.org/schemas/crypto/inside-secure,safexcel.yaml#
    arch/arm64/boot/dts/marvell/armada-3720-db.dtb: crypto@90000: interrupt-names:4: 'eip' was expected
            from schema $id: http://devicetree.org/schemas/crypto/inside-secure,safexcel.yaml#
    arch/arm64/boot/dts/marvell/armada-3720-db.dtb: crypto@90000: interrupt-names:5: 'mem' was expected
            from schema $id: http://devicetree.org/schemas/crypto/inside-secure,safexcel.yaml#
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9c7a767ff9b54e4b9d29e007371263ad4d568ee0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e5a4ad1cec762ca9852b30631710864dd6eef06b
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Thu Feb 22 22:52:53 2024 -0800

    gpiolib: Pass consumer device through to core in devm_fwnode_gpiod_get_index()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0d776cfd5e5b559fdf2e38285c2aea4b7048acbd ]
    
    This devm API takes a consumer device as an argument to setup the devm
    action, but throws it away when calling further into gpiolib. This leads
    to odd debug messages like this:
    
     (NULL device *): using DT '/gpio-keys/switch-pen-insert' for '(null)' GPIO lookup
    
    Let's pass the consumer device down, by directly calling what
    fwnode_gpiod_get_index() calls but pass the device used for devm. This
    changes the message to look like this instead:
    
     gpio-keys gpio-keys: using DT '/gpio-keys/switch-pen-insert' for '(null)' GPIO lookup
    
    Note that callers of fwnode_gpiod_get_index() will still see the NULL
    device pointer debug message, but there's not much we can do about that
    because the API doesn't take a struct device.
    
    Cc: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Fixes: 8eb1f71e7acc ("gpiolib: consolidate GPIO lookups")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 57662cd437c052595711bc733574e6895e074ee5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2fe99435b60f8de318a6a0c7447308b79a0eeab7
Author: John Keeping <jkeeping@inmusicbrands.com>
Date:   Mon Feb 26 16:05:53 2024 +0000

    regulator: userspace-consumer: add module device table
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 531a0c0cdbff9cecf41073220a826f8b1132f9ab ]
    
    The userspace consumer can be built as a module but it cannot be
    automatically probed as there is no device table to match it up with
    device tree nodes.
    
    Add the missing macro so that the module can load automatically.
    
    Fixes: 5c51d4afcf3fd ("regulator: userspace-consumer: Handle regulator-output DT nodes")
    Signed-off-by: John Keeping <jkeeping@inmusicbrands.com>
    Link: https://msgid.link/r/20240226160554.1453283-1-jkeeping@inmusicbrands.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1cb2f1f6229a7ae03aeb7bc222af6695bdf4cf08)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 213f68e238826cabf2200a08e779fa0052ca6d54
Author: Liu Ying <victor.liu@nxp.com>
Date:   Fri Feb 23 10:57:38 2024 +0800

    arm64: dts: imx8mp-evk: Fix hdmi@3d node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0ff08803eca417dfa9372194bebf3d1b1f501f98 ]
    
    The hdmi@3d node's compatible string is "adi,adv7535" instead of
    "adi,adv7533" or "adi,adv751*".
    
    Fix the hdmi@3d node by means of:
    * Use default register addresses for "cec", "edid" and "packet", because
      there is no need to use a non-default address map.
    * Add missing interrupt related properties.
    * Drop "adi,input-*" properties which are only valid for adv751*.
    * Add VEXT_3V3 fixed regulator.
    * Add "*-supply" properties, since most are required.
    * Fix label names - s/adv7533/adv7535/.
    
    Fixes: 65344b9bed3a ("arm64: dts: imx8mp-evk: Add HDMI support")
    Signed-off-by: Liu Ying <victor.liu@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 91c610a6d147ab24ef0f19f7e5294319b32de53f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 59173a582554ea17bd42583da74ef03b2b2e335f
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 17 22:33:30 2024 +0100

    arm64: dts: imx8mp: Set SPI NOR to max 40 MHz on Data Modul i.MX8M Plus eDM SBC
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 13ab6f174a6b577bd7d09124b47ec8ace2682e42 ]
    
    The SPI NOR bus routing on this board cannot go above 50 MHz,
    set the clock frequency to maximum of 40 MHz to be within a
    safe margin. Remove the comment as well.
    
    Fixes: 562d222f23f0 ("arm64: dts: imx8mp: Add support for Data Modul i.MX8M Plus eDM SBC")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a48006fe4ce7866d4f1891052eb2a81a30207f8e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b2c2e866d3331e4683a4bea4936ca1fbaccc1c7d
Author: Michal Vokáč <michal.vokac@ysoft.com>
Date:   Wed Feb 14 10:03:28 2024 +0100

    ARM: dts: imx6dl-yapp4: Move the internal switch PHYs under the switch node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 79978bff2e4b8e05ebdf5fc3ee6b794002393484 ]
    
    We identified that the PHYs actually do not work since commit 7da7b84fee58
    ("ARM: dts: imx6dl-yapp4: Move phy reset into switch node") as
    a coincidence of several circumstances.
    
    The reset signal is kept asserted by a pull-down resistor on the board
    unless it is deasserted by GPIO from the SoC. This is to keep the switch
    dead until it is configured properly by the kernel and user space.
    
    Prior to the referenced commit the switch was reset by the FEC driver
    and the reset GPIO was actively deasserted. The mdio-bus was scanned
    and the attached switch and its PHYs were found and configured.
    
    With the referenced commit the switch is reset by the qca8k driver.
    Because of another bug in the qca8k driver, functionality of the reset
    pin depends on its pre-kernel configuration. See commit c44fc98f0a8f
    ("net: dsa: qca8k: fix illegal usage of GPIO")
    
    The problem did not appear until we removed support for the switch
    and configuration of its reset pin from the bootloader.
    
    To fix that, properly describe the internal mdio-bus configuration of
    the qca8334 switch. The PHYs are internal to the switch and sit on its
    internal mdio-bus.
    
    Fixes: 7da7b84fee58 ("ARM: dts: imx6dl-yapp4: Move phy reset into switch node")
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 645ebc950846cda80d66415190d0bfc8f51c5b50)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bf02433d8e3cf4b4b7ddf8c514df0eec51854023
Author: Michal Vokáč <michal.vokac@ysoft.com>
Date:   Wed Feb 14 10:03:27 2024 +0100

    ARM: dts: imx6dl-yapp4: Fix typo in the QCA switch register address
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 023bd910d3ab735459f84b22bb99fb9e00bd9d76 ]
    
    This change does not have any functional effect. The switch works just
    fine without this patch as it has full access to all the addresses
    on the bus. This is simply a clean-up to set the node name address
    and reg address to the same value.
    
    Fixes: 15b43e497ffd ("ARM: dts: imx6dl-yapp4: Use correct pseudo PHY address for the switch")
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0fe2cfbe6a20a62a7f37e921cb94e2b361d21318)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e45e82cd495190889c080c2a18ecea3ad49d58b5
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sun Jan 28 00:32:45 2024 +0800

    arm64: dts: allwinner: h6: Add RX DMA channel for SPDIF
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7b59348c11f3355e284d77bbe3d33632ddadcfc2 ]
    
    The SPDIF hardware found on the H6 supports both transmit and receive
    functions. However it is missing the RX DMA channel.
    
    Add the SPDIF hardware block's RX DMA channel. Also remove the
    by-default pinmux, since the end device can choose to implement
    either or both functionalities.
    
    Fixes: f95b598df419 ("arm64: dts: allwinner: Add SPDIF node for Allwinner H6")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Reviewed-by: Andre Przywara <andre.przywara@arm.com>
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20240127163247.384439-6-wens@kernel.org
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0e5ee8ec1aad36f2794e2ccfe7127d6138a349cc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 92baf677eeb018977ea4e0a73846664670289bc7
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Feb 22 09:48:46 2024 -0800

    pstore: inode: Only d_invalidate() is needed
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a43e0fc5e9134a46515de2f2f8d4100b74e50de3 ]
    
    Unloading a modular pstore backend with records in pstorefs would
    trigger the dput() double-drop warning:
    
      WARNING: CPU: 0 PID: 2569 at fs/dcache.c:762 dput.part.0+0x3f3/0x410
    
    Using the combo of d_drop()/dput() (as mentioned in
    Documentation/filesystems/vfs.rst) isn't the right approach here, and
    leads to the reference counting problem seen above. Use d_invalidate()
    and update the code to not bother checking for error codes that can
    never happen.
    
    Suggested-by: Alexander Viro <viro@zeniv.linux.org.uk>
    Fixes: 609e28bb139e ("pstore: Remove filesystem records when backend is unregistered")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    (cherry picked from commit 340682ed1932b8e3bd0bfc6c31a0c6354eb57cc6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f1ad19ed6b2cc50fb3b4417d5a295ebb63a0038e
Author: Jeremy Kerr <jk@codeconstruct.com.au>
Date:   Mon Feb 19 17:51:54 2024 +0800

    net: mctp: copy skb ext data when fragmenting
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1394c1dec1c619a46867ed32791a29695372bff8 ]
    
    If we're fragmenting on local output, the original packet may contain
    ext data for the MCTP flows. We'll want this in the resulting fragment
    skbs too.
    
    So, do a skb_ext_copy() in the fragmentation path, and implement the
    MCTP-specific parts of an ext copy operation.
    
    Fixes: 67737c457281 ("mctp: Pass flow data & flow release events to drivers")
    Reported-by: Jian Zhang <zhangjian.3032@bytedance.com>
    Signed-off-by: Jeremy Kerr <jk@codeconstruct.com.au>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 06460a1de745b22f02c8f31153a0dbd89ca14bec)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 77327114d31fcd77c51099792d00d136e3d4c4af
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Sun Feb 11 15:21:31 2024 +0100

    arm64: dts: renesas: r8a779g0: Correct avb[01] reg sizes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7edbb5880dc3317a5eaec2166de71ff394598e6b ]
    
    All Ethernet AVB instances on R-Car V4H have registers related to UDP/IP
    support, but the declared register blocks for the first two instances
    are too small to cover them.
    
    Fix this by extending the register block sizes.
    
    Fixes: 848c82db56923a8b ("arm64: dts: renesas: r8a779g0: Add RAVB nodes")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/83437778614a7c96f4d8f1be98dffeee29bb4a0b.1707660323.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 34c4db757ed34149467a3049b770fb2f4e044790)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd472b1220c0919c438a94f2c48816e76195c1f4
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Sun Feb 11 15:21:30 2024 +0100

    arm64: dts: renesas: r8a779a0: Correct avb[01] reg sizes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0c51912331f8ba5ce5fb52f46e340945160672a3 ]
    
    All Ethernet AVB instances on R-Car V3U have registers related to UDP/IP
    support, but the declared register blocks for the first two instances
    are too small to cover them.
    
    Fix this by extending the register block sizes.
    
    Fixes: 5a633320f08b8c9b ("arm64: dts: renesas: r8a779a0: Add Ethernet-AVB support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/ce6ce3c4b1495e02e7c1803fca810a7178a84500.1707660323.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fb12b465e91376a50bd7f51108b44ff306d4d545)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8e12387196166190b4c2ec48fb02898e9317772d
Author: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
Date:   Thu Feb 8 14:42:55 2024 +0200

    arm64: dts: renesas: rzg3s-smarc-som: Guard Ethernet IRQ GPIO hogs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 150d81f7a260f36c118cbec253fdd493c671dc29 ]
    
    Ethernet IRQ GPIOs are marked as GPIO hogs.  Thus, these GPIOs are
    requested at probe time without considering if there are other
    peripherals that need them.  The Ethernet IRQ GPIOs are shared with
    SDHI2.  Selection between Ethernet and SDHI2 is done through a hardware
    switch.  To avoid scenarios where one wants to boot with SDHI2 support
    and some SDHI pins are not propertly configured because of the GPIO
    hogs, guard the Ethernet IRQ GPIO hogs with the proper build flag.
    
    Fixes: 932ff0c802c6 ("arm64: dts: renesas: rzg3s-smarc-som: Enable the Ethernet interfaces")
    Signed-off-by: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20240208124300.2740313-13-claudiu.beznea.uj@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 14c69f18620f0c0aa479eb8984becb27553dada9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8fdec3b31f4bf77a2f57aa5e1d8b60192f7f6325
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Feb 5 14:44:21 2024 +0000

    arm64: dts: renesas: r9a08g045: Add missing interrupts to IRQC node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bf7e37716d995c54630c30540db5642f58ea037a ]
    
    The IRQC block on the RZ/G3S (R9A08G045) SoC supports ECCRAM error
    interrupts too.  Add those missing interrupts to the IRQC node.
    
    Fixes: 837918aa3fdd ("arm64: dts: renesas: r9a08g045: Add IA55 interrupt controller node")
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea.uj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20240205144421.51195-4-prabhakar.mahadev-lad.rj@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ba482c908bf9e20fba3fe217e6a2e8bf56505fa8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c1e33605066555d7f93aee3b9c2694feed567de6
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Feb 5 14:44:20 2024 +0000

    arm64: dts: renesas: rzg2l: Add missing interrupts to IRQC nodes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 14fe225dd5fcd5928583b0bcc34398a581f51602 ]
    
    The IRQC IP block supports Bus error and ECCRAM interrupts on RZ/G2L and
    alike SoC's (listed below).  Update the IRQC nodes with the missing
    interrupts, and additionally, include the 'interrupt-names' properties
    in the IRQC nodes so that the driver can parse interrupts by name.
    
      - R9A07G043U              - RZ/G2UL
      - R9A07G044L/R9A07G044LC  - RZ/{G2L,G2LC}
      - R9A07G054               - RZ/V2L
    
    Fixes: 5edc51af5b30 ("arm64: dts: renesas: r9a07g044: Add IRQC node")
    Fixes: 48ab6eddd8bb ("arm64: dts: renesas: r9a07g043u: Add IRQC node")
    Fixes: 379478ab09e0 ("arm64: dts: renesas: r9a07g054: Add IRQC node")
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20240205144421.51195-3-prabhakar.mahadev-lad.rj@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0936405f6af96ba127b8d47eee0e9c738b95f696)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea08fc645eca46fcedeb9be9d83a4eacf9cbe40e
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Wed Feb 7 11:31:23 2024 +0800

    wifi: mt76: fix the issue of missing txpwr settings from ch153 to ch177
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e9a46175a79fbc591c48d433020444b8fa2750ee ]
    
    Because the number of channels to be configured is calculated using the %,
    and it results in 0 when there's an exact division, this leads to some
    channels not having their tx power configured.
    
    Fixes: 7801da338856 ("wifi: mt76: mt7921: enable set txpower for UNII-4")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f38a9944c8872157970e87e5df35a99f1a8d9d95)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 41c7038544bff9a15c4fda756f46f08834912ce7
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Tue Jan 16 10:48:55 2024 +0800

    wifi: mt76: mt792x: fix a potential loading failure of the 6Ghz channel config from ACPI
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 07ce1d46372489d90f9cccebb3277d1af801c4b9 ]
    
    In some case, the MTCL table will exist, but MTDS table will not.
    So the SAR will init fail. This patch make MTCL and MTDS can exist
    with no dependence.
    
    Fixes: f965333e491e ("mt76: mt7921: introduce ACPI SAR support")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Leon Yen <leon.yen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3f6b41f6d2d9bddc5b5b753bd7090d5dfac06ab5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4ac47913f4943f0dc71cd051c65fa4898776f196
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Tue Jan 16 10:48:54 2024 +0800

    wifi: mt76: mt7921: fix incorrect type conversion for CLC command
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b6351ef9994ccb93b2447d396a0c517964dff2bc ]
    
    clc->len is defined as 32 bits in length, so it must also be
    operated on with 32 bits, not 16 bits.
    
    Fixes: fa6ad88e023d ("wifi: mt76: mt7921: fix country count limitation for CLC")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202312112104.Zkc3QUHr-lkp@intel.com/
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7bfe8fe39892a767be812d6c2b8a1aad284e8d39)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 27d7c08982096522eb407287f87a1305408ff5d2
Author: Deren Wu <deren.wu@mediatek.com>
Date:   Sat Jan 13 17:00:23 2024 +0800

    wifi: mt76: mt7925e: fix use-after-free in free_irq()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a5a5f4413d91f395cb2d89829d376d7393ad48b9 ]
    
    From commit a304e1b82808 ("[PATCH] Debug shared irqs"), there is a test
    to make sure the shared irq handler should be able to handle the unexpected
    event after deregistration. For this case, let's apply MT76_REMOVED flag to
    indicate the device was removed and do not run into the resource access
    anymore.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6d9930096e1f13cf6d9aabfbf95d0e05fb04144f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e8d4a1fc27c4fb8e3988b9bbd9899bd76fa4a0c6
Author: Deren Wu <deren.wu@mediatek.com>
Date:   Sat Jan 13 17:00:22 2024 +0800

    wifi: mt76: mt7921e: fix use-after-free in free_irq()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c957280ef6ab6bdf559a91ae693a6b34310697e3 ]
    
    From commit a304e1b82808 ("[PATCH] Debug shared irqs"), there is a test
    to make sure the shared irq handler should be able to handle the unexpected
    event after deregistration. For this case, let's apply MT76_REMOVED flag to
    indicate the device was removed and do not run into the resource access
    anymore.
    
    BUG: KASAN: use-after-free in mt7921_irq_handler+0xd8/0x100 [mt7921e]
    Read of size 8 at addr ffff88824a7d3b78 by task rmmod/11115
    CPU: 28 PID: 11115 Comm: rmmod Tainted: G        W    L    5.17.0 #10
    Hardware name: Micro-Star International Co., Ltd. MS-7D73/MPG B650I
    EDGE WIFI (MS-7D73), BIOS 1.81 01/05/2024
    Call Trace:
     <TASK>
     dump_stack_lvl+0x6f/0xa0
     print_address_description.constprop.0+0x1f/0x190
     ? mt7921_irq_handler+0xd8/0x100 [mt7921e]
     ? mt7921_irq_handler+0xd8/0x100 [mt7921e]
     kasan_report.cold+0x7f/0x11b
     ? mt7921_irq_handler+0xd8/0x100 [mt7921e]
     mt7921_irq_handler+0xd8/0x100 [mt7921e]
     free_irq+0x627/0xaa0
     devm_free_irq+0x94/0xd0
     ? devm_request_any_context_irq+0x160/0x160
     ? kobject_put+0x18d/0x4a0
     mt7921_pci_remove+0x153/0x190 [mt7921e]
     pci_device_remove+0xa2/0x1d0
     __device_release_driver+0x346/0x6e0
     driver_detach+0x1ef/0x2c0
     bus_remove_driver+0xe7/0x2d0
     ? __check_object_size+0x57/0x310
     pci_unregister_driver+0x26/0x250
     __do_sys_delete_module+0x307/0x510
     ? free_module+0x6a0/0x6a0
     ? fpregs_assert_state_consistent+0x4b/0xb0
     ? rcu_read_lock_sched_held+0x10/0x70
     ? syscall_enter_from_user_mode+0x20/0x70
     ? trace_hardirqs_on+0x1c/0x130
     do_syscall_64+0x5c/0x80
     ? trace_hardirqs_on_prepare+0x72/0x160
     ? do_syscall_64+0x68/0x80
     ? trace_hardirqs_on_prepare+0x72/0x160
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Reported-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Closes: https://lore.kernel.org/linux-wireless/CABXGCsOdvVwdLmSsC8TZ1jF0UOg_F_W3wqLECWX620PUkvNk=A@mail.gmail.com/
    Fixes: 9270270d6219 ("wifi: mt76: mt7921: fix PCI DMA hang after reboot")
    Tested-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Signed-off-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bfeaef901194c5923ce3330272786eff2fac513a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0f349076b22c948c571023626db0a2a6abb3b686
Author: Gen Xu <genxu6@gmail.com>
Date:   Sat Jan 27 09:04:30 2024 -0800

    wifi: mt76: mt792x: fix ethtool warning
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7b4f9cd6a5fc221895b1d9be83ee3c13c00d09ab ]
    
    Add a missing EHT related field to fix the following ethtool warning:
    [98179.287352] mt7921e 0003:01:00.0: ei: 74  SSTATS_LEN: 73
    
    Fixes: c74df1c067f2 ("wifi: mt76: mt792x: introduce mt792x-lib module")
    Signed-off-by: Gen Xu <genxu6@gmail.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8b553669bbacb3650500af745f81afe56583c9c0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ebe0dbd74c9558e54c74e80f1298c16984fc2ab7
Author: Benjamin Lin <benjamin-jw.lin@mediatek.com>
Date:   Fri Jan 26 17:09:23 2024 +0800

    wifi: mt76: mt7996: fix HIF_TXD_V2_1 value
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit de8882775156682ba358afc82cb575c92cf3d092 ]
    
    Sync the value of HIF_TXD_V2_1 with firmware to let it correctly fill
    TXD values for HW path.
    
    Fixes: 98686cd21624 ("wifi: mt76: mt7996: add driver for MediaTek Wi-Fi 7 (802.11be) devices")
    Signed-off-by: Benjamin Lin <benjamin-jw.lin@mediatek.com>
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b0dd7a0dfcdf1a4225daab7c75efd7c48e999267)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e3b4b1e39df2293fc99e85d46c1275387b6f172
Author: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date:   Fri Jan 26 17:09:19 2024 +0800

    wifi: mt76: mt7996: fix efuse reading issue
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d3ad99be7cc2d174126d908addd6bea2b157aa75 ]
    
    The efuse data starts from the 48th bytes instead of 64th bytes in the
    returned event skb.
    
    Fixes: 98686cd21624 ("wifi: mt76: mt7996: add driver for MediaTek Wi-Fi 7 (802.11be) devices")
    Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a6b7cbee09870d833ed994acd122fdd920e7a983)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0eee5601be6cffc62a4f4757278f6de3ada541e4
Author: Howard Hsu <howard-yh.hsu@mediatek.com>
Date:   Fri Jan 26 17:09:17 2024 +0800

    wifi: mt76: mt7996: fix HE beamformer phy cap for station vif
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e1a491e856a8a36c46b39ecd07f3bba5a119d83a ]
    
    Set correct beamformer capabilities for station vif in HE PHY
    capability IE.
    
    Fixes: 98686cd21624 ("wifi: mt76: mt7996: add driver for MediaTek Wi-Fi 7 (802.11be) devices")
    Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8a390780a034f6ceb8739f1ad85c9daf31a73ce1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 89ab7e588519392ce18f8037c3e4cb2f83d3bb35
Author: Benjamin Lin <benjamin-jw.lin@mediatek.com>
Date:   Fri Jan 26 17:09:15 2024 +0800

    wifi: mt76: mt7996: fix incorrect interpretation of EHT MCS caps
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d52c97592f06552a4289008602b5d5b724084ba7 ]
    
    The EHT MCS map subfield of 20 MHz-Only is not present in the EHT
    capability of AP, so STA does not need to parse the subfield.
    Moreover, AP should parse the subfield only if STA is 20 MHz-Only, which
    can be confirmed by checking supported channel width in HE capability.
    
    Fixes: 92aa2da9fa49 ("wifi: mt76: mt7996: enable EHT support in firmware")
    Co-developed-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Benjamin Lin <benjamin-jw.lin@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f515aaabaf71e221112bc90175fc6d54e52260c7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ddb6a7850dd271f70874a4ef20ea8fa1a9e6c59f
Author: Peter Chiu <chui-hao.chiu@mediatek.com>
Date:   Fri Jan 26 17:09:13 2024 +0800

    wifi: mt76: mt7996: fix TWT issues
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5c832c228f6a7ba7e900c5296ce0fb3844bafec5 ]
    
    This patch fixes the following TWT issues:
    - Change table_mask to u16 to support up to 16 TWT stations
    - Reject TWT flows for duplicated establishment
    - Fix possible unaligned pointer
    - Remove unsupported TWT_CONTROL_WAKE_DUR_UNIT flag
    - The minimum TWT duration supported by mt7996 chipsets is 64. Reply
      with TWT_SETUP_CMD_DICTATE if the min_twt_dur is smaller than 64
    
    Fixes: 98686cd21624 ("wifi: mt76: mt7996: add driver for MediaTek Wi-Fi 7 (802.11be) devices")
    Signed-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0804eea134e87cfd9e6837d519dcdd7f263bd380)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d9cc6262ed4ae3879cc3f10971997304bf29280a
Author: Peter Chiu <chui-hao.chiu@mediatek.com>
Date:   Fri Jan 26 17:09:12 2024 +0800

    wifi: mt76: mt7996: check txs format before getting skb by pid
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9c9c25f1dcdd98fffda564d2073f26219c84a2c3 ]
    
    The PPDU TXS does not include the error bit so it cannot use to report
    status to mac80211. This patch fixes issue that STA wrongly detects if AP
    is still alive.
    
    Fixes: 2569ea5326e2 ("wifi: mt76: mt7996: enable PPDU-TxS to host")
    Signed-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f3b7e959978a659f72c5ef3c509b18864473481d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e00f7a0273bb61c613b2a73d43ab00c48bb99d1e
Author: Deren Wu <deren.wu@mediatek.com>
Date:   Fri Dec 29 11:09:37 2023 +0800

    wifi: mt76: mt7925: update PCIe DMA settings
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0844947ccf64ea45edf6619ae2ba6dd9098b3308 ]
    
    Fix the wrong WFDMA settings to improve TX performance.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fd8c03d8dc9e335851183ce4ac1626c85e007932)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit deec06f630a31c061244d20cb071e73ffec90ad0
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Fri Dec 29 11:09:36 2023 +0800

    wifi: mt76: mt7925: add support to set ifs time by mcu command
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8536ef0aeae1177c4a59b043d4b1c41ddaa9df2a ]
    
    There's a race between driver and fw on some tx/rx control registers
    when setting ifs, which will cause accidental hw queue pause problems.
    Avoid this by setting ifs time with bss_info mcu command.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Co-developed-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d7652c4dd31602d6a25b3dd98d1132295136cafd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a538e9cd347abc32e281844a307a447497870b2c
Author: Quan Zhou <quan.zhou@mediatek.com>
Date:   Fri Dec 29 11:09:35 2023 +0800

    wifi: mt76: mt7925: add flow to avoid chip bt function fail
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9300ae0cd9e8f2407b20e0e67ee3ea03dc8b06af ]
    
    A sub-process of Wifi L0.5 reset will make chip common partition
    enter low power, and have chance lead to Bluetooth host-to-chip
    command timeout, modify the software flow according to the chip's
    design to solve the problem.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Quan Zhou <quan.zhou@mediatek.com>
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e146e9c3d747924d472bd42d082a2449c20b1c80)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 31619f7fb7651059cd2b7f1c8c38e74fecb7da64
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Fri Dec 29 11:09:34 2023 +0800

    wifi: mt76: mt7925: fix the wrong header translation config
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d8cf7e1344727b80b4ec3dc17ca520238d55a88d ]
    
    The header translation config should set to broadcast and unicast
    cases correctly, not only unicast case. And also remove the cmds
    of wtbl (wlan table) series, because these MCU commands have
    already been replaced by other commands in mt7925.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 756d93024012645663e0a71dfca188495823574e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 015bf8fe6eb5e50e9a8d4bb55761760b78c07ca6
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Fri Dec 29 11:09:33 2023 +0800

    wifi: mt76: mt7925: fix WoW failed in encrypted mode
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 47916693ec7cd1b283ffa7554fc48ff4eec2daa1 ]
    
    When in suspend mode, WoW (Wake-on-WLAN) fails to wake the system remotely
    due to incorrect encryption mode settings. For the new mt7925 chipset, the
    old STA_REC_KEY_V2 command will send incorrect parameters to the firmware.
    Therefore, STA_REC_KEY_V3 has been introduced as a replacement for it.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 95dba4d686d1e28a60d160050e566dd586f33398)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e8725b25d7b33a5a5e351d8d5d342e17b6f76efe
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Fri Dec 29 11:09:32 2023 +0800

    wifi: mt76: mt7925: fix fw download fail
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6864bc734a48e90012cca8040cd0af72616666ca ]
    
    Add an address of fw region for fw download.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e46b6303e796d50ae9557f7e6b422dac9f098928)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d555f44a73c668335448752db4546068f7b5c7f4
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Fri Dec 29 11:09:31 2023 +0800

    wifi: mt76: mt7925: fix wmm queue mapping
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9d89edb576e385267f40193bd3776157101a504a ]
    
    Firmware uses access class index (ACI) for wmm parameters update,
    so convert mac80211 queue to ACI in mt7925_conf_tx().
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ba7e831633cece09033e1212f96193ce88741d16)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d0ade3946bc982780310a59151a31fd53ae2b9ee
Author: Hao Zhang <hao.zhang@mediatek.com>
Date:   Fri Dec 29 11:09:30 2023 +0800

    wifi: mt76: mt7925: fix mcu query command fail
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2f475cb63eb304bdbb58c9b07b0547ca6c343012 ]
    
    Apply query command type properly to make the chip send the response back.
    Otherwise, we may see the command timeout in driver side.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Hao Zhang <hao.zhang@mediatek.com>
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b326f8443ca5e9ead9fe69191f837f40a300c1df)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e633bd6ab4f8770a83d17fe4b880fa51b7c6c690
Author: rong.yan <rong.yan@mediatek.com>
Date:   Fri Dec 29 11:09:29 2023 +0800

    wifi: mt76: mt7925: fix SAP no beacon issue in 5Ghz and 6Ghz band
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 243cecc857735344473ea33a713cd5c2ec1fe347 ]
    
    Driver should configure basic rate and phy mode for SAP mode.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: rong.yan <rong.yan@mediatek.com>
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4cee21b74a5095c49450939c7785dddbbe1fd28d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f933ca71de9e9d6f8f282ae74cebeea4de1e9dcc
Author: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
Date:   Fri Dec 29 11:09:28 2023 +0800

    wifi: mt76: mt7925: fix connect to 80211b mode fail in 2Ghz band
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 479146078a21ff2015cdd4e0467cba0559911915 ]
    
    Driver should setting correct phy mode to firmware when in legacy mode.
    
    Fixes: c948b5da6bbe ("wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips")
    Signed-off-by: Ming Yen Hsieh <mingyen.hsieh@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5ca40a9ff8d9326caaa052959d350a9a57fd2a4f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a7a4777fe47c1b7117bdc7223f3bcc51609b38ce
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Thu Dec 21 10:41:18 2023 +0100

    wifi: mt76: mt7996: fix fw loading timeout
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 030d2e287a902b44ef45e660cf1d73af23fe7d2e ]
    
    Fix the following firmware loading error due to a wrong dma register
    configuration if wed is disabled.
    
    [    8.245881] mt7996e_hif 0001:01:00.0: assign IRQ: got 128
    [    8.251308] mt7996e_hif 0001:01:00.0: enabling device (0000 -> 0002)
    [    8.257674] mt7996e_hif 0001:01:00.0: enabling bus mastering
    [    8.263488] mt7996e 0000:01:00.0: assign IRQ: got 126
    [    8.268537] mt7996e 0000:01:00.0: enabling device (0000 -> 0002)
    [    8.274551] mt7996e 0000:01:00.0: enabling bus mastering
    [   28.648773] mt7996e 0000:01:00.0: Message 00000010 (seq 1) timeout
    [   28.654959] mt7996e 0000:01:00.0: Failed to get patch semaphore
    [   29.661033] mt7996e: probe of 0000:01:00.0 failed with error -11
    
    Suggested-by: "Sujuan Chen" <sujuan.chen@mediatek.com>
    Fixes: 4920a3a1285f ("wifi: mt76: mt7996: set DMA mask to 36 bits for boards with more than 4GB of RAM")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bdd58c1cac126ceaf6a20904e95363fcd45b3c9c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 83ea95619ff233f53c8319b3816a9591a42735ce
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Tue Feb 20 12:44:28 2024 +0000

    memory: tegra: Correct DLA client names
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 51d915cbeef4c7a154f5d810b1e10d8125f2b0cc ]
    
    Some of the names for the Tegra234 DLA clients are not unique and do not
    align with the name of the client ID definitions. Therefore, it is not
    possible to determine the exact DLA client from messages that print the
    client name. Fix this by correcting the DLA memory client names for
    Tegra234 to align with the name of the corresponding memory client ID.
    
    Note that although the client names are also used by the interconnect
    framework, interconnect support for the DLA clients has not been added
    and so this issue does not impact the interconnect support.
    
    Fixes: 5cd24ca0985f ("memory: tegra: Add DLA clients for Tegra234")
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20240220124430.19072-1-jonathanh@nvidia.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 06d4b6bd4b4e86d28b600cd62a4f747970d0973b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 268ea90a7ab02fe53d32e9bf36ab33279f9389ff
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Aug 30 17:03:04 2023 +0200

    ARM: dts: arm: realview: Fix development chip ROM compatible value
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3baa4c5143d65ebab2de0d99a395e5f4f1f46608 ]
    
    When the development chip ROM was added, the "direct-mapped" compatible
    value was already obsolete.  In addition, the device node lacked the
    accompanying "probe-type" property, causing the old physmap_of_core
    driver to fall back to trying all available probe types.
    Unfortunately this fallback was lost when the DT and pdata cases were
    merged.
    
    Fix this by using the modern "mtd-rom" compatible value instead.
    
    Fixes: 5c3f5edbe0a1dff3 ("ARM: realview: add flash devices to the PB1176 DTS")
    Fixes: 642b1e8dbed7bbbf ("mtd: maps: Merge physmap_of.c into physmap-core.c")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit be5b1710e70da5aa4c3119d90134df9e1ab3a013)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 79f57e69f91aa79e553574aac581df3e10202923
Author: Alexis Lothoré <alexis.lothore@bootlin.com>
Date:   Sat Feb 17 14:22:41 2024 +0100

    wifi: wilc1000: revert reset line logic flip
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f3ec643947634bed41b97bd56b248f7c78498eab ]
    
    This reverts commit fcf690b0b47494df51d214db5c5a714a400b0257.
    
    When using a wilc1000 chip over a spi bus, users can optionally define a
    reset gpio and a chip enable gpio. The reset line of wilc1000 is active
    low, so to hold the chip in reset, a low (physical) value must be applied.
    
    The corresponding device tree binding documentation was introduced by
    commit f31ee3c0a555 ("wilc1000: Document enable-gpios and reset-gpios
    properties") and correctly indicates that the reset line is an active-low
    signal. The corresponding driver part, brought by commit ec031ac4792c
    ("wilc1000: Add reset/enable GPIO support to SPI driver") was applying the
    correct logic. But commit fcf690b0b474 ("wifi: wilc1000: use correct
    sequence of RESET for chip Power-UP/Down") eventually flipped this logic
    and started misusing the gpiod APIs, applying an inverted logic when
    powering up/down the chip (for example, setting the reset line to a logic
    "1" during power up, which in fact asserts the reset line when device tree
    describes the reset line as GPIO_ACTIVE_LOW). As a consequence, any
    platform currently using the driver in SPI mode must use a faulty reset
    line description in device tree, or else chip will be maintained in reset
    and will not even allow to bring up the chip.
    
    Fix reset line usage by inverting back the gpiod APIs usage, setting the
    reset line to the logic value "0" when powering the chip, and the logic
    value "1" when powering off the chip.
    
    Fixes: fcf690b0b474 ("wifi: wilc1000: use correct sequence of RESET for chip Power-UP/Down")
    Signed-off-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Acked-by: Conor Dooley <conor.dooley@microchip.com>
    Acked-by: Ajay Singh <ajay.kathat@microchip.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240217-wilc_1000_reset_line-v2-1-b216f433d7d5@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cf97d1ac719c011a7cfc3481fd72cc241afe3aab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8ff13400c24ed0bfdf7285c7f1dd6e03b75107ed
Author: Jai Luthra <j-luthra@ti.com>
Date:   Tue Feb 20 11:48:02 2024 +0530

    arm64: dts: ti: k3-am62p: Fix memory ranges for DMSS
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 90a67583171f213711de662fab9f8d24a2d291a9 ]
    
    The INTR module for DMASS1 (CSI specific DMASS) is outside the currently
    available ranges, as it starts at 0x4e400000. So fix the ranges property
    to enable programming the interrupts correctly.
    
    Fixes: 29075cc09f43 ("arm64: dts: ti: Introduce AM62P5 family of SoCs")
    Reviewed-by: Vaishnav Achath <vaishnav.a@ti.com>
    Signed-off-by: Jai Luthra <j-luthra@ti.com>
    Link: https://lore.kernel.org/r/20240220-am62p_csi-v2-1-3e71d9945571@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 819f07821ae49dbd4ee253e605136229986b8390)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a726f0d11fe91fa7b710de3d2d02ba796e9f2467
Author: Chintan Vankar <c-vankar@ti.com>
Date:   Tue Feb 13 13:33:48 2024 +0530

    arm64: dts: ti: k3-j784s4-main: Fix mux-reg-masks in serdes_ln_ctrl
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9a0c0a9baa2d1f906589d715f9baeab93e7fcdcb ]
    
    Change offset in mux-reg-masks property for serdes_ln_ctrl node
    since reg-mux property is used in compatible.
    
    Fixes: 2765149273f4 ("mux: mmio: use reg property when parent device is not a syscon")
    Signed-off-by: Chintan Vankar <c-vankar@ti.com>
    Acked-by: Andrew Davis <afd@ti.com>
    Signed-off-by: Siddharth Vadapalli <s-vadapalli@ti.com>
    Link: https://lore.kernel.org/r/20240213080348.248916-1-s-vadapalli@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9aa6ae2be261af64c5edcf3b34d465a6df31aa41)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 41c219738c8220bf5918668f91c066afe244a615
Author: Andrew Davis <afd@ti.com>
Date:   Thu Feb 15 08:19:57 2024 -0600

    arm64: dts: ti: k3-j721e: Fix mux-reg-masks in hbmc_mux
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3d585389d454e147187684e492a0eb8f56adf311 ]
    
    Change offset in mux-reg-masks property for hbmc_mux node
    since reg-mux property is used in compatible.
    
    While here, update the reg region to include 4 bytes as this
    is a 32bit register.
    
    Fixes: 2765149273f4 ("mux: mmio: use reg property when parent device is not a syscon")
    Suggested-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Andrew Davis <afd@ti.com>
    Link: https://lore.kernel.org/r/20240215141957.13775-1-afd@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e45b1667e63ea4eb22b4b618a95c7f3b163ae16e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ffe12fc34d8c9412b32faca397025c301450298e
Author: Benjamin Berg <benjamin.berg@intel.com>
Date:   Fri Feb 16 13:54:27 2024 +0200

    wifi: cfg80211: set correct param change count in ML element
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f8599d634094b1257054a8d0815785d658cbdb74 ]
    
    The ML element generation code to create a BSS entry from a per-STA
    profile was not overwriting the BSS parameter change count. This meant
    that the incorrect parameter change count would be reported within the
    multi-link element.
    
    Fix this by returning the BSS parameter change count from the function
    and placing it into the ML element. The returned tbtt info was never
    used, so just drop that to simplify the code.
    
    Fixes: 5f478adf1f99 ("wifi: cfg80211: generate an ML element for per-STA profiles")
    Signed-off-by: Benjamin Berg <benjamin.berg@intel.com>
    Reviewed-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240216135047.f2a507634692.I06b122c7a319a38b4e970f5e0bd3d3ef9cac4cbe@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 55e2f924dec20e08aaae0ba0e6d7c24fd00ce729)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 150a0f82761a81b4a599ab4c826a45d10e293418
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Fri Jan 26 12:23:25 2024 +0000

    firmware: arm_scmi: Fix double free in SMC transport cleanup path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f1d71576d2c9ec8fdb822173fa7f3de79475e9bd ]
    
    When the generic SCMI code tears down a channel, it calls the chan_free
    callback function, defined by each transport. Since multiple protocols
    might share the same transport_info member, chan_free() might want to
    clean up the same member multiple times within the given SCMI transport
    implementation. In this case, it is SMC transport. This will lead to a NULL
    pointer dereference at the second time:
    
        | scmi_protocol scmi_dev.1: Enabled polling mode TX channel - prot_id:16
        | arm-scmi firmware:scmi: SCMI Notifications - Core Enabled.
        | arm-scmi firmware:scmi: unable to communicate with SCMI
        | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
        | Mem abort info:
        |   ESR = 0x0000000096000004
        |   EC = 0x25: DABT (current EL), IL = 32 bits
        |   SET = 0, FnV = 0
        |   EA = 0, S1PTW = 0
        |   FSC = 0x04: level 0 translation fault
        | Data abort info:
        |   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
        |   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
        |   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
        | user pgtable: 4k pages, 48-bit VAs, pgdp=0000000881ef8000
        | [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
        | Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
        | Modules linked in:
        | CPU: 4 PID: 1 Comm: swapper/0 Not tainted 6.7.0-rc2-00124-g455ef3d016c9-dirty #793
        | Hardware name: FVP Base RevC (DT)
        | pstate: 61400009 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)
        | pc : smc_chan_free+0x3c/0x6c
        | lr : smc_chan_free+0x3c/0x6c
        | Call trace:
        |  smc_chan_free+0x3c/0x6c
        |  idr_for_each+0x68/0xf8
        |  scmi_cleanup_channels.isra.0+0x2c/0x58
        |  scmi_probe+0x434/0x734
        |  platform_probe+0x68/0xd8
        |  really_probe+0x110/0x27c
        |  __driver_probe_device+0x78/0x12c
        |  driver_probe_device+0x3c/0x118
        |  __driver_attach+0x74/0x128
        |  bus_for_each_dev+0x78/0xe0
        |  driver_attach+0x24/0x30
        |  bus_add_driver+0xe4/0x1e8
        |  driver_register+0x60/0x128
        |  __platform_driver_register+0x28/0x34
        |  scmi_driver_init+0x84/0xc0
        |  do_one_initcall+0x78/0x33c
        |  kernel_init_freeable+0x2b8/0x51c
        |  kernel_init+0x24/0x130
        |  ret_from_fork+0x10/0x20
        | Code: f0004701 910a0021 aa1403e5 97b91c70 (b9400280)
        | ---[ end trace 0000000000000000 ]---
    
    Simply check for the struct pointer being NULL before trying to access
    its members, to avoid this situation.
    
    This was found when a transport doesn't really work (for instance no SMC
    service), the probe routines then tries to clean up, and triggers a crash.
    
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Fixes: 1dc6558062da ("firmware: arm_scmi: Add smc/hvc transport")
    Reviewed-by: Cristian Marussi <cristian.marussi@arm.com>
    Link: https://lore.kernel.org/r/20240126122325.2039669-1-andre.przywara@arm.com
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ead445dd3d681020af333649a27306160eee761d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ee819f2890acd8a20cbed6b22744974b7ffc4aaf
Author: Devarsh Thakkar <devarsht@ti.com>
Date:   Fri Feb 16 11:54:25 2024 +0530

    arm64: dts: ti: Add common1 register space for AM62x SoC
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7d8ee2c3b8a2aabb9ce75795bad20773bfe1ba13 ]
    
    This adds common1 register space for AM62x SoC which is using TI's Keystone
    display hardware and supporting it as described in
    Documentation/devicetree/bindings/display/ti/ti,am65x-dss.yaml
    
    Fixes: 8ccc1073c7bb ("arm64: dts: ti: k3-am62-main: Add node for DSS")
    Signed-off-by: Devarsh Thakkar <devarsht@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Link: https://lore.kernel.org/r/20240216062426.4170528-4-devarsht@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 87fe365e8766075cce440bd26fe1231f322da7a0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c974fd401143647fa74c3e436a900457e3af6b61
Author: Devarsh Thakkar <devarsht@ti.com>
Date:   Fri Feb 16 11:54:24 2024 +0530

    arm64: dts: ti: Add common1 register space for AM65x SoC
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1a5010eade10b409d353b770d97b548b0fbdf5d7 ]
    
    This adds common1 register space for AM65x SoC which is using TI's Keystone
    display hardware and supporting it as described in
    Documentation/devicetree/bindings/display/ti/ti,am65x-dss.yaml
    
    Fixes: fc539b90eda2 ("arm64: dts: ti: am654: Add DSS node")
    Signed-off-by: Devarsh Thakkar <devarsht@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Link: https://lore.kernel.org/r/20240216062426.4170528-3-devarsht@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 48d01c1db4c3685aac14e62ad6447e3a7f815e75)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4f18ee0e74fbf894308bad3016b9bd8cf3fc69c7
Author: Hsin-Te Yuan <yuanhsinte@google.com>
Date:   Wed Jan 24 07:51:57 2024 +0000

    arm64: dts: mt8195-cherry-tomato: change watchdog reset boot flow
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ef569d5db50e7edd709e482157769a5b3c367e22 ]
    
    The external output reset signal was originally disabled and sent from
    firmware. However, an unfixed bug in the firmware on tomato prevents
    the signal from being sent, causing the device to fail to boot. To fix
    this, enable external output reset signal to allow the device to reboot
    normally.
    
    Fixes: 5eb2e303ec6b ("arm64: dts: mediatek: Introduce MT8195 Cherry platform's Tomato")
    Signed-off-by: Hsin-Te Yuan <yuanhsinte@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20240124-send-upstream-v3-1-5097c9862a73@chromium.org
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ff3e94b784558d7b2e2e02ea1ad8d9041bd46f71)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f984c88cf8ddfebc3a717d8d966c8f8cac7d96d5
Author: Judith Mendez <jm@ti.com>
Date:   Tue Feb 13 17:56:56 2024 -0600

    arm64: dts: ti: k3-am64-main: Fix ITAP/OTAP values for MMC
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 379c7752bbd0e81654544a896dd19c19ebb6faba ]
    
    Update MMC0/MMC1 OTAP/ITAP values according to the datasheet
    [0], refer to Table 7-68 for MMC0 and Table 7-77 for MMC1.
    
    [0] https://www.ti.com/lit/ds/symlink/am6442.pdf
    
    Fixes: 8abae9389bdb ("arm64: dts: ti: Add support for AM642 SoC")
    Signed-off-by: Judith Mendez <jm@ti.com>
    Tested-by: Wadim Egorov <w.egorov@phytec.de>
    Link: https://lore.kernel.org/r/20240213235701.2438513-5-jm@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b67d94e9ed263681a9d43a22a7bd557b69f35bfd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 74ec826b055dea5da80e83af0e23aea49a4e1d4b
Author: Bhavya Kapoor <b-kapoor@ti.com>
Date:   Wed Feb 14 16:28:46 2024 +0530

    arm64: dts: ti: k3-j784s4-evm: Remove Pinmux for CTS and RTS in wkup_uart0
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d29a6cf980572d8cf7b63935716fca663e2610f0 ]
    
    Only Tx and Rx Signal lines for wkup_uart0 are brought out on
    the J784S4 EVM from SoC, but CTS and RTS signal lines are not
    brought on the EVM. Thus, remove pinmux for CTS and RTS signal
    lines for wkup_uart0 in J784S4.
    
    Fixes: 6fa5d37a2f34 ("arm64: dts: ti: k3-j784s4-evm: Add mcu and wakeup uarts")
    Signed-off-by: Bhavya Kapoor <b-kapoor@ti.com>
    Link: https://lore.kernel.org/r/20240214105846.1096733-5-b-kapoor@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 400b12014a4d453064e23ea67f0bba0c87ed9c04)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a3256736303665c05e331054851cc972f0b5f54d
Author: Bhavya Kapoor <b-kapoor@ti.com>
Date:   Wed Feb 14 16:28:45 2024 +0530

    arm64: dts: ti: k3-j721s2-common-proc-board: Remove Pinmux for CTS and RTS in wkup_uart0
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 28e5b74d524050008edf415f20a3e38907b8f176 ]
    
    Only Tx and Rx Signal lines for wkup_uart0 are brought out on
    the Common Proc Board through SoM, but CTS and RTS signal lines
    are not brought on the board. Thus, remove pinmux for CTS and RTS
    signal lines for wkup_uart0 in J721S2.
    
    Fixes: f5e9ee0b354a ("arm64: dts: ti: k3-j721s2-common-proc-board: Add uart pinmux")
    Signed-off-by: Bhavya Kapoor <b-kapoor@ti.com>
    Link: https://lore.kernel.org/r/20240214105846.1096733-4-b-kapoor@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1e55f93df9efae09af3078005835b7e0c07f771d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c603bafa059e6d9be6ea63f34ae3423b6eee73a1
Author: Bhavya Kapoor <b-kapoor@ti.com>
Date:   Wed Feb 14 16:28:44 2024 +0530

    arm64: dts: ti: k3-j7200-common-proc-board: Remove clock-frequency from mcu_uart0
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0fa8b0e2083d333e4854b9767fb893f924e70ae5 ]
    
    Clock-frequency property is already present in mcu_uart0 node of the
    k3-j7200-mcu-wakeup.dtsi file. Thus, remove redundant clock-frequency
    property from mcu_uart0 node.
    
    Fixes: 3709ea7f960e ("arm64: dts: ti: k3-j7200-common-proc-board: Add uart pinmux")
    Signed-off-by: Bhavya Kapoor <b-kapoor@ti.com>
    Link: https://lore.kernel.org/r/20240214105846.1096733-3-b-kapoor@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5251df46853da6434c8d1c84a50e5d1ac5ba2b75)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 66aa3703037a5249e2330654f515fcc4ee6da7c6
Author: Bhavya Kapoor <b-kapoor@ti.com>
Date:   Wed Feb 14 16:28:43 2024 +0530

    arm64: dts: ti: k3-j7200-common-proc-board: Modify Pinmux for wkup_uart0 and mcu_uart0
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 566feddd2ba5e29d9ccab36d6508592ae563f275 ]
    
    WKUP_PADCONFIG registers for wkup_uart0 and mcu_uart0 lies
    under wkup_pmx2 for J7200. Thus, modify pinmux for both
    of them.
    
    Fixes: 3709ea7f960e ("arm64: dts: ti: k3-j7200-common-proc-board: Add uart pinmux")
    Signed-off-by: Bhavya Kapoor <b-kapoor@ti.com>
    Link: https://lore.kernel.org/r/20240214105846.1096733-2-b-kapoor@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7719dbb8a7327a5ba15c000e3480e684f6c9e5db)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 37a9e964a2aa2bc9e3a005f69e2ee88ad6a07ee7
Author: Kamal Heib <kheib@redhat.com>
Date:   Thu Feb 15 17:31:04 2024 -0500

    net: ena: Remove ena_select_queue
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 78e886ba2b549945ecada055ee0765f0ded5707a ]
    
    Avoid the following warnings by removing the ena_select_queue() function
    and rely on the net core to do the queue selection, The issue happen
    when an skb received from an interface with more queues than ena is
    forwarded to the ena interface.
    
    [ 1176.159959] eth0 selects TX queue 11, but real number of TX queues is 8
    [ 1176.863976] eth0 selects TX queue 14, but real number of TX queues is 8
    [ 1180.767877] eth0 selects TX queue 14, but real number of TX queues is 8
    [ 1188.703742] eth0 selects TX queue 14, but real number of TX queues is 8
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Kamal Heib <kheib@redhat.com>
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 599bf8e5aa7bd87235f76a7d925bac70fb7ac46a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c7c12338d0b8dc3a19c7fb6eaad485536a69dbdd
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Tue Feb 13 23:39:47 2024 +0100

    powercap: dtpm_cpu: Fix error check against freq_qos_add_request()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b50155cb0d609437236c88201206267835c6f965 ]
    
    The caller of the function freq_qos_add_request() checks again a non
    zero value but freq_qos_add_request() can return '1' if the request
    already exists. Therefore, the setup function fails while the QoS
    request actually did not failed.
    
    Fix that by changing the check against a negative value like all the
    other callers of the function.
    
    Fixes: 0e8f68d7f0485 ("Add CPU energy model based support")
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e53f6a685c6b88a62db65e3551599dd36b646ab5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 87e1b0d8666d6b4a5a91ab4e16b89d3e6bf8e210
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Mon Jan 8 14:12:16 2024 +0100

    arm64: dts: qcom: sm8150: correct PCIe wake-gpios
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7c38989d0f7a35c83e7c4781271d42662903fa8d ]
    
    Bindings allow a "wake", not "enable", GPIO.  Schematics also use WAKE
    name for the pin:
    
      sa8155p-adp.dtb: pcie@1c00000: Unevaluated properties are not allowed ('enable-gpio' was unexpected)
    
    Fixes: a1c86c680533 ("arm64: dts: qcom: sm8150: Add PCIe nodes")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240108131216.53867-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8b51319305f36d0c991ef244d73e2acacc750d7c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 734c8784d037c7d5df03cb6e72e4436a4e591fa6
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Mon Jan 8 14:12:15 2024 +0100

    arm64: dts: qcom: sdm845-db845c: correct PCIe wake-gpios
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 584a327c5cffc36369b2a8953d9448826240f1ac ]
    
    Bindings allow a "wake", not "enable", GPIO.  Schematics also use WAKE
    name for the pin:
    
      sdm845-db845c.dtb: pcie@1c00000: Unevaluated properties are not allowed ('enable-gpio' was unexpected)
    
    Fixes: 4a657c264b78 ("arm64: dts: qcom: db845c: Enable PCIe controllers")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240108131216.53867-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2e1342a1dbe3eb53b2f6ff237bc7484d522465f5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b771ad08484c89001711f8ff4770015c93958c23
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 13 11:05:37 2024 +0100

    wifi: brcmsmac: avoid function pointer casts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e1ea6db35fc3ba5ff063f097385e9f7a88c25356 ]
    
    An old cleanup went a little too far and causes a warning with clang-16
    and higher as it breaks control flow integrity (KCFI) rules:
    
    drivers/net/wireless/broadcom/brcm80211/brcmsmac/phy_shim.c:64:34: error: cast from 'void (*)(struct brcms_phy *)' to 'void (*)(void *)' converts to incompatible function type [-Werror,-Wcast-function-type-strict]
       64 |                         brcms_init_timer(physhim->wl, (void (*)(void *))fn,
          |                                                       ^~~~~~~~~~~~~~~~~~~~
    
    Change this one instance back to passing a void pointer so it can be
    used with the timer callback interface.
    
    Fixes: d89a4c80601d ("staging: brcm80211: removed void * from softmac phy")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240213100548.457854-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f327b954bff349e3a27cffd6e7c605bde5168c49)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 773504b3ad78ac45dcb175698b7ed09ea86acdc7
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Mon Jan 22 17:34:00 2024 -0600

    iommu/amd: Mark interrupt as managed
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0feda94c868d396fac3b3cb14089d2d989a07c72 ]
    
    On many systems that have an AMD IOMMU the following sequence of
    warnings is observed during bootup.
    
    ```
    pci 0000:00:00.2  can't derive routing for PCI INT A
    pci 0000:00:00.2: PCI INT A: not connected
    ```
    
    This series of events happens because of the IOMMU initialization
    sequence order and the lack of _PRT entries for the IOMMU.
    
    During initialization the IOMMU driver first enables the PCI device
    using pci_enable_device().  This will call acpi_pci_irq_enable()
    which will check if the interrupt is declared in a PCI routing table
    (_PRT) entry. According to the PCI spec [1] these routing entries
    are only required under PCI root bridges:
            The _PRT object is required under all PCI root bridges
    
    The IOMMU is directly connected to the root complex, so there is no
    parent bridge to look for a _PRT entry. The first warning is emitted
    since no entry could be found in the hierarchy. The second warning is
    then emitted because the interrupt hasn't yet been configured to any
    value.  The pin was configured in pci_read_irq() but the byte in
    PCI_INTERRUPT_LINE return 0xff which means "Unknown".
    
    After that sequence of events pci_enable_msi() is called and this
    will allocate an interrupt.
    
    That is both of these warnings are totally harmless because the IOMMU
    uses MSI for interrupts.  To avoid even trying to probe for a _PRT
    entry mark the IOMMU as IRQ managed. This avoids both warnings.
    
    Link: https://uefi.org/htmlspecs/ACPI_Spec_6_4_html/06_Device_Configuration/Device_Configuration.html?highlight=_prt#prt-pci-routing-table [1]
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Fixes: cffe0a2b5a34 ("x86, irq: Keep balance of IOAPIC pin reference count")
    Reviewed-by: Vasant Hegde <vasant.hegde@amd.com>
    Link: https://lore.kernel.org/r/20240122233400.1802-1-mario.limonciello@amd.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 278b268d1f6d17aca6a2c5a365b76a452512cee8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab80400faa14e3e650aa2eb50b803634ea4fdeaa
Author: Peter Robinson <pbrobinson@gmail.com>
Date:   Fri Feb 16 10:02:37 2024 +0000

    bus: tegra-aconnect: Update dependency to ARCH_TEGRA
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4acd21a45c1446277e2abaece97d7fa7c2e692a9 ]
    
    Update the architecture dependency to be the generic Tegra
    because the driver works on the four latest Tegra generations
    not just Tegra210, if you build a kernel with a specific
    ARCH_TEGRA_xxx_SOC option that excludes Tegra210 you don't get
    this driver.
    
    Fixes: 46a88534afb59 ("bus: Add support for Tegra ACONNECT")
    Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
    Cc: Jon Hunter <jonathanh@nvidia.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 02b0592db7901c7965a821ee81987d66239ea77d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b24b025517160ee6be4d144dfea1e71116059379
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Tue Feb 13 01:41:58 2024 +0100

    ACPI: processor_idle: Fix memory leak in acpi_processor_power_exit()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e18afcb7b2a12b635ac10081f943fcf84ddacc51 ]
    
    After unregistering the CPU idle device, the memory associated with
    it is not freed, leading to a memory leak:
    
    unreferenced object 0xffff896282f6c000 (size 1024):
      comm "swapper/0", pid 1, jiffies 4294893170
      hex dump (first 32 bytes):
        00 00 00 00 0b 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace (crc 8836a742):
        [<ffffffff993495ed>] kmalloc_trace+0x29d/0x340
        [<ffffffff9972f3b3>] acpi_processor_power_init+0xf3/0x1c0
        [<ffffffff9972d263>] __acpi_processor_start+0xd3/0xf0
        [<ffffffff9972d2bc>] acpi_processor_start+0x2c/0x50
        [<ffffffff99805872>] really_probe+0xe2/0x480
        [<ffffffff99805c98>] __driver_probe_device+0x78/0x160
        [<ffffffff99805daf>] driver_probe_device+0x1f/0x90
        [<ffffffff9980601e>] __driver_attach+0xce/0x1c0
        [<ffffffff99803170>] bus_for_each_dev+0x70/0xc0
        [<ffffffff99804822>] bus_add_driver+0x112/0x210
        [<ffffffff99807245>] driver_register+0x55/0x100
        [<ffffffff9aee4acb>] acpi_processor_driver_init+0x3b/0xc0
        [<ffffffff990012d1>] do_one_initcall+0x41/0x300
        [<ffffffff9ae7c4b0>] kernel_init_freeable+0x320/0x470
        [<ffffffff99b231f6>] kernel_init+0x16/0x1b0
        [<ffffffff99042e6d>] ret_from_fork+0x2d/0x50
    
    Fix this by freeing the CPU idle device after unregistering it.
    
    Fixes: 3d339dcbb56d ("cpuidle / ACPI : move cpuidle_device field out of the acpi_processor_power structure")
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cd5c2d0b09d5b6d3f0a7bbabe6761a4997e9dee9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6dc58457a5f2d541f7a40fb4660f8dcbd5dc2d20
Author: Andrejs Cainikovs <andrejs.cainikovs@toradex.com>
Date:   Fri Feb 9 14:02:12 2024 +0100

    arm64: dts: ti: k3-am62-main: disable usb lpm
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9c99b337a8755a09df7735d4324ae26a6eca6261 ]
    
    AM62 USB works with some devices, while failing to operate with others.
    
    [  560.189822] xhci-hcd xhci-hcd.4.auto: xHCI Host Controller
    [  560.195631] xhci-hcd xhci-hcd.4.auto: new USB bus registered, assigned bus number 2
    [  574.388509] xhci-hcd xhci-hcd.4.auto: can't setup: -110
    [  574.393814] xhci-hcd xhci-hcd.4.auto: USB bus 2 deregistered
    [  574.399544] xhci-hcd: probe of xhci-hcd.4.auto failed with error -110
    
    This seems to be related to LPM (Link Power Management), and disabling it
    turns USB into reliable working state.
    
    As per AM62 reference manual:
    
    > 4.8.2.1 USB2SS Unsupported Features
    >
    > The following features are not supported on this family of devices:
    > ...
    > - USB 2.0 ECN: Link Power Management (LPM)
    > ...
    
    Fixes: 2240f96cf3cd ("arm64: dts: ti: k3-am62-main: Add support for USB")
    Signed-off-by: Andrejs Cainikovs <andrejs.cainikovs@toradex.com>
    Reviewed-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Reviewed-by: Roger Quadros <rogerq@ti.com>
    Link: https://lore.kernel.org/r/20240209130213.38908-1-andrejs.cainikovs@gmail.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 64819aaad22700a3bc76391e94e47e39126b8ee1)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d234f651632b0dd14eabe368608f0fca946a96f5
Author: Romain Naour <romain.naour@smile.fr>
Date:   Fri Feb 9 18:11:46 2024 +0100

    arm64: dts: ti: k3-j721e-sk: fix PMIC interrupt number
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7f25d6926d178734db17cfc12f0b1841e82914da ]
    
    The tps659413 and tps659411 nodes set WKUP_GPIO0_7 (G28) pin as input
    to be used as PMIC interrupt but uses 9 (WKUP_GPIO0_9) as
    "interrupts" property.
    
    Replace 9 by 7 for both tps659413 and tps659411 after checking in the
    board schematic [1].
    
    [1] https://www.ti.com/tool/SK-TDA4VM
    
    Fixes: b808cef0be46 ("arm64: dts: ti: k3-j721e-sk: Add TPS6594 family PMICs")
    Cc: Neha Malcom Francis <n-francis@ti.com>
    Signed-off-by: Romain Naour <romain.naour@smile.fr>
    Reviewed-by: Neha Malcom Francis <n-francis@ti.com>
    Link: https://lore.kernel.org/r/20240209171146.307465-2-romain.naour@smile.fr
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1c5e379069a5f2842cffc5d78da47fb8de154e00)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 335f86ae12977890c82cd250967b6451b329fefe
Author: Romain Naour <romain.naour@smile.fr>
Date:   Fri Feb 9 18:11:45 2024 +0100

    arm64: dts: ti: k3-am69-sk: fix PMIC interrupt number
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c205595e3b708c36ef2d7609b9182c6729bb06ae ]
    
    The tps659413 node set WKUP_GPIO0_83 (AA37) pin as input to be used as
    PMIC interrupt but uses 39 (WKUP_GPIO0_39) as "interrupts" property.
    
    Replace 39 by 83 after checking in the board schematic [1].
    
    [1] https://www.ti.com/tool/SK-AM69
    
    Fixes: 865a1593bf99 ("arm64: dts: ti: k3-am69-sk: Add support for TPS6594 PMIC")
    Cc: Neha Malcom Francis <n-francis@ti.com>
    Signed-off-by: Romain Naour <romain.naour@smile.fr>
    Reviewed-by: Neha Malcom Francis <n-francis@ti.com>
    Link: https://lore.kernel.org/r/20240209171146.307465-1-romain.naour@smile.fr
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6cbe9657667b32605e0852ee486b69c30684b706)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 64b6a051bbc51cd720968e18d98aac0f8799780b
Author: Raag Jadav <raag.jadav@intel.com>
Date:   Thu Feb 8 12:35:29 2024 +0530

    pwm: dwc: use pm_sleep_ptr() macro
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7cfce2b80d5ff7aa713a7710bfe3a562707cb226 ]
    
    Since we don't have runtime PM handles here, we should be using
    pm_sleep_ptr() macro, so that the compiler can discard it in case
    CONFIG_PM_SLEEP=n.
    
    Fixes: 30b5b066fa83 ("pwm: dwc: Use DEFINE_SIMPLE_DEV_PM_OPS for PM functions")
    Signed-off-by: Raag Jadav <raag.jadav@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20240212130247.9985-2-raag.jadav@intel.com
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c5769d016edfcba33c7a25196c9cf97eb9f2f1e8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 647c0185e9d4ef35903b92fd5745bfd7f4401612
Author: Alexis Lothoré <alexis.lothore@bootlin.com>
Date:   Mon Feb 12 13:57:37 2024 +0100

    wifi: wilc1000: prevent use-after-free on vif when cleaning up all interfaces
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cb5942b77c05d54310a0420cac12935e9b6aa21c ]
    
    wilc_netdev_cleanup currently triggers a KASAN warning, which can be
    observed on interface registration error path, or simply by
    removing the module/unbinding device from driver:
    
    echo spi0.1 > /sys/bus/spi/drivers/wilc1000_spi/unbind
    
    ==================================================================
    BUG: KASAN: slab-use-after-free in wilc_netdev_cleanup+0x508/0x5cc
    Read of size 4 at addr c54d1ce8 by task sh/86
    
    CPU: 0 PID: 86 Comm: sh Not tainted 6.8.0-rc1+ #117
    Hardware name: Atmel SAMA5
     unwind_backtrace from show_stack+0x18/0x1c
     show_stack from dump_stack_lvl+0x34/0x58
     dump_stack_lvl from print_report+0x154/0x500
     print_report from kasan_report+0xac/0xd8
     kasan_report from wilc_netdev_cleanup+0x508/0x5cc
     wilc_netdev_cleanup from wilc_bus_remove+0xc8/0xec
     wilc_bus_remove from spi_remove+0x8c/0xac
     spi_remove from device_release_driver_internal+0x434/0x5f8
     device_release_driver_internal from unbind_store+0xbc/0x108
     unbind_store from kernfs_fop_write_iter+0x398/0x584
     kernfs_fop_write_iter from vfs_write+0x728/0xf88
     vfs_write from ksys_write+0x110/0x1e4
     ksys_write from ret_fast_syscall+0x0/0x1c
    
    [...]
    
    Allocated by task 1:
     kasan_save_track+0x30/0x5c
     __kasan_kmalloc+0x8c/0x94
     __kmalloc_node+0x1cc/0x3e4
     kvmalloc_node+0x48/0x180
     alloc_netdev_mqs+0x68/0x11dc
     alloc_etherdev_mqs+0x28/0x34
     wilc_netdev_ifc_init+0x34/0x8ec
     wilc_cfg80211_init+0x690/0x910
     wilc_bus_probe+0xe0/0x4a0
     spi_probe+0x158/0x1b0
     really_probe+0x270/0xdf4
     __driver_probe_device+0x1dc/0x580
     driver_probe_device+0x60/0x140
     __driver_attach+0x228/0x5d4
     bus_for_each_dev+0x13c/0x1a8
     bus_add_driver+0x2a0/0x608
     driver_register+0x24c/0x578
     do_one_initcall+0x180/0x310
     kernel_init_freeable+0x424/0x484
     kernel_init+0x20/0x148
     ret_from_fork+0x14/0x28
    
    Freed by task 86:
     kasan_save_track+0x30/0x5c
     kasan_save_free_info+0x38/0x58
     __kasan_slab_free+0xe4/0x140
     kfree+0xb0/0x238
     device_release+0xc0/0x2a8
     kobject_put+0x1d4/0x46c
     netdev_run_todo+0x8fc/0x11d0
     wilc_netdev_cleanup+0x1e4/0x5cc
     wilc_bus_remove+0xc8/0xec
     spi_remove+0x8c/0xac
     device_release_driver_internal+0x434/0x5f8
     unbind_store+0xbc/0x108
     kernfs_fop_write_iter+0x398/0x584
     vfs_write+0x728/0xf88
     ksys_write+0x110/0x1e4
     ret_fast_syscall+0x0/0x1c
     [...]
    
    David Mosberger-Tan initial investigation [1] showed that this
    use-after-free is due to netdevice unregistration during vif list
    traversal. When unregistering a net device, since the needs_free_netdev has
    been set to true during registration, the netdevice object is also freed,
    and as a consequence, the corresponding vif object too, since it is
    attached to it as private netdevice data. The next occurrence of the loop
    then tries to access freed vif pointer to the list to move forward in the
    list.
    
    Fix this use-after-free thanks to two mechanisms:
    - navigate in the list with list_for_each_entry_safe, which allows to
      safely modify the list as we go through each element. For each element,
      remove it from the list with list_del_rcu
    - make sure to wait for RCU grace period end after each vif removal to make
      sure it is safe to free the corresponding vif too (through
      unregister_netdev)
    
    Since we are in a RCU "modifier" path (not a "reader" path), and because
    such path is expected not to be concurrent to any other modifier (we are
    using the vif_mutex lock), we do not need to use RCU list API, that's why
    we can benefit from list_for_each_entry_safe.
    
    [1] https://lore.kernel.org/linux-wireless/ab077dbe58b1ea5de0a3b2ca21f275a07af967d2.camel@egauge.net/
    
    Fixes: 8399918f3056 ("staging: wilc1000: use RCU list to maintain vif interfaces list")
    Signed-off-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240212-wilc_rework_deinit-v1-1-9203ae56c27f@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 73a2aa0aef86c2c07be5a2f42c9e6047e1a2f7bb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2b251de2e766dc893fca3ecae1f7dab0d40c690c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 15 09:33:14 2024 +0100

    cpufreq: qcom-hw: add CONFIG_COMMON_CLK dependency
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3093fa33539b54db77171d2919352ad4f044a1c5 ]
    
    It is still possible to compile-test a kernel without CONFIG_COMMON_CLK
    for some ancient ARM boards or other architectures, but this causes a
    link failure in the qcom-cpufreq-hw driver:
    
    ERROR: modpost: "devm_clk_hw_register" [drivers/cpufreq/qcom-cpufreq-hw.ko] undefined!
    ERROR: modpost: "devm_of_clk_add_hw_provider" [drivers/cpufreq/qcom-cpufreq-hw.ko] undefined!
    ERROR: modpost: "of_clk_hw_onecell_get" [drivers/cpufreq/qcom-cpufreq-hw.ko] undefined!
    
    Add a Kconfig dependency here to make sure this always work. Apparently
    this bug has been in the kernel for a while without me running into it
    on randconfig builds as COMMON_CLK is almost always enabled.
    
    I have cross-checked by building an allmodconfig kernel with COMMON_CLK
    disabled, which showed no other driver having this problem.
    
    Fixes: 4370232c727b ("cpufreq: qcom-hw: Add CPU clock provider support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c8cca800919243abfc780585eb326681fbb6360f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit df3ebba0459ada644c02078c19f7a118ea7abe0d
Author: Roger Quadros <rogerq@kernel.org>
Date:   Thu Feb 8 15:51:43 2024 +0200

    arm64: dts: ti: am65x: Fix dtbs_install for Rocktech OLDI overlay
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8ada14cafc5e185c668198617cd1ab4f1d8d325a ]
    
    Add the overlay dtbo file to a Makefile target so it can be
    picked by the dtbs_install command.
    
    Fixes: b8690ed3d1d1 ("arm64: dts: ti: am65x: Add Rocktech OLDI panel DT overlay")
    Signed-off-by: Roger Quadros <rogerq@kernel.org>
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Link: https://lore.kernel.org/r/20240208-for-v6-9-am65-overlays-2-0-v2-1-70bae3e91597@kernel.org
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6b4c2091aae9dd8fb85522463d5a8f622d642791)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 867b638a0b3c732d99848213ef737e9d4e3a57a2
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Tue Feb 13 10:02:38 2024 -0500

    arm64: dts: mediatek: mt8186: Add missing xhci clock to usb controllers
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1af98c3e53da5a8f627855cecd68b017e753ffd3 ]
    
    The mtu3 usb controllers don't list the xhci clock, though they require
    it, and thus rely on the bootloader leaving it on in order to work.
    
    When booting with the upstream arm64 defconfig, the usb controllers will
    defer probe until modules have loaded since they have an indirect
    dependency on CONFIG_MTK_CMDQ, which is configured as a module. However
    at the point where modules are loaded, unused clocks are also disabled,
    causing the usb controllers to probe without the xhci clock enabled and
    fail to probe:
    
    mtu3 11201000.usb: clks of sts1 are not stable!
    mtu3 11201000.usb: device enable failed -110
    mtu3 11201000.usb: mtu3 hw init failed:-110
    mtu3 11201000.usb: failed to initialize gadget
    mtu3: probe of 11201000.usb failed with error -110
    
    (and same for the one at 11281000)
    
    Add the missing clock for the usb controllers so that they can
    successfully probe without relying on the bootloader state.
    
    Fixes: f6c3e61c5486 ("arm64: dts: mediatek: mt8186: Add MTU3 nodes")
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Link: https://lore.kernel.org/r/20240213-mt8186-ssusb-domain-clk-fix-v2-2-1f981d35f3fd@collabora.com
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 80c703ac5b4b587371cd4db4a215526dca8e0817)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c0fcf8d75eccf43676d450a9ac50297cbf5d483
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Tue Feb 13 10:02:37 2024 -0500

    arm64: dts: mediatek: mt8186: Add missing clocks to ssusb power domains
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a00d4a98af44e025891e97c490b2545368a25e08 ]
    
    The ssusb power domains currently don't list any clocks, despite
    depending on some, and thus rely on the bootloader leaving the required
    clocks on in order to work.
    
    When booting with the upstream arm64 defconfig, the power domain
    controller will defer probe until modules have loaded since it has an
    indirect dependency on CONFIG_MTK_CMDQ, which is configured as a module.
    However at the point where modules are loaded, unused clocks are also
    disabled, causing the ssusb domains to fail to be enabled and
    consequently the controller to fail probe:
    
    mtk-power-controller 10006000.syscon:power-controller: /soc/syscon@10006000/power-controller/power-domain@4: failed to power on domain: -110
    mtk-power-controller: probe of 10006000.syscon:power-controller failed with error -110
    
    Add the missing clocks for the ssusb power domains so that they can
    successfully probe without relying on the bootloader state.
    
    Fixes: d9e43c1e7a38 ("arm64: dts: mt8186: Add power domains controller")
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Link: https://lore.kernel.org/r/20240213-mt8186-ssusb-domain-clk-fix-v2-1-1f981d35f3fd@collabora.com
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 870fe1630676f4d22c9efde1b79426fe509044d7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e800264768beac3ae8deae3d4ea36631073f1eea
Author: Craig Tatlor <ctatlor97@gmail.com>
Date:   Sat Feb 10 17:45:40 2024 +0100

    ARM: dts: qcom: msm8974: correct qfprom node size
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 724c4bf0e4bf81dba77736afb93964c986c3c123 ]
    
    The qfprom actually is bigger than 0x1000, so adjust the reg.
    
    Note that the non-ECC-corrected qfprom can be found at 0xfc4b8000
    (-0x4000). The current reg points to the ECC-corrected qfprom block
    which should have equivalent values at all offsets compared to the
    non-corrected version.
    
    [luca@z3ntu.xyz: extract to standalone patch and adjust for review
    comments]
    
    Fixes: c59ffb519357 ("arm: dts: msm8974: Add thermal zones, tsens and qfprom nodes")
    Signed-off-by: Craig Tatlor <ctatlor97@gmail.com>
    Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240210-msm8974-qfprom-v3-1-26c424160334@z3ntu.xyz
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4fa829cc84c68eb5e1bc55c807096abcb225f3e8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2078c4f4ddeee9c389a16792baefc316048d6a08
Author: Unnathi Chalicheemala <quic_uchalich@quicinc.com>
Date:   Mon Feb 12 10:35:15 2024 -0800

    soc: qcom: llcc: Check return value on Broadcast_OR reg read
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ceeaddc19a90039861564d8e1078b778a8f95101 ]
    
    Commit c72ca343f911 ("soc: qcom: llcc: Add v4.1 HW version support")
    introduced a new 4.1 if statement in llcc_update_act_ctrl() without
    considering that ret might be overwritten. So, add return value check
    after Broadcast_OR register read in llcc_update_act_ctrl().
    
    Fixes: c72ca343f911 ("soc: qcom: llcc: Add v4.1 HW version support")
    Signed-off-by: Unnathi Chalicheemala <quic_uchalich@quicinc.com>
    Reviewed-by: Elliot Berman <quic_eberman@quicinc.com>
    Reviewed-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Link: https://lore.kernel.org/r/20240212183515.433873-1-quic_uchalich@quicinc.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c3f1e568a1dc16a43b54680a4301c07f21451e35)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c38ddd6c65dd71859ef3f2d864e02777ea2af9d5
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Wed Dec 20 15:15:11 2023 +0100

    arm64: dts: qcom: sdm845: Use the Low Power Island CX/MX for SLPI
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5dd227ccfb9568935bdaf82bc1893b36457dd4d3 ]
    
    The SLPI is powered by the Low Power Island power rails. Fix the incorrect
    assignment.
    
    Fixes: 74588aada59a ("arm64: dts: qcom: sdm845: add SLPI remoteproc")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231220-topic-sdm845_slpi_lcxmx-v1-1-db7c72ef99ae@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5ab7b45cea5e6a5d232b06abe9444a98a736320d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 209eeffb0aa683d9c8b45bb9743efb65717551df
Author: Yonghong Song <yonghong.song@linux.dev>
Date:   Tue Feb 6 23:01:02 2024 -0800

    bpf: Mark bpf_spin_{lock,unlock}() helpers with notrace correctly
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 178c54666f9c4d2f49f2ea661d0c11b52f0ed190 ]
    
    Currently tracing is supposed not to allow for bpf_spin_{lock,unlock}()
    helper calls. This is to prevent deadlock for the following cases:
      - there is a prog (prog-A) calling bpf_spin_{lock,unlock}().
      - there is a tracing program (prog-B), e.g., fentry, attached
        to bpf_spin_lock() and/or bpf_spin_unlock().
      - prog-B calls bpf_spin_{lock,unlock}().
    For such a case, when prog-A calls bpf_spin_{lock,unlock}(),
    a deadlock will happen.
    
    The related source codes are below in kernel/bpf/helpers.c:
      notrace BPF_CALL_1(bpf_spin_lock, struct bpf_spin_lock *, lock)
      notrace BPF_CALL_1(bpf_spin_unlock, struct bpf_spin_lock *, lock)
    notrace is supposed to prevent fentry prog from attaching to
    bpf_spin_{lock,unlock}().
    
    But actually this is not the case and fentry prog can successfully
    attached to bpf_spin_lock(). Siddharth Chintamaneni reported
    the issue in [1]. The following is the macro definition for
    above BPF_CALL_1:
      #define BPF_CALL_x(x, name, ...)                                               \
            static __always_inline                                                 \
            u64 ____##name(__BPF_MAP(x, __BPF_DECL_ARGS, __BPF_V, __VA_ARGS__));   \
            typedef u64 (*btf_##name)(__BPF_MAP(x, __BPF_DECL_ARGS, __BPF_V, __VA_ARGS__)); \
            u64 name(__BPF_REG(x, __BPF_DECL_REGS, __BPF_N, __VA_ARGS__));         \
            u64 name(__BPF_REG(x, __BPF_DECL_REGS, __BPF_N, __VA_ARGS__))          \
            {                                                                      \
                    return ((btf_##name)____##name)(__BPF_MAP(x,__BPF_CAST,__BPF_N,__VA_ARGS__));\
            }                                                                      \
            static __always_inline                                                 \
            u64 ____##name(__BPF_MAP(x, __BPF_DECL_ARGS, __BPF_V, __VA_ARGS__))
    
      #define BPF_CALL_1(name, ...)   BPF_CALL_x(1, name, __VA_ARGS__)
    
    The notrace attribute is actually applied to the static always_inline function
    ____bpf_spin_{lock,unlock}(). The actual callback function
    bpf_spin_{lock,unlock}() is not marked with notrace, hence
    allowing fentry prog to attach to two helpers, and this
    may cause the above mentioned deadlock. Siddharth Chintamaneni
    actually has a reproducer in [2].
    
    To fix the issue, a new macro NOTRACE_BPF_CALL_1 is introduced which
    will add notrace attribute to the original function instead of
    the hidden always_inline function and this fixed the problem.
    
      [1] https://lore.kernel.org/bpf/CAE5sdEigPnoGrzN8WU7Tx-h-iFuMZgW06qp0KHWtpvoXxf1OAQ@mail.gmail.com/
      [2] https://lore.kernel.org/bpf/CAE5sdEg6yUc_Jz50AnUXEEUh6O73yQ1Z6NV2srJnef0ZrQkZew@mail.gmail.com/
    
    Fixes: d83525ca62cf ("bpf: introduce bpf_spin_lock")
    Signed-off-by: Yonghong Song <yonghong.song@linux.dev>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Link: https://lore.kernel.org/bpf/20240207070102.335167-1-yonghong.song@linux.dev
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d2113b635ec7016be504abad05e18c37afa0d89b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6346a1a3cacb3f5617fa488fba618864c6a4d784
Author: Ilan Peer <ilan.peer@intel.com>
Date:   Thu Feb 8 18:58:38 2024 +0200

    wifi: iwlwifi: mvm: Fix the listener MAC filter flags
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4cdb86487e3eaddb4b3a7df30ae709e810aac84b ]
    
    One of the flags was from the wrong API.
    
    Fixes: 9be162a7b670 ("wifi: iwlwifi: mvm: add support for the new MAC CTXT command")
    Signed-off-by: Ilan Peer <ilan.peer@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240208185302.a338c30ec4e9.Ic2813cdeba4443c692d462fc4859392f069d7e33@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9ad1bb6139b06e5ac1e3549263a1b4fb478fc16c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f8996619d87871f24b0f323a0ef56e852f9c19c0
Author: Markus Schneider-Pargmann <msp@baylibre.com>
Date:   Wed Feb 7 10:32:07 2024 +0100

    can: m_can: Start/Cancel polling timer together with interrupts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a163c5761019b94258ca655b27b46e82657fd6f5 ]
    
    Interrupts are enabled/disabled in more places than just m_can_start()
    and m_can_stop(). Couple the polling timer with enabling/disabling of
    all interrupts to achieve equivalent behavior.
    
    Cc: Judith Mendez <jm@ti.com>
    Fixes: b382380c0d2d ("can: m_can: Add hrtimer to generate software interrupt")
    Signed-off-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Link: https://lore.kernel.org/all/20240207093220.2681425-2-msp@baylibre.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a1f2d97045e55d5d9e56e5a07f2ae377e2ba5b17)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd255ca6a49af31b814bcc39ba7b25562ac0c65f
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Mon Jan 22 14:23:57 2024 +0100

    arm64: dts: mediatek: mt7622: add missing "device_type" to memory nodes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 99d100e00144bc01b49a697f4bc4398f2f7e7ce4 ]
    
    This fixes:
    arch/arm64/boot/dts/mediatek/mt7622-rfb1.dtb: /: memory@40000000: 'device_type' is a required property
            from schema $id: http://devicetree.org/schemas/memory.yaml#
    arch/arm64/boot/dts/mediatek/mt7622-bananapi-bpi-r64.dtb: /: memory@40000000: 'device_type' is a required property
            from schema $id: http://devicetree.org/schemas/memory.yaml#
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20240122132357.31264-1-zajec5@gmail.com
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c9e68ff0fe361995247ee58549108b1f5f0c88cc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0f7595b6d164f494ef9a59adb66647904c1b9d55
Author: Eugen Hristev <eugen.hristev@collabora.com>
Date:   Thu Dec 28 13:32:44 2023 +0200

    arm64: dts: mediatek: mt8186: fix VENC power domain clocks
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 09860910c589a3bb3b5268ff6f704cf6b18ada73 ]
    
    The larb clock is in fact a subsys clock, so it must be prefixed by
    'subsys-' to be correctly identified in the driver.
    
    Fixes: d9e43c1e7a38 ("arm64: dts: mt8186: Add power domains controller")
    Signed-off-by: Eugen Hristev <eugen.hristev@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20231228113245.174706-6-eugen.hristev@collabora.com
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dcaf15eec4a0e945bc5235ba59ef2ee94b6f0d07)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 86009f1383b646c12825522f3df43da41ab42294
Author: Eugen Hristev <eugen.hristev@collabora.com>
Date:   Thu Dec 28 13:32:42 2023 +0200

    arm64: dts: mediatek: mt8192: fix vencoder clock name
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 76aac0f2a46847ed4a7a4fdd848dd66023c19ad1 ]
    
    Clock name should be `venc_sel` as per binding.
    Fix the warning message :
    arch/arm64/boot/dts/mediatek/mt8192-asurada-hayato-r1.dtb: vcodec@17020000: clock-names:0: 'venc_sel' was expected
            from schema $id: http://devicetree.org/schemas/media/mediatek,vcodec-encoder.yaml#
    
    Fixes: aa8f3711fc87 ("arm64: dts: mt8192: Add H264 venc device node")
    Signed-off-by: Eugen Hristev <eugen.hristev@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20231228113245.174706-4-eugen.hristev@collabora.com
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d82bae1866fe94be34b4190a8b20d9edde08f9eb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 29eb32a19058582f55df92ed4a091718d016e704
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Wed Feb 7 15:08:42 2024 -0500

    arm64: dts: mediatek: mt8192-asurada: Remove CrosEC base detection node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9b49cabe631b0a25aaf8fc2ba81b5b9ea6ff01b7 ]
    
    The commit adding the ChromeOS EC to the Asurada Devicetree mistakenly
    added a base detection node. While tablet mode detection is supported by
    CrosEC and used by Hayato, it is done through the cros-ec-keyb driver.
    The base detection node, which is handled by the hid-google-hammer
    driver, also provides tablet mode detection but by checking base
    attachment status on the CrosEC, which is not supported for Asurada.
    
    Hence, remove the unused CrosEC base detection node for Asurada.
    
    Fixes: eb188a2aaa82 ("arm64: dts: mediatek: asurada: Add ChromeOS EC")
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Link: https://lore.kernel.org/r/20240207-mt8192-asurada-cbas-remove-v1-1-04cb65951975@collabora.com
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cccbec3d7098980c5fd0c3596a256af53ec1b749)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 76c236fe54619cf1c9b7302ae7a8ade2f08976ae
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Mon Jan 1 19:20:40 2024 +0100

    arm64: dts: mediatek: mt7986: add "#reset-cells" to infracfg
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d993daff5962b2dd08f32a83bb1c0e5fa75732ea ]
    
    MT7986's Infrastructure System Configuration Controller includes reset
    controller. It can reset blocks as specified in the
    include/dt-bindings/reset/mt7986-resets.h . Add #reset-cells so it can
    be referenced properly.
    
    This fixes:
    arch/arm64/boot/dts/mediatek/mt7986a-bananapi-bpi-r3.dtb: infracfg@10001000: '#reset-cells' is a required property
            from schema $id: http://devicetree.org/schemas/arm/mediatek/mediatek,infracfg.yaml#
    
    Fixes: 1f9986b258c2 ("arm64: dts: mediatek: add clock support for mt7986a")
    Cc: Sam Shih <sam.shih@mediatek.com>
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20240101182040.28538-2-zajec5@gmail.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 43e75c3b4970d8b284e3170edd1ab3ed1110d56b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f96908c26675cffbaf8d1a64f2aefd827c638449
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Mon Jan 1 19:20:39 2024 +0100

    arm64: dts: mediatek: mt7986: drop "#clock-cells" from PWM
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0b721691f0c80af682d0ef3aa4a177c23d41b072 ]
    
    PWM is not a clock provider and its binding doesn't specify
    "#clock-cells" property.
    
    This fixes:
    arch/arm64/boot/dts/mediatek/mt7986a-bananapi-bpi-r3.dtb: pwm@10048000: '#clock-cells' does not match any of the regexes: 'pinctrl-[0-9]+'
            from schema $id: http://devicetree.org/schemas/pwm/mediatek,mt2712-pwm.yaml#
    
    Fixes: eabb04df46c6 ("arm64: dts: mt7986: add PWM")
    Cc: Daniel Golle <daniel@makrotopia.org>
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20240101182040.28538-1-zajec5@gmail.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3dd61e4b18250c7bdbf2027a433d2a8778a59aca)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8bd8f5ccbf6f5b367706fa3b7c05f97e952ceb10
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Nov 16 14:09:52 2023 +0100

    arm64: dts: mediatek: mt7986: fix SPI nodename
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bbe266c70e1343ee3e71ca31138141b3da265085 ]
    
    This fixes following validation errors:
    arch/arm64/boot/dts/mediatek/mt7986a-rfb.dtb: spi_nand@0: $nodename:0: 'spi_nand@0' does not match '^(flash|.*sram|nand)(@.*)?$'
            from schema $id: http://devicetree.org/schemas/mtd/spi-nand.yaml#
    arch/arm64/boot/dts/mediatek/mt7986b-rfb.dtb: spi_nand@0: $nodename:0: 'spi_nand@0' does not match '^(flash|.*sram|nand)(@.*)?$'
            from schema $id: http://devicetree.org/schemas/mtd/spi-nand.yaml#
    
    Fixes: 885e153ed7c1 ("arm64: dts: mt7986: add spi related device nodes")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20231116130952.5099-2-zajec5@gmail.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 44e3e38dabddb9a759301418c678f3124874fc4b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ff0bffbda304186d4b83dce7bf9b9f3099be8538
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Nov 16 14:09:51 2023 +0100

    arm64: dts: mediatek: mt7986: fix SPI bus width properties
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4e7dc18a753cec130b06f1ddbae10ea9dcfb1723 ]
    
    This fixes SPI setup and resolves following validation errors:
    arch/arm64/boot/dts/mediatek/mt7986a-rfb.dtb: spi_nand@0: Unevaluated properties are not allowed ('spi-rx-buswidth', 'spi-tx-buswidth' were unexpected)
            from schema $id: http://devicetree.org/schemas/mtd/spi-nand.yaml#
    arch/arm64/boot/dts/mediatek/mt7986b-rfb.dtb: spi_nand@0: Unevaluated properties are not allowed ('spi-rx-buswidth', 'spi-tx-buswidth' were unexpected)
            from schema $id: http://devicetree.org/schemas/mtd/spi-nand.yaml#
    
    Fixes: 885e153ed7c1 ("arm64: dts: mt7986: add spi related device nodes")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20231116130952.5099-1-zajec5@gmail.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit aa9627cdcfd983a10dfb01ee637e79cd550ab215)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 49166fa6c395595ce5a9b41cc86a54519cf4853f
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Nov 16 14:24:11 2023 +0100

    arm64: dts: mediatek: mt7986: drop crypto's unneeded/invalid clock name
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit bb69d19c649669f700149df309245cd925612f7c ]
    
    According to the "inside-secure,safexcel-eip97" binding "clock-names" is
    required only if there are two clocks specified. If present the first
    name must by "core".
    
    Name "infra_eip97_ck" is invalid and was probably just a typo. Drop it.
    
    Fixes: ecc5287cfe53 ("arm64: dts: mt7986: add crypto related device nodes")
    Cc: Sam Shih <sam.shih@mediatek.com>
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20231116132411.7665-1-zajec5@gmail.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bd5fd07c02c2ba86a384770f7e3cefce55628805)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c8f9771fe20889de2784350e6eb6fdd6adcf0a2d
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Nov 16 14:08:16 2023 +0100

    arm64: dts: mediatek: mt7986: fix reference to PWM in fan node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7865abbbdf1e1ee57a0bb8ec83079f8840c16854 ]
    
    This fixes typo and resolves following validation error:
    arch/arm64/boot/dts/mediatek/mt7986a-bananapi-bpi-r3.dtb: pwm-fan: pwms: [[54, 0, 10000], [0]] is too long
            from schema $id: http://devicetree.org/schemas/hwmon/pwm-fan.yaml#
    
    Fixes: c26f779a2295 ("arm64: dts: mt7986: add pwm-fan and cooling-maps to BPI-R3 dts")
    Cc: Daniel Golle <daniel@makrotopia.org>
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20231116130816.4932-1-zajec5@gmail.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 28b9a90c00befff36a903847eec6c14f0066d34b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6458cd1fdfdb366668e645efb256e92db4785e0e
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Tue Jan 16 18:38:34 2024 -0300

    arm64: dts: mt8183: Move CrosEC base detection node to kukui-based DTs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 04bd6411f506357fd1faedc2b2156e7ef206aa9a ]
    
    The cbas node is used to describe base detection functionality in the
    ChromeOS EC, which is used for units that have a detachable keyboard and
    thus rely on this functionality to switch between tablet and laptop
    mode.
    
    Despite the original commit having added the cbas node to the
    mt8183-kukui.dtsi, not all machines that include it are detachables. In
    fact all machines that include from mt8183-kukui-jacuzzi.dtsi are either
    clamshells (ie normal laptops) or convertibles, meaning the keyboard can
    be flipped but not detached. The detection for the keyboard getting
    flipped is handled by the driver bound to the keyboard-controller node
    in the EC.
    
    Move the base detection node from the base kukui dtsi to the dtsis where
    all machines are detachables, and thus actually make use of the node.
    
    Fixes: 4fa8492d1e5b ("arm64: dts: mt8183: add cbas node under cros_ec")
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20240116-mt8183-kukui-cbas-remove-v3-1-055e21406e86@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7d569a9355bae10a7da86428440945f115816a7c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9a77143f2cb46acbdd2bbc5bc17ed0c129f0f976
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 9 15:30:56 2024 +0000

    ipv6: mcast: remove one synchronize_net() barrier in ipv6_mc_down()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 17ef8efc00b34918b966388b2af0993811895a8c ]
    
    As discussed in the past (commit 2d3916f31891 ("ipv6: fix skb drops
    in igmp6_event_query() and igmp6_event_report()")) I think the
    synchronize_net() call in ipv6_mc_down() is not needed.
    
    Under load, synchronize_net() can last between 200 usec and 5 ms.
    
    KASAN seems to agree as well.
    
    Fixes: f185de28d9ae ("mld: add new workqueues for process mld events")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Taehee Yoo <ap420073@gmail.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5da9a218340a2bc804dc4327e5804392e24a0b88)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ea5493c4a669dcdf49331f57762a4336929b2c78
Author: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
Date:   Tue Jan 30 21:32:58 2024 +0200

    arm64: dts: qcom: sm6115: drop pipe clock selection
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7e3a1f6470f7243c81156d2ead60f87da1184225 ]
    
    Stop selecting UTMI clock as the USB3 PIPE clock. This setting is
    incompatible with the USB host working in USB3 (SuperSpeed) mode.
    While we are at it, also drop the default setting for the port speed.
    
    Fixes: 9dd5f6dba729 ("arm64: dts: qcom: sm6115: Add USB SS qmp phy node")
    Signed-off-by: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
    [DB: fixed commit message, dropped dr_mode setting]
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Tested-by: Luca Weiss <luca.weiss@fairphone.com> # sdm632-fairphone-fp3
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20240130-pmi632-typec-v3-5-b05fe44f0a51@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 116cc80f47b29edcba609ad92be1ad83d1cedcd0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dc2093524f4f359dfdadaaeb732a1f15d2fb0a28
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Thu Feb 8 18:55:38 2024 +0200

    selftests: forwarding: Add missing multicast routing config entries
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f0ddf15f0a74c27eb4b2271a90e69948acc3fa2c ]
    
    The two tests that make use of multicast routig (router.sh and
    router_multicast.sh) are currently failing in the netdev CI because the
    kernel is missing multicast routing support.
    
    Fix by adding the required config entries.
    
    Fixes: 6d4efada3b82 ("selftests: forwarding: Add multicast routing test")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Link: https://lore.kernel.org/r/20240208165538.1303021-1-idosch@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit af01277102ed664b272f85422be8e974d46cacfc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 420f7bea93c5ed0112ecd16c3834b77828396ba5
Author: Petr Machata <petrm@nvidia.com>
Date:   Fri Jan 26 17:36:16 2024 +0100

    selftests: forwarding: Add missing config entries
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4acf4e62cd572b0c806035046b3698f5585ab821 ]
    
    The config file contains a partial kernel configuration to be used by
    `virtme-configkernel --custom'. The presumption is that the config file
    contains all Kconfig options needed by the selftests from the directory.
    
    In net/forwarding/config, many are missing, which manifests as spurious
    failures when running the selftests, with messages about unknown device
    types, qdisc kinds or classifier actions. Add the missing configurations.
    
    Tested the resulting configuration using virtme-ng as follows:
    
     # vng -b -f tools/testing/selftests/net/forwarding/config
     # vng --user root
     (within the VM:)
     # make -C tools/testing/selftests TARGETS=net/forwarding run_tests
    
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Link: https://lore.kernel.org/r/025abded7ff9cea5874a7fe35dcd3fd41bf5e6ac.1706286755.git.petrm@nvidia.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Stable-dep-of: f0ddf15f0a74 ("selftests: forwarding: Add missing multicast routing config entries")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1218424f3472b38738c0d191c4489c7236354eed)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 31a65ad195e54c67138ce99eedb0b103684a2768
Author: Komal Bajaj <quic_kbajaj@quicinc.com>
Date:   Wed Dec 20 16:30:15 2023 +0530

    arm64: dts: qcom: qcs6490-rb3gen2: Correct the voltage setting for vph_pwr
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 05f439c0e64b877c1f9cc7f0bed894b6df45d43d ]
    
    Min and max voltages for vph_pwr should be same, otherwise rpmh
    will not probe, so correcting the min and max voltages for vph_pwr.
    
    Fixes: 04cf333afc75 ("arm64: dts: qcom: Add base qcs6490-rb3gen2 board dts")
    Signed-off-by: Komal Bajaj <quic_kbajaj@quicinc.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231220110015.25378-3-quic_kbajaj@quicinc.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 28382832ad5ef3715197487ecca9668db88b7579)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e6283606f19b478d4230c254b37f2297e7a134b
Author: Komal Bajaj <quic_kbajaj@quicinc.com>
Date:   Wed Dec 20 16:30:14 2023 +0530

    arm64: dts: qcom: qcm6490-idp: Correct the voltage setting for vph_pwr
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit aa56130e88de50773f84de4039c7de81ab783744 ]
    
    Min and max voltages for vph_pwr should be same, otherwise rpmh
    will not probe, so correcting the min and max voltages for vph_pwr.
    
    Fixes: 9af6a9f32ad0 ("arm64: dts: qcom: Add base qcm6490 idp board dts")
    Signed-off-by: Komal Bajaj <quic_kbajaj@quicinc.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231220110015.25378-2-quic_kbajaj@quicinc.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a1d71d2a02178791cbd4731a93885d4bbd3a9a8c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6f8289921e825a21ce801a7f6b2dd7cdf724e0af
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Jan 30 20:14:28 2024 -0700

    s390/vdso: drop '-fPIC' from LDFLAGS
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0628c03934187be33942580e10bb9afcc61adeed ]
    
    '-fPIC' as an option to the linker does not do what it seems like it
    should. With ld.bfd, it is treated as '-f PIC', which does not make
    sense based on the meaning of '-f':
    
      -f SHLIB, --auxiliary SHLIB Auxiliary filter for shared object symbol table
    
    When building with ld.lld (currently under review in a GitHub pull
    request), it just errors out because '-f' means nothing and neither does
    '-fPIC':
    
      ld.lld: error: unknown argument '-fPIC'
    
    '-fPIC' was blindly copied from CFLAGS when the vDSO stopped being
    linked with '$(CC)', it should not be needed. Remove it to clear up the
    build failure with ld.lld.
    
    Fixes: 2b2a25845d53 ("s390/vdso: Use $(LD) instead of $(CC) to link vDSO")
    Link: https://github.com/llvm/llvm-project/pull/75643
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Fangrui Song <maskray@google.com>
    Link: https://lore.kernel.org/r/20240130-s390-vdso-drop-fpic-from-ldflags-v1-1-094ad104fc55@kernel.org
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 16b95141495811001dd6ae6707e26ef71033d705)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cde1cb082304e4d25a775ce00307323002e7abac
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Thu Jan 18 13:03:39 2024 +0100

    s390/pai: fix attr_event_free upper limit for pai device drivers
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 225d09d6e5f3870560665a1829d2db79330b4c58 ]
    
    When the device drivers are initialized, a sysfs directory
    is created. This contains many attributes which are allocated with
    kzalloc(). Should it fail, the memory for the attributes already
    created is freed in attr_event_free(). Its second parameter is number
    of attribute elements to delete. This parameter is off by one.
    When i. e. the 10th attribute fails to get created, attributes
    numbered 0 to 9 should be deleted. Currently only attributes
    numbered 0 to 8 are deleted.
    
    Fixes: 39d62336f5c1 ("s390/pai: add support for cryptography counters")
    Reported-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Acked-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c4056851c0a3fdd401fa8a6367e36e1b2dc998ec)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e104406c5d3d9830b52ae5503de88589085093c
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Feb 6 18:02:09 2024 +0200

    wifi: iwlwifi: mvm: don't set replay counters to 0xff
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d5bd4041cd70faf26fc9a54bd6f172537bbe77f3 ]
    
    The firmware (later) actually uses the values even for keys
    that are invalid as far as the host is concerned, later in
    rekeying, and then only sets the low 48 bits since the PNs
    are only 48 bits over the air. It does, however, compare the
    full 64 bits later, obviously causing problems.
    
    Remove the memset and use kzalloc instead to avoid any old
    heap data leaking to the firmware. We already init all the
    other fields in the struct anyway. This leaves the data set
    to zero for any unused fields, so the firmware can look at
    them safely even if they're not used right now.
    
    Fixes: 79e561f0f05a ("iwlwifi: mvm: d3: implement RSC command version 5")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240206175739.462101146fef.I10f3855b99417af4247cff04af78dcbc6cb75c9c@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 516277d9fe700998b4f50a456c701e8cdd820da5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8acc2bd5c7e78f2193604d6c8048a69095b027c1
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Tue Feb 6 18:02:06 2024 +0200

    wifi: iwlwifi: mvm: don't set the MFP flag for the GTK
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e35f316bce9e5733c9826120c1838f4c447b2c4c ]
    
    The firmware doesn't need the MFP flag for the GTK, it can even make the
    firmware crash. in case the AP is configured with: group cipher TKIP and
    MFPC. We would send the GTK with cipher = TKIP and MFP which is of course
    not possible.
    
    Fixes: 5c75a208c244 ("wifi: iwlwifi: mvm: support new key API")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240206175739.2f2c602ab3c6.If13b2e2fa532381d985c07df130bee1478046c89@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 60f6d5fc84a9fd26528a24d8a267fc6a6698b628)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c2184316127042255ecbb02349503d4d9ca23dd7
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Feb 5 21:21:14 2024 +0200

    wifi: iwlwifi: mvm: fix erroneous queue index mask
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2e0e766bd8a7f14f10c3e70b8203c4c1e6d9ec76 ]
    
    When retrieving the queue index ("SCD SSN") from the TX response,
    it's currently masked with 0xFFF. However, now that we have queues
    longer than 4k, that became wrong, so make the mask depend on the
    hardware family.
    
    This fixes an issue where if we get a single frame reclaim while
    in the top half of an 8k long queue, we'd reclaim-wrap the queue
    twice (once on this and then again on the next non-single reclaim)
    which at least triggers the WARN_ON_ONCE() in iwl_txq_reclaim(),
    but could have other negative side effects (such as unmapping a
    frame that wasn't transmitted yet, and then taking an IOMMU fault)
    as well.
    
    Fixes: 7b3e42ea2ead ("iwlwifi: support multiple tfd queue max sizes for different devices")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240205211151.4148a6ef54e0.I733a70f679c25f9f99097a8dcb3a1f8165da6997@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6640bcdc7fa7066b99c59ba8a0d04c05ffec8fd5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1686411b35b5d2479d501007e19b117895787774
Author: Miri Korenblit <miriam.rachel.korenblit@intel.com>
Date:   Mon Feb 5 21:21:05 2024 +0200

    wifi: iwlwifi: properly check if link is active
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 556c7cd721b5262579ba1710c3b4e7ffdb5573ac ]
    
    Before sending SESSION PROTECTION cmd the driver verifies that the
    link for which the cmd is going to be sent is active.
    The existing code is checking it only for MLD vifs,
    but also the deflink (in non-MLD vifs) needs to be active in order
    the have a session protection for it.
    Fix this by checking if the link is active also for non-MLD vifs
    
    Fixes: 135065837310 ("wifi: iwlwifi: support link_id in SESSION_PROTECTION cmd")
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Reviewed-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://msgid.link/20240205211151.c61820f14ca6.Ibbe0f848f3e71f64313d21642650b6e4bfbe4b39@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cdf67abc2d7f1d9013b236c1d558364acf6f5fcf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1c3e8fee6d7522880e27d82a8b42d9cb5de9e613
Author: Miri Korenblit <miriam.rachel.korenblit@intel.com>
Date:   Mon Feb 5 00:06:13 2024 +0200

    wifi: iwlwifi: support EHT for WH
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f51d6431824f0afb9f73d68971d154c47c26b86a ]
    
    sku_cap_11be_enable should be set to true also for WH.
    
    Fixes: e1374ed25324 ("wifi: iwlwifi: Add support for new CNVi (SC)")
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Reviewed-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Link: https://msgid.link/20240204235836.a6d4097cbaca.I8b00fa7b6226b4116cd91f70fb0b15e79b4dee5a@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d4a94ffae51f23934e42402e1c6281b2d50afc7e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 16bcb9189e1f66e8b6a97c6592df389808da2dad
Author: Viktor Malik <vmalik@redhat.com>
Date:   Tue Feb 6 13:46:10 2024 +0100

    tools/resolve_btfids: Fix cross-compilation to non-host endianness
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 903fad4394666bc23975c93fb58f137ce64b5192 ]
    
    The .BTF_ids section is pre-filled with zeroed BTF ID entries during the
    build and afterwards patched by resolve_btfids with correct values.
    Since resolve_btfids always writes in host-native endianness, it relies
    on libelf to do the translation when the target ELF is cross-compiled to
    a different endianness (this was introduced in commit 61e8aeda9398
    ("bpf: Fix libelf endian handling in resolv_btfids")).
    
    Unfortunately, the translation will corrupt the flags fields of SET8
    entries because these were written during vmlinux compilation and are in
    the correct endianness already. This will lead to numerous selftests
    failures such as:
    
        $ sudo ./test_verifier 502 502
        #502/p sleepable fentry accept FAIL
        Failed to load prog 'Invalid argument'!
        bpf_fentry_test1 is not sleepable
        verification time 34 usec
        stack depth 0
        processed 0 insns (limit 1000000) max_states_per_insn 0 total_states 0 peak_states 0 mark_read 0
        Summary: 0 PASSED, 0 SKIPPED, 1 FAILED
    
    Since it's not possible to instruct libelf to translate just certain
    values, let's manually bswap the flags (both global and entry flags) in
    resolve_btfids when needed, so that libelf then translates everything
    correctly.
    
    Fixes: ef2c6f370a63 ("tools/resolve_btfids: Add support for 8-byte BTF sets")
    Signed-off-by: Viktor Malik <vmalik@redhat.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/7b6bff690919555574ce0f13d2a5996cacf7bf69.1707223196.git.vmalik@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1134719697cf36a8810c58d63418751ff5e5610b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5acd45d7adbbdabd932a84f76b8a960338b29b57
Author: Viktor Malik <vmalik@redhat.com>
Date:   Tue Feb 6 13:46:09 2024 +0100

    tools/resolve_btfids: Refactor set sorting with types from btf_ids.h
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9707ac4fe2f5bac6406d2403f8b8a64d7b3d8e43 ]
    
    Instead of using magic offsets to access BTF ID set data, leverage types
    from btf_ids.h (btf_id_set and btf_id_set8) which define the actual
    layout of the data. Thanks to this change, set sorting should also
    continue working if the layout changes.
    
    This requires to sync the definition of 'struct btf_id_set8' from
    include/linux/btf_ids.h to tools/include/linux/btf_ids.h. We don't sync
    the rest of the file at the moment, b/c that would require to also sync
    multiple dependent headers and we don't need any other defs from
    btf_ids.h.
    
    Signed-off-by: Viktor Malik <vmalik@redhat.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Daniel Xu <dxu@dxuuu.xyz>
    Link: https://lore.kernel.org/bpf/ff7f062ddf6a00815fda3087957c4ce667f50532.1707223196.git.vmalik@redhat.com
    Stable-dep-of: 903fad439466 ("tools/resolve_btfids: Fix cross-compilation to non-host endianness")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c184613ca3bdb3c56d0f3aec1eafbe1a490e4053)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e959730c4aa23931704a0b922cf180c1550cc9cb
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Sun Feb 4 22:20:43 2024 +0100

    pwm: sti: Fix capture for st,pwm-num-chan < st,capture-num-chan
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5f623835584f1c8d1030666796f40c47a448ce0b ]
    
    The driver only used the number of pwm channels to set the pwm_chip's
    npwm member. The result is that if there are more capture channels than
    PWM channels specified in the device tree, only a part of the capture
    channel is usable. Fix that by passing the bigger channel count to the
    pwm framework. This makes it possible that the .apply() callback is
    called with .hwpwm >= pwm_num_devs, catch that case and return an error
    code.
    
    Fixes: c97267ae831d ("pwm: sti: Add PWM capture callback")
    Link: https://lore.kernel.org/r/20240204212043.2951852-2-u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 97927e0730257fb979257a66535f87cb7fa0ea77)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 14d4e3b1b63b2205defd2c70263f8d8c00341e9f
Author: Petr Mladek <pmladek@suse.com>
Date:   Wed Feb 7 14:47:00 2024 +0106

    printk: Disable passing console lock owner completely during panic()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d04d5882cd678b898a9d7c5aee6afbe9e6e77fcd ]
    
    The commit d51507098ff91 ("printk: disable optimistic spin
    during panic") added checks to avoid becoming a console waiter
    if a panic is in progress.
    
    However, the transition to panic can occur while there is
    already a waiter. The current owner should not pass the lock to
    the waiter because it might get stopped or blocked anytime.
    
    Also the panic context might pass the console lock owner to an
    already stopped waiter by mistake. It might happen when
    console_flush_on_panic() ignores the current lock owner, for
    example:
    
    CPU0                                CPU1
    ----                                ----
    console_lock_spinning_enable()
                                        console_trylock_spinning()
                                          [CPU1 now console waiter]
    NMI: panic()
      panic_other_cpus_shutdown()
                                        [stopped as console waiter]
      console_flush_on_panic()
        console_lock_spinning_enable()
        [print 1 record]
        console_lock_spinning_disable_and_check()
          [handover to stopped CPU1]
    
    This results in panic() not flushing the panic messages.
    
    Fix these problems by disabling all spinning operations
    completely during panic().
    
    Another advantage is that it prevents possible deadlocks caused
    by "console_owner_lock". The panic() context does not need to
    take it any longer. The lockless checks are safe because the
    functions become NOPs when they see the panic in progress. All
    operations manipulating the state are still synchronized by the
    lock even when non-panic CPUs would notice the panic
    synchronously.
    
    The current owner might stay spinning. But non-panic() CPUs
    would get stopped anyway and the panic context will never start
    spinning.
    
    Fixes: dbdda842fe96 ("printk: Add console owner and waiter logic to load balance console writes")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Link: https://lore.kernel.org/r/20240207134103.1357162-12-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fc866c1061220d6aa0abc568592165dac5f3932a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1edb3b8dc5d409793884d4726dfe4370c80b6dee
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:59 2024 +0106

    printk: ringbuffer: Skip non-finalized records in panic
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b1c4c67a5e90db8fbdb5b5504fe16e17b564cca8 ]
    
    Normally a reader will stop once reaching a non-finalized
    record. However, when a panic happens, writers from other CPUs
    (or an interrupted context on the panic CPU) may have been
    writing a record and were unable to finalize it. The panic CPU
    will reserve/commit/finalize its panic records, but these will
    be located after the non-finalized records. This results in
    panic() not flushing the panic messages.
    
    Extend _prb_read_valid() to skip over non-finalized records if
    on the panic CPU.
    
    Fixes: 896fbe20b4e2 ("printk: use the lockless ringbuffer")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-11-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 63a5853da187508aacdec6b01315281b0a7874f5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ba2a03b7f9edabaeebf2ca32f8ac19aa5369dd9e
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:57 2024 +0106

    printk: ringbuffer: Cleanup reader terminology
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 584528d621459d1a5c31da7a591218ad3bb96d6c ]
    
    With the lockless ringbuffer, it is allowed that multiple
    CPUs/contexts write simultaneously into the buffer. This creates
    an ambiguity as some writers will finalize sooner.
    
    The documentation for the prb_read functions is not clear as it
    refers to "not yet written" and "no data available". Clarify the
    return values and language to be in terms of the reader: records
    available for reading.
    
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-9-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Stable-dep-of: b1c4c67a5e90 ("printk: ringbuffer: Skip non-finalized records in panic")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 411d1efc4b13fc05be36bb0ff71ad2dd427e6de3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3e04be14d7b6b7a6b424e69ab28c02d3f92e04c5
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:56 2024 +0106

    printk: Add this_cpu_in_panic()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 36652d0f3bf34899e82d31a5fa9e2bdd02fd6381 ]
    
    There is already panic_in_progress() and other_cpu_in_panic(),
    but checking if the current CPU is the panic CPU must still be
    open coded.
    
    Add this_cpu_in_panic() to complete the set.
    
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-8-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Stable-dep-of: b1c4c67a5e90 ("printk: ringbuffer: Skip non-finalized records in panic")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c80b960fb3c5c75807b1c1c5c078dabd427607c6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c100cd4b6e64e5dbfde6aaabdcc57f7def61f149
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:58 2024 +0106

    printk: Wait for all reserved records with pr_flush()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ac7d7844c64d15603daa3e905a311ddcfbb4bc91 ]
    
    Currently pr_flush() will only wait for records that were
    available to readers at the time of the call (using
    prb_next_seq()). But there may be more records (non-finalized)
    that have following finalized records. pr_flush() should wait
    for these to print as well. Particularly because any trailing
    finalized records may be the messages that the calling context
    wants to ensure are printed.
    
    Add a new ringbuffer function prb_next_reserve_seq() to return
    the sequence number following the most recently reserved record.
    This guarantees that pr_flush() will wait until all current
    printk() messages (completed or in progress) have been printed.
    
    Fixes: 3b604ca81202 ("printk: add pr_flush()")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-10-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4d06931ceda8186b34de84b93b21a0a903d1bf76)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b4a2234ab3bec9352ccf22ca34432d4a54c62774
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:53 2024 +0106

    printk: ringbuffer: Do not skip non-finalized records with prb_next_seq()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5f72e52ba959e50680b8d83599da1368cd7a6ee2 ]
    
    Commit f244b4dc53e5 ("printk: ringbuffer: Improve
    prb_next_seq() performance") introduced an optimization for
    prb_next_seq() by using best-effort to track recently finalized
    records. However, the order of finalization does not
    necessarily match the order of the records. The optimization
    changed prb_next_seq() to return inconsistent results, possibly
    yielding sequence numbers that are not available to readers
    because they are preceded by non-finalized records or they are
    not yet visible to the reader CPU.
    
    Rather than simply best-effort tracking recently finalized
    records, force the committing writer to read records and
    increment the last "contiguous block" of finalized records. In
    order to do this, the sequence number instead of ID must be
    stored because ID's cannot be directly compared.
    
    A new memory barrier pair is introduced to guarantee that a
    reader can always read the records up until the sequence number
    returned by prb_next_seq() (unless the records have since
    been overwritten in the ringbuffer).
    
    This restores the original functionality of prb_next_seq()
    while also keeping the optimization.
    
    For 32bit systems, only the lower 32 bits of the sequence
    number are stored. When reading the value, it is expanded to
    the full 64bit sequence number using the 32bit seq macros,
    which fold in the value returned by prb_first_seq().
    
    Fixes: f244b4dc53e5 ("printk: ringbuffer: Improve prb_next_seq() performance")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-5-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cc909f16374594d41339699bf04213fa6fb67b45)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a0a80561097eaa80b42109e77bbfc49dbfd7689
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Feb 7 14:46:50 2024 +0106

    printk: nbcon: Relocate 32bit seq macros
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5b73e706f00f3553e1a4efbb31951ce9fe18f2dc ]
    
    The macros __seq_to_nbcon_seq() and __nbcon_seq_to_seq() are
    used to provide support for atomic handling of sequence numbers
    on 32bit systems. Until now this was only used by nbcon.c,
    which is why they were located in nbcon.c and include nbcon in
    the name.
    
    In a follow-up commit this functionality is also needed by
    printk_ringbuffer. Rather than duplicating the functionality,
    relocate the macros to printk_ringbuffer.h.
    
    Also, since the macros will be no longer nbcon-specific, rename
    them to __u64seq_to_ulseq() and __ulseq_to_u64seq().
    
    This does not result in any functional change.
    
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20240207134103.1357162-2-john.ogness@linutronix.de
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Stable-dep-of: 5f72e52ba959 ("printk: ringbuffer: Do not skip non-finalized records with prb_next_seq()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 76511c7a0a2814f4bf731e29b12ff1fc2658280f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4b107863ad74ae6eff7e7ed4b1245cb61f789772
Author: Kang Yang <quic_kangyang@quicinc.com>
Date:   Mon Feb 5 19:03:27 2024 +0200

    wifi: ath12k: fix incorrect logic of calculating vdev_stats_id
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 019b58dcb6ed267e17b7efd03ec8575c1b67d942 ]
    
    During calculate vdev_stats_id, will compare vdev_stats_id with
    ATH12K_INVAL_VDEV_STATS_ID by '<='. If vdev_stats_id is relatively
    small, then assign ATH12K_INVAL_VDEV_STATS_ID to vdev_stats_id.
    
    This logic is incorrect. Firstly, should use '>=' instead of '<=' to
    check if this u8 variable exceeds the max valid range.
    
    Secondly, should use the maximum value as comparison value.
    
    Correct comparison symbols and use the maximum value
    ATH12K_MAX_VDEV_STATS_ID for comparison.
    
    Tested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3
    
    Fixes: d889913205cf ("wifi: ath12k: driver for Qualcomm Wi-Fi 7 devices")
    Signed-off-by: Kang Yang <quic_kangyang@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20240130040303.370590-3-quic_kangyang@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 96ad22da370a32e3d93c5fd1985c9311bc2116cf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b1361e410a3bc98eef6745779a433860738f0d08
Author: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Date:   Wed Jan 31 12:37:40 2024 +0530

    arm64: dts: qcom: sm8650: Fix UFS PHY clocks
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0f9b8054bb4abd7b4686cc66b85f71fec9160136 ]
    
    QMP PHY used in SM8650 requires 3 clocks:
    
    * ref - 19.2MHz reference clock from RPMh
    * ref_aux - Auxiliary reference clock from GCC
    * qref - QREF clock from TCSR
    
    Fixes: 10e024671295 ("arm64: dts: qcom: sm8650: add interconnect dependent device nodes")
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240131-ufs-phy-clock-v3-17-58a49d2f4605@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c8505edea85e3a74e03296edbe4329998ebd75c0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f800836b17383c11cd60a38fcda4c359d1839c5c
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 17 16:04:27 2024 +0200

    arm64: dts: qcom: sm6115: declare VLS CLAMP register for USB3 PHY
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 95d739ed962c9aaa17d77b739606dbdf31879f6e ]
    
    The USB3 PHY on the SM6115 platform doesn't have built-in
    PCS_MISC_CLAMP_ENABLE register. Instead clamping is handled separately
    via the register in the TCSR space. Declare corresponding register.
    
    Fixes: 9dd5f6dba729 ("arm64: dts: qcom: sm6115: Add USB SS qmp phy node")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240117-usbc-phy-vls-clamp-v2-6-a950c223f10f@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3be7ff36d4cd5ae7693ed7e4062988288fefb3dd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2d4ff2f54f847aa6610e65e7430486507b0c6f2f
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 17 16:04:26 2024 +0200

    arm64: dts: qcom: qcm2290: declare VLS CLAMP register for USB3 PHY
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit acb94d67f5a23dbb2e0021b6c30609ed05d7d6a5 ]
    
    The USB3 PHY on the QCM2290 platform doesn't have built-in
    PCS_MISC_CLAMP_ENABLE register. Instead clamping is handled separately
    via the register in the TCSR space. Declare corresponding register.
    
    Fixes: 0c55f6229bc3 ("arm64: dts: qcom: qcm2290: Add USB3 PHY")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240117-usbc-phy-vls-clamp-v2-5-a950c223f10f@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 308ff9ee4973085f656030fc1fb908858f85e48f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3692ac80a3c62235960f705e503239c196f15bd6
Author: Jérôme Pouiller <jerome.pouiller@silabs.com>
Date:   Fri Feb 2 17:42:13 2024 +0100

    wifi: wfx: fix memory leak when starting AP
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b8cfb7c819dd39965136a66fe3a7fde688d976fc ]
    
    Kmemleak reported this error:
    
        unreferenced object 0xd73d1180 (size 184):
          comm "wpa_supplicant", pid 1559, jiffies 13006305 (age 964.245s)
          hex dump (first 32 bytes):
            00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
            00 00 00 00 00 00 00 00 1e 00 01 00 00 00 00 00  ................
          backtrace:
            [<5ca11420>] kmem_cache_alloc+0x20c/0x5ac
            [<127bdd74>] __alloc_skb+0x144/0x170
            [<fb8a5e38>] __netdev_alloc_skb+0x50/0x180
            [<0f9fa1d5>] __ieee80211_beacon_get+0x290/0x4d4 [mac80211]
            [<7accd02d>] ieee80211_beacon_get_tim+0x54/0x18c [mac80211]
            [<41e25cc3>] wfx_start_ap+0xc8/0x234 [wfx]
            [<93a70356>] ieee80211_start_ap+0x404/0x6b4 [mac80211]
            [<a4a661cd>] nl80211_start_ap+0x76c/0x9e0 [cfg80211]
            [<47bd8b68>] genl_rcv_msg+0x198/0x378
            [<453ef796>] netlink_rcv_skb+0xd0/0x130
            [<6b7c977a>] genl_rcv+0x34/0x44
            [<66b2d04d>] netlink_unicast+0x1b4/0x258
            [<f965b9b6>] netlink_sendmsg+0x1e8/0x428
            [<aadb8231>] ____sys_sendmsg+0x1e0/0x274
            [<d2b5212d>] ___sys_sendmsg+0x80/0xb4
            [<69954f45>] __sys_sendmsg+0x64/0xa8
        unreferenced object 0xce087000 (size 1024):
          comm "wpa_supplicant", pid 1559, jiffies 13006305 (age 964.246s)
          hex dump (first 32 bytes):
            00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
            10 00 07 40 00 00 00 00 00 00 00 00 00 00 00 00  ...@............
          backtrace:
            [<9a993714>] __kmalloc_track_caller+0x230/0x600
            [<f83ea192>] kmalloc_reserve.constprop.0+0x30/0x74
            [<a2c61343>] __alloc_skb+0xa0/0x170
            [<fb8a5e38>] __netdev_alloc_skb+0x50/0x180
            [<0f9fa1d5>] __ieee80211_beacon_get+0x290/0x4d4 [mac80211]
            [<7accd02d>] ieee80211_beacon_get_tim+0x54/0x18c [mac80211]
            [<41e25cc3>] wfx_start_ap+0xc8/0x234 [wfx]
            [<93a70356>] ieee80211_start_ap+0x404/0x6b4 [mac80211]
            [<a4a661cd>] nl80211_start_ap+0x76c/0x9e0 [cfg80211]
            [<47bd8b68>] genl_rcv_msg+0x198/0x378
            [<453ef796>] netlink_rcv_skb+0xd0/0x130
            [<6b7c977a>] genl_rcv+0x34/0x44
            [<66b2d04d>] netlink_unicast+0x1b4/0x258
            [<f965b9b6>] netlink_sendmsg+0x1e8/0x428
            [<aadb8231>] ____sys_sendmsg+0x1e0/0x274
            [<d2b5212d>] ___sys_sendmsg+0x80/0xb4
    
    However, since the kernel is build optimized, it seems the stack is not
    accurate. It appears the issue is related to wfx_set_mfp_ap(). The issue
    is obvious in this function: memory allocated by ieee80211_beacon_get()
    is never released. Fixing this leak makes kmemleak happy.
    
    Reported-by: Ulrich Mohr <u.mohr@semex-engcon.com>
    Co-developed-by: Ulrich Mohr <u.mohr@semex-engcon.com>
    Signed-off-by: Ulrich Mohr <u.mohr@semex-engcon.com>
    Fixes: 268bceec1684 ("staging: wfx: fix BA when device is AP and MFP is enabled")
    Signed-off-by: Jérôme Pouiller <jerome.pouiller@silabs.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240202164213.1606145-1-jerome.pouiller@silabs.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dadbb5d29d6c5f571a50272fce8c1505a9559487)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ebb9e52aa5c4749f8c486ae53ad75ea42ec6b4e8
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Tue Feb 6 13:59:22 2024 +0100

    libbpf: Use OPTS_SET() macro in bpf_xdp_query()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 92a871ab9fa59a74d013bc04f321026a057618e7 ]
    
    When the feature_flags and xdp_zc_max_segs fields were added to the libbpf
    bpf_xdp_query_opts, the code writing them did not use the OPTS_SET() macro.
    This causes libbpf to write to those fields unconditionally, which means
    that programs compiled against an older version of libbpf (with a smaller
    size of the bpf_xdp_query_opts struct) will have its stack corrupted by
    libbpf writing out of bounds.
    
    The patch adding the feature_flags field has an early bail out if the
    feature_flags field is not part of the opts struct (via the OPTS_HAS)
    macro, but the patch adding xdp_zc_max_segs does not. For consistency, this
    fix just changes the assignments to both fields to use the OPTS_SET()
    macro.
    
    Fixes: 13ce2daa259a ("xsk: add new netlink attribute dedicated for ZC max frags")
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20240206125922.1992815-1-toke@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cd3be9843247edb8fc6fcd8d8237cbce2bc19f5e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit afd39ad645f038339e62310dc0b3a2c5ef6e50dc
Author: Abel Vesa <abel.vesa@linaro.org>
Date:   Mon Jan 29 14:45:43 2024 +0200

    arm64: dts: qcom: x1e80100-qcp: Fix supplies for LDOs 3E and 2J
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7eac281cbedbd71d777eabca3a52d97983c61692 ]
    
    The LDOs 3E and 2J are actually supplied by SMPS 5J. Fix accordingly.
    
    Fixes: af16b00578a7 ("arm64: dts: qcom: Add base X1E80100 dtsi and the QCP dts")
    Acked-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/20240129-x1e80100-dts-missing-nodes-v6-11-2c0e691cfa3b@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c70a8dec5d5aa493fe163c1d4a017c4d3e148310)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a4bec34893f1d18bd2ebb87e21050187e2895837
Author: Vaishnav Achath <vaishnav.a@ti.com>
Date:   Sun Jan 21 19:10:17 2024 +0530

    arm64: dts: ti: k3-am62p-mcu/wakeup: Disable MCU and wakeup R5FSS nodes
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dfc90e5f1a0fe0f8124521bc1911e38aa6cd9118 ]
    
    K3 Remoteproc R5 driver requires reserved memory carveouts and
    mailbox configuration to instantiate the cores successfully.
    Since this is a board level dependency, keep the R5 subsytem
    disabled at SoC dtsi, otherwise it results in probe errors like
    below during AM62P SK boot:
    
    r5fss@79000000: reserved memory init failed, ret = -22
    r5fss@79000000: k3_r5_cluster_rproc_init failed, ret = -22
    r5fss@78000000: reserved memory init failed, ret = -22
    r5fss@78000000: k3_r5_cluster_rproc_init failed, ret = -22
    
    Fixes: b5080c7c1f7e ("arm64: dts: ti: k3-am62p: Add nodes for more IPs")
    
    Signed-off-by: Vaishnav Achath <vaishnav.a@ti.com>
    Reviewed-by: Jayesh Choudhary <j-choudhary@ti.com>
    Reviewed-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20240121134017.374992-1-vaishnav.a@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fd57623e34ee7323420c3571b1a756e69e682528)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7014a392a082ec72fda34c603045c664a68394bd
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Feb 5 16:22:43 2024 -0800

    libbpf: fix return value for PERF_EVENT __arg_ctx type fix up check
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d7bc416aa5cc183691287e8f0b1d5b182a7ce9c3 ]
    
    If PERF_EVENT program has __arg_ctx argument with matching
    architecture-specific pt_regs/user_pt_regs/user_regs_struct pointer
    type, libbpf should still perform type rewrite for old kernels, but not
    emit the warning. Fix copy/paste from kernel code where 0 is meant to
    signify "no error" condition. For libbpf we need to return "true" to
    proceed with type rewrite (which for PERF_EVENT program will be
    a canonical `struct bpf_perf_event_data *` type).
    
    Fixes: 9eea8fafe33e ("libbpf: fix __arg_ctx type enforcement for perf_event programs")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/r/20240206002243.1439450-1-andrii@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit af129d11f9832f6b39b3dc9d0314d77c504499ad)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 609222c1150ce624312f4da3baab44e24157d15e
Author: Jayesh Choudhary <j-choudhary@ti.com>
Date:   Thu Feb 1 19:53:08 2024 +0530

    arm64: dts: ti: k3-am69-sk: remove assigned-clock-parents for unused VP
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cfdb4f7ffdb855c1a3d274dc7757e780dcbf2d55 ]
    
    VP2 and VP3 are unused video ports and VP3 share the same parent
    clock as VP1 causing issue with pixel clock setting for HDMI (VP1).
    The current DM firmware does not support changing parent clock if it
    is shared by another component. It returns 0 for the determine_rate
    query before causing set_rate to set the clock at default maximum of
    1.8GHz which is a lot more than the maximum frequency videoports can
    support (600MHz) causing SYNC LOST issues.
    So remove the parent clocks for unused VPs to avoid conflict.
    
    Fixes: 6f8605fd7d11 ("arm64: dts: ti: k3-am69-sk: Add DP and HDMI support")
    Reported-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Jayesh Choudhary <j-choudhary@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Tested-by: Enric Balletbo i Serra <eballetbo@redhat.com>
    Link: https://lore.kernel.org/r/20240201142308.4954-1-j-choudhary@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f8b7bad1506436462237ac38b57d39c737888f46)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 131a603cb339817939ad8c703b43503ab74eea39
Author: Zhipeng Lu <alexious@zju.edu.cn>
Date:   Fri Jan 26 15:53:34 2024 +0800

    wifi: libertas: fix some memleaks in lbs_allocate_cmd_buffer()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5f0e4aede01cb01fa633171f0533affd25328c3a ]
    
    In the for statement of lbs_allocate_cmd_buffer(), if the allocation of
    cmdarray[i].cmdbuf fails, both cmdarray and cmdarray[i].cmdbuf needs to
    be freed. Otherwise, there will be memleaks in lbs_allocate_cmd_buffer().
    
    Fixes: 876c9d3aeb98 ("[PATCH] Marvell Libertas 8388 802.11b/g USB driver")
    Signed-off-by: Zhipeng Lu <alexious@zju.edu.cn>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240126075336.2825608-1-alexious@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8e243ac649c10922a6b4855170eaefe4c5b3faab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f141cf8eb6e76805920e8f2056d0e6d33a0c9ee9
Author: Baochen Qiang <quic_bqiang@quicinc.com>
Date:   Fri Feb 2 10:35:47 2024 +0800

    wifi: ath11k: initialize rx_mcs_80 and rx_mcs_160 before use
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b802e7b7e771dee3377d071418281f8b64d2d832 ]
    
    Currently in ath11k_peer_assoc_h_he() rx_mcs_80 and rx_mcs_160
    are used to calculate max_nss, see
            if (support_160)
                    max_nss = min(rx_mcs_80, rx_mcs_160);
            else
                    max_nss = rx_mcs_80;
    
    Kernel test robot complains on uninitialized symbols:
    drivers/net/wireless/ath/ath11k/mac.c:2321 ath11k_peer_assoc_h_he() error: uninitialized symbol 'rx_mcs_80'.
    drivers/net/wireless/ath/ath11k/mac.c:2321 ath11k_peer_assoc_h_he() error: uninitialized symbol 'rx_mcs_160'.
    drivers/net/wireless/ath/ath11k/mac.c:2323 ath11k_peer_assoc_h_he() error: uninitialized symbol 'rx_mcs_80'.
    
    This is because there are some code paths that never set them, so
    the assignment of max_nss can come from uninitialized variables.
    This could result in some unknown issues since a wrong peer_nss
    might be passed to firmware.
    
    Change to initialize them to an invalid value at the beginning. This
    makes sense because even max_nss gets an invalid value, due to either
    or both of them being invalid, we can get an valid peer_nss with
    following guard:
            arg->peer_nss = min(sta->deflink.rx_nss, max_nss)
    
    Tested-on: WCN6855 hw2.1 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.23
    
    Fixes: 3db26ecf7114 ("ath11k: calculate the correct NSS of peer for HE capabilities")
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202401311243.NyXwWZxP-lkp@intel.com/
    Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20240202023547.11141-1-quic_bqiang@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 387ed40d870c92ee98e02ab867f1c0e3b467cb1a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ddb9fe8a7cc6c855d6102b3f8c8b8851fe642dd1
Author: Manorit Chawdhry <m-chawdhry@ti.com>
Date:   Thu Feb 1 13:37:27 2024 +0530

    arm64: dts: ti: k3-j784s4: Fix power domain for VTM node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e4d252e6d29208aea56d4c04270523e306b1e3c2 ]
    
    Fix the power domain device ID for wkup_vtm0 node.
    
    Link: https://software-dl.ti.com/tisci/esd/latest/5_soc_doc/j784s4/devices.html
    Fixes: 64821fbf6738 ("arm64: dts: ti: j784s4: Add VTM node")
    Signed-off-by: Manorit Chawdhry <m-chawdhry@ti.com>
    Reviewed-by: Andrew Davis <afd@ti.com>
    Link: https://lore.kernel.org/r/20240201-b4-upstream-j721s2-fix-vtm-devid-v2-2-85fd568b77e3@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 686f207265ea49af6abc568c9c97c9bfdefe45a0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 17f501b2b409f0e0c4e1530acc6d234fbb09742d
Author: Manorit Chawdhry <m-chawdhry@ti.com>
Date:   Thu Feb 1 13:37:26 2024 +0530

    arm64: dts: ti: k3-j721s2: Fix power domain for VTM node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5ef196ed912e80a1e64936119ced8d7eb5635f0f ]
    
    Fix the power domain device ID for wkup_vtm0 node.
    
    Link: https://software-dl.ti.com/tisci/esd/latest/5_soc_doc/j721s2/devices.html
    Fixes: d148e3fe52c8 ("arm64: dts: ti: j721s2: Add VTM node")
    Signed-off-by: Manorit Chawdhry <m-chawdhry@ti.com>
    Reviewed-by: Andrew Davis <afd@ti.com>
    Link: https://lore.kernel.org/r/20240201-b4-upstream-j721s2-fix-vtm-devid-v2-1-85fd568b77e3@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 61b18ce8c704fd6b952d92b3c9c206796e579dc0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a9be097503665b31834d5244532826849680f015
Author: Ravi Gunasekaran <r-gunasekaran@ti.com>
Date:   Thu Feb 1 18:13:53 2024 +0530

    arm64: dts: ti: k3-am62p5-sk: Enable CPSW MDIO node
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8839a9af397e803e0447a6b3e69fad54ed22d26d ]
    
    Enable the CPSW MDIO node, and link the pinctrl information to enable
    ethernet on SK-AM62P.
    
    Ethernet was unintentally broken on this board, even though these nodes
    were already present, as enabling them was missed in the original
    patch.
    
    Fixes: c00504ea42c0 ("arm64: dts: ti: k3-am62p5-sk: Updates for SK EVM")
    Signed-off-by: Ravi Gunasekaran <r-gunasekaran@ti.com>
    Signed-off-by: Jai Luthra <j-luthra@ti.com>
    Link: https://lore.kernel.org/r/20240201-am62p_cpsw_mdio-v1-1-05f758300f6e@ti.com
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fcf1d0ccd26b5a1d603a89eaa9aaf54e9cf2f3fd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 25b10530b2001af80e76594b59680e0732c4a02e
Author: David Lechner <dlechner@baylibre.com>
Date:   Fri Jan 26 15:23:57 2024 -0600

    spi: move split xfers for CS_WORD emulation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c8bec3355f08ddb887d5c13b7095dfa79e6db108 ]
    
    This moves splitting transfers for CS_WORD software emulation to the
    same place where we split transfers for controller-specific reasons.
    
    This fixes a few subtle bugs.
    
    The calculation for maxsize was wrong for bit sizes between 17 and 24.
    This is fixed by making use of spi_split_transfers_maxwords() which
    already has the correct calculation.
    
    Also, since this indirectly calls spi_res_alloc(), to avoid leaking
    resources, spi_finalize_current_message() would need to be called
    on all error paths in __spi_validate() and callers of __spi_validate()
    would need to do the same. This is fixed by moving the call to
    __spi_pump_transfer_message() where it is already splitting transfers
    for other reasons and correctly releases resources in the subsequent
    error paths.
    
    Fixes: cbaa62e0094a ("spi: add software implementation for SPI_CS_WORD")
    Signed-off-by: David Lechner <dlechner@baylibre.com>
    Link: https://lore.kernel.org/r/20240126212358.3916280-2-dlechner@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a116333714d577b82b69242323b9492520e92c19)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 87668b2c64cc93bb81bfef60e836663773038919
Author: David Lechner <dlechner@baylibre.com>
Date:   Tue Jan 23 15:49:46 2024 -0600

    spi: consolidate setting message->spi
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit b204aa0f99cfe3c9d796ecfc0bc6f3f89585789e ]
    
    Previously, __spi_sync() and __spi_async() set message->spi to the spi
    device independently after calling __spi_validate(). __spi_validate()
    also would conditionally set this if it needed to split the message
    since it wasn't set yet.
    
    Since both __spi_sync() and __spi_async() call __spi_validate(), we can
    consolidate this into only setting message->spi once (unconditionally)
    in __spi_validate(). This will also save any future callers of
    __spi_validate() from also needing to set message->spi.
    
    Signed-off-by: David Lechner <dlechner@baylibre.com>
    Link: https://msgid.link/r/20240123214946.2616786-1-dlechner@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: c8bec3355f08 ("spi: move split xfers for CS_WORD emulation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f4763cce2349be552a680a9f699e3e7eace7d44c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fceb8dedf0bab095ca3a2f7eb7189d2491c75c87
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Feb 2 07:13:29 2024 -0800

    net: blackhole_dev: fix build warning for ethh set but not used
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 843a8851e89e2e85db04caaf88d8554818319047 ]
    
    lib/test_blackhole_dev.c sets a variable that is never read, causing
    this following building warning:
    
            lib/test_blackhole_dev.c:32:17: warning: variable 'ethh' set but not used [-Wunused-but-set-variable]
    
    Remove the variable struct ethhdr *ethh, which is unused.
    
    Fixes: 509e56b37cc3 ("blackhole_dev: add a selftest")
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit edc058bb9f5f034f69d6d5f24450212267c0c208)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 78b234b407adb1735c3a2894d9bfa2253423a28a
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Fri Jan 26 13:04:33 2024 +0100

    pwm: atmel-hlcdc: Fix clock imbalance related to suspend support
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e25ac87d3f831fed002c34aadddaf4ebb4ea45ec ]
    
    The suspend callback disables the periph clock when the PWM is enabled
    and resume reenables this clock if the PWM was disabled before. Judging
    from the code comment it's suspend that is wrong here. Fix accordingly.
    
    Fixes: f9bb9da7c09d ("pwm: atmel-hlcdc: Implement the suspend/resume hooks")
    Reviewed-by: Claudiu Beznea <claudiu.beznea@tuxon.dev>
    Link: https://lore.kernel.org/r/b51ea92b0a45eff3dc83b08adefd43d930df996c.1706269232.git.u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bfbeb8785e3c7244e4bedd3fec575cfed13cf188)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d61d8f3fb35fd4c9cf71192a7c42918f7dac7ea3
Author: Tim Harvey <tharvey@gateworks.com>
Date:   Wed Dec 20 15:30:46 2023 -0800

    arm64: dts: imx8mm-venice-gw71xx: fix USB OTG VBUS
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ec2cb52fcfef5d58574f2cfbc9a99ffc20ae5a9d ]
    
    The GW71xx does not have a gpio controlled vbus regulator but it does
    require some pinctrl. Remove the regulator and move the valid pinctrl
    into the usbotg1 node.
    
    Fixes: bd306fdb4e60 ("arm64: dts: imx8mm-venice-gw71xx: fix USB OTG VBUS")
    Signed-off-by: Tim Harvey <tharvey@gateworks.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9b2842c1f6effd08ab03ca54045bd570b37fd090)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 618704b5a7c70b6b6c5083bff2862862b3d13e80
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Feb 2 11:05:29 2024 -0800

    bpf: don't emit warnings intended for global subprogs for static subprogs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1eb986746a67952df86eb2c50a36450ef103d01b ]
    
    When btf_prepare_func_args() was generalized to handle both static and
    global subprogs, a few warnings/errors that are meant only for global
    subprog cases started to be emitted for static subprogs, where they are
    sort of expected and irrelavant.
    
    Stop polutting verifier logs with irrelevant scary-looking messages.
    
    Fixes: e26080d0da87 ("bpf: prepare btf_prepare_func_args() for handling static subprogs")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/r/20240202190529.2374377-4-andrii@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fe49db402ec6124cec9e7ad90fd3c74f8ba200b2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8c2dba586daf4a4a1ef219a64605cac4a9eb3852
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Thu Jan 4 16:09:03 2024 -0800

    bpf: make sure scalar args don't accept __arg_nonnull tag
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 18810ad3929ff6b5d8e67e3adc40d690bd780fd6 ]
    
    Move scalar arg processing in btf_prepare_func_args() after all pointer
    arg processing is done. This makes it easier to do validation. One
    example of unintended behavior right now is ability to specify
    __arg_nonnull for integer/enum arguments. This patch fixes this.
    
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Eduard Zingerman <eddyz87@gmail.com>
    Link: https://lore.kernel.org/r/20240105000909.2818934-3-andrii@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Stable-dep-of: 1eb986746a67 ("bpf: don't emit warnings intended for global subprogs for static subprogs")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c3c21de4d3c2c30a5ad70e23b51559a72bb89a6d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ed2396ce0dc549bc41ce42dc73de9b62336ead35
Author: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Date:   Fri Feb 2 17:55:58 2024 +0800

    selftests/bpf: trace_helpers.c: do not use poisoned type
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a68b50f47bec8bd6a33b07b7e1562db2553981a7 ]
    
    After commit c698eaebdf47 ("selftests/bpf: trace_helpers.c: Optimize
    kallsyms cache") trace_helpers.c now includes libbpf_internal.h, and
    thus can no longer use the u32 type (among others) since they are poison
    in libbpf_internal.h. Replace u32 with __u32 to fix the following error
    when building trace_helpers.c on powerpc:
    
      error: attempt to use poisoned "u32"
    
    Fixes: c698eaebdf47 ("selftests/bpf: trace_helpers.c: Optimize kallsyms cache")
    Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Link: https://lore.kernel.org/r/20240202095559.12900-1-shung-hsi.yu@suse.com
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 514001058d49724119f485d03baaefbd1ce224bf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d612d5b3b8f95a528f063636209606d40f8448c0
Author: Martin Kaiser <martin@kaiser.cx>
Date:   Wed Jan 24 21:58:57 2024 +0100

    gpio: vf610: allow disabling the vf610 driver
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f57595788244a838deec2d3be375291327cbc035 ]
    
    The vf610 gpio driver is enabled by default for all i.MX machines,
    without any option to disable it in a board-specific config file.
    
    Most i.MX chipsets have no hardware for this driver. Change the default
    to enable GPIO_VF610 for SOC_VF610 and disable it otherwise.
    
    Add a text description after the bool type, this makes the driver
    selectable by make config etc.
    
    Fixes: 30a35c07d9e9 ("gpio: vf610: drop the SOC_VF610 dependency for GPIO_VF610")
    Signed-off-by: Martin Kaiser <martin@kaiser.cx>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e4d29fecee9bad60e6a798937817dd814e866fbe)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 421ae1ac9dcaa3925e109eb27a0fff5249a13af5
Author: Miri Korenblit <miriam.rachel.korenblit@intel.com>
Date:   Wed Jan 31 10:24:34 2024 +0200

    wifi: iwlwifi: read BIOS PNVM only for non-Intel SKU
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c868a189ecfe8cc0b3173c2eaa7f0b659326c151 ]
    
    The driver is supposed to read the PNVM from BIOS only for non-Intel
    SKUs. For Intel SKUs the OEM ID will be 0.
    Read BIOS PNVM only when a non-Intel SKU is indicated.
    
    Fixes: b99e32cbfdf6 ("wifi: iwlwifi: Take loading and setting of pnvm image out of parsing part")
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Link: https://msgid.link/20240131091413.3625cf1223d3.Ieffda5f506713b1c979388dd7a0e1c1a0145cfca@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b6757b9f7dcfb12e89153b84dea198501c6bbf8f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 04aa34fa132bf5ad3c3b3036def1d4ff78cfa1a4
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Jan 29 21:21:59 2024 +0200

    wifi: iwlwifi: mvm: fix the TLC command after ADD_STA
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0fcdf55fced7121c43fa576433986f1c04115b73 ]
    
    ADD_STA resets the link quality data inside the firmware. This is not
    supposed to happen and has been fixed for newer devices. For older
    devices (AX201 and down), this makes us send frames with rates that are
    not in the TLC table.
    
    Fixes: 5a86dcb4a908 ("wifi: iwlwifi: mvm: update station's MFP flag after association")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Reviewed-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240129211905.1deca7eaff14.I597abd7aab36fdab4aa8311a48c98a3d5bd433ba@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b2ee971bf856e60132d755ce19fac0022afb3cde)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e4954a4f609e9d73d98ccc752709db88c75f1d96
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 29 21:21:54 2024 +0200

    wifi: iwlwifi: always have 'uats_enabled'
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f639602a58e7564dd091c7c0793f61042bad9bb6 ]
    
    We check this in code that'd be complicated to put under
    ifdef (CONFIG_ACPI), so just always have 'uats_enabled'.
    
    Fixes: 4a9bb5b4d949 ("wifi: iwlwifi: fw: Add support for UATS table in UHB")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Reviewed-by: Mukesh Sisodiya <mukesh.sisodiya@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240129211905.bdc5fb20f00a.I902d801d79873c5c9cd51cef8e8226e2acefe88d@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6c2f97f6b0587402eb772fafefd163e5114ecaab)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2823a84b104a4a22685b3a4ef848f73987880751
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 29 21:21:51 2024 +0200

    wifi: iwlwifi: mvm: d3: fix IPN byte order
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0c769cb6b9f364423c255f117774c9ecd5bf23ea ]
    
    The IPN is reported by the firmware in 6 bytes little endian,
    but mac80211 expects big endian so it can do memcmp() on it.
    We used to store this as a u64 which was filled in the right
    way, but never used. When implementing that it's used, we
    changed it to just be 6 bytes, but lost the conversion. Add
    it back.
    
    Fixes: 04f78e242fff ("wifi: iwlwifi: mvm: Add support for IGTK in D3 resume flow")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240129211905.138ed8a698e3.I1b66c386e45b5392696424ec636474bff86fd5ef@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 063a7bda2dc2ddab0ed463cba6914f8f91a492a6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4f01272fc562c0bb85e10c97cbb08c65e3e4c526
Author: Miri Korenblit <miriam.rachel.korenblit@intel.com>
Date:   Mon Jan 29 21:21:49 2024 +0200

    wifi: iwlwifi: fix EWRD table validity check
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c8d8f3911135921ace8e939ea0956b55f74bf8a0 ]
    
    EWRD ACPI table contains up to 3 additional sar profiles.
    According to the BIOS spec, the table contains a n_profile
    variable indicating how many additional profiles exist in the
    table.
    Currently we check that n_profiles is not <= 0.
    But according to the BIOS spec, 0 is a valid value,
    and it can't be < 0 anyway because we receive that from ACPI as
    an unsigned integer.
    
    Fixes: 39c1a9728f93 ("iwlwifi: refactor the SAR tables from mvm to acpi")
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Link: https://msgid.link/20240129211905.448ea2f40814.Iffd2aadf8e8693e6cb599bee0406a800a0c1e081@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 56bd17b831c48c9c681603ba119e002f1d14212c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 83c797a89aaf4c74751faf05089e1d82703ed584
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Jan 28 08:53:58 2024 +0200

    wifi: iwlwifi: mvm: initialize rates in FW earlier
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d3b2c6c65bfd3b9616084e91bd0d402964ea7cef ]
    
    When connecting to an AP, we currently initialize the rate
    control only after associating. Since we now use firmware
    to assign rates to auth/assoc frames rather than using the
    data in the station and the firmware doesn't know, they're
    transmitted using low mandatory rates. However, if the AP
    advertised only higher supported rates we want to use them
    to be nicer (it still must receive mandatory rates though),
    so send the information to the firmware earlier to have it
    know about it and be able to use it.
    
    Fixes: 499d02790495 ("wifi: iwlwifi: Use FW rate for non-data frames")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240128084842.ed7ab1c859c2.I4b4d4fc3905c8d8470fc0fee4648f25c950c9bb7@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ab4056cde2c59b4c5de04f29aa42f8970dd7bb81)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8798c9676a4ca62d679500cd175f566963c31388
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Jan 28 08:53:55 2024 +0200

    wifi: iwlwifi: acpi: fix WPFC reading
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 296f3e926716ded8dc29e349d2b042b362f96515 ]
    
    The code reading the WPFC table needs to take into account
    the domain type (first element in the package), shouldn't
    leak the memory if it fails, and has a bad comment. Fix all
    these issues.
    
    Fixes: c4c954547755 ("wifi: iwlwifi: implement WPFC ACPI table loading")
    Reported-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Reviewed-by: Gregory Greenman Gregory <gregory.greenman@intel.com>
    Link: https://msgid.link/20240128084842.2afeb476b62d.I200568dc42a277e21c12be99d5aaa39b009d45da@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5eb68a869c9126f102c306a08a9fd0ff11298bc0)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9030cd39c752ffb135142aa9e355f02a6a193a93
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Jan 28 08:53:53 2024 +0200

    wifi: iwlwifi: dbg-tlv: ensure NUL termination
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ea1d166fae14e05d49ffb0ea9fcd4658f8d3dcea ]
    
    The iwl_fw_ini_debug_info_tlv is used as a string, so we must
    ensure the string is terminated correctly before using it.
    
    Fixes: a9248de42464 ("iwlwifi: dbg_ini: add TLV allocation new API support")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240128084842.be15e858ee89.Ibff93429cf999eafc7b26f3eef4c055dc84984a0@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 71d4186d470e9cda7cd1a0921b4afda737c6f641)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6d9cb6d8e2c9ca1840948776a94d10f731da1bf8
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Jan 28 08:53:48 2024 +0200

    wifi: iwlwifi: mvm: report beacon protection failures
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 91380f768d7f6e3d003755defa792e9a00a1444a ]
    
    Andrei reports that we just silently drop beacons after we
    report the key counters, but never report to userspace, so
    wpa_supplicant cannot send the WNM action frame. Fix that.
    
    Fixes: b1fdc2505abc ("iwlwifi: mvm: advertise BIGTK client support if available")
    Reported-by: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240128084842.7d855442cdce.Iba90b26f893dc8c49bfb8be65373cd0a138af12c@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ff20d420c11c130573e65672635ad2fd5db5dd33)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit df146d8777fbe3c71aea0bd40dfb9285ddca9c61
Author: Raj Kumar Bhagat <quic_rajkbhag@quicinc.com>
Date:   Mon Jan 29 12:27:15 2024 +0530

    wifi: ath12k: fix fetching MCBC flag for QCN9274
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 902700d55d4a4522bb3eb4ef94f752a19c42230a ]
    
    In QCN9274, RX packet's multicast and broadcast(MCBC) flag is fetched
    from RX descriptor's msdu_end info5 member but it is not correct
    for QCN9274. Due to this with encryption, ARP request packet is wrongly
    marked as MCBC packet and it is sent to mac80211 without setting
    RX_FLAG_PN_VALIDATED & RX_FLAG_DECRYPTED flag. This results in packet
    getting dropped in mac80211. Hence ping initiated from station to AP
    fails.
    
    Fix this by fetching correct MCBC flag in case of QCN9274.
    For QC9274 MCBC flag should be fetched from RX descriptor's mpdu_start
    info6 member.
    
    Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.1.1-00188-QCAHKSWPL_SILICONZ-1
    Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1
    Tested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3
    
    Fixes: 8f04852e90cb ("wifi: ath12k: Use msdu_end to check MCBC")
    Signed-off-by: Raj Kumar Bhagat <quic_rajkbhag@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20240129065724.2310207-5-quic_rajkbhag@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c827a696193ca74343ead31b5582f04c39dee1e7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 13e6b7876ad240b33a98b6f94ccc451724cd7708
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Wed Jan 31 10:18:32 2024 +0800

    wifi: ath11k: change to move WMI_VDEV_PARAM_SET_HEMU_MODE before WMI_PEER_ASSOC_CMDID
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 413e20e82ee78f142cb5194fd317db514f012602 ]
    
    Currently when connecting to an AP with 11AX-HE phy mode, host sends
    WMI_VDEV_PARAM_SET_HEMU_MODE parameter to firmware after
    WMI_PEER_ASSOC_CMDID command. This results in TXBF not working, because
    firmware calculates TXBF values while handling WMI_PEER_ASSOC_CMDID,
    however at that time WMI_VDEV_PARAM_SET_HEMU_MODE has not been sent yet.
    See below log:
    
    AP sends "VHT/HE/EHT NDP Announcement" to station, and station sends
    "Action no Ack" of category code HE to AP, the "Nc Index" and
    "Codebook Information" are wrong:
    
    Issued action:
    IEEE 802.11 Action No Ack, Flags: ........
    IEEE 802.11 wireless LAN
        Fixed parameters
            Category code: HE (30)
            HE Action: HE Compressed Beamforming And CQI (0)
                Total length: 152
                HE MIMO Control: 0x0004008018
                    .... .... .... .... .... .... .... .... .... .000 = Nc Index: 1 Column (0)
                    .... .... .... .... .... .... .... ..0. .... .... = Codebook Information: 0
    
    Change to send WMI_VDEV_PARAM_SET_HEMU_MODE before WMI_PEER_ASSOC_CMDID,
    then firmware will calculate the TXBF values with valid parameters
    instead of empty values. TXBF works well and throughput performance is
    improved from 80 Mbps to 130 Mbps with this patch.
    
    Good action after this patch:
    IEEE 802.11 Action No Ack, Flags: ........
    IEEE 802.11 wireless LAN
        Fixed parameters
            Category code: HE (30)
            HE Action: HE Compressed Beamforming And CQI (0)
                Total length: 409
                HE MIMO Control: 0x0004008219
                    .... .... .... .... .... .... .... .... .... .001 = Nc Index: 2 Columns (1)
                    .... .... .... .... .... .... .... ..1. .... .... = Codebook Information: 1
    
    This change applies to all chipsets.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.23
    
    Fixes: 38dfe775d0ab ("wifi: ath11k: push MU-MIMO params from hostapd to hardware")
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20240131021832.17298-1-quic_bqiang@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 067083702d4774e8a519f6220c6f78d97570c60f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 66994cf59aa53489735575f4cc17b36c84561151
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Fri Jan 26 15:02:17 2024 +0100

    wifi: ath9k: delay all of ath9k_wmi_event_tasklet() until init is complete
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 24355fcb0d4cbcb6ddda262596558e8cfba70f11 ]
    
    The ath9k_wmi_event_tasklet() used in ath9k_htc assumes that all the data
    structures have been fully initialised by the time it runs. However, because of
    the order in which things are initialised, this is not guaranteed to be the
    case, because the device is exposed to the USB subsystem before the ath9k driver
    initialisation is completed.
    
    We already committed a partial fix for this in commit:
    8b3046abc99e ("ath9k_htc: fix NULL pointer dereference at ath9k_htc_tx_get_packet()")
    
    However, that commit only aborted the WMI_TXSTATUS_EVENTID command in the event
    tasklet, pairing it with an "initialisation complete" bit in the TX struct. It
    seems syzbot managed to trigger the race for one of the other commands as well,
    so let's just move the existing synchronisation bit to cover the whole
    tasklet (setting it at the end of ath9k_htc_probe_device() instead of inside
    ath9k_tx_init()).
    
    Link: https://lore.kernel.org/r/ed1d2c66-1193-4c81-9542-d514c29ba8b8.bugreport@ubisectech.com
    Fixes: 8b3046abc99e ("ath9k_htc: fix NULL pointer dereference at ath9k_htc_tx_get_packet()")
    Reported-by: Ubisectech Sirius <bugreport@ubisectech.com>
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20240126140218.1033443-1-toke@toke.dk
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4afa0246656d5680c8a4c3fb37ba6570c4ab819b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 55a28d35cdc491aef7740225df59b78e6bef3c41
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Thu Feb 1 09:20:24 2024 -0800

    libbpf: Add missing LIBBPF_API annotation to libbpf_set_memlock_rlim API
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 93ee1eb85e28d1e35bb059c1f5965d65d5fc83c2 ]
    
    LIBBPF_API annotation seems missing on libbpf_set_memlock_rlim API, so
    add it to make this API callable from libbpf's shared library version.
    
    Fixes: e542f2c4cd16 ("libbpf: Auto-bump RLIMIT_MEMLOCK if kernel needs it for BPF")
    Fixes: ab9a5a05dc48 ("libbpf: fix up few libbpf.map problems")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Eduard Zingerman <eddyz87@gmail.com>
    Link: https://lore.kernel.org/bpf/20240201172027.604869-3-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 126091e84e2aedbc5c61c1c448be9adb2a75b7fb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bc24a83e188f62da6b128e38f946c89e90eea7e1
Author: Frank Li <Frank.Li@nxp.com>
Date:   Thu Dec 14 14:46:55 2023 -0500

    arm64: dts: imx8qm: Correct edma3 power-domains and interrupt numbers
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5136ea6b109de66b1327a3069f88ad8f5efb37b2 ]
    
    It is eDMA1 at QM, which have the same register with eDMA3 at qxp.
    
    The below commit fix panic problem.
    commit b37e75bddc35 ("arm64: dts: imx8qm: Add imx8qm's own pm to avoid panic during startup")
    
    This fixes the IRQ and DMA channel numbers. While QM eDMA1 technically has
    32 channels, only 10 channels are likely used for I2C. The exact IRQ
    numbers for the remaining channels were unclear in the reference manual.
    
    Fixes: e4d7a330fb7a ("arm64: dts: imx8: add edma[0..3]")
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c29a01fda078ab52d0caa4c1bbf42538bd9a2d40)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit af4c17029d6974dc57875090bcc8dca473801b15
Author: Frank Li <Frank.Li@nxp.com>
Date:   Thu Dec 14 14:46:54 2023 -0500

    arm64: dts: imx8qm: Align edma3 power-domains resources indentation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7edee2b297e5a4f805e5b945c0c0e6f4f8f719b5 ]
    
    <&pd IMX_SC_R_DMA_1_CH*> is now properly aligned with the previous line
    for improved code readability.
    
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Stable-dep-of: 5136ea6b109d ("arm64: dts: imx8qm: Correct edma3 power-domains and interrupt numbers")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e9556efd2e8da98d82002f66c6f54c97cf7f23ff)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c507d2ff36bcefbca51a9b6b28f307f49357849d
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:49:04 2024 +0100

    arm64: dts: imx8mm-kontron: Fix interrupt for RTC on OSM-S i.MX8MM module
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8d0f39b7d04d864e89b84063b124fd10aa4b8809 ]
    
    The level of the interrupt signal is active low instead. Fix this.
    
    Fixes: de9618e84f76 ("arm64: dts: Add support for Kontron SL/BL i.MX8MM OSM-S")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f184556fc3fe863648305464076cd5d4b60abc78)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65515d6ba8ab7133e563d2f6b5c078a5d7a46ce6
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:49:03 2024 +0100

    arm64: dts: imx8mm-kontron: Disable pull resistors for SD card signals on BL board
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 008820524844326ffb3123cebceba1960c0ad0dc ]
    
    Some signals have external pullup resistors on the board and don't need
    the internal ones to be enabled. Due to silicon errata ERR050080 let's
    disable the internal pull resistors whererever possible and prevent
    any unwanted behavior in case they wear out.
    
    Fixes: 8668d8b2e67f ("arm64: dts: Add the Kontron i.MX8M Mini SoMs and baseboards")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c264e1c92bf8be48978c0afe509d3cae54560a37)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b1766d09f5c190b9672dd58240d430aaa4901581
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:49:02 2024 +0100

    arm64: dts: imx8mm-kontron: Disable pull resistors for SD card signals on BL OSM-S board
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5a940ba3e4d7c8710c9073ff5d0ca4644d4da9db ]
    
    Some signals have external pullup resistors on the board and don't need
    the internal ones to be enabled. Due to silicon errata ERR050080 let's
    disable the internal pull resistors whererever possible and prevent
    any unwanted behavior in case they wear out.
    
    Fixes: de9618e84f76 ("arm64: dts: Add support for Kontron SL/BL i.MX8MM OSM-S")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7dd418b22a12c138a8d40d07f5a2a3332e5c441b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 02d302967a7143dbb2de23c2e47092f7a49bc54a
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:49:01 2024 +0100

    arm64: dts: imx8mm-kontron: Disable pullups for onboard UART signals on BL board
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 162aadaa0df8217b0cc49d919dd00022fef65e78 ]
    
    These signals are actively driven by the SoC or by the onboard
    transceiver. There's no need to enable the internal pull resistors
    and due to silicon errata ERR050080 let's disable the internal ones
    to prevent any unwanted behavior in case they wear out.
    
    Fixes: 8668d8b2e67f ("arm64: dts: Add the Kontron i.MX8M Mini SoMs and baseboards")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5196be993ef2ba788cf94885cc685a7f8b5f9597)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1770518e0ad5cd680889ba108e48e67bc6bfecbd
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:49:00 2024 +0100

    arm64: dts: imx8mm-kontron: Disable pullups for onboard UART signals on BL OSM-S board
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c6d9b5672a0e2c4b1079a50d2fc8780c40cfd3eb ]
    
    These signals are actively driven by the SoC or by the onboard
    transceiver. There's no need to enable the internal pull resistors
    and due to silicon errata ERR050080 let's disable the internal ones
    to prevent any unwanted behavior in case they wear out.
    
    Fixes: de9618e84f76 ("arm64: dts: Add support for Kontron SL/BL i.MX8MM OSM-S")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7845b64ec57a6766eaa696851871cd6870a541ee)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bbf61ccc20d58fce7600cfb912b5a0bd7b22c3de
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:48:59 2024 +0100

    arm64: dts: imx8mm-kontron: Disable pullups for I2C signals on SL/BL i.MX8MM
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f19e5bb91d53264d7dac5d845a4825afadf72440 ]
    
    There are external pullup resistors on the board and due to silicon
    errata ERR050080 let's disable the internal ones to prevent any
    unwanted behavior in case they wear out.
    
    Fixes: 8668d8b2e67f ("arm64: dts: Add the Kontron i.MX8M Mini SoMs and baseboards")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d96dd0347884303a621e9b1d287e8bcbe156ad69)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bacc9e39c4dca47ce772835f106ab167b272d569
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Jan 8 09:48:58 2024 +0100

    arm64: dts: imx8mm-kontron: Disable pullups for I2C signals on OSM-S i.MX8MM
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 96293af54f6aa859015d8ca40a1437d3115ad50c ]
    
    There are external pullup resistors on the board and due to silicon
    errata ERR050080 let's disable the internal ones to prevent any
    unwanted behavior in case they wear out.
    
    Fixes: de9618e84f76 ("arm64: dts: Add support for Kontron SL/BL i.MX8MM OSM-S")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f919e0816aa8914cb080cd0be87e2beab4ab1cbd)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6a738e19d4fa11c9c1ea3c682346bbd70f6bad0c
Author: Manu Bretelle <chantr4@gmail.com>
Date:   Tue Jan 30 21:32:12 2024 -0800

    selftests/bpf: Disable IPv6 for lwt_redirect test
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2ef61296d2844c6a4211e07ab70ef2fb412b2c30 ]
    
    After a recent change in the vmtest runner, this test started failing
    sporadically.
    
    Investigation showed that this test was subject to race condition which
    got exacerbated after the vm runner change. The symptoms being that the
    logic that waited for an ICMPv4 packet is naive and will break if 5 or
    more non-ICMPv4 packets make it to tap0.
    When ICMPv6 is enabled, the kernel will generate traffic such as ICMPv6
    router solicitation...
    On a system with good performance, the expected ICMPv4 packet would very
    likely make it to the network interface promptly, but on a system with
    poor performance, those "guarantees" do not hold true anymore.
    
    Given that the test is IPv4 only, this change disable IPv6 in the test
    netns by setting `net.ipv6.conf.all.disable_ipv6` to 1.
    This essentially leaves "ping" as the sole generator of traffic in the
    network namespace.
    If this test was to be made IPv6 compatible, the logic in
    `wait_for_packet` would need to be modified.
    
    In more details...
    
    At a high level, the test does:
    - create a new namespace
    - in `setup_redirect_target` set up lo, tap0, and link_err interfaces as
      well as add 2 routes that attaches ingress/egress sections of
      `test_lwt_redirect.bpf.o` to the xmit path.
    - in `send_and_capture_test_packets` send an ICMP packet and read off
      the tap interface (using `wait_for_packet`) to check that a ICMP packet
      with the right size is read.
    
    `wait_for_packet` will try to read `max_retry` (5) times from the tap0
    fd looking for an ICMPv4 packet matching some criteria.
    
    The problem is that when we set up the `tap0` interface, because IPv6 is
    enabled by default, traffic such as Router solicitation is sent through
    tap0, as in:
    
      # tcpdump -r /tmp/lwt_redirect.pc
      reading from file /tmp/lwt_redirect.pcap, link-type EN10MB (Ethernet)
      04:46:23.578352 IP6 :: > ff02::1:ffc0:4427: ICMP6, neighbor solicitation, who has fe80::fcba:dff:fec0:4427, length 32
      04:46:23.659522 IP6 :: > ff02::16: HBH ICMP6, multicast listener report v2, 1 group record(s), length 28
      04:46:24.389169 IP 10.0.0.1 > 20.0.0.9: ICMP echo request, id 122, seq 1, length 108
      04:46:24.618599 IP6 fe80::fcba:dff:fec0:4427 > ff02::16: HBH ICMP6, multicast listener report v2, 1 group record(s), length 28
      04:46:24.619985 IP6 fe80::fcba:dff:fec0:4427 > ff02::2: ICMP6, router solicitation, length 16
      04:46:24.767326 IP6 fe80::fcba:dff:fec0:4427 > ff02::16: HBH ICMP6, multicast listener report v2, 1 group record(s), length 28
      04:46:28.936402 IP6 fe80::fcba:dff:fec0:4427 > ff02::2: ICMP6, router solicitation, length 16
    
    If `wait_for_packet` sees 5 non-ICMPv4 packets, it will return 0, which is what we see in:
    
      2024-01-31T03:51:25.0336992Z test_lwt_redirect_run:PASS:netns_create 0 nsec
      2024-01-31T03:51:25.0341309Z open_netns:PASS:malloc token 0 nsec
      2024-01-31T03:51:25.0344844Z open_netns:PASS:open /proc/self/ns/net 0 nsec
      2024-01-31T03:51:25.0350071Z open_netns:PASS:open netns fd 0 nsec
      2024-01-31T03:51:25.0353516Z open_netns:PASS:setns 0 nsec
      2024-01-31T03:51:25.0356560Z test_lwt_redirect_run:PASS:setns 0 nsec
      2024-01-31T03:51:25.0360140Z open_tuntap:PASS:open(/dev/net/tun) 0 nsec
      2024-01-31T03:51:25.0363822Z open_tuntap:PASS:ioctl(TUNSETIFF) 0 nsec
      2024-01-31T03:51:25.0367402Z open_tuntap:PASS:fcntl(O_NONBLOCK) 0 nsec
      2024-01-31T03:51:25.0371167Z setup_redirect_target:PASS:open_tuntap 0 nsec
      2024-01-31T03:51:25.0375180Z setup_redirect_target:PASS:if_nametoindex 0 nsec
      2024-01-31T03:51:25.0379929Z setup_redirect_target:PASS:ip link add link_err type dummy 0 nsec
      2024-01-31T03:51:25.0384874Z setup_redirect_target:PASS:ip link set lo up 0 nsec
      2024-01-31T03:51:25.0389678Z setup_redirect_target:PASS:ip addr add dev lo 10.0.0.1/32 0 nsec
      2024-01-31T03:51:25.0394814Z setup_redirect_target:PASS:ip link set link_err up 0 nsec
      2024-01-31T03:51:25.0399874Z setup_redirect_target:PASS:ip link set tap0 up 0 nsec
      2024-01-31T03:51:25.0407731Z setup_redirect_target:PASS:ip route add 10.0.0.0/24 dev link_err encap bpf xmit obj test_lwt_redirect.bpf.o sec redir_ingress 0 nsec
      2024-01-31T03:51:25.0419105Z setup_redirect_target:PASS:ip route add 20.0.0.0/24 dev link_err encap bpf xmit obj test_lwt_redirect.bpf.o sec redir_egress 0 nsec
      2024-01-31T03:51:25.0427209Z test_lwt_redirect_normal:PASS:setup_redirect_target 0 nsec
      2024-01-31T03:51:25.0431424Z ping_dev:PASS:if_nametoindex 0 nsec
      2024-01-31T03:51:25.0437222Z send_and_capture_test_packets:FAIL:wait_for_epacket unexpected wait_for_epacket: actual 0 != expected 1
      2024-01-31T03:51:25.0448298Z (/tmp/work/bpf/bpf/tools/testing/selftests/bpf/prog_tests/lwt_redirect.c:175: errno: Success) test_lwt_redirect_normal egress test fails
      2024-01-31T03:51:25.0457124Z close_netns:PASS:setns 0 nsec
    
    When running in a VM which potential resource contrains, the odds that calling
    `ping` is not scheduled very soon after bringing `tap0` up increases,
    and with this the chances to get our ICMP packet pushed to position 6+
    in the network trace.
    
    To confirm this indeed solves the issue, I ran the test 100 times in a
    row with:
    
      errors=0
      successes=0
      for i in `seq 1 100`
      do
        ./test_progs -t lwt_redirect/lwt_redirect_normal
        if [ $? -eq 0 ]; then
          successes=$((successes+1))
        else
          errors=$((errors+1))
        fi
      done
      echo "successes: $successes/errors: $errors"
    
    While this test would at least fail a couple of time every 10 runs, here
    it ran 100 times with no error.
    
    Fixes: 43a7c3ef8a15 ("selftests/bpf: Add lwt_xmit tests for BPF_REDIRECT")
    Signed-off-by: Manu Bretelle <chantr4@gmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20240131053212.2247527-1-chantr4@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5d90210706a567f31b407c008745646cf24784c5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7347f2bb9ee2c80f169f0d57d734aa0d35ea8446
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 18 17:32:37 2024 +0100

    arm64: dts: renesas: r8a779g0: Add missing SCIF_CLK2
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 08e799f6bce80dd63c174d8d0fc61d1a6149960b ]
    
    R-Car V4H actually has two SCIF_CLK pins.
    The second pin provides the SCIF_CLK signal for HSCIF2 and SCIF4.
    
    Fixes: a4c31c56d2d35641 ("arm64: dts: renesas: r8a779g0: Add SCIF nodes")
    Fixes: 39d9dfc6fbe1860e ("arm64: dts: renesas: r8a779g0: Add remaining HSCIF nodes")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/72f20c1bf32187bd30a963cafe27252907d661f9.1705589612.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 92e69df60a7cc3b65c73a47760b412100ec3aa38)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9d2ebd689ccd19445179c09da5e8328ad0322d78
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 15 14:33:18 2024 +0100

    arm64: dts: renesas: r8a779g0: Restore sort order
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8b93657c976a61726d7ffbe8d019b84b4abfb673 ]
    
    Numerical by unit address, alphabetical by node name.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/f00ef274a73c8fd60f940a1649423a8927b9ae8a.1705324708.git.geert+renesas@glider.be
    Stable-dep-of: 08e799f6bce8 ("arm64: dts: renesas: r8a779g0: Add missing SCIF_CLK2")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 52a3c0d7e926abffa31c5eaf9459ac965abcac25)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a70cd665683ea9bfa6ab0bf88994c98c7c69ee13
Author: Bjorn Andersson <quic_bjorande@quicinc.com>
Date:   Thu Jan 25 13:05:11 2024 -0800

    arm64: dts: qcom: sa8540p: Drop gfx.lvl as power-domain for gpucc
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fd5821a1a83c969ed2dcc72fef885f3a82c1d978 ]
    
    The SA8295P and SA8540P uses an external regulator (max20411), and
    gfx.lvl is not provided by rpmh. Drop the power-domains property of the
    gpucc node to reflect this.
    
    Fixes: eec51ab2fd6f ("arm64: dts: qcom: sc8280xp: Add GPU related nodes")
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Bjorn Andersson <quic_bjorande@quicinc.com>
    Link: https://lore.kernel.org/r/20240125-sa8295p-gpu-v4-5-7011c2a63037@quicinc.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d658f5dd647809dd7a97369069ce5893ceb47ec3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 35b838622d0beb2311f3d8d6b29c57141608de9f
Author: Bjorn Andersson <quic_bjorande@quicinc.com>
Date:   Thu Jan 25 13:05:10 2024 -0800

    pmdomain: qcom: rpmhpd: Drop SA8540P gfx.lvl
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 883957bee580b723fd87d49ac73e0c84fc03a446 ]
    
    On SA8295P and SA8540P gfx.lvl is not provdied by rpmh, but rather is
    handled by an external regulator (max20411). Drop gfx.lvl from the list
    of power-domains exposed on this platform.
    
    Fixes: f68f1cb3437d ("soc: qcom: rpmhpd: add sc8280xp & sa8540p rpmh power-domains")
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20240125-sa8295p-gpu-v4-4-7011c2a63037@quicinc.com
    Signed-off-by: Bjorn Andersson <quic_bjorande@quicinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5a5f92e4b76d6554c7db9edbc4aa8a30c72e7619)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 028a64055586802b746d14d74c7e1c1f1e6d6004
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Thu Jan 25 12:55:05 2024 -0800

    libbpf: fix __arg_ctx type enforcement for perf_event programs
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9eea8fafe33eb70868f6ace2fc1e17c4ff5539c3 ]
    
    Adjust PERF_EVENT type enforcement around __arg_ctx to match exactly
    what kernel is doing.
    
    Fixes: 76ec90a996e3 ("libbpf: warn on unexpected __arg_ctx type when rewriting BTF")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/r/20240125205510.3642094-3-andrii@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7092153af70abfddbb6b0c1dd6c271b45316b019)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e6e8484a8315eda04ae452479c7541cd641f5a1
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Jan 26 14:09:44 2024 -0800

    libbpf: Fix faccessat() usage on Android
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ad57654053805bf9a62602aaec74cc78edb6f235 ]
    
    Android implementation of libc errors out with -EINVAL in faccessat() if
    passed AT_EACCESS ([0]), this leads to ridiculous issue with libbpf
    refusing to load /sys/kernel/btf/vmlinux on Androids ([1]). Fix by
    detecting Android and redefining AT_EACCESS to 0, it's equivalent on
    Android.
    
      [0] https://android.googlesource.com/platform/bionic/+/refs/heads/android13-release/libc/bionic/faccessat.cpp#50
      [1] https://github.com/libbpf/libbpf-bootstrap/issues/250#issuecomment-1911324250
    
    Fixes: 6a4ab8869d0b ("libbpf: Fix the case of running as non-root with capabilities")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Link: https://lore.kernel.org/bpf/20240126220944.2497665-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b7b7895399383efdad13dfbe251996a542c6a30f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e10a92845db1c2bc3a3acba6f8b1e7b6bf54a612
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Wed Jan 24 17:31:43 2024 -0300

    cpufreq: mediatek-hw: Don't error out if supply is not found
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit eaffb10b51bf74415c9252fd8fb4dd77122501ee ]
    
    devm_regulator_get_optional() returns -ENODEV if no supply can be found.
    By introducing its usage, commit 788715b5f21c ("cpufreq: mediatek-hw:
    Wait for CPU supplies before probing") caused the driver to fail probe
    if no supply was present in any of the CPU DT nodes.
    
    Use devm_regulator_get() instead since the CPUs do require supplies
    even if not described in the DT. It will gracefully return a dummy
    regulator if none is found in the DT node, allowing probe to succeed.
    
    Fixes: 788715b5f21c ("cpufreq: mediatek-hw: Wait for CPU supplies before probing")
    Reported-by: kernelci.org bot <bot@kernelci.org>
    Closes: https://linux.kernelci.org/test/case/id/65b0b169710edea22852a3fa/
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f24ae2f6aebb507fe4a29a0379fd773b94283116)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7c13f0c79ed8f1d3156d62c0f1ce11eee6617bdc
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Jan 28 03:32:45 2024 +0200

    arm64: dts: qcom: rename PM2250 to PM4125
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 39e62f41c3ce210554cc054f345d4135ef4e587b ]
    
    It seems, the only actual mentions of PM2250 can be found are related to
    the Qualcomm RB1 platform. However even RB1 schematics use PM4125 as a
    PMIC name. Rename PM2250 to PM4125 to follow the documentation.
    
    Note, this doesn't change the compatible strings. There was a previous
    argument regarding renaming of compat strings.
    
    Fixes: c309b9a54039 ("arm64: dts: qcom: Add initial PM2250 device tree")
    Acked-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20240128-pm2250-pm4125-rename-v2-2-d51987e9f83a@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8cea7675fd0e9630a62e1dc6a1c61d12682dfb61)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cfcdebdad6f842a61738733c42c69e8004b4f3dd
Author: David Heidelberg <david@ixit.cz>
Date:   Fri Dec 29 21:02:33 2023 +0100

    arm64: dts: qcom: sdm845-oneplus-common: improve DAI node naming
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit afe9867a0c0e10ba618c15d4ef6f8699872f6cc3 ]
    
    Make it easier to understand what the reg in those nodes is by using the
    constants provided by qcom,q6dsp-lpass-ports.h.
    
    Name nodes according to dt-binding expectations.
    
    Fix for
    ```
    arch/arm64/boot/dts/qcom/sdm845-oneplus-enchilada.dtb: service@4: dais: Unevaluated properties are not allowed ('qi2s@22', 'qi2s@23' were unexpected)
    ```
    
    Fixes: b7b734286856 ("arm64: dts: qcom: sdm845-oneplus-*: add audio devices")
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Reviewed-by: Luca Weiss <luca@z3ntu.xyz>
    Link: https://lore.kernel.org/r/20231229200245.259689-1-david@ixit.cz
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f5da920df69eb9f3ebb53b40243c2093613a77ea)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3da9fac4a967c632ab5db2e9bea2a0fc166be791
Author: Luca Weiss <luca.weiss@fairphone.com>
Date:   Fri Dec 29 13:53:17 2023 +0100

    arm64: dts: qcom: qcm6490-fairphone-fp5: Add missing reserved-memory
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5dbbe7e0a2b91ac5901ee188724a997004759171 ]
    
    It seems we also need to reserve a region of 81 MiB called "removed_mem"
    otherwise we can easily hit the following error with higher RAM usage:
    
      [ 1467.809274] Internal error: synchronous external abort: 0000000096000010 [#2] SMP
    
    Fixes: eee9602ad649 ("arm64: dts: qcom: qcm6490: Add device-tree for Fairphone 5")
    Signed-off-by: Luca Weiss <luca.weiss@fairphone.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231229-fp5-reserved-mem-v1-1-87bb818f1397@fairphone.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 97ad6def3d1ca0d3c8242ddf42622f6ff9b4bdb8)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit be7ca153dff81932202be503e68dc53c88e0f348
Author: Luca Weiss <luca.weiss@fairphone.com>
Date:   Fri Dec 29 09:51:37 2023 +0100

    arm64: dts: qcom: sc7280: Add static properties to cryptobam
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 40ec6a2817d927367461fb0335b42b0d494ff927 ]
    
    When the properties num-channels & qcom,num-ees are not specified, the
    driver tries to read the values from registers, but this read fails and
    resets the device if the interconnect from the qcom,qce node is not
    already active when that happens.
    
    Add the static properties to not touch any registers during probe, the
    rest of the time when the BAM is used by QCE then the interconnect will
    be active already.
    
    Fixes: d488f903a860 ("arm64: dts: qcom: sc7280: add QCrypto nodes")
    Signed-off-by: Luca Weiss <luca.weiss@fairphone.com>
    Link: https://lore.kernel.org/r/20231229-sc7280-cryptobam-fixup-v1-1-bd8f68589b80@fairphone.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8b3f6b09b30ffa6bbb154e6f8c983a54b431227c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a6e4666a6a08e3068776e067da01ed2291d4d059
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Jan 28 03:32:44 2024 +0200

    soc: qcom: socinfo: rename PM2250 to PM4125
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5155e48128826d0c5999dc9f47aa746df54da448 ]
    
    It seems, the only actual mentions of PM2250 can be found are related to
    the Qualcomm RB1 platform. However even RB1 schematics use PM4125 as a
    PMIC name. Rename PM2250 to PM4125 to follow the documentation.
    
    Fixes: 082f9bc60f33 ("soc: qcom: spmi-pmic: add more PMIC SUBTYPE IDs")
    Fixes: 112d96fd2927 ("soc: qcom: socinfo: Add some PMICs")
    Acked-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20240128-pm2250-pm4125-rename-v2-1-d51987e9f83a@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0901889dabb25ebbd1d299284a8156971968ff71)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd0626f8f42afebf8e2012cede083bd63ee28f16
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Tue Jan 16 13:25:44 2024 +0100

    arm64: dts: qcom: sm8450: Add missing interconnects to serial
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6e115b75b43bd12d4061e53c8ff175e387783d8a ]
    
    The serial ports did not have their interconnect paths specified when
    they were first introduced. Fix that.
    
    Fixes: 5188049c9b36 ("arm64: dts: qcom: Add base SM8450 DTSI")
    Fixes: f5837418479a ("arm64: dts: qcom: sm8450: add uart20 node")
    Reported-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Suggested-by: Georgi Djakov <djakov@kernel.org>
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Tested-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20240116-topic-8450serial-v1-1-b685e6a5ad78@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 74c1e911176d07fb86edcf0b6454166fc2148273)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 24687ff149feaa0917460a937ad68bed58ffe653
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Tue Jan 23 09:08:52 2024 -0800

    af_unix: Annotate data-race of gc_in_progress in wait_for_unix_gc().
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 31e03207119a535d0b0e3b3a7f91983aeb2cb14d ]
    
    gc_in_progress is changed under spin_lock(&unix_gc_lock),
    but wait_for_unix_gc() reads it locklessly.
    
    Let's use READ_ONCE().
    
    Fixes: 5f23b734963e ("net: Fix soft lockups/OOM issues w/ unix garbage collector")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Link: https://lore.kernel.org/r/20240123170856.41348-2-kuniyu@amazon.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 479a68092fbfd9eef92ce1a63271afdf03cf62f2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d3855375cbe01ecc2e45a12861445e619b5d9548
Author: Miri Korenblit <miriam.rachel.korenblit@intel.com>
Date:   Tue Jan 23 20:08:16 2024 +0200

    wifi: iwlwifi: change link id in time event to s8
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6c8ce23854b66db94d88e0957e531cb074806c16 ]
    
    Link ID in time event data is -1 when the time event is cleared.
    Change the type of the link ID in the time event data structure
    and in the affected function from unsigned to signed.
    
    Fixes: 135065837310 ("wifi: iwlwifi: support link_id in SESSION_PROTECTION cmd")
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Reviewed-by: Gregory Greenman <gregory.greenman@intel.com>
    Link: https://msgid.link/20240123200528.50d4941f946c.Iea990b118c69bc3e1eb61c1d134c9d470b3a17ac@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1657c82f65ce3ec80fa69141b73885b4eb3b7047)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3caee48c8872b66504c84903b06f679ee5283b38
Author: Benjamin Berg <benjamin.berg@intel.com>
Date:   Thu Jan 11 18:17:46 2024 +0200

    wifi: mac80211: use deflink and fix typo in link ID check
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e10322810ce0d0d4a5a319458c4e1e052c6fe9be ]
    
    This does not change anything effectively, but it is closer to what the
    code is trying to achieve here. i.e. select the link data if it is an
    MLD and fall back to using the deflink otherwise.
    
    Fixes: 0f99f0878350 ("wifi: mac80211: Print local link address during authentication")
    Signed-off-by: Benjamin Berg <benjamin.berg@intel.com>
    Reviewed-by: Ilan Peer <ilan.peer@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240111181514.4c4b1c40eb3c.I2771621dee328c618536596b7e56232df42a79c8@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4ece9b0fbcc6c8a50f611aa81e73bfd7a6d1c73d)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 52484ab153e456deb693a7fead7cc0e98e621ffc
Author: Benjamin Berg <benjamin.berg@intel.com>
Date:   Tue Jan 2 21:35:32 2024 +0200

    wifi: cfg80211: add RNR with reporting AP information
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4d1d6b3f45999b1ddde53831d639a67e2655285f ]
    
    If the reporting AP is part of the same MLD, then an entry in the RNR is
    required in order to discover it again from the BSS generated from the
    per-STA profile in the Multi-Link Probe Response.
    
    We need this because we do not have a direct concept of an MLD AP and
    just do the lookup from one to the other on the fly if needed. As such,
    we need to ensure that this lookup will work both ways.
    
    Fixes: 2481b5da9c6b ("wifi: cfg80211: handle BSS data contained in ML probe responses")
    Signed-off-by: Benjamin Berg <benjamin.berg@intel.com>
    Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
    Link: https://msgid.link/20240102213313.4cb3dbb1d84f.I7c74edec83c5d7598cdd578929fd0876d67aef7f@changeid
    [roll in off-by-one fix and test updates from Benjamin]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d9c4df4f68f79d4cbe760f568abbdfe052879f74)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cddaca70df696529a68e3856219559bdcfe81085
Author: Martin KaFai Lau <martin.lau@kernel.org>
Date:   Fri Jan 19 22:05:18 2024 -0800

    selftests/bpf: Wait for the netstamp_needed_key static key to be turned on
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ce6f6cffaeaa0a3bcdafcae7fe03c68c3afae631 ]
    
    After the previous patch that speeded up the test (by avoiding neigh
    discovery in IPv6), the BPF CI occasionally hits this error:
    
    rcv tstamp unexpected pkt rcv tstamp: actual 0 == expected 0
    
    The test complains about the cmsg returned from the recvmsg() does not
    have the rcv timestamp. Setting skb->tstamp or not is
    controlled by a kernel static key "netstamp_needed_key". The static
    key is enabled whenever this is at least one sk with the SOCK_TIMESTAMP
    set.
    
    The test_redirect_dtime does use setsockopt() to turn on
    the SOCK_TIMESTAMP for the reading sk. In the kernel
    net_enable_timestamp() has a delay to enable the "netstamp_needed_key"
    when CONFIG_JUMP_LABEL is set. This potential delay is the likely reason
    for packet missing rcv timestamp occasionally.
    
    This patch is to create udp sockets with SOCK_TIMESTAMP set.
    It sends and receives some packets until the received packet
    has a rcv timestamp. It currently retries at most 5 times with 1s
    in between. This should be enough to wait for the "netstamp_needed_key".
    It then holds on to the socket and only closes it at the end of the test.
    This guarantees that the test has the "netstamp_needed_key" key turned
    on from the beginning.
    
    To simplify the udp sockets setup, they are sending/receiving packets
    in the same netns (ns_dst is used) and communicate over the "lo" dev.
    Hence, the patch enables the "lo" dev in the ns_dst.
    
    Fixes: c803475fd8dd ("bpf: selftests: test skb->tstamp in redirect_neigh")
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20240120060518.3604920-2-martin.lau@linux.dev
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1508baac0b258f9349a7bbb2b843b15555386e7e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b724e1aaba5a0931936f915c0c09e58289f347df
Author: Martin KaFai Lau <martin.lau@kernel.org>
Date:   Fri Jan 19 22:05:17 2024 -0800

    selftests/bpf: Fix the flaky tc_redirect_dtime test
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 177f1d083a19af58f4b1206d299ed73689249fd8 ]
    
    BPF CI has been reporting the tc_redirect_dtime test failing
    from time to time:
    
    test_inet_dtime:PASS:setns src 0 nsec
    (network_helpers.c:253: errno: No route to host) Failed to connect to server
    close_netns:PASS:setns 0 nsec
    test_inet_dtime:FAIL:connect_to_fd unexpected connect_to_fd: actual -1 < expected 0
    test_tcp_clear_dtime:PASS:tcp ip6 clear dtime ingress_fwdns_p100 0 nsec
    
    The connect_to_fd failure (EHOSTUNREACH) is from the
    test_tcp_clear_dtime() test and it is the very first IPv6 traffic
    after setting up all the links, addresses, and routes.
    
    The symptom is this first connect() is always slow. In my setup, it
    could take ~3s.
    
    After some tracing and tcpdump, the slowness is mostly spent in
    the neighbor solicitation in the "ns_fwd" namespace while
    the "ns_src" and "ns_dst" are fine.
    
    I forced the kernel to drop the neighbor solicitation messages.
    I can then reproduce EHOSTUNREACH. What actually happen could be:
    - the neighbor advertisement came back a little slow.
    - the "ns_fwd" namespace concluded a neighbor discovery failure
      and triggered the ndisc_error_report() => ip6_link_failure() =>
      icmpv6_send(skb, ICMPV6_DEST_UNREACH, ICMPV6_ADDR_UNREACH, 0)
    - the client's connect() reports EHOSTUNREACH after receiving
      the ICMPV6_DEST_UNREACH message.
    
    The neigh table of both "ns_src" and "ns_dst" namespace has already
    been manually populated but not the "ns_fwd" namespace. This patch
    fixes it by manually populating the neigh table also in the "ns_fwd"
    namespace.
    
    Although the namespace configuration part had been existed before
    the tc_redirect_dtime test, still Fixes-tagging the patch when
    the tc_redirect_dtime test was added since it is the only test
    hitting it so far.
    
    Fixes: c803475fd8dd ("bpf: selftests: test skb->tstamp in redirect_neigh")
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20240120060518.3604920-1-martin.lau@linux.dev
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2c2e391d2db8fb6659e20cf42a879c94042eb666)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 084ba1bc4e727fc55c230a34118fc97062ca99b5
Author: Sriram R <quic_srirrama@quicinc.com>
Date:   Wed Jan 17 11:56:28 2024 +0530

    wifi: ath12k: Fix issues in channel list update
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 67a48d937fac917947540c9f89630d472cd61fcb ]
    
    Currently, the logic used to select the 6 GHz band is incorrect,
    which may cause 6 GHz supported channels to not be updated properly.
    This is because the 6 GHz Max frequency supported by the driver is
    being compared to the Max frequency supported on the board. If in
    some cases, the 6 GHz Max frequency supported on the board is less
    than the defined 6 GHz Max frequency, all 6 GHz channels are disabled.
    To address this, compare the max frequency supported by the board to
    the defined 6 GHz Minimum frequency by the driver.
    
    Similarly, when a dual mac card supports both 6 GHz and 5 GHz radios,
    if the 5 GHz radio gets enumerated first before 6 GHz, the checks in
    ath12k_mac_setup_channels_rates() can cause the 5 GHz channels which
    were enabled earlier to get disabled when the 6 GHz channel list is
    updated. This is because the Min 6 GHz frequency defined in the driver
    is 5945 MHz, which should be 5925 MHz since channel 2 is not considered
    currently, but the firmware can pass 5925 MHz as the minimum.
    Hence, update the Min frequency supported by the driver to 5925 MHz.
    
    In addition, ensure that the channel list update to firmware updates
    only the channels that the current radio (ar) supports rather than
    considering the wiphy support. This would be required when multiple pdevs
    are supported in a wiphy and they support different ranges of frequencies
    or bands as in single wiphy support.
    
    Fixes: d889913205cf ("wifi: ath12k: driver for Qualcomm Wi-Fi 7 devices")
    
    Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1
    Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.1.1-00188-QCAHKSWPL_SILICONZ-1
    Tested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3
    
    Signed-off-by: Sriram R <quic_srirrama@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20240117062628.8260-1-quic_srirrama@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c798c4930bab38b0ea430bf63014b8c69dfa7438)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 991ed88d847f378652256184f23c696182438cf4
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Fri Jan 19 12:05:00 2024 +0100

    bpftool: Fix wrong free call in do_show_link
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2adb2e0fcdf3c6d8e28a5a9c33e458e1037ae5ad ]
    
    The error path frees wrong array, it should be ref_ctr_offsets.
    
    Acked-by: Yafang Shao <laoar.shao@gmail.com>
    Reviewed-by: Quentin Monnet <quentin@isovalent.com>
    Fixes: a7795698f8b6 ("bpftool: Add support to display uprobe_multi links")
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Acked-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240119110505.400573-4-jolsa@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 78a4c62603f8845b93b0305de1621819980f2308)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3e3a50767a4a3bceebb2a25a9ea54d1866252238
Author: Andrey Grafin <conquistador@yandex-team.ru>
Date:   Wed Jan 17 16:06:19 2024 +0300

    selftest/bpf: Add map_in_maps with BPF_MAP_TYPE_PERF_EVENT_ARRAY values
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 40628f9fff73adecac77a9aa390f8016724cad99 ]
    
    Check that bpf_object__load() successfully creates map_in_maps
    with BPF_MAP_TYPE_PERF_EVENT_ARRAY values.
    These changes cover fix in the previous patch
    "libbpf: Apply map_set_def_max_entries() for inner_maps on creation".
    
    A command line output is:
    - w/o fix
    $ sudo ./test_maps
    libbpf: map 'mim_array_pe': failed to create inner map: -22
    libbpf: map 'mim_array_pe': failed to create: Invalid argument(-22)
    libbpf: failed to load object './test_map_in_map.bpf.o'
    Failed to load test prog
    
    - with fix
    $ sudo ./test_maps
    ...
    test_maps: OK, 0 SKIPPED
    
    Fixes: 646f02ffdd49 ("libbpf: Add BTF-defined map-in-map support")
    Signed-off-by: Andrey Grafin <conquistador@yandex-team.ru>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Yonghong Song <yonghong.song@linux.dev>
    Acked-by: Hou Tao <houtao1@huawei.com>
    Link: https://lore.kernel.org/bpf/20240117130619.9403-2-conquistador@yandex-team.ru
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 81996ff75bf670ae66d1f3b6973823565442a8ca)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 471e5701ac3c7bcae692183492da3c1e4ffdc398
Author: Andrey Grafin <conquistador@yandex-team.ru>
Date:   Wed Jan 17 16:06:18 2024 +0300

    libbpf: Apply map_set_def_max_entries() for inner_maps on creation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f04deb90e516e8e48bf8693397529bc942a9e80b ]
    
    This patch allows to auto create BPF_MAP_TYPE_ARRAY_OF_MAPS and
    BPF_MAP_TYPE_HASH_OF_MAPS with values of BPF_MAP_TYPE_PERF_EVENT_ARRAY
    by bpf_object__load().
    
    Previous behaviour created a zero filled btf_map_def for inner maps and
    tried to use it for a map creation but the linux kernel forbids to create
    a BPF_MAP_TYPE_PERF_EVENT_ARRAY map with max_entries=0.
    
    Fixes: 646f02ffdd49 ("libbpf: Add BTF-defined map-in-map support")
    Signed-off-by: Andrey Grafin <conquistador@yandex-team.ru>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Yonghong Song <yonghong.song@linux.dev>
    Acked-by: Hou Tao <houtao1@huawei.com>
    Link: https://lore.kernel.org/bpf/20240117130619.9403-1-conquistador@yandex-team.ru
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 500193ad7b7e9e87766d2b947a4dbcf873f73e6a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9d854837d8a97b32a5e7fbf55ae45e686bd7abfc
Author: Artem Savkov <asavkov@redhat.com>
Date:   Wed Jan 10 09:57:37 2024 +0100

    selftests/bpf: Fix potential premature unload in bpf_testmod
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d177c1be06ce28aa8c8710ac55be1b5ad3f314c6 ]
    
    It is possible for bpf_kfunc_call_test_release() to be called from
    bpf_map_free_deferred() when bpf_testmod is already unloaded and
    perf_test_stuct.cnt which it tries to decrease is no longer in memory.
    This patch tries to fix the issue by waiting for all references to be
    dropped in bpf_testmod_exit().
    
    The issue can be triggered by running 'test_progs -t map_kptr' in 6.5,
    but is obscured in 6.6 by d119357d07435 ("rcu-tasks: Treat only
    synchronous grace periods urgently").
    
    Fixes: 65eb006d85a2 ("bpf: Move kernel test kfuncs to bpf_testmod")
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yonghong.song@linux.dev>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Link: https://lore.kernel.org/bpf/82f55c0e-0ec8-4fe1-8d8c-b1de07558ad9@linux.dev
    Link: https://lore.kernel.org/bpf/20240110085737.8895-1-asavkov@redhat.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 20562df2d513ffe60678dd180cf90ae29469c28b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bbe956cf2e863e7b938003988e7950f99b2975b0
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Jan 16 14:19:20 2024 +0800

    bpftool: Silence build warning about calloc()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f5f30386c78105cba520e443a6a9ee945ec1d066 ]
    
    There exists the following warning when building bpftool:
    
      CC      prog.o
    prog.c: In function ‘profile_open_perf_events’:
    prog.c:2301:24: warning: ‘calloc’ sizes specified with ‘sizeof’ in the earlier argument and not in the later argument [-Wcalloc-transposed-args]
     2301 |                 sizeof(int), obj->rodata->num_cpu * obj->rodata->num_metric);
          |                        ^~~
    prog.c:2301:24: note: earlier argument should specify number of elements, later size of each element
    
    Tested with the latest upstream GCC which contains a new warning option
    -Wcalloc-transposed-args. The first argument to calloc is documented to
    be number of elements in array, while the second argument is size of each
    element, just switch the first and second arguments of calloc() to silence
    the build warning, compile tested only.
    
    Fixes: 47c09d6a9f67 ("bpftool: Introduce "prog profile" command")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Quentin Monnet <quentin@isovalent.com>
    Link: https://lore.kernel.org/bpf/20240116061920.31172-1-yangtiezhu@loongson.cn
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 24fe9e13b2efb1671d01c432f602c49ce7667f91)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c3d7f7d9588bf8cb71efb04703db419ba724560d
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 22 11:25:56 2024 +0000

    inet_diag: annotate data-races around inet_diag_table[]
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e50e10ae5d81ddb41547114bfdc5edc04422f082 ]
    
    inet_diag_lock_handler() reads inet_diag_table[proto] locklessly.
    
    Use READ_ONCE()/WRITE_ONCE() annotations to avoid potential issues.
    
    Fixes: d523a328fb02 ("[INET]: Fix inet_diag dead-lock regression")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Guillaume Nault <gnault@redhat.com>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 850248eec5a71c6d5ba45b535d278c51ca05e65a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2b20d7f3b351772bdd171eccf50b619582bf49ff
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 22 11:25:55 2024 +0000

    sock_diag: annotate data-races around sock_diag_handlers[family]
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit efd402537673f9951992aea4ef0f5ff51d858f4b ]
    
    __sock_diag_cmd() and sock_diag_bind() read sock_diag_handlers[family]
    without a lock held.
    
    Use READ_ONCE()/WRITE_ONCE() annotations to avoid potential issues.
    
    Fixes: 8ef874bfc729 ("sock_diag: Move the sock_ code to net/core/")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Guillaume Nault <gnault@redhat.com>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 1da992a0c59630acb6df9aec259cfb2df728112c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9754730aca464b2b78231ea09ec19adff5a7f18e
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Wed Jan 10 11:23:02 2024 -0300

    cpufreq: mediatek-hw: Wait for CPU supplies before probing
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 788715b5f21c6455264fe00a1779e61bec407fe2 ]
    
    Before proceeding with the probe and enabling frequency scaling for the
    CPUs, make sure that all supplies feeding the CPUs have probed.
    
    This fixes an issue observed on MT8195-Tomato where if the
    mediatek-cpufreq-hw driver enabled the hardware (by writing to
    REG_FREQ_ENABLE) before the SPMI controller driver (spmi-mtk-pmif),
    behind which lies the big CPU supply, probed the platform would hang
    shortly after with "rcu: INFO: rcu_preempt detected stalls on
    CPUs/tasks" being printed in the log.
    
    Fixes: 4855e26bcf4d ("cpufreq: mediatek-hw: Add support for CPUFREQ HW")
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3243524cd60502dae16b8a9b36c134c42f34dafa)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fdf340c6ac93e753c25ccc6b7d3b168c03afb110
Author: Anastasia Belova <abelova@astralinux.ru>
Date:   Wed Jan 17 10:12:20 2024 +0300

    cpufreq: brcmstb-avs-cpufreq: add check for cpufreq_cpu_get's return value
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f661017e6d326ee187db24194cabb013d81bc2a6 ]
    
    cpufreq_cpu_get may return NULL. To avoid NULL-dereference check it
    and return 0 in case of error.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: de322e085995 ("cpufreq: brcmstb-avs-cpufreq: AVS CPUfreq driver for Broadcom STB SoCs")
    Signed-off-by: Anastasia Belova <abelova@astralinux.ru>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e6e3e51ffba0784782b1a076d7441605697ea3c6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d67edf65d3b6e6a37afceef0e981296fdff5b72f
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:10 2023 +0100

    arm64: dts: qcom: sc8180x: Shrink aoss_qmp register space size
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit dcad0590d1ea4278a55c30dd2903611a96111601 ]
    
    The AOSS_QMP region is overallocated, bleeding into space that's supposed
    to be used by other peripherals. Fix it.
    
    Fixes: 8575f197b077 ("arm64: dts: qcom: Introduce the SC8180x platform")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-9-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0e3987e17fc632a0e1f778be017e96f92782f367)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b62586ad65d55144b45aee6df1424d9a599b1466
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:09 2023 +0100

    arm64: dts: qcom: sc8180x: Add missing CPU<->MDP_CFG path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f0cd5a0ebd419bd151ed79baf5f044da797521ac ]
    
    To guarantee the required resources are enabled, describe the
    interconnect path between the MDSS and the CPU.
    
    Fixes: 494dec9b6f54 ("arm64: dts: qcom: sc8180x: Add display and gpu nodes")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-8-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 26e55f48fa94580c87962a15f08377ffd2ed0411)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b3234c4d07ba4cdbb561ba52c5188b1b0fe235d1
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:08 2023 +0100

    arm64: dts: qcom: sc8180x: Require LOW_SVS vote for MMCX if DISPCC is on
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6d9fb9e4c473cdfd2adca019b46d8e482105cae7 ]
    
    To ensure the PLLs are getting enough power, cast a vote with DISPCC so
    that MMCX is at least at LOW_SVS.
    
    Fixes: 494dec9b6f54 ("arm64: dts: qcom: sc8180x: Add display and gpu nodes")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-7-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2b94c4a26592217b6aba4c9a8370116794675584)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 21a49009c6fb61a54e4ecd6793f060f78d32b453
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:07 2023 +0100

    arm64: dts: qcom: sc8180x: Don't hold MDP core clock at FMAX
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 309b5774f45aafd002efdb2656673542419abd6f ]
    
    There's an OPP table to handle this, drop the permanent vote.
    
    Fixes: 494dec9b6f54 ("arm64: dts: qcom: sc8180x: Add display and gpu nodes")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-6-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 69ff2c2a0ee5dd7c359290b3446df4444388827b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 04322787b0e6d45cb4ddc04b65da8ffdd3da737f
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:06 2023 +0100

    arm64: dts: qcom: sc8180x: Fix eDP PHY power-domains
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 24e98cb3d5e2c86565680e00008a794b4eac0040 ]
    
    The (e)DP PHYs are powered by the MX line, not through the MDSS GDSC.
    Fix that up.
    
    Fixes: 494dec9b6f54 ("arm64: dts: qcom: sc8180x: Add display and gpu nodes")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-5-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e055d1c60d7e54010813ed1e3719d56e771be63a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6cfc6fe755e42c54e2a1caa23a7348553e5ab04a
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:05 2023 +0100

    arm64: dts: qcom: sc8180x: Add missing CPU off state
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 07b600dfdfea65d58dd80ea25becd8cff69bfafc ]
    
    The CPUs can be powered off without pulling the plug from the rest of
    the system. Describe the idle state responsible for this.
    
    Fixes: 8575f197b077 ("arm64: dts: qcom: Introduce the SC8180x platform")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-4-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 87c8314aae3e39b22cc6bde3a34e72f3a42b3049)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ba7bda46b101c2bf03f89218c1f95236e786cfe7
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:04 2023 +0100

    arm64: dts: qcom: sc8180x: Fix up big CPU idle state entry latency
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 266a3a92044b89c392b3e9cfcc328d4167c18294 ]
    
    The entry latency was oddly low.. Turns out somebody forgot about a
    second '1'! Fix it.
    
    Fixes: 8575f197b077 ("arm64: dts: qcom: Introduce the SC8180x platform")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-3-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0df17deef28baaec7f396f76b60ac256200a2b1f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 64e296f873555c5ca9ce826aadb9e2ed8583a981
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Sat Dec 30 01:05:03 2023 +0100

    arm64: dts: qcom: sc8180x: Hook up VDD_CX as GCC parent domain
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3c58b96df110a80e78fa36ef928f1e6c375008e3 ]
    
    Most of GCC is powered by the CX rail. Describe that relationship to
    let the performance state requests trickle up the chain.
    
    Fixes: 8575f197b077 ("arm64: dts: qcom: Introduce the SC8180x platform")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20231230-topic-8180_more_fixes-v1-2-93b5c107ed43@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b63665252b38d866b891fbc932883278badfe05e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3ad6eb08661a152e3205b37c2966a25a34f27606
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Mon Dec 18 15:50:50 2023 +0100

    arm64: dts: qcom: x1e80100: drop qcom,drv-count
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e81e86765f957f3c5d48df9e275c527bd8c14156 ]
    
    Property qcom,drv-count in the RSC node is not allowed and not used:
    
      x1e80100-crd.dtb: rsc@17500000: 'qcom,drv-count' does not match any of the regexes: '^regulators(-[0-9])?$', 'pinctrl-[0-9]+'
    
    Fixes: af16b00578a7 ("arm64: dts: qcom: Add base X1E80100 dtsi and the QCP dts")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20231218145050.66394-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 904a4c80aecb8da33953d509f94da3341d453123)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6893cd4b1e4f7fa471130cb4da1aa322a8f61840
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 15 12:03:03 2024 +0100

    ARM: dts: renesas: r8a73a4: Fix external clocks and clock rate
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 090c4094574705b0afc7d37825cdc5d06f0e7e02 ]
    
    External clocks should be defined as zero-Hz clocks in the SoC .dtsi,
    and overridden in the board .dts when present.
    
    Correct the clock rate of extal1 from 25 to 26 MHz, to match the crystal
    oscillator present on the APE6-EVM board.
    
    Fixes: a76809a329d6ebae ("ARM: shmobile: r8a73a4: Common clock framework DT description")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/1692bc8cd465d62168cbf110522ad62a7af3f606.1705315614.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ff15e20f20a32d7f7cd1b934e29d78d2e81dfdba)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5582d473ff4de82d6fcab89d2d837cb15a059f92
Author: Jinjie Ruan <ruanjinjie@huawei.com>
Date:   Sun Sep 3 11:02:15 2023 +0800

    wifi: mwifiex: debugfs: Drop unnecessary error check for debugfs_create_dir()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 50180c7f8e3de7c2d87f619131776598fcb1478d ]
    
    debugfs_create_dir() returns ERR_PTR and never return NULL.
    
    As Russell suggested, this patch removes the error checking for
    debugfs_create_dir(). This is because the DebugFS kernel API is developed
    in a way that the caller can safely ignore the errors that occur during
    the creation of DebugFS nodes. The debugfs APIs have a IS_ERR() judge in
    start_creating() which can handle it gracefully. So these checks are
    unnecessary.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Jinjie Ruan <ruanjinjie@huawei.com>
    Suggested-by: Russell King (Oracle) <linux@armlinux.org.uk>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20230903030216.1509013-3-ruanjinjie@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 913d18b9851f9d6fefd88d79d0ad3f1e57831b5f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e6fbe0374a19a0e3dc72e49de46bdf8a1f6ded54
Author: Ajay Singh <ajay.kathat@microchip.com>
Date:   Mon Jan 15 15:56:34 2024 +0100

    wifi: wilc1000: fix multi-vif management when deleting a vif
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 12cfc9c8d3faf887a202c89bc312202445fca7e8 ]
    
    Adding then removing a second vif currently makes the first vif not working
    anymore. This is visible for example when we have a first interface
    connected to some access point:
    - create a wpa_supplicant.conf with some AP credentials
    - wpa_supplicant -Dnl80211 -c /etc/wpa_supplicant.conf -i wlan0
    - dhclient wlan0
    - iw phy phy0 interface add wlan1 type managed
    - iw dev wlan1 del
    wlan0 does not manage properly traffic anymore (eg: ping not working)
    
    This is due to vif mode being incorrectly reconfigured with some default
    values in del_virtual_intf, affecting by default first vif.
    
    Prevent first vif from being affected on second vif removal by removing vif
    mode change command in del_virtual_intf
    
    Fixes: 9bc061e88054 ("staging: wilc1000: added support to dynamically add/remove interfaces")
    Signed-off-by: Ajay Singh <ajay.kathat@microchip.com>
    Co-developed-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240115-wilc_1000_fixes-v1-5-54d29463a738@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a3d05c7ddbfbbd955aae52128133c7d71cfe3cf3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 97216b9cb7436da7a652e082269063f4a2f51c9d
Author: Ajay Singh <ajay.kathat@microchip.com>
Date:   Mon Jan 15 15:56:32 2024 +0100

    wifi: wilc1000: do not realloc workqueue everytime an interface is added
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 328efda22af81130c2ad981c110518cb29ff2f1d ]
    
    Commit 09ed8bfc5215 ("wilc1000: Rename workqueue from "WILC_wq" to
    "NETDEV-wq"") moved workqueue creation in wilc_netdev_ifc_init in order to
    set the interface name in the workqueue name. However, while the driver
    needs only one workqueue, the wilc_netdev_ifc_init is called each time we
    add an interface over a phy, which in turns overwrite the workqueue with a
    new one. This can be observed with the following commands:
    
    for i in $(seq 0 10)
    do
      iw phy phy0 interface add wlan1 type managed
      iw dev wlan1 del
    done
    ps -eo pid,comm|grep wlan
    
     39 kworker/R-wlan0
     98 kworker/R-wlan1
    102 kworker/R-wlan1
    105 kworker/R-wlan1
    108 kworker/R-wlan1
    111 kworker/R-wlan1
    114 kworker/R-wlan1
    117 kworker/R-wlan1
    120 kworker/R-wlan1
    123 kworker/R-wlan1
    126 kworker/R-wlan1
    129 kworker/R-wlan1
    
    Fix this leakage by putting back hif_workqueue allocation in
    wilc_cfg80211_init. Regarding the workqueue name, it is indeed relevant to
    set it lowercase, however it is not  attached to a specific netdev, so
    enforcing netdev name in the name is not so relevant. Still, enrich the
    name with the wiphy name to make it clear which phy is using the workqueue.
    
    Fixes: 09ed8bfc5215 ("wilc1000: Rename workqueue from "WILC_wq" to "NETDEV-wq"")
    Signed-off-by: Ajay Singh <ajay.kathat@microchip.com>
    Co-developed-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240115-wilc_1000_fixes-v1-3-54d29463a738@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9ab0c303ccabfd6bdce14432792d41090070008c)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f84c76ac2aa6b24a74ddc3f1d71f83f9b32935d7
Author: Martin Kaistra <martin.kaistra@linutronix.de>
Date:   Thu Jan 11 17:36:27 2024 +0100

    wifi: rtl8xxxu: add cancel_work_sync() for c2hcmd_work
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1213acb478a7181cd73eeaf00db430f1e45b1361 ]
    
    The workqueue might still be running, when the driver is stopped. To
    avoid a use-after-free, call cancel_work_sync() in rtl8xxxu_stop().
    
    Fixes: e542e66b7c2e ("rtl8xxxu: add bluetooth co-existence support for single antenna")
    Signed-off-by: Martin Kaistra <martin.kaistra@linutronix.de>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240111163628.320697-2-martin.kaistra@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 58fe3bbddfec10c6b216096d8c0e517cd8463e3a)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5167dbe31c28aad490d684161374194af7ec49bb
Author: Baochen Qiang <quic_bqiang@quicinc.com>
Date:   Thu Jan 11 15:56:57 2024 +0200

    wifi: ath11k: fix a possible dead lock caused by ab->base_lock
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cf2df0080bd59cb97a1519ddefaf59788febdaa5 ]
    
    spin_lock()/spin_unlock() are used in ath11k_reg_chan_list_event() to
    acquire/release ab->base_lock. For now this is safe because that
    function is only called in soft IRQ context.
    
    But ath11k_reg_chan_list_event() will be called from process
    context in an upcoming patch, and this can result in a deadlock if
    ab->base_lock is acquired in process context and then soft IRQ occurs
    on the same CPU and tries to acquire that lock.
    
    Fix it by using spin_lock_bh() and spin_unlock_bh() instead.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.23
    
    Fixes: 69a0fcf8a9f2 ("ath11k: Avoid reg rules update during firmware recovery")
    Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20231218085844.2658-4-quic_bqiang@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9c68e3497b61f3ab849abe581f2712ab77c3c918)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fe32bcf29a7ff265caf6826b9dba364f07333274
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Thu Jan 11 15:56:57 2024 +0200

    wifi: ath11k: store cur_regulatory_info for each radio
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7004bdceef605e5c1c5ab4aaf282002ad7523ddd ]
    
    The regulatory info of WMI_REG_CHAN_LIST_CC_EXT_EVENTID is not saved
    in ath11k now, the info should be saved in ath11k. Save the info for
    each radio and support switch regulatory rules dynamically.
    
    As mac.c will also call ath11k_reg_handle_chan_list() in next patches move the
    function to reg.c.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.23
    
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20231218085844.2658-3-quic_bqiang@quicinc.com
    Stable-dep-of: cf2df0080bd5 ("wifi: ath11k: fix a possible dead lock caused by ab->base_lock")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c810a4d01f3ea6ce636c98fa4b7554ce495c9cfc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ca4674e8bbb3efaa991558e5db612ce741325da3
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Thu Jan 11 15:56:57 2024 +0200

    wifi: ath11k: add support to select 6 GHz regulatory type
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e3d373ec4f02bf41379d91707e3e3f2a46464cd7 ]
    
    There are 3 types of regulatory rules for AP mode and 6 type for
    station mode. Add wmi_vdev_type and ieee80211_ap_reg_power to
    select the exact reg rules.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.23
    
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20231218085844.2658-2-quic_bqiang@quicinc.com
    Stable-dep-of: cf2df0080bd5 ("wifi: ath11k: fix a possible dead lock caused by ab->base_lock")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 42ce6bb4da647a62f39a3c7041129520a71489f4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4f18b200962ec3a1b25b334ff70196d646a7600f
Author: Alexis Lothoré <alexis.lothore@bootlin.com>
Date:   Fri Jan 5 08:57:33 2024 +0100

    wifi: wilc1000: fix RCU usage in connect path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 205c50306acf58a335eb19fa84e40140f4fe814f ]
    
    With lockdep enabled, calls to the connect function from cfg802.11 layer
    lead to the following warning:
    
    =============================
    WARNING: suspicious RCU usage
    6.7.0-rc1-wt+ #333 Not tainted
    -----------------------------
    drivers/net/wireless/microchip/wilc1000/hif.c:386
    suspicious rcu_dereference_check() usage!
    [...]
    stack backtrace:
    CPU: 0 PID: 100 Comm: wpa_supplicant Not tainted 6.7.0-rc1-wt+ #333
    Hardware name: Atmel SAMA5
     unwind_backtrace from show_stack+0x18/0x1c
     show_stack from dump_stack_lvl+0x34/0x48
     dump_stack_lvl from wilc_parse_join_bss_param+0x7dc/0x7f4
     wilc_parse_join_bss_param from connect+0x2c4/0x648
     connect from cfg80211_connect+0x30c/0xb74
     cfg80211_connect from nl80211_connect+0x860/0xa94
     nl80211_connect from genl_rcv_msg+0x3fc/0x59c
     genl_rcv_msg from netlink_rcv_skb+0xd0/0x1f8
     netlink_rcv_skb from genl_rcv+0x2c/0x3c
     genl_rcv from netlink_unicast+0x3b0/0x550
     netlink_unicast from netlink_sendmsg+0x368/0x688
     netlink_sendmsg from ____sys_sendmsg+0x190/0x430
     ____sys_sendmsg from ___sys_sendmsg+0x110/0x158
     ___sys_sendmsg from sys_sendmsg+0xe8/0x150
     sys_sendmsg from ret_fast_syscall+0x0/0x1c
    
    This warning is emitted because in the connect path, when trying to parse
    target BSS parameters, we dereference a RCU pointer whithout being in RCU
    critical section.
    Fix RCU dereference usage by moving it to a RCU read critical section. To
    avoid wrapping the whole wilc_parse_join_bss_param under the critical
    section, just use the critical section to copy ies data
    
    Fixes: c460495ee072 ("staging: wilc1000: fix incorrent type in initializer")
    Signed-off-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240105075733.36331-3-alexis.lothore@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit dd50d3ead6e3707bb0a5df7cc832730c93ace3a7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d1ee4c75a8c44f7616f39c3f1ab5037ee431fea7
Author: Alexis Lothoré <alexis.lothore@bootlin.com>
Date:   Fri Jan 5 08:57:32 2024 +0100

    wifi: wilc1000: fix declarations ordering
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 535733e90e5d8912ebeccebb05b354a2d06ff459 ]
    
    Reorder parameters declaration in wilc_parse_join_bss_param to enforce
    reverse christmas tree
    
    Signed-off-by: Alexis Lothoré <alexis.lothore@bootlin.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20240105075733.36331-2-alexis.lothore@bootlin.com
    Stable-dep-of: 205c50306acf ("wifi: wilc1000: fix RCU usage in connect path")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 2d9ab4cc795ca1c80f6799f1961a89b1e1749ccf)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d5d1c0c9feed2052fdec84b2f614bc09b9c32240
Author: Rahul Rameshbabu <sergeantsagara@protonmail.com>
Date:   Sun Dec 31 05:03:58 2023 +0000

    wifi: b43: Disable QoS for bcm4331
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 09795bded2e725443fe4a4803cae2079cdaf7b26 ]
    
    bcm4331 seems to not function correctly with QoS support. This may be due
    to issues with currently available firmware or potentially a device
    specific issue.
    
    When queues that are not of the default "best effort" priority are
    selected, traffic appears to not transmit out of the hardware while no
    errors are returned. This behavior is present among all the other priority
    queues: video, voice, and background. While this can be worked around by
    setting a kernel parameter, the default behavior is problematic for most
    users and may be difficult to debug. This patch offers a working out-of-box
    experience for bcm4331 users.
    
    Log of the issue (using ssh low-priority traffic as an example):
        ssh -T -vvvv git@github.com
        OpenSSH_9.6p1, OpenSSL 3.0.12 24 Oct 2023
        debug1: Reading configuration data /etc/ssh/ssh_config
        debug2: checking match for 'host * exec "/nix/store/q1c2flcykgr4wwg5a6h450hxbk4ch589-bash-5.2-p15/bin/bash -c '/nix/store/c015armnkhr6v18za0rypm7sh1i8js8w-gnupg-2.4.1/bin/gpg-connect-agent --quiet updatestartuptty /bye >/dev/null 2>&1'"' host github.com originally github.com
        debug3: /etc/ssh/ssh_config line 5: matched 'host "github.com"'
        debug1: Executing command: '/nix/store/q1c2flcykgr4wwg5a6h450hxbk4ch589-bash-5.2-p15/bin/bash -c '/nix/store/c015armnkhr6v18za0rypm7sh1i8js8w-gnupg-2.4.1/bin/gpg-connect-agent --quiet updatestartuptty /bye >/dev/null 2>&1''
        debug3: command returned status 0
        debug3: /etc/ssh/ssh_config line 5: matched 'exec "/nix/store/q1c2flcykgr4wwg5a6h450hxbk4ch589-bash-5.2-p15/bin/bash -c '/nix/store/c015armnkhr6v18za0r"'
        debug2: match found
        debug1: /etc/ssh/ssh_config line 9: Applying options for *
        debug3: expanded UserKnownHostsFile '~/.ssh/known_hosts' -> '/home/binary-eater/.ssh/known_hosts'
        debug3: expanded UserKnownHostsFile '~/.ssh/known_hosts2' -> '/home/binary-eater/.ssh/known_hosts2'
        debug2: resolving "github.com" port 22
        debug3: resolve_host: lookup github.com:22
        debug3: channel_clear_timeouts: clearing
        debug3: ssh_connect_direct: entering
        debug1: Connecting to github.com [192.30.255.113] port 22.
        debug3: set_sock_tos: set socket 3 IP_TOS 0x48
    
    Fixes: e6f5b934fba8 ("b43: Add QOS support")
    Signed-off-by: Rahul Rameshbabu <sergeantsagara@protonmail.com>
    Reviewed-by: Julian Calaby <julian.calaby@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20231231050300.122806-5-sergeantsagara@protonmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f9e6abc6711d99a6118ed908f80302ebfb0bad2e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bd49bdc8f8a94367b06b4b66620f988789678a88
Author: Rahul Rameshbabu <sergeantsagara@protonmail.com>
Date:   Sun Dec 31 05:03:51 2023 +0000

    wifi: b43: Stop correct queue in DMA worker when QoS is disabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 581c8967d66c4961076dbbee356834e9c6777184 ]
    
    When QoS is disabled, the queue priority value will not map to the correct
    ieee80211 queue since there is only one queue. Stop queue 0 when QoS is
    disabled to prevent trying to stop a non-existent queue and failing to stop
    the actual queue instantiated.
    
    Fixes: bad691946966 ("b43: avoid packet losses in the dma worker code.")
    Signed-off-by: Rahul Rameshbabu <sergeantsagara@protonmail.com>
    Reviewed-by: Julian Calaby <julian.calaby@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20231231050300.122806-4-sergeantsagara@protonmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 01850745fb3d3971b1c59e24130e7c7d07abb379)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2da5fdf03662eaec69bac622e4e4deff74d9aa6b
Author: Rahul Rameshbabu <sergeantsagara@protonmail.com>
Date:   Sun Dec 31 05:03:45 2023 +0000

    wifi: b43: Stop/wake correct queue in PIO Tx path when QoS is disabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 77135a38f6c2f950d2306ac3d37cbb407e6243f2 ]
    
    When QoS is disabled, the queue priority value will not map to the correct
    ieee80211 queue since there is only one queue. Stop/wake queue 0 when QoS
    is disabled to prevent trying to stop/wake a non-existent queue and failing
    to stop/wake the actual queue instantiated.
    
    Fixes: 5100d5ac81b9 ("b43: Add PIO support for PCMCIA devices")
    Signed-off-by: Rahul Rameshbabu <sergeantsagara@protonmail.com>
    Reviewed-by: Julian Calaby <julian.calaby@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20231231050300.122806-3-sergeantsagara@protonmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3de838ac7ddcdb1bd80404bb4aab6da32df46ec2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1658d040e02d390bd7e793e45a86de7f9e322188
Author: Rahul Rameshbabu <sergeantsagara@protonmail.com>
Date:   Sun Dec 31 05:03:33 2023 +0000

    wifi: b43: Stop/wake correct queue in DMA Tx path when QoS is disabled
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9636951e4468f02c72cc75a82dc65d003077edbc ]
    
    When QoS is disabled, the queue priority value will not map to the correct
    ieee80211 queue since there is only one queue. Stop/wake queue 0 when QoS
    is disabled to prevent trying to stop/wake a non-existent queue and failing
    to stop/wake the actual queue instantiated.
    
    Log of issue before change (with kernel parameter qos=0):
        [  +5.112651] ------------[ cut here ]------------
        [  +0.000005] WARNING: CPU: 7 PID: 25513 at net/mac80211/util.c:449 __ieee80211_wake_queue+0xd5/0x180 [mac80211]
        [  +0.000067] Modules linked in: b43(O) snd_seq_dummy snd_hrtimer snd_seq snd_seq_device nft_chain_nat xt_MASQUERADE nf_nat xfrm_user xfrm_algo xt_addrtype overlay ccm af_packet amdgpu snd_hda_codec_cirrus snd_hda_codec_generic ledtrig_audio drm_exec amdxcp gpu_sched xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip6t_rpfilter ipt_rpfilter xt_pkttype xt_LOG nf_log_syslog xt_tcpudp nft_compat nf_tables nfnetlink sch_fq_codel btusb uinput iTCO_wdt ctr btrtl intel_pmc_bxt i915 intel_rapl_msr mei_hdcp mei_pxp joydev at24 watchdog btintel atkbd libps2 serio radeon btbcm vivaldi_fmap btmtk intel_rapl_common snd_hda_codec_hdmi bluetooth uvcvideo nls_iso8859_1 applesmc nls_cp437 x86_pkg_temp_thermal snd_hda_intel intel_powerclamp vfat videobuf2_vmalloc coretemp fat snd_intel_dspcfg crc32_pclmul uvc polyval_clmulni snd_intel_sdw_acpi loop videobuf2_memops snd_hda_codec tun drm_suballoc_helper polyval_generic drm_ttm_helper drm_buddy tap ecdh_generic videobuf2_v4l2 gf128mul macvlan ttm ghash_clmulni_intel ecc tg3
        [  +0.000044]  videodev bridge snd_hda_core rapl crc16 drm_display_helper cec mousedev snd_hwdep evdev intel_cstate bcm5974 hid_appleir videobuf2_common stp mac_hid libphy snd_pcm drm_kms_helper acpi_als mei_me intel_uncore llc mc snd_timer intel_gtt industrialio_triggered_buffer apple_mfi_fastcharge i2c_i801 mei snd lpc_ich agpgart ptp i2c_smbus thunderbolt apple_gmux i2c_algo_bit kfifo_buf video industrialio soundcore pps_core wmi tiny_power_button sbs sbshc button ac cordic bcma mac80211 cfg80211 ssb rfkill libarc4 kvm_intel kvm drm irqbypass fuse backlight firmware_class efi_pstore configfs efivarfs dmi_sysfs ip_tables x_tables autofs4 dm_crypt cbc encrypted_keys trusted asn1_encoder tee tpm rng_core input_leds hid_apple led_class hid_generic usbhid hid sd_mod t10_pi crc64_rocksoft crc64 crc_t10dif crct10dif_generic ahci libahci libata uhci_hcd ehci_pci ehci_hcd crct10dif_pclmul crct10dif_common sha512_ssse3 sha512_generic sha256_ssse3 sha1_ssse3 aesni_intel usbcore scsi_mod libaes crypto_simd cryptd scsi_common
        [  +0.000055]  usb_common rtc_cmos btrfs blake2b_generic libcrc32c crc32c_generic crc32c_intel xor raid6_pq dm_snapshot dm_bufio dm_mod dax [last unloaded: b43(O)]
        [  +0.000009] CPU: 7 PID: 25513 Comm: irq/17-b43 Tainted: G        W  O       6.6.7 #1-NixOS
        [  +0.000003] Hardware name: Apple Inc. MacBookPro8,3/Mac-942459F5819B171B, BIOS 87.0.0.0.0 06/13/2019
        [  +0.000001] RIP: 0010:__ieee80211_wake_queue+0xd5/0x180 [mac80211]
        [  +0.000046] Code: 00 45 85 e4 0f 85 9b 00 00 00 48 8d bd 40 09 00 00 f0 48 0f ba ad 48 09 00 00 00 72 0f 5b 5d 41 5c 41 5d 41 5e e9 cb 6d 3c d0 <0f> 0b 5b 5d 41 5c 41 5d 41 5e c3 cc cc cc cc 48 8d b4 16 94 00 00
        [  +0.000002] RSP: 0018:ffffc90003c77d60 EFLAGS: 00010097
        [  +0.000001] RAX: 0000000000000001 RBX: 0000000000000002 RCX: 0000000000000000
        [  +0.000001] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff88820b924900
        [  +0.000002] RBP: ffff88820b924900 R08: ffffc90003c77d90 R09: 000000000003bfd0
        [  +0.000001] R10: ffff88820b924900 R11: ffffc90003c77c68 R12: 0000000000000000
        [  +0.000001] R13: 0000000000000000 R14: ffffc90003c77d90 R15: ffffffffc0fa6f40
        [  +0.000001] FS:  0000000000000000(0000) GS:ffff88846fb80000(0000) knlGS:0000000000000000
        [  +0.000001] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        [  +0.000001] CR2: 00007fafda7ae008 CR3: 000000046d220005 CR4: 00000000000606e0
        [  +0.000002] Call Trace:
        [  +0.000003]  <TASK>
        [  +0.000001]  ? __ieee80211_wake_queue+0xd5/0x180 [mac80211]
        [  +0.000044]  ? __warn+0x81/0x130
        [  +0.000005]  ? __ieee80211_wake_queue+0xd5/0x180 [mac80211]
        [  +0.000045]  ? report_bug+0x171/0x1a0
        [  +0.000004]  ? handle_bug+0x41/0x70
        [  +0.000004]  ? exc_invalid_op+0x17/0x70
        [  +0.000003]  ? asm_exc_invalid_op+0x1a/0x20
        [  +0.000005]  ? __ieee80211_wake_queue+0xd5/0x180 [mac80211]
        [  +0.000043]  ieee80211_wake_queue+0x4a/0x80 [mac80211]
        [  +0.000044]  b43_dma_handle_txstatus+0x29c/0x3a0 [b43]
        [  +0.000016]  ? __pfx_irq_thread_fn+0x10/0x10
        [  +0.000002]  b43_handle_txstatus+0x61/0x80 [b43]
        [  +0.000012]  b43_interrupt_thread_handler+0x3f9/0x6b0 [b43]
        [  +0.000011]  irq_thread_fn+0x23/0x60
        [  +0.000002]  irq_thread+0xfe/0x1c0
        [  +0.000002]  ? __pfx_irq_thread_dtor+0x10/0x10
        [  +0.000001]  ? __pfx_irq_thread+0x10/0x10
        [  +0.000001]  kthread+0xe8/0x120
        [  +0.000003]  ? __pfx_kthread+0x10/0x10
        [  +0.000003]  ret_from_fork+0x34/0x50
        [  +0.000002]  ? __pfx_kthread+0x10/0x10
        [  +0.000002]  ret_from_fork_asm+0x1b/0x30
        [  +0.000004]  </TASK>
        [  +0.000001] ---[ end trace 0000000000000000 ]---
    
        [  +0.000065] ------------[ cut here ]------------
        [  +0.000001] WARNING: CPU: 0 PID: 56077 at net/mac80211/util.c:514 __ieee80211_stop_queue+0xcc/0xe0 [mac80211]
        [  +0.000077] Modules linked in: b43(O) snd_seq_dummy snd_hrtimer snd_seq snd_seq_device nft_chain_nat xt_MASQUERADE nf_nat xfrm_user xfrm_algo xt_addrtype overlay ccm af_packet amdgpu snd_hda_codec_cirrus snd_hda_codec_generic ledtrig_audio drm_exec amdxcp gpu_sched xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip6t_rpfilter ipt_rpfilter xt_pkttype xt_LOG nf_log_syslog xt_tcpudp nft_compat nf_tables nfnetlink sch_fq_codel btusb uinput iTCO_wdt ctr btrtl intel_pmc_bxt i915 intel_rapl_msr mei_hdcp mei_pxp joydev at24 watchdog btintel atkbd libps2 serio radeon btbcm vivaldi_fmap btmtk intel_rapl_common snd_hda_codec_hdmi bluetooth uvcvideo nls_iso8859_1 applesmc nls_cp437 x86_pkg_temp_thermal snd_hda_intel intel_powerclamp vfat videobuf2_vmalloc coretemp fat snd_intel_dspcfg crc32_pclmul uvc polyval_clmulni snd_intel_sdw_acpi loop videobuf2_memops snd_hda_codec tun drm_suballoc_helper polyval_generic drm_ttm_helper drm_buddy tap ecdh_generic videobuf2_v4l2 gf128mul macvlan ttm ghash_clmulni_intel ecc tg3
        [  +0.000073]  videodev bridge snd_hda_core rapl crc16 drm_display_helper cec mousedev snd_hwdep evdev intel_cstate bcm5974 hid_appleir videobuf2_common stp mac_hid libphy snd_pcm drm_kms_helper acpi_als mei_me intel_uncore llc mc snd_timer intel_gtt industrialio_triggered_buffer apple_mfi_fastcharge i2c_i801 mei snd lpc_ich agpgart ptp i2c_smbus thunderbolt apple_gmux i2c_algo_bit kfifo_buf video industrialio soundcore pps_core wmi tiny_power_button sbs sbshc button ac cordic bcma mac80211 cfg80211 ssb rfkill libarc4 kvm_intel kvm drm irqbypass fuse backlight firmware_class efi_pstore configfs efivarfs dmi_sysfs ip_tables x_tables autofs4 dm_crypt cbc encrypted_keys trusted asn1_encoder tee tpm rng_core input_leds hid_apple led_class hid_generic usbhid hid sd_mod t10_pi crc64_rocksoft crc64 crc_t10dif crct10dif_generic ahci libahci libata uhci_hcd ehci_pci ehci_hcd crct10dif_pclmul crct10dif_common sha512_ssse3 sha512_generic sha256_ssse3 sha1_ssse3 aesni_intel usbcore scsi_mod libaes crypto_simd cryptd scsi_common
        [  +0.000084]  usb_common rtc_cmos btrfs blake2b_generic libcrc32c crc32c_generic crc32c_intel xor raid6_pq dm_snapshot dm_bufio dm_mod dax [last unloaded: b43]
        [  +0.000012] CPU: 0 PID: 56077 Comm: kworker/u16:17 Tainted: G        W  O       6.6.7 #1-NixOS
        [  +0.000003] Hardware name: Apple Inc. MacBookPro8,3/Mac-942459F5819B171B, BIOS 87.0.0.0.0 06/13/2019
        [  +0.000001] Workqueue: phy7 b43_tx_work [b43]
        [  +0.000019] RIP: 0010:__ieee80211_stop_queue+0xcc/0xe0 [mac80211]
        [  +0.000076] Code: 74 11 48 8b 78 08 0f b7 d6 89 e9 4c 89 e6 e8 ab f4 00 00 65 ff 0d 9c b7 34 3f 0f 85 55 ff ff ff 0f 1f 44 00 00 e9 4b ff ff ff <0f> 0b 5b 5d 41 5c 41 5d c3 cc cc cc cc 0f 1f 80 00 00 00 00 90 90
        [  +0.000002] RSP: 0000:ffffc90004157d50 EFLAGS: 00010097
        [  +0.000002] RAX: 0000000000000001 RBX: 0000000000000002 RCX: 0000000000000000
        [  +0.000002] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff8882d65d0900
        [  +0.000002] RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000001
        [  +0.000001] R10: 00000000000000ff R11: ffff88814d0155a0 R12: ffff8882d65d0900
        [  +0.000002] R13: 0000000000000000 R14: ffff8881002d2800 R15: 00000000000000d0
        [  +0.000002] FS:  0000000000000000(0000) GS:ffff88846f800000(0000) knlGS:0000000000000000
        [  +0.000003] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        [  +0.000002] CR2: 00007f2e8c10c880 CR3: 0000000385b66005 CR4: 00000000000606f0
        [  +0.000002] Call Trace:
        [  +0.000001]  <TASK>
        [  +0.000001]  ? __ieee80211_stop_queue+0xcc/0xe0 [mac80211]
        [  +0.000075]  ? __warn+0x81/0x130
        [  +0.000004]  ? __ieee80211_stop_queue+0xcc/0xe0 [mac80211]
        [  +0.000075]  ? report_bug+0x171/0x1a0
        [  +0.000005]  ? handle_bug+0x41/0x70
        [  +0.000003]  ? exc_invalid_op+0x17/0x70
        [  +0.000004]  ? asm_exc_invalid_op+0x1a/0x20
        [  +0.000004]  ? __ieee80211_stop_queue+0xcc/0xe0 [mac80211]
        [  +0.000076]  ieee80211_stop_queue+0x36/0x50 [mac80211]
        [  +0.000077]  b43_dma_tx+0x550/0x780 [b43]
        [  +0.000023]  b43_tx_work+0x90/0x130 [b43]
        [  +0.000018]  process_one_work+0x174/0x340
        [  +0.000003]  worker_thread+0x27b/0x3a0
        [  +0.000004]  ? __pfx_worker_thread+0x10/0x10
        [  +0.000002]  kthread+0xe8/0x120
        [  +0.000003]  ? __pfx_kthread+0x10/0x10
        [  +0.000004]  ret_from_fork+0x34/0x50
        [  +0.000002]  ? __pfx_kthread+0x10/0x10
        [  +0.000003]  ret_from_fork_asm+0x1b/0x30
        [  +0.000006]  </TASK>
        [  +0.000001] ---[ end trace 0000000000000000 ]---
    
    Fixes: e6f5b934fba8 ("b43: Add QOS support")
    Signed-off-by: Rahul Rameshbabu <sergeantsagara@protonmail.com>
    Reviewed-by: Julian Calaby <julian.calaby@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://msgid.link/20231231050300.122806-2-sergeantsagara@protonmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f1cf77bb870046a6111a604f7f7fe83d1c8c9610)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7d4ebd8efe56c7da9149c1d46b4c1b1f63f5a1df
Author: Xingyuan Mo <hdthky0@gmail.com>
Date:   Sun Dec 17 13:29:01 2023 +0200

    wifi: ath10k: fix NULL pointer dereference in ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ad25ee36f00172f7d53242dc77c69fff7ced0755 ]
    
    We should check whether the WMI_TLV_TAG_STRUCT_MGMT_TX_COMPL_EVENT tlv is
    present before accessing it, otherwise a null pointer deference error will
    occur.
    
    Fixes: dc405152bb64 ("ath10k: handle mgmt tx completion event")
    Signed-off-by: Xingyuan Mo <hdthky0@gmail.com>
    Acked-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://msgid.link/20231208043433.271449-1-hdthky0@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 835c5d37f4b0ba99e9ec285ffa645bc532714191)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 94da95b389b1129c6dd1071eca5f6b85661e301b
Author: Keisuke Nishimura <keisuke.nishimura@inria.fr>
Date:   Wed Jan 10 14:17:07 2024 +0100

    sched/fair: Take the scheduling domain into account in select_idle_core()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 23d04d8c6b8ec339057264659b7834027f3e6a63 ]
    
    When picking a CPU on task wakeup, select_idle_core() has to take
    into account the scheduling domain where the function looks for the CPU.
    
    This is because the "isolcpus" kernel command line option can remove CPUs
    from the domain to isolate them from other SMT siblings.
    
    This change replaces the set of CPUs allowed to run the task from
    p->cpus_ptr by the intersection of p->cpus_ptr and sched_domain_span(sd)
    which is stored in the 'cpus' argument provided by select_idle_cpu().
    
    Fixes: 9fe1f127b913 ("sched/fair: Merge select_idle_core/cpu()")
    Signed-off-by: Keisuke Nishimura <keisuke.nishimura@inria.fr>
    Signed-off-by: Julia Lawall <julia.lawall@inria.fr>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20240110131707.437301-2-keisuke.nishimura@inria.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5245005d69deea05fb230815dbb36effae18c2f9)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ac4ea2c4e286909bf984282e9ad0ca4af650b59e
Author: Keisuke Nishimura <keisuke.nishimura@inria.fr>
Date:   Wed Jan 10 14:17:06 2024 +0100

    sched/fair: Take the scheduling domain into account in select_idle_smt()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8aeaffef8c6eceab0e1498486fdd4f3dc3b7066c ]
    
    When picking a CPU on task wakeup, select_idle_smt() has to take
    into account the scheduling domain of @target. This is because the
    "isolcpus" kernel command line option can remove CPUs from the domain to
    isolate them from other SMT siblings.
    
    This fix checks if the candidate CPU is in the target scheduling domain.
    
    Commit:
    
      df3cb4ea1fb6 ("sched/fair: Fix wrong cpu selecting from isolated domain")
    
    ... originally introduced this fix by adding the check of the scheduling
    domain in the loop.
    
    However, commit:
    
      3e6efe87cd5cc ("sched/fair: Remove redundant check in select_idle_smt()")
    
    ... accidentally removed the check. Bring it back.
    
    Fixes: 3e6efe87cd5c ("sched/fair: Remove redundant check in select_idle_smt()")
    Signed-off-by: Keisuke Nishimura <keisuke.nishimura@inria.fr>
    Signed-off-by: Julia Lawall <julia.lawall@inria.fr>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lore.kernel.org/r/20240110131707.437301-1-keisuke.nishimura@inria.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9897b7432572f2faa5440d2a2922822a8819fee2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cac0e1209e2221ddad8981f295c286f074076047
Author: Kai Huang <kai.huang@intel.com>
Date:   Fri Jan 26 15:38:52 2024 +1300

    x86/asm: Remove the __iomem annotation of movdir64b()'s dst argument
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5bdd181821b2c65b074cfad07d7c7d5d3cfe20bf ]
    
    Commit e56d28df2f66 ("x86/virt/tdx: Configure global KeyID on all
    packages") causes a sparse warning:
    
      arch/x86/virt/vmx/tdx/tdx.c:683:27: warning: incorrect type in argument 1 (different address spaces)
      arch/x86/virt/vmx/tdx/tdx.c:683:27:    expected void [noderef] __iomem *dst
      arch/x86/virt/vmx/tdx/tdx.c:683:27:    got void *
    
    The reason is TDX must use the MOVDIR64B instruction to convert TDX
    private memory (which is normal RAM but not MMIO) back to normal.  The
    TDX code uses existing movdir64b() helper to do that, but the first
    argument @dst of movdir64b() is annotated with __iomem.
    
    When movdir64b() was firstly introduced in commit 0888e1030d3e
    ("x86/asm: Carve out a generic movdir64b() helper for general usage"),
    it didn't have the __iomem annotation.  But this commit also introduced
    the same "incorrect type" sparse warning because the iosubmit_cmds512(),
    which was the solo caller of movdir64b(), has the __iomem annotation.
    
    This was later fixed by commit 6ae58d871319 ("x86/asm: Annotate
    movdir64b()'s dst argument with __iomem").  That fix was reasonable
    because until TDX code the movdir64b() was only used to move data to
    MMIO location, as described by the commit message:
    
      ... The current usages send a 64-bytes command descriptor to an MMIO
      location (portal) on a device for consumption. When future usages for
      the MOVDIR64B instruction warrant a separate variant of a memory to
      memory operation, the argument annotation can be revisited.
    
    Now TDX code uses MOVDIR64B to move data to normal memory so it's time
    to revisit.
    
    The SDM says the destination of MOVDIR64B is "memory location specified
    in a general register", thus it's more reasonable that movdir64b() does
    not have the __iomem annotation on the @dst.
    
    Remove the __iomem annotation from the @dst argument of movdir64b() to
    fix the sparse warning in TDX code.  Similar to memset_io(), introduce a
    new movdir64b_io() to cover the case where the destination is an MMIO
    location, and change the solo caller iosubmit_cmds512() to use the new
    movdir64b_io().
    
    In movdir64b_io() explicitly use __force in the type casting otherwise
    there will be below sparse warning:
    
      warning: cast removes address space '__iomem' of expression
    
    [ dhansen: normal changelog tweaks ]
    
    Closes: https://lore.kernel.org/oe-kbuild-all/202312311924.tGjsBIQD-lkp@intel.com/
    Fixes: e56d28df2f66 ("x86/virt/tdx: Configure global KeyID on all packages")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Kai Huang <kai.huang@intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Reviewed-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reviewed-by: Yuan Yao <yuan.yao@intel.com>
    Link: https://lore.kernel.org/all/20240126023852.11065-1-kai.huang%40intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4bb7cb4990e705e2fe3b1f40f48b390b5e5cf693)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0daf8be84c11f863e3d1fecaab1f0d37916ba50c
Author: Peter Hilber <peter.hilber@opensynergy.com>
Date:   Mon Dec 18 08:38:41 2023 +0100

    timekeeping: Fix cross-timestamp interpolation for non-x86
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 14274d0bd31b4debf28284604589f596ad2e99f2 ]
    
    So far, get_device_system_crosststamp() unconditionally passes
    system_counterval.cycles to timekeeping_cycles_to_ns(). But when
    interpolating system time (do_interp == true), system_counterval.cycles is
    before tkr_mono.cycle_last, contrary to the timekeeping_cycles_to_ns()
    expectations.
    
    On x86, CONFIG_CLOCKSOURCE_VALIDATE_LAST_CYCLE will mitigate on
    interpolating, setting delta to 0. With delta == 0, xtstamp->sys_monoraw
    and xtstamp->sys_realtime are then set to the last update time, as
    implicitly expected by adjust_historical_crosststamp(). On other
    architectures, the resulting nonsense xtstamp->sys_monoraw and
    xtstamp->sys_realtime corrupt the xtstamp (ts) adjustment in
    adjust_historical_crosststamp().
    
    Fix this by deriving xtstamp->sys_monoraw and xtstamp->sys_realtime from
    the last update time when interpolating, by using the local variable
    "cycles". The local variable already has the right value when
    interpolating, unlike system_counterval.cycles.
    
    Fixes: 2c756feb18d9 ("time: Add history to cross timestamp interface supporting slower devices")
    Signed-off-by: Peter Hilber <peter.hilber@opensynergy.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: John Stultz <jstultz@google.com>
    Link: https://lore.kernel.org/r/20231218073849.35294-4-peter.hilber@opensynergy.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0ad013a43e566460764456c5edf955aafbae7efb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 296680b86a54f6fc7dcbe053af8201254a38fc46
Author: Peter Hilber <peter.hilber@opensynergy.com>
Date:   Mon Dec 18 08:38:40 2023 +0100

    timekeeping: Fix cross-timestamp interpolation corner case decision
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 87a41130881995f82f7adbafbfeddaebfb35f0ef ]
    
    The cycle_between() helper checks if parameter test is in the open interval
    (before, after). Colloquially speaking, this also applies to the counter
    wrap-around special case before > after. get_device_system_crosststamp()
    currently uses cycle_between() at the first call site to decide whether to
    interpolate for older counter readings.
    
    get_device_system_crosststamp() has the following problem with
    cycle_between() testing against an open interval: Assume that, by chance,
    cycles == tk->tkr_mono.cycle_last (in the following, "cycle_last" for
    brevity). Then, cycle_between() at the first call site, with effective
    argument values cycle_between(cycle_last, cycles, now), returns false,
    enabling interpolation. During interpolation,
    get_device_system_crosststamp() will then call cycle_between() at the
    second call site (if a history_begin was supplied). The effective argument
    values are cycle_between(history_begin->cycles, cycles, cycles), since
    system_counterval.cycles == interval_start == cycles, per the assumption.
    Due to the test against the open interval, cycle_between() returns false
    again. This causes get_device_system_crosststamp() to return -EINVAL.
    
    This failure should be avoided, since get_device_system_crosststamp() works
    both when cycles follows cycle_last (no interpolation), and when cycles
    precedes cycle_last (interpolation). For the case cycles == cycle_last,
    interpolation is actually unneeded.
    
    Fix this by changing cycle_between() into timestamp_in_interval(), which
    now checks against the closed interval, rather than the open interval.
    
    This changes the get_device_system_crosststamp() behavior for three corner
    cases:
    
    1. Bypass interpolation in the case cycles == tk->tkr_mono.cycle_last,
       fixing the problem described above.
    
    2. At the first timestamp_in_interval() call site, cycles == now no longer
       causes failure.
    
    3. At the second timestamp_in_interval() call site, history_begin->cycles
       == system_counterval.cycles no longer causes failure.
       adjust_historical_crosststamp() also works for this corner case,
       where partial_history_cycles == total_history_cycles.
    
    These behavioral changes should not cause any problems.
    
    Fixes: 2c756feb18d9 ("time: Add history to cross timestamp interface supporting slower devices")
    Signed-off-by: Peter Hilber <peter.hilber@opensynergy.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20231218073849.35294-3-peter.hilber@opensynergy.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8019a2d5b0e4d1401f9e5e6bcab1e8a88dfe9e4f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a49ca4910af0a0d78d272768ee67543b18dbe267
Author: Peter Hilber <peter.hilber@opensynergy.com>
Date:   Mon Dec 18 08:38:39 2023 +0100

    timekeeping: Fix cross-timestamp interpolation on counter wrap
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 84dccadd3e2a3f1a373826ad71e5ced5e76b0c00 ]
    
    cycle_between() decides whether get_device_system_crosststamp() will
    interpolate for older counter readings.
    
    cycle_between() yields wrong results for a counter wrap-around where after
    < before < test, and for the case after < test < before.
    
    Fix the comparison logic.
    
    Fixes: 2c756feb18d9 ("time: Add history to cross timestamp interface supporting slower devices")
    Signed-off-by: Peter Hilber <peter.hilber@opensynergy.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: John Stultz <jstultz@google.com>
    Link: https://lore.kernel.org/r/20231218073849.35294-2-peter.hilber@opensynergy.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 82e06a7635fec687985ebead5b7181d26678265e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0f5485129745cd415b168af1db1b04e39095f5ba
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Jan 26 17:39:19 2024 +0100

    x86/sme: Fix memory encryption setting if enabled by default and not overridden
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e814b59e6c2b11f5a3d007b2e61f7d550c354c3a ]
    
    Commit
    
      cbebd68f59f0 ("x86/mm: Fix use of uninitialized buffer in sme_enable()")
    
    'fixed' an issue in sme_enable() detected by static analysis, and broke
    the common case in the process.
    
    cmdline_find_option() will return < 0 on an error, or when the command
    line argument does not appear at all. In this particular case, the
    latter is not an error condition, and so the early exit is wrong.
    
    Instead, without mem_encrypt= on the command line, the compile time
    default should be honoured, which could be to enable memory encryption,
    and this is currently broken.
    
    Fix it by setting sme_me_mask to a preliminary value based on the
    compile time default, and only omitting the command line argument test
    when cmdline_find_option() returns an error.
    
      [ bp: Drop active_by_default while at it. ]
    
    Fixes: cbebd68f59f0 ("x86/mm: Fix use of uninitialized buffer in sme_enable()")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Tom Lendacky <thomas.lendacky@amd.com>
    Link: https://lore.kernel.org/r/20240126163918.2908990-2-ardb+git@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3377f1d50a1562668a94f51f18764c61addb88f7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a0aa261fdf6723be1618585a4a46ed432f09c0dc
Author: Tony Luck <tony.luck@intel.com>
Date:   Mon Jan 22 10:08:07 2024 -0800

    x86/resctrl: Implement new mba_MBps throttling heuristic
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c2427e70c1630d98966375fffc2b713ab9768a94 ]
    
    The mba_MBps feedback loop increases throttling when a group is using
    more bandwidth than the target set by the user in the schemata file, and
    decreases throttling when below target.
    
    To avoid possibly stepping throttling up and down on every poll a flag
    "delta_comp" is set whenever throttling is changed to indicate that the
    actual change in bandwidth should be recorded on the next poll in
    "delta_bw". Throttling is only reduced if the current bandwidth plus
    delta_bw is below the user target.
    
    This algorithm works well if the workload has steady bandwidth needs.
    But it can go badly wrong if the workload moves to a different phase
    just as the throttling level changed. E.g. if the workload becomes
    essentially idle right as throttling level is increased, the value
    calculated for delta_bw will be more or less the old bandwidth level.
    If the workload then resumes, Linux may never reduce throttling because
    current bandwidth plus delta_bw is above the target set by the user.
    
    Implement a simpler heuristic by assuming that in the worst case the
    currently measured bandwidth is being controlled by the current level of
    throttling. Compute how much it may increase if throttling is relaxed to
    the next higher level. If that is still below the user target, then it
    is ok to reduce the amount of throttling.
    
    Fixes: ba0f26d8529c ("x86/intel_rdt/mba_sc: Prepare for feedback loop")
    Reported-by: Xiaochen Shen <xiaochen.shen@intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Tested-by: Xiaochen Shen <xiaochen.shen@intel.com>
    Link: https://lore.kernel.org/r/20240122180807.70518-1-tony.luck@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 410c690a16db2fae69c1c9202e518f1d3eb0a534)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e8b1afd16bc1154b0022c5db6c392265138d75d
Author: Babu Moger <babu.moger@amd.com>
Date:   Mon Jan 15 16:52:28 2024 -0600

    x86/resctrl: Read supported bandwidth sources from CPUID
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 54e35eb8611cce5550d3d7689679b1a91c864f28 ]
    
    If the BMEC (Bandwidth Monitoring Event Configuration) feature is
    supported, the bandwidth events can be configured. The maximum supported
    bandwidth bitmask can be read from CPUID:
    
      CPUID_Fn80000020_ECX_x03 [Platform QoS Monitoring Bandwidth Event Configuration]
      Bits    Description
      31:7    Reserved
       6:0    Identifies the bandwidth sources that can be tracked.
    
    While at it, move the mask checking to mon_config_write() before
    iterating over all the domains. Also, print the valid bitmask when the
    user tries to configure invalid event configuration value.
    
    The CPUID details are documented in the Processor Programming Reference
    (PPR) Vol 1.1 for AMD Family 19h Model 11h B1 - 55901 Rev 0.25 in the
    Link tag.
    
    Fixes: dc2a3e857981 ("x86/resctrl: Add interface to read mbm_total_bytes_config")
    Signed-off-by: Babu Moger <babu.moger@amd.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206537
    Link: https://lore.kernel.org/r/669896fa512c7451319fa5ca2fdb6f7e015b5635.1705359148.git.babu.moger@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 52f0a7671c9e2d6a146e8bbf6db0a65a5e32ea18)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4ec22ae016dd95ea845b62dbdcc58987d0042e1a
Author: Babu Moger <babu.moger@amd.com>
Date:   Mon Jan 15 16:52:27 2024 -0600

    x86/resctrl: Remove hard-coded memory bandwidth limit
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0976783bb123f30981bc1e7a14d9626a6f63aeac ]
    
    The QOS Memory Bandwidth Enforcement Limit is reported by
    CPUID_Fn80000020_EAX_x01 and CPUID_Fn80000020_EAX_x02:
    
      Bits   Description
      31:0   BW_LEN: Size of the QOS Memory Bandwidth Enforcement Limit.
    
    Newer processors can support higher bandwidth limit than the current
    hard-coded value. Remove latter and detect using CPUID instead. Also,
    update the register variables eax and edx to match the AMD CPUID
    definition.
    
    The CPUID details are documented in the Processor Programming Reference
    (PPR) Vol 1.1 for AMD Family 19h Model 11h B1 - 55901 Rev 0.25 in the
    Link tag below.
    
    Fixes: 4d05bf71f157 ("x86/resctrl: Introduce AMD QOS feature")
    Signed-off-by: Babu Moger <babu.moger@amd.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206537
    Link: https://lore.kernel.org/r/c26a8ca79d399ed076cf8bf2e9fbc58048808289.1705359148.git.babu.moger@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 877d82238ebbee168f71b00cac84ffe864291d55)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 97b919cc7c34b112cdec628414939d6117a65aef
Author: Michael Roth <michael.roth@amd.com>
Date:   Wed Nov 22 10:37:00 2023 -0600

    x86/mm: Ensure input to pfn_to_kaddr() is treated as a 64-bit type
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8e5647a723c49d73b9f108a8bb38e8c29d3948ea ]
    
    On 64-bit platforms, the pfn_to_kaddr() macro requires that the input
    value is 64 bits in order to ensure that valid address bits don't get
    lost when shifting that input by PAGE_SHIFT to calculate the physical
    address to provide a virtual address for.
    
    One such example is in pvalidate_pages() (used by SEV-SNP guests), where
    the GFN in the struct used for page-state change requests is a 40-bit
    bit-field, so attempts to pass this GFN field directly into
    pfn_to_kaddr() ends up causing guest crashes when dealing with addresses
    above the 1TB range due to the above.
    
    Fix this issue with SEV-SNP guests, as well as any similar cases that
    might cause issues in current/future code, by using an inline function,
    instead of a macro, so that the input is implicitly cast to the
    expected 64-bit input type prior to performing the shift operation.
    
    While it might be argued that the issue is on the caller side, other
    archs/macros have taken similar approaches to deal with instances like
    this, such as ARM explicitly casting the input to phys_addr_t:
    
      e48866647b48 ("ARM: 8396/1: use phys_addr_t in pfn_to_kaddr()")
    
    A C inline function is even better though.
    
    [ mingo: Refined the changelog some more & added __always_inline. ]
    
    Fixes: 6c3211796326 ("x86/sev: Add SNP-specific unaccepted memory support")
    Suggested-by: Dave Hansen <dave.hansen@intel.com>
    Suggested-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Michael Roth <michael.roth@amd.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20231122163700.400507-1-michael.roth@amd.com
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 814305b5c23cb815ada68d43019f39050472b25f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 64915c0af8d7dac3071ef803c5dcaadd9a4ab6af
Author: Chun-Yi Lee <jlee@suse.com>
Date:   Tue Mar 5 16:20:48 2024 +0800

    aoe: fix the potential use-after-free problem in aoecmd_cfg_pkts
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit f98364e926626c678fb4b9004b75cacf92ff0662 ]
    
    This patch is against CVE-2023-6270. The description of cve is:
    
      A flaw was found in the ATA over Ethernet (AoE) driver in the Linux
      kernel. The aoecmd_cfg_pkts() function improperly updates the refcnt on
      `struct net_device`, and a use-after-free can be triggered by racing
      between the free on the struct and the access through the `skbtxq`
      global queue. This could lead to a denial of service condition or
      potential code execution.
    
    In aoecmd_cfg_pkts(), it always calls dev_put(ifp) when skb initial
    code is finished. But the net_device ifp will still be used in
    later tx()->dev_queue_xmit() in kthread. Which means that the
    dev_put(ifp) should NOT be called in the success path of skb
    initial code in aoecmd_cfg_pkts(). Otherwise tx() may run into
    use-after-free because the net_device is freed.
    
    This patch removed the dev_put(ifp) in the success path in
    aoecmd_cfg_pkts(), and added dev_put() after skb xmit in tx().
    
    Link: https://nvd.nist.gov/vuln/detail/CVE-2023-6270
    Fixes: 7562f876cd93 ("[NET]: Rework dev_base via list_head (v3)")
    Signed-off-by: Chun-Yi Lee <jlee@suse.com>
    Link: https://lore.kernel.org/r/20240305082048.25526-1-jlee@suse.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a16fbb80064634b254520a46395e36b87ca4731e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e54c9408c00113b9e4ed6f48118125c68fbcaf24
Author: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
Date:   Wed Mar 6 15:03:03 2024 +0900

    nvme: host: fix double-free of struct nvme_id_ns in ns_update_nuse()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8d0d2447394b13fb22a069f0330f9c49b7fff9d3 ]
    
    When nvme_identify_ns() fails, it frees the pointer to the struct
    nvme_id_ns before it returns. However, ns_update_nuse() calls kfree()
    for the pointer even when nvme_identify_ns() fails. This results in
    KASAN double-free, which was observed with blktests nvme/045 with
    proposed patches [1] on the kernel v6.8-rc7. Fix the double-free by
    skipping kfree() when nvme_identify_ns() fails.
    
    Link: https://lore.kernel.org/linux-block/20240304161303.19681-1-dwagner@suse.de/ [1]
    Fixes: a1a825ab6a60 ("nvme: add csi, ms and nuse to sysfs")
    Signed-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 534f9dc7fe495b3f9cc84363898ac50c5a25fccb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eb7b6ce7a6c72bf0f9f24f253ac9b461178ba583
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Fri Mar 1 18:29:39 2024 +0300

    io_uring/net: fix overflow check in io_recvmsg_mshot_prep()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8ede3db5061bb1fe28e2c9683329aafa89d2b1b4 ]
    
    The "controllen" variable is type size_t (unsigned long).  Casting it
    to int could lead to an integer underflow.
    
    The check_add_overflow() function considers the type of the destination
    which is type int.  If we add two positive values and the result cannot
    fit in an integer then that's counted as an overflow.
    
    However, if we cast "controllen" to an int and it turns negative, then
    negative values *can* fit into an int type so there is no overflow.
    
    Good: 100 + (unsigned long)-4 = 96  <-- overflow
     Bad: 100 + (int)-4 = 96 <-- no overflow
    
    I deleted the cast of the sizeof() as well.  That's not a bug but the
    cast is unnecessary.
    
    Fixes: 9b0fc3c054ff ("io_uring: fix types in io_recvmsg_multishot_overflow")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/138bd2e2-ede8-4bcc-aa7b-f3d9de167a37@moroto.mountain
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b6563ad0d599110bd5cf8f56c47d279c3ed796fe)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 948e0ae8448ae9a861323b74cd6a12a16ecbf577
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Feb 27 11:09:20 2024 -0700

    io_uring/net: move receive multishot out of the generic msghdr path
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c55978024d123d43808ab393a0a4ce3ce8568150 ]
    
    Move the actual user_msghdr / compat_msghdr into the send and receive
    sides, respectively, so we can move the uaddr receive handling into its
    own handler, and ditto the multishot with buffer selection logic.
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: 8ede3db5061b ("io_uring/net: fix overflow check in io_recvmsg_mshot_prep()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0bcd9ff68d446e8333f668a9c64baeb75ee7cc41)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8c326e1678a0afbb29125ed91ccea4b14bc57158
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Feb 19 14:16:47 2024 -0700

    io_uring/net: unify how recvmsg and sendmsg copy in the msghdr
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 52307ac4f2b507f60bae6df5be938d35e199c688 ]
    
    For recvmsg, we roll our own since we support buffer selections. This
    isn't the case for sendmsg right now, but in preparation for doing so,
    make the recvmsg copy helpers generic so we can call them from the
    sendmsg side as well.
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: 8ede3db5061b ("io_uring/net: fix overflow check in io_recvmsg_mshot_prep()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ee4949726e62ec6ae4fb7be558d74bc5e41e3d5f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3fcd2f0154bd74c30c5226615c708758953d4ca7
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Thu Feb 29 17:57:07 2024 +0800

    md/raid1: fix choose next idle in read_balance()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 257ac239ffcfd097a9a0732bf5095fb00164f334 ]
    
    Commit 12cee5a8a29e ("md/raid1: prevent merging too large request") add
    the case choose next idle in read_balance():
    
    read_balance:
     for_each_rdev
      if(next_seq_sect == this_sector || dist == 0)
      -> sequential reads
       best_disk = disk;
       if (...)
        choose_next_idle = 1
        continue;
    
     for_each_rdev
     -> iterate next rdev
      if (pending == 0)
       best_disk = disk;
       -> choose the next idle disk
       break;
    
      if (choose_next_idle)
       -> keep using this rdev if there are no other idle disk
       contine
    
    However, commit 2e52d449bcec ("md/raid1: add failfast handling for reads.")
    remove the code:
    
    -               /* If device is idle, use it */
    -               if (pending == 0) {
    -                       best_disk = disk;
    -                       break;
    -               }
    
    Hence choose next idle will never work now, fix this problem by
    following:
    
    1) don't set best_disk in this case, read_balance() will choose the best
       disk after iterating all the disks;
    2) add 'pending' so that other idle disk will be chosen;
    3) add a new local variable 'sequential_disk' to record the disk, and if
       there is no other idle disk, 'sequential_disk' will be chosen;
    
    Fixes: 2e52d449bcec ("md/raid1: add failfast handling for reads.")
    Co-developed-by: Paul Luse <paul.e.luse@linux.intel.com>
    Signed-off-by: Paul Luse <paul.e.luse@linux.intel.com>
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Reviewed-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240229095714.926789-5-yukuai1@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 10b6e8412dc03d691bd950cd1681e42c18b48eea)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 834c0131a8517ac019fe7d01c1fbea47668c12ba
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Thu Feb 29 17:57:06 2024 +0800

    md/raid1: record nonrot rdevs while adding/removing rdevs to conf
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2c27d09d3a76b33629d2e681bf8b774f776ade7f ]
    
    For raid1, each read will iterate all the rdevs from conf and check if
    any rdev is non-rotational, then choose rdev with minimal IO inflight
    if so, or rdev with closest distance otherwise.
    
    Disk nonrot info can be changed through sysfs entry:
    
    /sys/block/[disk_name]/queue/rotational
    
    However, consider that this should only be used for testing, and user
    really shouldn't do this in real life. Record the number of non-rotational
    disks in conf, to avoid checking each rdev in IO fast path and simplify
    read_balance() a little bit.
    
    Co-developed-by: Paul Luse <paul.e.luse@linux.intel.com>
    Signed-off-by: Paul Luse <paul.e.luse@linux.intel.com>
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240229095714.926789-4-yukuai1@huaweicloud.com
    Stable-dep-of: 257ac239ffcf ("md/raid1: fix choose next idle in read_balance()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cb38ae9ed8e3b8b983cbb27465b4d50471230b56)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3f4ed861a3090e415d154892d890c6c771b4f748
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Thu Feb 29 17:57:05 2024 +0800

    md/raid1: factor out helpers to add rdev to conf
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 969d6589abcb369d53d84ec7c9c37f4b23ec1ad9 ]
    
    There are no functional changes, just make code cleaner and prepare to
    record disk non-rotational information while adding and removing rdev to
    conf
    
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240229095714.926789-3-yukuai1@huaweicloud.com
    Stable-dep-of: 257ac239ffcf ("md/raid1: fix choose next idle in read_balance()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9732ce695eb0bcf902e6e49f25590924ce5df2e5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c086983e2f338136fe9c993f0f5c0d6090c04aa
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 28 13:27:20 2024 +0800

    drm: tests: Fix invalid printf format specifiers in KUnit tests
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit fc9a615200d48e076af58f4309f507e500ed900d ]
    
    The drm_buddy_test's alloc_contiguous test used a u64 for the page size,
    which was then updated to be an 'unsigned long' to avoid 64-bit
    multiplication division helpers.
    
    However, the variable is logged by some KUNIT_ASSERT_EQ_MSG() using the
    '%d' or '%llu' format specifiers, the former of which is always wrong,
    and the latter is no longer correct now that ps is no longer a u64. Fix
    these to all use '%lu'.
    
    Also, drm_mm_test calls KUNIT_FAIL() with an empty string as the
    message. gcc and clang warns if a printf format string is empty, so
    give these some more detailed error messages, which should be more
    useful anyway.
    
    Fixes: a64056bb5a32 ("drm/tests/drm_buddy: add alloc_contiguous test")
    Fixes: fca7526b7d89 ("drm/tests/drm_buddy: fix build failure on 32-bit targets")
    Fixes: fc8d29e298cf ("drm: selftest: convert drm_mm selftest to KUnit")
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: David Gow <davidgow@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 29184ca7ed83376caababce9966b6dd6160cf299)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dc49816afbeef7523c876328f8b78f0ebb31e9ee
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:21 2024 +0800

    drm/xe/tests: Fix printf format specifiers in xe_migrate test
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 689a930b93c5c20294df5da0407df361c5412eac ]
    
    KUNIT_FAIL() is used to fail the xe_migrate test when an error occurs.
    However, there's a mismatch in the format specifier: '%li' is used to
    log 'err', which is an 'int'.
    
    Use '%i' instead of '%li', and for the case where we're printing an
    error pointer, just use '%pe', instead of extracting the error code
    manually with PTR_ERR(). (This also results in a nicer output when the
    error code is known.)
    
    Fixes: dd08ebf6c352 ("drm/xe: Introduce a new DRM driver for Intel GPUs")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Acked-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3ffee550ef3a5d34db6ae37e640e3488ffe84341)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9a7e47c0f5de4881397ddcc6c5c7acee8461e5b6
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:19 2024 +0800

    net: test: Fix printf format specifier in skb_segment kunit test
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ff3b96f2c9e5c24fca12239cd519a8a18569e687 ]
    
    KUNIT_FAIL() accepts a printf-style format string, but previously did
    not let gcc validate it with the __printf() attribute. The use of %lld
    for the result of PTR_ERR() is not correct.
    
    Instead, use %pe and pass the actual error pointer. printk() will format
    it correctly (and give a symbolic name rather than a number if
    available, which should make the output more readable, too).
    
    Fixes: b3098d32ed6e ("net: add skb_segment kunit test")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit be63556e8c0ec74385d191f3d5b1cba9c495e182)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 967bf01ed611c9eeece2989250bd0d49a000f9f6
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:18 2024 +0800

    rtc: test: Fix invalid format specifier.
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 8a904a3caa88118744062e872ae90f37748a8fd8 ]
    
    'days' is a s64 (from div_s64), and so should use a %lld specifier.
    
    This was found by extending KUnit's assertion macros to use gcc's
    __printf attribute.
    
    Fixes: 1d1bb12a8b18 ("rtc: Improve performance of rtc_time64_to_tm(). Add tests.")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit cd36414115a472d1ee026b502744e6105b3e9b22)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec5df0b0fea046e14f97de7087b2b078cc06a1ac
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:17 2024 +0800

    time: test: Fix incorrect format specifier
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 133e267ef4a26d19c93996a874714e9f3f8c70aa ]
    
    'days' is a s64 (from div_s64), and so should use a %lld specifier.
    
    This was found by extending KUnit's assertion macros to use gcc's
    __printf attribute.
    
    Fixes: 276010551664 ("time: Improve performance of time64_to_tm()")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 35abe0f3acd94cc06a78e34aaa8f4c2d3fff41b4)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 16704897cdaf687caea17c87c9a05b6a6e6166f8
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:16 2024 +0800

    lib: memcpy_kunit: Fix an invalid format specifier in an assertion msg
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 0a549ed22c3c7cc6da5c5f5918efd019944489a5 ]
    
    The 'i' passed as an assertion message is a size_t, so should use '%zu',
    not '%d'.
    
    This was found by annotating the _MSG() variants of KUnit's assertions
    to let gcc validate the format strings.
    
    Fixes: bb95ebbe89a7 ("lib: Introduce CONFIG_MEMCPY_KUNIT_TEST")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit d58ab5347cbb19b3c9cce0aa989365521df38d58)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit abc59762c6814001b28ca5cdbc4e7340d19ff357
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:15 2024 +0800

    lib/cmdline: Fix an invalid format specifier in an assertion msg
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit d2733a026fc7247ba42d7a8e1b737cf14bf1df21 ]
    
    The correct format specifier for p - n (both p and n are pointers) is
    %td, as the type should be ptrdiff_t.
    
    This was discovered by annotating KUnit assertion macros with gcc's
    printf specifier, but note that gcc incorrectly suggested a %d or %ld
    specifier (depending on the pointer size of the architecture being
    built).
    
    Fixes: 0ea09083116d ("lib/cmdline: Allow get_options() to take 0 to validate the input")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Daniel Latypov <dlatypov@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit b769a41d47a5e9cafa545a4c4f8d7ea00d59a6de)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b84ff2d5f839ae5991c54576fa305e973e8a726
Author: David Gow <davidgow@google.com>
Date:   Wed Feb 21 17:27:14 2024 +0800

    kunit: test: Log the correct filter string in executor_test
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6f2f793fba78eb4a0d5a34a71bc781118ed923d3 ]
    
    KUnit's executor_test logs the filter string in KUNIT_ASSERT_EQ_MSG(),
    but passed a random character from the filter, rather than the whole
    string.
    
    This was found by annotating KUNIT_ASSERT_EQ_MSG() to let gcc validate
    the format string.
    
    Fixes: 76066f93f1df ("kunit: add tests for filtering attributes")
    Signed-off-by: David Gow <davidgow@google.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Justin Stitt <justinstitt@google.com>
    Reviewed-by: Daniel Latypov <dlatypov@google.com>
    Reviewed-by: Rae Moar <rmoar@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a2c4442bf5f6060179a9a41da005f6289f19229e)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ca514d7f4f1d1bfa8b8b2609717eccd258d81ca4
Author: Gabriel Krisman Bertazi <krisman@suse.de>
Date:   Wed Feb 21 12:14:03 2024 -0500

    ovl: Always reject mounting over case-insensitive directories
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 2824083db76cb9d4b7910607b367e93b02912865 ]
    
    overlayfs relies on the filesystem setting DCACHE_OP_HASH or
    DCACHE_OP_COMPARE to reject mounting over case-insensitive directories.
    
    Since commit bb9cd9106b22 ("fscrypt: Have filesystems handle their
    d_ops"), we set ->d_op through a hook in ->d_lookup, which
    means the root dentry won't have them, causing the mount to accidentally
    succeed.
    
    In v6.7-rc7, the following sequence will succeed to mount, but any
    dentry other than the root dentry will be a "weird" dentry to ovl and
    fail with EREMOTE.
    
      mkfs.ext4 -O casefold lower.img
      mount -O loop lower.img lower
      mount -t overlay -o lowerdir=lower,upperdir=upper,workdir=work ovl /mnt
    
    Mounting on a subdirectory fails, as expected, because DCACHE_OP_HASH
    and DCACHE_OP_COMPARE are properly set by ->lookup.
    
    Fix by explicitly rejecting superblocks that allow case-insensitive
    dentries. Yes, this will be solved when we move d_op configuration back
    to ->s_d_op. Yet, we better have an explicit fix to avoid messing up
    again.
    
    While there, re-sort the entries to have more descriptive error messages
    first.
    
    Fixes: bb9cd9106b22 ("fscrypt: Have filesystems handle their d_ops")
    Acked-by: Amir Goldstein <amir73il@gmail.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Link: https://lore.kernel.org/r/20240221171412.10710-2-krisman@suse.de
    Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f3254829bde2aeafae3a970f4114401710de67cc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c5a7d28d739e80bae017a623bed49f0ee458b4ca
Author: Maxime Ripard <mripard@kernel.org>
Date:   Wed Feb 21 13:53:24 2024 +0100

    kunit: Setup DMA masks on the kunit device
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c5215d54dc10e801a6cefef62445a00a4c28a515 ]
    
    Commit d393acce7b3f ("drm/tests: Switch to kunit devices") switched the
    DRM device creation helpers from an ad-hoc implementation to the new
    kunit device creation helpers introduced in commit d03c720e03bd ("kunit:
    Add APIs for managing devices").
    
    However, while the DRM helpers were using a platform_device, the kunit
    helpers are using a dedicated bus and device type.
    
    That situation creates small differences in the initialisation, and one
    of them is that the kunit devices do not have the DMA masks setup. In
    turn, this means that we can't do any kind of DMA buffer allocation
    anymore, which creates a regression on some (downstream for now) tests.
    
    Let's set up a default DMA mask that should work on any platform to fix
    it.
    
    Fixes: d03c720e03bd ("kunit: Add APIs for managing devices")
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: David Gow <davidgow@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5a3be9ae70309f8b6057610fb496e95db1b1dd03)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1da6d1a2615b2ca45a7c89456e8bea02122b29b9
Author: Li Nan <linan122@huawei.com>
Date:   Mon Feb 26 11:14:40 2024 +0800

    md: Don't clear MD_CLOSING when the raid is about to stop
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9674f54e41fffaf06f6a60202e1fa4cc13de3cf5 ]
    
    The raid should not be opened anymore when it is about to be stopped.
    However, other processes can open it again if the flag MD_CLOSING is
    cleared before exiting. From now on, this flag will not be cleared when
    the raid will be stopped.
    
    Fixes: 065e519e71b2 ("md: MD_CLOSING needs to be cleared after called md_set_readonly or do_md_stop")
    Signed-off-by: Li Nan <linan122@huawei.com>
    Reviewed-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240226031444.3606764-6-linan666@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 8c43d6ab21a9d31bcada199862dfa6d59969a178)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c681187ebc2b024cc5a3609d3e98e49aafa0e275
Author: Li Nan <linan122@huawei.com>
Date:   Wed Feb 21 17:01:22 2024 +0800

    block: fix deadlock between bd_link_disk_holder and partition scan
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 03f12122b20b6e6028e9ed69030a49f9cffcbb75 ]
    
    'open_mutex' of gendisk is used to protect open/close block devices. But
    in bd_link_disk_holder(), it is used to protect the creation of symlink
    between holding disk and slave bdev, which introduces some issues.
    
    When bd_link_disk_holder() is called, the driver is usually in the process
    of initialization/modification and may suspend submitting io. At this
    time, any io hold 'open_mutex', such as scanning partitions, can cause
    deadlocks. For example, in raid:
    
    T1                              T2
    bdev_open_by_dev
     lock open_mutex [1]
     ...
      efi_partition
      ...
       md_submit_bio
                                    md_ioctl mddev_syspend
                                      -> suspend all io
                                     md_add_new_disk
                                      bind_rdev_to_array
                                       bd_link_disk_holder
                                        try lock open_mutex [2]
        md_handle_request
         -> wait mddev_resume
    
    T1 scan partition, T2 add a new device to raid. T1 waits for T2 to resume
    mddev, but T2 waits for open_mutex held by T1. Deadlock occurs.
    
    Fix it by introducing a local mutex 'blk_holder_mutex' to replace
    'open_mutex'.
    
    Fixes: 1b0a2d950ee2 ("md: use new apis to suspend array for ioctls involed array reconfiguration")
    Reported-by: mgperkow@gmail.com
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218459
    Signed-off-by: Li Nan <linan122@huawei.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Yu Kuai <yukuai3@huawei.com>
    Link: https://lore.kernel.org/r/20240221090122.1281868-1-linan666@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 5a87c1f7993bc8ac358a3766bac5dc7126e01e98)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 028ff787d8220f72c34eb424b213ad43ea4faf50
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 21:23:34 2024 +0100

    fs/select: rework stack allocation hack for clang
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ddb9fd7a544088ed70eccbb9f85e9cc9952131c1 ]
    
    A while ago, we changed the way that select() and poll() preallocate
    a temporary buffer just under the size of the static warning limit of
    1024 bytes, as clang was frequently going slightly above that limit.
    
    The warnings have recently returned and I took another look. As it turns
    out, clang is not actually inherently worse at reserving stack space,
    it just happens to inline do_select() into core_sys_select(), while gcc
    never inlines it.
    
    Annotate do_select() to never be inlined and in turn remove the special
    case for the allocation size. This should give the same behavior for
    both clang and gcc all the time and once more avoids those warnings.
    
    Fixes: ad312f95d41c ("fs/select: avoid clang stack usage warning")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20240216202352.2492798-1-arnd@kernel.org
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit c4c1b96bb88e45a5efaf17072f13cdbd64aaca8f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 90a7372084451a4a403f09b238aa4be142e570d6
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri Jan 12 16:46:16 2024 +0100

    rcu/exp: Handle RCU expedited grace period kworker allocation failure
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit e7539ffc9a770f36bacedcf0fbfb4bf2f244f4a5 ]
    
    Just like is done for the kworker performing nodes initialization,
    gracefully handle the possible allocation failure of the RCU expedited
    grace period main kworker.
    
    While at it perform a rename of the related checking functions to better
    reflect the expedited specifics.
    
    Reviewed-by: Kalesh Singh <kaleshsingh@google.com>
    Fixes: 9621fbee44df ("rcu: Move expedited grace period (GP) work to RT kthread_worker")
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Reviewed-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Boqun Feng <boqun.feng@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 95ba05558edca2d2623a317da50350fcb7c49195)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8b17feb0d37a861b4e84a8d4c78b43c7f026f7af
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri Jan 12 16:46:15 2024 +0100

    rcu/exp: Fix RCU expedited parallel grace period kworker allocation failure recovery
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a636c5e6f8fc34be520277e69c7c6ee1d4fc1d17 ]
    
    Under CONFIG_RCU_EXP_KTHREAD=y, the nodes initialization for expedited
    grace periods is queued to a kworker. However if the allocation of that
    kworker failed, the nodes initialization is performed synchronously by
    the caller instead.
    
    Now the check for kworker initialization failure relies on the kworker
    pointer to be NULL while its value might actually encapsulate an
    allocation failure error.
    
    Make sure to handle this case.
    
    Reviewed-by: Kalesh Singh <kaleshsingh@google.com>
    Fixes: 9621fbee44df ("rcu: Move expedited grace period (GP) work to RT kthread_worker")
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Reviewed-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Boqun Feng <boqun.feng@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fbf7b64c3431e83db20087ff8b2a148dc9a86608)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 28192a51246197c348a50ddb2268e2a68c672a14
Author: Li Nan <linan122@huawei.com>
Date:   Thu Feb 8 16:55:56 2024 +0800

    md: fix kmemleak of rdev->serial
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 6cf350658736681b9d6b0b6e58c5c76b235bb4c4 ]
    
    If kobject_add() is fail in bind_rdev_to_array(), 'rdev->serial' will be
    alloc not be freed, and kmemleak occurs.
    
    unreferenced object 0xffff88815a350000 (size 49152):
      comm "mdadm", pid 789, jiffies 4294716910
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace (crc f773277a):
        [<0000000058b0a453>] kmemleak_alloc+0x61/0xe0
        [<00000000366adf14>] __kmalloc_large_node+0x15e/0x270
        [<000000002e82961b>] __kmalloc_node.cold+0x11/0x7f
        [<00000000f206d60a>] kvmalloc_node+0x74/0x150
        [<0000000034bf3363>] rdev_init_serial+0x67/0x170
        [<0000000010e08fe9>] mddev_create_serial_pool+0x62/0x220
        [<00000000c3837bf0>] bind_rdev_to_array+0x2af/0x630
        [<0000000073c28560>] md_add_new_disk+0x400/0x9f0
        [<00000000770e30ff>] md_ioctl+0x15bf/0x1c10
        [<000000006cfab718>] blkdev_ioctl+0x191/0x3f0
        [<0000000085086a11>] vfs_ioctl+0x22/0x60
        [<0000000018b656fe>] __x64_sys_ioctl+0xba/0xe0
        [<00000000e54e675e>] do_syscall_64+0x71/0x150
        [<000000008b0ad622>] entry_SYSCALL_64_after_hwframe+0x6c/0x74
    
    Fixes: 963c555e75b0 ("md: introduce mddev_create/destroy_wb_pool for the change of member device")
    Signed-off-by: Li Nan <linan122@huawei.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Link: https://lore.kernel.org/r/20240208085556.2412922-1-linan666@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 4c1021ce46fc2fb6115f7e79d353941e6dcad366)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 921a7af7bba349f4972c439c8144abecd4801e34
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Feb 9 21:06:06 2024 -0800

    fs/hfsplus: use better @opf description
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit cf12445daec01aaa2d27bb34bd7c796a53442c42 ]
    
    Use a more descriptive explanation of the @opf function parameter,
    more in line with <linux/blk_types.h>.
    
    Fixes: 02105f18a26c ("fs/hfsplus: wrapper.c: fix kernel-doc warnings")
    Suggested-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20240210050606.9182-1-rdunlap@infradead.org
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Christian Brauner <brauner@kernel.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0951b0a09ed789ee8b5fd532a57ec39d4b662f37)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit feae31fb398c6c536633c4740b964e7e61f21f5d
Author: Miroslav Franc <mfranc@suse.cz>
Date:   Fri Feb 9 13:45:22 2024 +0100

    s390/dasd: fix double module refcount decrement
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c3116e62ddeff79cae342147753ce596f01fcf06 ]
    
    Once the discipline is associated with the device, deleting the device
    takes care of decrementing the module's refcount.  Doing it manually on
    this error path causes refcount to artificially decrease on each error
    while it should just stay the same.
    
    Fixes: c020d722b110 ("s390/dasd: fix panic during offline processing")
    Signed-off-by: Miroslav Franc <mfranc@suse.cz>
    Signed-off-by: Jan Höppner <hoeppner@linux.ibm.com>
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Link: https://lore.kernel.org/r/20240209124522.3697827-3-sth@linux.ibm.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ebc5a3bd79e54f98c885c26f0862a27a02c487c5)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e1faaf372f268e4df460acbf6fccb546565c60cd
Author: Jan Höppner <hoeppner@linux.ibm.com>
Date:   Thu Feb 8 17:42:48 2024 +0100

    s390/dasd: Use dev_*() for device log messages
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 79ae56fc475869d636071f66d9e4ef2a3819eee6 ]
    
    All log messages in dasd.c use the printk variants of pr_*(). They all
    add the name of the affected device manually to the log message.
    This can be simplified by using the dev_*() variants of printk, which
    include the device information and make a separate call to dev_name()
    unnecessary.
    
    The KMSG_COMPONENT and the pr_fmt() definition can be dropped. Note that
    this removes the "dasd: " prefix from the one pr_info() call in
    dasd_init(). However, the log message already provides all relevant
    information.
    
    Signed-off-by: Jan Höppner <hoeppner@linux.ibm.com>
    Reviewed-by: Stefan Haberland <sth@linux.ibm.com>
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Link: https://lore.kernel.org/r/20240208164248.540985-10-sth@linux.ibm.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: c3116e62ddef ("s390/dasd: fix double module refcount decrement")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit e1c1e979ed420dd2aadffe1047241ff01ecdaf7b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4ea37bff61b239490e02c8892f972485ab64d0f
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Jan 31 10:50:08 2024 -0700

    io_uring: remove unconditional looping in local task_work handling
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9fe3eaea4a3530ca34a8d8ff00b1848c528789ca ]
    
    If we have a ton of notifications coming in, we can be looping in here
    for a long time. This can be problematic for various reasons, mostly
    because we can starve userspace. If the application is waiting on N
    events, then only re-run if we need more events.
    
    Fixes: c0e0d6ba25f1 ("io_uring: add IORING_SETUP_DEFER_TASKRUN")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit a352d5a59f4f8812d83bfc50d48bd3a517be1791)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8192521b8220ab2bcf27280403d2c00853a40dec
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Jan 30 07:00:47 2024 -0700

    io_uring: remove looping around handling traditional task_work
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 592b4805432af075468876771c0f7d41273ccb3c ]
    
    A previous commit added looping around handling traditional task_work
    as an optimization, and while that may seem like a good idea, it's also
    possible to run into application starvation doing so. If the task_work
    generation is bursty, we can get very deep task_work queues, and we can
    end up looping in here for a very long time.
    
    One immediately observable problem with that is handling network traffic
    using provided buffers, where flooding incoming traffic and looping
    task_work handling will very quickly lead to buffer starvation as we
    keep running task_work rather than returning to the application so it
    can handle the associated CQEs and also provide buffers back.
    
    Fixes: 3a0c037b0e16 ("io_uring: batch task_work")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7d430002358dcbba5a32ed7d283ca7e8f64ccdfc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 78b4004928f59f149997883a992e20fa184ad2e9
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Feb 2 12:39:20 2024 -0800

    fs: Fix rw_hint validation
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit ec16b147a55bfa14e858234eb7b1a7c8e7cd5021 ]
    
    Reject values that are valid rw_hints after truncation but not before
    truncation by passing an untruncated value to rw_hint_valid().
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kanchan Joshi <joshi.k@samsung.com>
    Cc: Jeff Layton <jlayton@kernel.org>
    Cc: Chuck Lever <chuck.lever@oracle.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Fixes: 5657cb0797c4 ("fs/fcntl: use copy_to/from_user() for u64 types")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20240202203926.2478590-2-bvanassche@acm.org
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 038cc4a5089b89fec04cb46ba3598dc5db17f6d2)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6510e4c294c7ae2842a51f072456efddfe5b4b02
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Dec 7 08:26:57 2023 +0100

    iomap: clear the per-folio dirty bits on all writeback failures
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 7ea1d9b4a840c2dd01d1234663d4a8ef256cfe39 ]
    
    write_cache_pages always clear the page dirty bit before calling into the
    file systems, and leaves folios with a writeback failure without the
    dirty bit after return.  We also clear the per-block writeback bits for
    writeback failures unless no I/O has submitted, which will leave the
    folio in an inconsistent state where it doesn't have the folio dirty,
    but one or more per-block dirty bits.  This seems to be due the place
    where the iomap_clear_range_dirty call was inserted into the existing
    not very clearly structured code when adding per-block dirty bit support
    and not actually intentional.  Switch to always clearing the dirty on
    writeback failure.
    
    Fixes: 4ce02c679722 ("iomap: Add per-block dirty state tracking to improve performance")
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20231207072710.176093-2-hch@lst.de
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit fc6391de33ff894f4acb70a803b846ec9eaf82c7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e69e135b73da28da605b501d019e7ad701af331f
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Jan 30 18:55:55 2024 -1000

    workqueue: Don't call cpumask_test_cpu() with -1 CPU in wq_update_node_max_active()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 15930da42f8981dc42c19038042947b475b19f47 ]
    
    For wq_update_node_max_active(), @off_cpu of -1 indicates that no CPU is
    going down. The function was incorrectly calling cpumask_test_cpu() with -1
    CPU leading to oopses like the following on some archs:
    
      Unable to handle kernel paging request at virtual address ffff0002100296e0
      ..
      pc : wq_update_node_max_active+0x50/0x1fc
      lr : wq_update_node_max_active+0x1f0/0x1fc
      ...
      Call trace:
        wq_update_node_max_active+0x50/0x1fc
        apply_wqattrs_commit+0xf0/0x114
        apply_workqueue_attrs_locked+0x58/0xa0
        alloc_workqueue+0x5ac/0x774
        workqueue_init_early+0x460/0x540
        start_kernel+0x258/0x684
        __primary_switched+0xb8/0xc0
      Code: 9100a273 35000d01 53067f00 d0016dc1 (f8607a60)
      ---[ end trace 0000000000000000 ]---
      Kernel panic - not syncing: Attempted to kill the idle task!
      ---[ end Kernel panic - not syncing: Attempted to kill the idle task! ]---
    
    Fix it.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Link: http://lkml.kernel.org/r/91eacde0-df99-4d5c-a980-91046f66e612@samsung.com
    Fixes: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 9fc557d489f8163c1aabcb89114b8eba960f4097)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 915cafca4979d5b4886dccac0951c89b409d9bc5
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:25 2024 -1000

    workqueue: Implement system-wide nr_active enforcement for unbound workqueues
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 5797b1c18919cd9c289ded7954383e499f729ce0 ]
    
    A pool_workqueue (pwq) represents the connection between a workqueue and a
    worker_pool. One of the roles that a pwq plays is enforcement of the
    max_active concurrency limit. Before 636b927eba5b ("workqueue: Make unbound
    workqueues to use per-cpu pool_workqueues"), there was one pwq per each CPU
    for per-cpu workqueues and per each NUMA node for unbound workqueues, which
    was a natural result of per-cpu workqueues being served by per-cpu pools and
    unbound by per-NUMA pools.
    
    In terms of max_active enforcement, this was, while not perfect, workable.
    For per-cpu workqueues, it was fine. For unbound, it wasn't great in that
    NUMA machines would get max_active that's multiplied by the number of nodes
    but didn't cause huge problems because NUMA machines are relatively rare and
    the node count is usually pretty low.
    
    However, cache layouts are more complex now and sharing a worker pool across
    a whole node didn't really work well for unbound workqueues. Thus, a series
    of commits culminating on 8639ecebc9b1 ("workqueue: Make unbound workqueues
    to use per-cpu pool_workqueues") implemented more flexible affinity
    mechanism for unbound workqueues which enables using e.g. last-level-cache
    aligned pools. In the process, 636b927eba5b ("workqueue: Make unbound
    workqueues to use per-cpu pool_workqueues") made unbound workqueues use
    per-cpu pwqs like per-cpu workqueues.
    
    While the change was necessary to enable more flexible affinity scopes, this
    came with the side effect of blowing up the effective max_active for unbound
    workqueues. Before, the effective max_active for unbound workqueues was
    multiplied by the number of nodes. After, by the number of CPUs.
    
    636b927eba5b ("workqueue: Make unbound workqueues to use per-cpu
    pool_workqueues") claims that this should generally be okay. It is okay for
    users which self-regulates concurrency level which are the vast majority;
    however, there are enough use cases which actually depend on max_active to
    prevent the level of concurrency from going bonkers including several IO
    handling workqueues that can issue a work item for each in-flight IO. With
    targeted benchmarks, the misbehavior can easily be exposed as reported in
    http://lkml.kernel.org/r/dbu6wiwu3sdhmhikb2w6lns7b27gbobfavhjj57kwi2quafgwl@htjcc5oikcr3.
    
    Unfortunately, there is no way to express what these use cases need using
    per-cpu max_active. A CPU may issue most of in-flight IOs, so we don't want
    to set max_active too low but as soon as we increase max_active a bit, we
    can end up with unreasonable number of in-flight work items when many CPUs
    issue IOs at the same time. ie. The acceptable lowest max_active is higher
    than the acceptable highest max_active.
    
    Ideally, max_active for an unbound workqueue should be system-wide so that
    the users can regulate the total level of concurrency regardless of node and
    cache layout. The reasons workqueue hasn't implemented that yet are:
    
    - One max_active enforcement decouples from pool boundaires, chaining
      execution after a work item finishes requires inter-pool operations which
      would require lock dancing, which is nasty.
    
    - Sharing a single nr_active count across the whole system can be pretty
      expensive on NUMA machines.
    
    - Per-pwq enforcement had been more or less okay while we were using
      per-node pools.
    
    It looks like we no longer can avoid decoupling max_active enforcement from
    pool boundaries. This patch implements system-wide nr_active mechanism with
    the following design characteristics:
    
    - To avoid sharing a single counter across multiple nodes, the configured
      max_active is split across nodes according to the proportion of each
      workqueue's online effective CPUs per node. e.g. A node with twice more
      online effective CPUs will get twice higher portion of max_active.
    
    - Workqueue used to be able to process a chain of interdependent work items
      which is as long as max_active. We can't do this anymore as max_active is
      distributed across the nodes. Instead, a new parameter min_active is
      introduced which determines the minimum level of concurrency within a node
      regardless of how max_active distribution comes out to be.
    
      It is set to the smaller of max_active and WQ_DFL_MIN_ACTIVE which is 8.
      This can lead to higher effective max_weight than configured and also
      deadlocks if a workqueue was depending on being able to handle chains of
      interdependent work items that are longer than 8.
    
      I believe these should be fine given that the number of CPUs in each NUMA
      node is usually higher than 8 and work item chain longer than 8 is pretty
      unlikely. However, if these assumptions turn out to be wrong, we'll need
      to add an interface to adjust min_active.
    
    - Each unbound wq has an array of struct wq_node_nr_active which tracks
      per-node nr_active. When its pwq wants to run a work item, it has to
      obtain the matching node's nr_active. If over the node's max_active, the
      pwq is queued on wq_node_nr_active->pending_pwqs. As work items finish,
      the completion path round-robins the pending pwqs activating the first
      inactive work item of each, which involves some pool lock dancing and
      kicking other pools. It's not the simplest code but doesn't look too bad.
    
    v4: - wq_adjust_max_active() updated to invoke wq_update_node_max_active().
    
        - wq_adjust_max_active() is now protected by wq->mutex instead of
          wq_pool_mutex.
    
    v3: - wq_node_max_active() used to calculate per-node max_active on the fly
          based on system-wide CPU online states. Lai pointed out that this can
          lead to skewed distributions for workqueues with restricted cpumasks.
          Update the max_active distribution to use per-workqueue effective
          online CPU counts instead of system-wide and cache the calculation
          results in node_nr_active->max.
    
    v2: - wq->min/max_active now uses WRITE/READ_ONCE() as suggested by Lai.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Naohiro Aota <Naohiro.Aota@wdc.com>
    Link: http://lkml.kernel.org/r/dbu6wiwu3sdhmhikb2w6lns7b27gbobfavhjj57kwi2quafgwl@htjcc5oikcr3
    Fixes: 636b927eba5b ("workqueue: Make unbound workqueues to use per-cpu pool_workqueues")
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 843288afd3cc6f3342659c6cf81fc47684d25563)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d5a46e20dcc41e60153ffc94239123fd31f7adb9
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: Introduce struct wq_node_nr_active
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 91ccc6e7233bb10a9c176aa4cc70d6f432a441a5 ]
    
    Currently, for both percpu and unbound workqueues, max_active applies
    per-cpu, which is a recent change for unbound workqueues. The change for
    unbound workqueues was a significant departure from the previous behavior of
    per-node application. It made some use cases create undesirable number of
    concurrent work items and left no good way of fixing them. To address the
    problem, workqueue is implementing a NUMA node segmented global nr_active
    mechanism, which will be explained further in the next patch.
    
    As a preparation, this patch introduces struct wq_node_nr_active. It's a
    data structured allocated for each workqueue and NUMA node pair and
    currently only tracks the workqueue's number of active work items on the
    node. This is split out from the next patch to make it easier to understand
    and review.
    
    Note that there is an extra wq_node_nr_active allocated for the invalid node
    nr_node_ids which is used to track nr_active for pools which don't have NUMA
    node associated such as the default fallback system-wide pool.
    
    This doesn't cause any behavior changes visible to userland yet. The next
    patch will expand to implement the control mechanism on top.
    
    v4: - Fixed out-of-bound access when freeing per-cpu workqueues.
    
    v3: - Use flexible array for wq->node_nr_active as suggested by Lai.
    
    v2: - wq->max_active now uses WRITE/READ_ONCE() as suggested by Lai.
    
        - Lai pointed out that pwq_tryinc_nr_active() incorrectly dropped
          pwq->max_active check. Restored. As the next patch replaces the
          max_active enforcement mechanism, this doesn't change the end result.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 7a5cd14a4900e0017142ad479ba8e34671822fc6)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b2b9946820da085bdf65fdca734b9f2e8140966e
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: RCU protect wq->dfl_pwq and implement accessors for it
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 9f66cff212bb3c1cd25996aaa0dfd0c9e9d8baab ]
    
    wq->cpu_pwq is RCU protected but wq->dfl_pwq isn't. This is okay because
    currently wq->dfl_pwq is used only accessed to install it into wq->cpu_pwq
    which doesn't require RCU access. However, we want to be able to access
    wq->dfl_pwq under RCU in the future to access its __pod_cpumask and the code
    can be made easier to read by making the two pwq fields behave in the same
    way.
    
    - Make wq->dfl_pwq RCU protected.
    
    - Add unbound_pwq_slot() and unbound_pwq() which can access both ->dfl_pwq
      and ->cpu_pwq. The former returns the double pointer that can be used
      access and update the pwqs. The latter performs locking check and
      dereferences the double pointer.
    
    - pwq accesses and updates are converted to use unbound_pwq[_slot]().
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 3fb5dbc8bb3759ad0a82d6bf5ed32866c0410a79)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fb8ceb2e27289120e2484ea5c44e0a6653b922f3
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: Make wq_adjust_max_active() round-robin pwqs while activating
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit c5404d4e6df6faba1007544b5f4e62c7c14416dd ]
    
    wq_adjust_max_active() needs to activate work items after max_active is
    increased. Previously, it did that by visiting each pwq once activating all
    that could be activated. While this makes sense with per-pwq nr_active,
    nr_active will be shared across multiple pwqs for unbound wqs. Then, we'd
    want to round-robin through pwqs to be fairer.
    
    In preparation, this patch makes wq_adjust_max_active() round-robin pwqs
    while activating. While the activation ordering changes, this shouldn't
    cause user-noticeable behavior changes.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit ddb232dc0f1339f9ed506730fd6bee6f5e3dcb37)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 534f695a466153fe00662f7977663165105472c5
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: Move nr_active handling into helpers
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 1c270b79ce0b8290f146255ea9057243f6dd3c17 ]
    
    __queue_work(), pwq_dec_nr_in_flight() and wq_adjust_max_active() were
    open-coding nr_active handling, which is fine given that the operations are
    trivial. However, the planned unbound nr_active update will make them more
    complicated, so let's move them into helpers.
    
    - pwq_tryinc_nr_active() is added. It increments nr_active if under
      max_active limit and return a boolean indicating whether inc was
      successful. Note that the function is structured to accommodate future
      changes. __queue_work() is updated to use the new helper.
    
    - pwq_activate_first_inactive() is updated to use pwq_tryinc_nr_active() and
      thus no longer assumes that nr_active is under max_active and returns a
      boolean to indicate whether a work item has been activated.
    
    - wq_adjust_max_active() no longer tests directly whether a work item can be
      activated. Instead, it's updated to use the return value of
      pwq_activate_first_inactive() to tell whether a work item has been
      activated.
    
    - nr_active decrement and activating the first inactive work item is
      factored into pwq_dec_nr_active().
    
    v3: - WARN_ON_ONCE(!WORK_STRUCT_INACTIVE) added to __pwq_activate_work() as
          now we're calling the function unconditionally from
          pwq_activate_first_inactive().
    
    v2: - wq->max_active now uses WRITE/READ_ONCE() as suggested by Lai.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 6584970ff38fc8f875c683dbb47bb38d4132a528)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 22febf0228822b5e157670f2b6deef724a7465ae
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: Replace pwq_activate_inactive_work() with [__]pwq_activate_work()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 4c6380305d21e36581b451f7337a36c93b64e050 ]
    
    To prepare for unbound nr_active handling improvements, move work activation
    part of pwq_activate_inactive_work() into __pwq_activate_work() and add
    pwq_activate_work() which tests WORK_STRUCT_INACTIVE and updates nr_active.
    
    pwq_activate_first_inactive() and try_to_grab_pending() are updated to use
    pwq_activate_work(). The latter conversion is functionally identical. For
    the former, this conversion adds an unnecessary WORK_STRUCT_INACTIVE
    testing. This is temporary and will be removed by the next patch.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit f4505c2033ad25839f6fd9be6fc474b8306c44eb)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 74ff3ab35ee119f5be650428130d91c765714e90
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: Factor out pwq_is_empty()
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit afa87ce85379e2d93863fce595afdb5771a84004 ]
    
    "!pwq->nr_active && list_empty(&pwq->inactive_works)" test is repeated
    multiple times. Let's factor it out into pwq_is_empty().
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 70abdc2f6c906ffea699f6e0e08fcbd9437e6bcc)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d900b124e6eeb3024283369364b9311b10e56345
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jan 29 08:11:24 2024 -1000

    workqueue: Move pwq->max_active to wq->max_active
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit a045a272d887575da17ad86d6573e82871b50c27 ]
    
    max_active is a workqueue-wide setting and the configured value is stored in
    wq->saved_max_active; however, the effective value was stored in
    pwq->max_active. While this is harmless, it makes max_active update process
    more complicated and gets in the way of the planned max_active semantic
    updates for unbound workqueues.
    
    This patches moves pwq->max_active to wq->max_active. This simplifies the
    code and makes freezing and noop max_active updates cheaper too. No
    user-visible behavior change is intended.
    
    As wq->max_active is updated while holding wq mutex but read without any
    locking, it now uses WRITE/READ_ONCE(). A new locking locking rule WO is
    added for it.
    
    v2: wq->max_active now uses WRITE/READ_ONCE() as suggested by Lai.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 0c4ce23e6323e52d0590e78825cd3c63323d7a52)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 11553a75af6cb6f9519c0941307ae9cc8d82affd
Author: Audra Mitchell <audra@redhat.com>
Date:   Mon Jan 15 12:08:22 2024 -0500

    workqueue.c: Increase workqueue name length
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 31c89007285d365aa36f71d8fb0701581c770a27 ]
    
    Currently we limit the size of the workqueue name to 24 characters due to
    commit ecf6881ff349 ("workqueue: make workqueue->name[] fixed len")
    Increase the size to 32 characters and print a warning in the event
    the requested name is larger than the limit of 32 characters.
    
    Signed-off-by: Audra Mitchell <audra@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Stable-dep-of: 5797b1c18919 ("workqueue: Implement system-wide nr_active enforcement for unbound workqueues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit 43f0cec175f92c7a01e43d5d6f276262670a97ed)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8d3fa67ea006d91737dce0f861dc46ad16e4fde2
Author: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
Date:   Fri Jan 19 07:39:06 2024 -0800

    do_sys_name_to_handle(): use kzalloc() to fix kernel-infoleak
    
    BugLink: https://bugs.launchpad.net/bugs/2060097
    
    [ Upstream commit 3948abaa4e2be938ccdfc289385a27342fb13d43 ]
    
    syzbot identified a kernel information leak vulnerability in
    do_sys_name_to_handle() and issued the following report [1].
    
    [1]
    "BUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]
    BUG: KMSAN: kernel-infoleak in _copy_to_user+0xbc/0x100 lib/usercopy.c:40
     instrument_copy_to_user include/linux/instrumented.h:114 [inline]
     _copy_to_user+0xbc/0x100 lib/usercopy.c:40
     copy_to_user include/linux/uaccess.h:191 [inline]
     do_sys_name_to_handle fs/fhandle.c:73 [inline]
     __do_sys_name_to_handle_at fs/fhandle.c:112 [inline]
     __se_sys_name_to_handle_at+0x949/0xb10 fs/fhandle.c:94
     __x64_sys_name_to_handle_at+0xe4/0x140 fs/fhandle.c:94
     ...
    
    Uninit was created at:
     slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768
     slab_alloc_node mm/slub.c:3478 [inline]
     __kmem_cache_alloc_node+0x5c9/0x970 mm/slub.c:3517
     __do_kmalloc_node mm/slab_common.c:1006 [inline]
     __kmalloc+0x121/0x3c0 mm/slab_common.c:1020
     kmalloc include/linux/slab.h:604 [inline]
     do_sys_name_to_handle fs/fhandle.c:39 [inline]
     __do_sys_name_to_handle_at fs/fhandle.c:112 [inline]
     __se_sys_name_to_handle_at+0x441/0xb10 fs/fhandle.c:94
     __x64_sys_name_to_handle_at+0xe4/0x140 fs/fhandle.c:94
     ...
    
    Bytes 18-19 of 20 are uninitialized
    Memory access of size 20 starts at ffff888128a46380
    Data copied to user address 0000000020000240"
    
    Per Chuck Lever's suggestion, use kzalloc() instead of kmalloc() to
    solve the problem.
    
    Fixes: 990d6c2d7aee ("vfs: Add name to file handle conversion support")
    Suggested-by: Chuck Lever III <chuck.lever@oracle.com>
    Reported-and-tested-by: <syzbot+09b349b3066c2e0b1e96@syzkaller.appspotmail.com>
    Signed-off-by: Nikita Zhandarovich <n.zhandarovich@fintech.ru>
    Link: https://lore.kernel.org/r/20240119153906.4367-1-n.zhandarovich@fintech.ru
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    (cherry picked from commit bf9ec1b24ab4e94345aa1c60811dd329f069c38b)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5c25fe01da0cbd5603167f63937a1b02ab2cb682
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 26 08:46:34 2024 +0100

    UBUNTU: [Packaging] add Real-time Linux Analysis tool (rtla) to linux-tools
    
    BugLink: https://bugs.launchpad.net/bugs/2059080
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7d3ee63f862b1ee7fbd84809b7b4d2095c2e5484
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Apr 2 16:47:56 2024 +0200

    UBUNTU: SAUCE: rtla: fix deb build
    
    BugLink: https://bugs.launchpad.net/bugs/2059080
    
    We need to explicitly define build rules for C object files when
    building the deb, otherwise we may get the following build failure:
    
     make[1]: *** No rule to make target 'src/osnoise.o', needed by 'static'.  Stop.
    
    This doesn't seem to happen when building rtla manually, but we need
    it when we build the deb package, so add the extra rule to make the
    build more robust.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 027e8e777c5660341391df608415c686a2b46d11
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 22 07:54:42 2024 +0100

    UBUNTU: [Packaging] provide a wrapper module for python-perf
    
    BugLink: https://bugs.launchpad.net/bugs/2051560
    
    Provide a virtual python module wrapper to load the actual versioned
    python perf module, based on the running kernel version.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1385dd559a53c5bd4f90a7fcf7f5bcbaf70c7274
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 14 06:56:39 2024 +0100

    UBUNTU: [Packaging] enable perf python module
    
    BugLink: https://bugs.launchpad.net/bugs/2051560
    
    The perf python module is required by some tools (e.g., tuned) and we
    are not currently providing it.
    
    Enable it to be able to support tools that require this module.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 530e6e6d5bf75f99ca7f1e260f98f34b10d441c3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 6 19:49:15 2024 +0100

    UBUNTU: SAUCE: apparmor4.0.0: LSM stacking v39: fix build error with CONFIG_SECURITY=n
    
    When CONFIG_SECURITY=n we are not initializing lsmblob correctly in
    security_cred_getlsmblob().
    
    Fix by calling lsmblob_init() properly.
    
    Fixes: 4d652c1a90a7 ("UBUNTU: SAUCE: apparmor4.0.0 [13/87]: LSM stacking v39: LSM: Create new security_cred_getlsmblob LSM hook")
    Reported-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 16fbad77ac3736486360f847292dc782ee9eeec9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 14:41:07 2024 +0100

    UBUNTU: [Config] disable CONFIG_SECURITY_APPARMOR_RESTRICT_USERNS
    
    BugLink: https://bugs.launchpad.net/bugs/2028253
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 90872164fdbecd426ba7f7b39654988be3903736
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Mar 21 10:35:36 2024 +0100

    UBUNTU: SAUCE: apparmor4.0.0: fix reserved mem for when we save ipv6 addresses
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1ce88cb69cf045424f5f4ef2282853949daa1139
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Mar 19 05:33:08 2024 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [90/90]: apparmor: Fix notify build warnings
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Remove the static and unused build warnings from notify.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit a22e22ecf2fd281c16b1c62976489944088bc689
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6e8547b86e40d1e91e400cb43628b7bd5656cb37
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Mar 19 05:26:10 2024 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [89/90]:apparmor: disable tailglob responses for now
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Tailglob responses are currently unused, and there are a few bugs
    that need to be fixed. Sp just disable access.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 7cdddcf0388b3d215dd0a87ca6a9c8b24ce1e780
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d288966ab5fc385f4a7d59919db9d966dbce9ba6
Author: John Johansen <john.johansen@canonical.com>
Date:   Sat Oct 9 02:30:41 2021 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [88/90]: apparmor: add fine grained ipv4/ipv6 mediation
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    Buglink: https://bugs.launchpad.net/bugs/2056496
    
    Add the ability to mediate inet access at a port and address level.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit fefa3cec7db83b9a0dd1a339f7c8d76c0b820ad8
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 535c85f6b5e9e0d5d6fa95d11c655bf35947d705
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Jan 21 16:43:25 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [87/90]: fixup notify
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    (cherry picked from commit fb00e41adbe0c5c0e0f2bcaaf2949fec00b2a941
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c6e4b628ecc89c14dd0d8d15bd99292c095cef2c
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Jan 4 09:00:49 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [86/90]: apparmor: add ability to mediate caps with policy state machine
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Currently the caps encoding is very limited. Allow capabilities to
    be mediated by the state machine. This will allow us to add
    conditionals to capabilities that aren't possible with the current
    encoding.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit bb78e87633afdf5e4b7dc0b2c857f61e97369068
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1dbaaab602281c1158969a5777d5f19683a2fe1d
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Jan 3 21:56:19 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [85/90]: apparmor: allow profile to be transitioned when a user ns is created
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    User namespaces are used to create sandboxes and often need a different
    set of permission than during setup. Allow for a profile state change
    on the task creating the namespace.
    
    The transition is encoded the same as exec domain transitions and
    only uses a subset of the transitions available at exec. Enivronment
    scrubbing etc are not available.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 90f73560fd8dfec350c62a630a9f5719e1da2f23
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 585383f4775b03bb82857dca88647b8574b393b0
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Jan 2 21:54:30 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [84/90]: apparmor: fix x_table_lookup when stacking is not the first entry
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    x_table_lookup currently does stacking during label_parse() if the
    target specifies a stack but its only caller ensures that it will
    never be used with stacking.
    
    Refactor to slightly simplify the code between in x_to_label(), this
    also fixes a long standing problem where x_to_labels check on stacking
    is only on the first element to the table option list, instead of
    the element that is found and used.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 4faf1d74aba271957f81e00109223a771b5f96a4
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab69617a34eabe534bb86b56be969da0739d51eb
Author: John Johansen <john.johansen@canonical.com>
Date:   Mon Aug 21 16:54:58 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [83/90]: apparmor: add support for profiles to define the kill signal
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Previously apparmor has only sent SIGKILL but there are cases where
    it can be useful to send a different signal. Allow the profile
    to optionally specify a different value.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 22763bfcc93238f352eca731fae8a25d21aa4683
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 217347ded72f44b787f4529a39381f2876af8cff
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Jul 23 02:30:33 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [82/90]: apparmor: add additional flags to extended permission.
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    With the switch to extended permissions the ACCEPT2 became unused
    freeing up to store state specific flags. The first flags to be
    stored are FLAG_OWNER and FLAG other which paves the way to final
    merge file and policydb perms into a single permission table.
    
    Lookups based on the objects ownership conditional will still need
    separate fns, for now. But make the function slightly more generic
    instead of being dedicated to to file permission.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 6513003de9c049192edc3c17bb1bc793d0875790
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b2a27af467a524da997723214c2c51545e65a00
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Nov 30 11:48:33 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [81/90]: apparmor: convert easy uses of unconfined() to label_mediates()
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    This begins the transition from doing a broad unconfined() check to a
    finer label_mediates() check. Not only does this allow for finer control
    but it simplifies some code paths, removing redundant checks, will allow
    us to refactor and simplify the code more, and is generally a small
    performance win.
    
    Note: capabilities and resource need to be converted to use pdb
          before they can use label_mediates
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit d9b866dc2f134a9e8dc21dbfacc935f454896c49
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eae8b1449e19224f25ad13ce39532b966fb233d7
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Oct 27 10:31:06 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [80/90]: apparmor: carry mediation check on label
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    In order to speed up the mediated check, precompute and store the
    result as a bit per class type. This not only will allow us to
    speed up the mediation check but is also a step to removing the
    unconfined special cases as the unconfined check can be replaced
    with the generic label_mediates() check.
    
    need to compute initial profile mediated bit vector
    
    Note: label check does not work for capabilities and resources
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit d8719977bc2bea2969846a49acfbabf06572ee1f
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a73a48ed8a097d04999c03714e7856eb1f82c275
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Jan 19 01:23:55 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [79/90]: apparmor: cleanup: refactor file_perm() to provide semantics of some checks
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Provide semantics for some checks being done in file_perm(). This is
    a preparatory patch for improvements to both permission caching and
    delegation, where the check will become more involved.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 90580e2fd42b8e8c8e03d9554b8a36139436d4e8
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 20d003edf7c4fdd784e20466631f97203f9f4a44
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Jan 19 00:24:03 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [78/90]: apparmor: remove explicit restriction that unconfined cannot use change_hat
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    There does not need to be an explicit restriction that unconfined
    can't use change_hat. Traditionally unconfined doesn't have hats
    so change_hat could not be used. But newer unconfined profiles have
    the potential of having hats, and even system unconfined will be
    able to be replaced with a profile that allows for hats.
    
    To remain backwards compitible with expected return codes, continue
    to return -EPERM if the unconfined profile does not have any hats.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 743c6fbedea1e07fd7226380c758ebe9c140247c
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7f45056d813f4e854dba734de4517e1d6a829932
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Jan 19 00:12:16 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [77/90]: apparmor: ensure labels with more than one entry have correct flags
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    labels containing more than one entry need to accumulate flag info
    from profiles that the label is constructed from. This is done
    correctly for labels created by a merge but is not being done for
    labels created by an update or directly created via a parse.
    
    This technically is a bug fix, however the effect in current code is
    to cause early unconfined bail out to not happen (ie. its slower) on
    labels that were created via update or a parse.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 057bf67d3bd3cd439d9917c94ed1dc146e6ff91a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit faef7c828f052901bd014506216680d1b0b29271
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Jan 29 02:13:56 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [76/90]: apparmor: switch signal mediation to using RULE_MEDIATES
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Currently signal mediation is using a hard coded form of the
    RULE_MEDIATES check. This means it won't atomatically pickup any
    changes or improvements in the check. Switch to using RULE_MEDIATES.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit dfef56d8135636988a8a3bfc98d3887446993993
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ecb1df525a1ecdb856977b84a6208c27adeaf939
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Jan 29 01:55:03 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [75/90]: apparmor: remove redundant unconfined check.
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    profile_af_perm and profile_af_sk_perm are only ever called after
    checking that the profile is not unconfined.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 47a4d61cc235c957e264e9f12fd126ed8e012a23
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e94a641f59b66c09e23c7cd4ab9fbe06d993d648
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Nov 16 22:17:09 2022 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [74/90]: apparmor: cleanup attachment perm lookup to use lookup_perms()
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Another step towards unifying the permission lookups, and reducing
    code duplication.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from commit 99c19bcc8b4264843406c9d25beb4a47943c9c58
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ba9305aae2a2890551b2ce11dcd357f6aa6d1271
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Oct 25 05:31:30 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [73/90]: apparmor: open userns related sysctl so lxc can check if restriction are in place
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    https://github.com/canonical/lxd/issues/11920#issuecomment-1756110109
    
    lxc and lxd currently need to determine if the apparmor restriction
    on unprivileged user namespaces are being enforced, so that apparmor
    restrictions won't break lxc/d, and they won't clutter the logs
    by doing something like
    
      unshare true
    
    to test if the restrictions are being enforced.
    
    Ideally access to this information would be restricted so that any
    unknown access would be logged, but lxc/d currently aren't ready for
    this so in order to _not_ force lxc/d to probe whether enforcement is
    enabled, open up read access to the sysctls for unprivileged user
    namespace mediation.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    (cherry picked from commit d01793e1bc8d07e3f04e710942ad057b0908e1ed
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 06ab20a4ba7bb1b1e36b7931b84d62861076d419
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Oct 25 05:31:29 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [72/90]: apparmor: fix request field from a prompt reply that denies all access
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    A reply to a prompt request that denies all permissions requested will
    throw the following warning, because the auditing code does not expect
    the request field to be empty when generating the audit message.
    
    Sep 27 22:48:14 ubuntu-mantic snapd[596]: listener.go:189: Sending access response back to kernel: {MsgNotification:{MsgHeader:{Length:0 Version:0} NotificationType:APPARMOR_NOTIF_RESP Signalled:0 NoCache:1 ID:2 Error:0} Error:-13 Allow:0 Deny:4}
    Sep 27 22:48:14 ubuntu-mantic kernel: ------------[ cut here ]------------
    Sep 27 22:48:14 ubuntu-mantic kernel: AppArmor WARN aa_audit_file: ((!ad.request)):
    Sep 27 22:48:14 ubuntu-mantic kernel: WARNING: CPU: 3 PID: 2082 at security/apparmor/file.c:268 aa_audit_file+0x2b1/0x310
    Sep 27 22:48:14 ubuntu-mantic kernel: Modules linked in: snd_seq_dummy snd_hrtimer snd_seq_midi snd_seq_midi_event snd_rawmidi snd_seq snd_seq_device snd_timer snd soundcore binfmt_misc nls_iso8859_1 kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul polyval_clmulni polyval_generic ghash_clmulni_intel sha512_ssse3 aesni_intel virtio_gpu crypto_simd cryptd virtio_dma_buf drm_shmem_helper 9pnet_virtio drm_kms_helper 9pnet vmw_vsock_virtio_transport virtio_input vmw_vsock_virtio_transport_common input_leds joydev serio_raw vsock msr parport_pc ppdev lp parport drm virtiofs efi_pstore ip_tables x_tables autofs4 virtio_net xhci_pci ahci psmouse net_failover libahci xhci_pci_renesas failover virtio_rng
    Sep 27 22:48:14 ubuntu-mantic kernel: CPU: 3 PID: 2082 Comm: bash Not tainted 6.5.0-5-generic #5+aa4.0.0+debug5-Ubuntu
    Sep 27 22:48:14 ubuntu-mantic kernel: Hardware name: QEMU Standard PC (Q35 + ICH9, 2009)/LXD, BIOS unknown 2/2/2022
    Sep 27 22:48:14 ubuntu-mantic kernel: RIP: 0010:aa_audit_file+0x2b1/0x310
    Sep 27 22:48:14 ubuntu-mantic kernel: Code: 3c ff ff ff e8 80 6f a8 ff 44 8b 95 3c ff ff ff 5a 59 e9 e3 fe ff ff 48 c7 c6 98 5c 08 84 48 c7 c7 90 1a 60 84 e8 9f da 9d ff <0f> 0b 8b 85 78 ff ff ff e9 05 ff ff ff 48 89 de 4c 89 f7 e8 b7 f5
    Sep 27 22:48:14 ubuntu-mantic kernel: RSP: 0018:ffffb66a82b57968 EFLAGS: 00010246
    Sep 27 22:48:14 ubuntu-mantic kernel: RAX: 0000000000000000 RBX: ffffb66a82b57b24 RCX: 0000000000000000
    Sep 27 22:48:14 ubuntu-mantic kernel: RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
    Sep 27 22:48:14 ubuntu-mantic kernel: RBP: ffffb66a82b57a30 R08: 0000000000000000 R09: 0000000000000000
    Sep 27 22:48:14 ubuntu-mantic kernel: R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    Sep 27 22:48:14 ubuntu-mantic kernel: R13: ffff8b160239d800 R14: ffffb66a82b57970 R15: 0000000000000001
    Sep 27 22:48:14 ubuntu-mantic kernel: FS:  00007f1f7d3b3380(0000) GS:ffff8b17778c0000(0000) knlGS:0000000000000000
    Sep 27 22:48:14 ubuntu-mantic kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    Sep 27 22:48:14 ubuntu-mantic kernel: CR2: 000055d4482063f0 CR3: 0000000137e64000 CR4: 0000000000750ee0
    Sep 27 22:48:14 ubuntu-mantic kernel: PKRU: 55555554
    Sep 27 22:48:14 ubuntu-mantic kernel: Call Trace:
    Sep 27 22:48:14 ubuntu-mantic kernel:  <TASK>
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? show_regs+0x6d/0x80
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? __warn+0x89/0x160
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? aa_audit_file+0x2b1/0x310
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? report_bug+0x17e/0x1b0
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? handle_bug+0x51/0xa0
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? exc_invalid_op+0x18/0x80
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? asm_exc_invalid_op+0x1b/0x20
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? aa_audit_file+0x2b1/0x310
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? aa_audit_file+0x2b1/0x310
    Sep 27 22:48:14 ubuntu-mantic kernel:  __aa_path_perm+0xaf/0x130
    Sep 27 22:48:14 ubuntu-mantic kernel:  aa_path_perm+0xf1/0x1c0
    Sep 27 22:48:14 ubuntu-mantic kernel:  apparmor_file_open+0x1bb/0x2e0
    Sep 27 22:48:14 ubuntu-mantic kernel:  security_file_open+0x2e/0x60
    Sep 27 22:48:14 ubuntu-mantic kernel:  do_dentry_open+0x10d/0x530
    Sep 27 22:48:14 ubuntu-mantic kernel:  vfs_open+0x33/0x50
    Sep 27 22:48:14 ubuntu-mantic kernel:  do_open+0x2ed/0x470
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? path_init+0x59/0x3d0
    Sep 27 22:48:14 ubuntu-mantic kernel:  path_openat+0x135/0x2d0
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? _raw_spin_unlock+0xe/0x40
    Sep 27 22:48:14 ubuntu-mantic kernel:  do_filp_open+0xaf/0x170
    Sep 27 22:48:14 ubuntu-mantic kernel:  do_sys_openat2+0xb3/0xe0
    Sep 27 22:48:14 ubuntu-mantic kernel:  __x64_sys_openat+0x55/0xa0
    Sep 27 22:48:14 ubuntu-mantic kernel:  do_syscall_64+0x59/0x90
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? handle_mm_fault+0xad/0x360
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? do_user_addr_fault+0x238/0x6b0
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? exit_to_user_mode_prepare+0x30/0xb0
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? irqentry_exit_to_user_mode+0x17/0x20
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? irqentry_exit+0x43/0x50
    Sep 27 22:48:14 ubuntu-mantic kernel:  ? exc_page_fault+0x94/0x1b0
    Sep 27 22:48:14 ubuntu-mantic kernel:  entry_SYSCALL_64_after_hwframe+0x6e/0xd8
    Sep 27 22:48:14 ubuntu-mantic kernel: RIP: 0033:0x7f1f7d4cdbcc
    Sep 27 22:48:14 ubuntu-mantic kernel: Code: 24 18 31 c0 41 83 e2 40 75 44 89 f0 25 00 00 41 00 3d 00 00 41 00 74 36 44 89 c2 4c 89 ce bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 77 44 48 8b 54 24 18 64 48 2b 14 25 28 00 00 00
    Sep 27 22:48:14 ubuntu-mantic kernel: RSP: 002b:00007fff2a1d1280 EFLAGS: 00000287 ORIG_RAX: 0000000000000101
    Sep 27 22:48:14 ubuntu-mantic kernel: RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f1f7d4cdbcc
    Sep 27 22:48:14 ubuntu-mantic kernel: RDX: 0000000000090800 RSI: 000055b5d4043c40 RDI: 00000000ffffff9c
    Sep 27 22:48:14 ubuntu-mantic kernel: RBP: 000055b5d4043c40 R08: 0000000000090800 R09: 000055b5d4043c40
    Sep 27 22:48:14 ubuntu-mantic kernel: R10: 0000000000000000 R11: 0000000000000287 R12: 000055b5d4043c20
    Sep 27 22:48:14 ubuntu-mantic kernel: R13: 000055b5d34637f8 R14: 000055b5d4043c00 R15: 000055b5d40436a0
    Sep 27 22:48:14 ubuntu-mantic kernel:  </TASK>
    Sep 27 22:48:14 ubuntu-mantic kernel: ---[ end trace 0000000000000000 ]---
    
    Note: this does not change the mediation, it just ensures the assert in
    the audit path does not trigger, polluting dmesg and the kernel audit log.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    (cherry picked from commit 4deb028340a4103e6147f27b5fb4d0a4814ded2f
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7b2038b8c835a42773ea003130f8f107fa181383
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Oct 25 05:31:28 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [71/90]: apparmor: fix notification header size
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    When strings are appended to the notification the header size should
    be updated to reflect the correct size. While the size is also
    directly returned as part of delivering the notification, the header
    should also be update to conform to specification and allow for
    verification.
    
    If verification is enabled and the notification contains appended
    strings then notifications fail verification and won't be delivered.
    
    Fixes: 9a3b87d8b9a0 ("UBUNTU: SAUCE: apparmor4.0.0 [64/76]: prompt - rework build to use append fn, to simplify adding strings")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    (cherry picked from commit 261046b85377c244511fbe4796e3283fe5a09381
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 87692f11d1093498eb4d9929a1cd54db3d5bb0b9
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Oct 25 05:31:27 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [70/90]: apparmor: fix oops when racing to retrieve notification
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    When there is a race to receive a notification, the failing tasks
    oopes when erroring
    
    [  196.140990] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [  196.140995] #PF: supervisor read access in kernel mode
    [  196.140996] #PF: error_code(0x0000) - not-present page
    [  196.140997] PGD 0 P4D 0
    [  196.140999] Oops: 0000 [#1] PREEMPT SMP NOPTI
    [  196.141001] CPU: 0 PID: 2316 Comm: aa-prompt Not tainted 6.5.0-9-generic #9-Ubuntu
    [  196.141004] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014
    [  196.141005] RIP: 0010:aa_listener_unotif_recv+0x11d/0x260
    [  196.141011] Code: ff ff ff 8b 55 d0 48 8b 75 c8 4c 89 ef e8 6b db ff ff 49 89 c2 48 85 c0 0f 88 c0 00 00 00 0f 84 25 ff ff ff 8b 05 3b 1c 1f 03 <49> 8b 55 00 83 e0 20 83 7a 08 07 74 66 85 c0 0f 85 01 01 00 00 48
    [  196.141012] RSP: 0018:ffffa2674075fdd8 EFLAGS: 00010246
    [  196.141014] RAX: 0000000000000000 RBX: ffff974507a08404 RCX: 0000000000000000
    [  196.141017] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
    [  196.141017] RBP: ffffa2674075fe10 R08: 0000000000000000 R09: 0000000000000000
    [  196.141018] R10: fffffffffffffffe R11: 0000000000000000 R12: ffff974507a08400
    [  196.141019] R13: 0000000000000000 R14: ffff974507a08430 R15: ffff97451de00a00
    [  196.141020] FS:  00007f4ab6b30740(0000) GS:ffff97486fa00000(0000) knlGS:0000000000000000
    [  196.141022] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  196.141024] CR2: 0000000000000000 CR3: 0000000104cf2003 CR4: 0000000000770ef0
    [  196.141026] PKRU: 55555554
    [  196.141027] Call Trace:
    [  196.141032]  <TASK>
    [  196.141034]  ? show_regs+0x6d/0x80
    [  196.141041]  ? __die+0x24/0x80
    [  196.141043]  ? page_fault_oops+0x99/0x1b0
    [  196.141047]  ? do_user_addr_fault+0x316/0x6b0
    [  196.141048]  ? filemap_map_pages+0x2b3/0x460
    [  196.141056]  ? exc_page_fault+0x83/0x1b0
    [  196.141068]  ? asm_exc_page_fault+0x27/0x30
    [  196.141079]  ? aa_listener_unotif_recv+0x11d/0x260
    [  196.141081]  ? aa_listener_unotif_recv+0x184/0x260
    [  196.141083]  listener_ioctl+0x1e1/0x260
    [  196.141090]  __x64_sys_ioctl+0xa0/0xf0
    [  196.141092]  do_syscall_64+0x59/0x90
    [  196.141094]  ? do_user_addr_fault+0x238/0x6b0
    [  196.141095]  ? exit_to_user_mode_prepare+0x30/0xb0
    [  196.141100]  ? irqentry_exit_to_user_mode+0x17/0x20
    [  196.141104]  ? irqentry_exit+0x43/0x50
    [  196.141106]  ? exc_page_fault+0x94/0x1b0
    [  196.141107]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8
    [  196.141109] RIP: 0033:0x7f4ab69238ef
    [  196.141124] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 <89> c2 3d 00 f0 ff ff 77 18 48 8b 44 24 18 64 48 2b 04 25 28 00 00
    [  196.141125] RSP: 002b:00007ffd607a9020 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [  196.141127] RAX: ffffffffffffffda RBX: 00007ffd607a9100 RCX: 00007f4ab69238ef
    [  196.141128] RDX: 00007ffd607a9100 RSI: 00000000c008f804 RDI: 0000000000000003
    [  196.141128] RBP: 0000000000000003 R08: 0000000000000001 R09: 00007f4ab6b30740
    [  196.141129] R10: 00007f4ab6b7f0a0 R11: 0000000000000246 R12: 00007ffd607a90a0
    [  196.141130] R13: 00007ffd607a90dc R14: 0000559564822c10 R15: 0000000000031000
    [  196.141131]  </TASK>
    [  196.141132] Modules linked in: snd_seq_dummy snd_hrtimer binfmt_misc nls_iso8859_1 intel_rapl_msr intel_rapl_common snd_hda_codec_generic ledtrig_audio snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_hda_codec snd_hda_core snd_hwdep snd_pcm kvm_intel snd_seq_midi snd_seq_midi_event kvm irqbypass crct10dif_pclmul polyval_clmulni polyval_generic ghash_clmulni_intel aesni_intel crypto_simd cryptd rapl joydev snd_rawmidi snd_seq i2c_i801 i2c_smbus snd_seq_device snd_timer qxl snd drm_ttm_helper lpc_ich soundcore ttm 9pnet_virtio 9pnet drm_kms_helper input_leds mac_hid serio_raw nfsd msr parport_pc auth_rpcgss ppdev nfs_acl lockd grace lp parport drm efi_pstore sunrpc dmi_sysfs qemu_fw_cfg ip_tables x_tables autofs4 hid_generic usbhid hid ahci crc32_pclmul psmouse xhci_pci libahci virtio_rng xhci_pci_renesas
    [  196.141190] CR2: 0000000000000000
    [  196.141190] ---[ end trace 0000000000000000 ]---
    
    Fixes: e07417682502 ("UBUNTU: SAUCE: apparmor4.0.0 [61/76]: prompt - refactor to moving caching to uresponse")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    (cherry picked from commit beeab9657a0efbba564ca67b85630f34a84cb092
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f6aaa3baf89efbd1c812603328c3b672b8f78678
Author: Georgia Garcia <georgia.garcia@canonical.com>
Date:   Mon Mar 20 14:43:41 2023 -0300

    UBUNTU: SAUCE: apparmor4.0.0 [69/90]: add io_uring mediation
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    For now, the io_uring mediation is limited to sqpoll and
    override_creds.
    
    Signed-off-by: Georgia Garcia <georgia.garcia@canonical.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit d4bbbd67b37fb77205cef0c175dd6f88cf37fdaa
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 06fe2107ec2aed4a90f7b18ff58b10865746acd2
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Jun 22 15:55:31 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [68/90]: userns - make it so special unconfined profiles can mediate user namespaces
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Currently unconfined profiles are entirely governed by the sysctl.
    However we want to allow for named unconfined profiles to treat user
    ns mediation like other profiles.
    
    Allow unconfined profiles to mediate user ns creation using the standard
    mediates() mechanisms.
    
    When these profiles choose not to unmediated user namespaces they behave
    like the system unconfined profile. That is the sysctl will determine
    whether unprivileged unconfined processes can create user namespaces.
    
    Other wise the profiles rules control the behavior.
    
    BugLink: http://bugs.launchpad.net/bugs/2032602
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 5adeeaf4f9e54ebf9e46ea1babe81f381390dbe2
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 368df10ece47e6387fcf61dc211696a3a548278c
Author: John Johansen <john.johansen@canonical.com>
Date:   Mon Aug 28 10:10:20 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [67/90]: userns - add the ability to reference a global variable for a feature value
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Some features when present can be turned on/off by boot parameters.
    Allow for a reference type to allow the features directory to
    reflect whether the feature is currently enabled.
    
    BugLink: http://bugs.launchpad.net/bugs/2032602
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 965de04e35f281306b1783e94500fff6ea5c8dae
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b0a2dc0c978ae62edd113de836fda1911c8c45de
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Aug 22 09:27:57 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [66/90]: prompt - add support for advanced filtering of notifications
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Simple filtering based off of type (ALLOWED, DENIED, ...) is
    insufficient for several user cases.
    
    Allow for a dfa based filter that can be combined with type
    to further screen notifications to specific labels, classes
    of mediation and even the permission request.
    
    BugLink: http://bugs.launchpad.net/bugs/2032602
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 60b7d6660330beee97539ed233854a81f30aabd2
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 323870229c35de735b316f8b4bdff42c58dba04b
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Jan 21 15:51:46 2024 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [65/90] v6.8 prompt:fixup interruptible
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    (cherry picked from commit c1a3d39f39337a36a0123f3f34e2ecc1ad0bdede
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 83b196ec9e717aa4697339268b85f76f870a8b49
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Aug 22 00:19:29 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [64/90]: prompt - allow profiles to set prompts as interruptible
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Generally prompts can't be interruptible because there are too many
    applications that don't handle ERESTARTSYS correctly. This can lead
    to random failures that result in a very poor experience.
    
    However allowing upcalls to interruptible is very useful sometimes,
    especially with some debugging so provide away for policy to allow
    it.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit a8d78d6106d8f3e6fff64137f29aaa42607eba2c
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f3cd321439c041bd733959689649032399e0d563
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu May 4 02:28:09 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [63/90]: prompt - add tailglob on name for cache support
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Allow the cache to cover more than a single rejection by allowing
    an entry to match everything that would match a tailglob expression.
    This allows a reduction of cache entries and a reduction of prompts
    to userspace when access to a directory hierarchy should be allowed
    or denied.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 66c531b9ce8499689677fd4e9e08817dea4fae47
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65ddf2cc430def7d4d8f20d92c04a420037054b3
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Sep 5 13:53:08 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [62/90]: prompt - fix notification cache when updating
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The notification cache when updating doesn't take into account allowed
    permissions that did not go to the user upcall as part of a deny.
    If userspace only replies to the deny portion of the notification
    then the allowed permissions won't be added to the cache.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 511a94675973ca94e872e7afaca09006e0134742
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7aa9ab3d3f8ba28eb7a116ae59b0455926fe9876
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu May 4 01:33:56 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [61/90]: prompt - add the ability to reply with a profile name
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    BugLink: https://bugs.launchpad.net/bugs/2028253
    
    Add the ability to extend a profile with another profiles base rule
    set as a reply to a prompt.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 56bf6533b2c415700a366ca6b675775e57ec4816
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8aafc484d01cc35dbe65cf4826225747650b11f3
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed May 3 12:23:15 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [60/90]: prompt - refcount notifications
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Prepare for separating the knotif from the audit_node. Currently all
    knotifs have an audit node but in able to support new features this
    won't always be the case. Prepare for this split by refcounting the
    knotif.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit c5d575b9f515f14795b0bcbb478499eea80767b7
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e2e76cea390fd456b30ea8136a9e3c32e47496a5
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue May 2 21:46:29 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [59/90]: prompt - rework build to use append fn, to simplify adding strings
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    appending strings to a message is a kludgy and error prone. Add a
    helper function.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit e3d4f39dc2c3fb2be33a41c93de52bc4929a3c2f
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e0413dfdfab3a550c744711c1cf9a7ff411bb5e5
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Aug 24 23:45:57 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [58/90]: prompt - fix caching
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add fixes to prompt caching discovered with the new debug output.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 69e13f9586e6289a3192e5d02de2dfb5e3948c92
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 138705cf4e39eaf373132b1c19f13b280b0a7005
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue May 2 04:57:07 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [57/90]: prompt - Improve debug statements
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Prompting debug is missing some output that can be helpful when
    debugging.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 566e51cd6a4284623362c0a925e410160d84a56a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 28f934674cd3a826cd08a9140edc39b8cd7bf2d2
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue May 2 01:46:35 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [56/90]: prompt - refactor to moving caching to uresponse
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    To be able to be more responsive to prompt return values refactor the
    code more to make caching operations distinct from user interaction
    and move adding to the cache into the uresps side, so actions don't
    have to be passed back to the paused process.
    
    This is a step towards allowing response that will use a named
    response instead of permissions and also allow for reuse of knotif
    for notifications, heartbeat and canceled.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit f3dbf86be0c1d27e61e69abd7c8ed7b42e46e3a8
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 44c6addfa33af72d4811e42cb529a17bc781156d
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Apr 30 01:27:57 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [55/90]: prompt - add refcount to audit_node in prep or reuse and delete
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The audit_node needs to be shared for asynchronous notifications to
    multiple listeners. So add a refcount to enable sharing.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit bbebba69241db7470d5b389ae0bbb3524b02c04c
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d89f39873c6bb4ff63119b33d419aa6d6c2bac55
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Apr 12 22:32:01 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [54/90]: prompt - allow controlling of caching of a prompt response
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Allow the user response to indicate whether a response should be
    cached or not.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 5ea8f857b8a8b8bfc78b492dc662d7c145407427
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 90a2f0e4b8d2e7216214c7a8192f277c5d704418
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Aug 22 01:33:03 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [53/90]: prompt - lock down prompt interface
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    While the prompt interface is supposed to be open and permissions
    handled via namespacing. There are no current users that require
    it be open and there are some namespacing issues that need to
    be resolved. So Lock the interface down until the namespacing
    issues are all fixed.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit c0b0f5b09a8996e54194b4c1559a7c9292352fff
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0a4dccb51058c7320790c76f09716bd6b73a1245
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Nov 13 03:48:01 2019 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [52/90]: enable userspace upcall for mediation
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    There are cases where userspace can provide additional information
    that may be needed to make the correct mediation decision.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit c0cb33a681e82df1fda919edfd49fb7cf09615f3
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5898fa24b0b1e0f2fb92548c84d7707b7175077b
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Sep 18 23:55:00 2022 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [51/90]: add the ability for profiles to have a learning cache
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    To support a better complain mode allow caching learned entries off
    of the profile. This can be used to dedup complain messages and
    also as a basis for bulk delivery of complain messages to userspace
    through a non audit logging interface.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit ee3bb68e2d8dde5bc314c7ec7bf5cad3afab694a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bf4940c85026481b2f45493bd456bc4fa20b92e0
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Sep 23 16:36:10 2022 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [50/90]: Improve debug print infrastructure
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Make it so apparmor debug output can be controlled by class flags
    as well as the debug flag on labels. This provides much finer
    control at what is being output so apparmor doesn't flood the
    logs with information that is not needed, making it hard to find
    what is important.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit ad39d2bf13cf58ee3145c09b32cd45f86753e505
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0545fa85e89ce14b5ead30c67cb9493bd0bec0a1
Author: John Johansen <john.johansen@canonical.com>
Date:   Mon Sep 12 19:15:02 2022 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [49/90]: setup slab cache for audit data
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Audit data will be used for caches and learning. When this happens the
    data needs to be off of the stack and a slab cache will help with
    improve the dynamic allocation, and reduce overall size used.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit dce7014f7313db5f1af2ef9a04f3fc3a00e38fae
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 09dcaed0a8128e3977f3fc2ecee0cc82f743dbbf
Author: John Johansen <john.johansen@canonical.com>
Date:   Mon Dec 13 15:46:09 2021 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [48/90]: Add fine grained mediation of posix mqueues
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add fine grained mediation of posix mqueues. Specifically this patch
    adds support for differentiating mqueues based on the name in the ipc
    namespace. A follow on patch will add support for implied labels, and
    a third patch explicit labels. This is done in part because of
    dependencies on other patches to apparmor core.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 5de4e990b8c3297eebc2470c0dda6acb6c741a71
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3783b6ce649db351164da880d32643682b37023c
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Sep 7 12:46:30 2022 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [47/90]: af_unix mediation
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    af_socket mediation did not make it into 4.17 so add remaining out
    of tree patch
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 651f0b2cc1d78cb7afbc0fcadc166ed0bcc78dd3
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8d5bed800393eb750ab91a1fdd691e976af815fc
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Oct 23 04:03:50 2022 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [46/90]: Add sysctls for additional controls of unpriv userns restrictions
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add apparmor_restrict_unprivileged_userns_force
      To force old policies that don't support user namespace restrictions
      to apply them anyways.
    
    Add apparmor_restrict_unprivileged_userns_complain
      To cause user namespace restrictions to complain instead of fail.
      This will work on both profiles and unconfined.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    
    fixup userns
    
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 13890cd37e28953bcf321d7ccad7ae50377e672f
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cbf1904db99e9704482a2399ef7550408e40539f
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Sep 9 16:00:09 2022 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [45/90]: add unpriviled user ns mediation
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Unprivileged user namespace creation is often used as a first step
    in privilege escalation attacks. Instead of disabling it at the
    sysrq level, which blocks its legitimate use as for setting up a sandbox,
    allow control on a per domain basis.
    
    This allows an admin to quickly lock down a system while also still
    allowing legitimate use.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit 98624b0de733fca44a790db0e78090dc77919fbd
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a89065da4567f627781ce50dd06504c5c93a198a
Author: John Johansen <john.johansen@canonical.com>
Date:   Sun Jun 17 03:56:25 2018 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [44/90]: patch to provide compatibility with v2.x net rules
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The networking rules upstreamed in 4.17 have a deliberate abi break
    with the older 2.x network rules.
    
    This patch provides compatibility with the older rules for those
    still using an apparmor 2.x userspace and still want network rules
    to work on a newer kernel.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit fdb71a3190842ca72ca1a84db6b5d6fb6e73b1fc
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6adffd9bf6ffca25cccf41f3185f4f7a8e346813
Author: John Johansen <john.johansen@canonical.com>
Date:   Mon May 1 18:20:25 2017 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [43/90]: LSM stacking v39: UBUNTU: SAUCE: apparmor4.0.0 [12/95]: add/use fns to print hash string hex value
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    (cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from commit f29a03f77b0c72a62fe44e1b1942d7e497b32fd5
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 320b6466b12a30b87ad6cc7e9f32fedc66529e7c
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Nov 6 15:26:06 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [42/90]: LSM stacking v39: Smack: Remove LSM_FLAG_EXCLUSIVE
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Smack no longer has any behaviors that require LSM_FLAG_EXCLUSIVE.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 531a65b3bba0443d5c05ae0c65f4d08dd631feb1
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4d9f4edaed03b6ef29d38bd73fa4e60d5c8e9151
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Nov 6 11:02:57 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [41/90]: LSM stacking v39: LSM: restrict security_cred_getsecid() to a single LSM
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The LSM hook security_cred_getsecid() provides a single secid
    that is only used by the binder driver. Provide the first value
    available, and abandon any other hooks.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 99a7fdaa09799cce3cbdfd5acacf120b7ba4daca
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e2e0dacac01bc7b9f246ad07525d180099f75c33
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Dec 11 12:46:14 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [40/90]: LSM stacking v39: LSM: Allow reservation of netlabel
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Allow LSMs to request exclusive access to the netlabel facility.
    Provide mechanism for LSMs to determine if they have access to
    netlabel. Update the current users of netlabel, SELinux and Smack,
    to use and respect the exclusive use of netlabel.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit ae3fd34fef7a12601d5abf3471b269b86080104d
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7f487b38cbf85935754337204acfa545ec67ba21
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Nov 16 12:59:39 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [39/90]: LSM stacking v39: LSM: Remove lsmblob scaffolding
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Remove the scaffold member from the lsmblob. Remove the
    remaining places it is being set.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit e292f430ce1dccc78725662677c4977f9e6e3d6d
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 01acad2a0dca7d292174cd5edf1e7b3517b227be
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Oct 26 12:52:55 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [38/90]: LSM stacking v39: LSM: Correct handling of ENOSYS in inode_setxattr
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The usual "bail on fail" behavior of LSM hooks doesn't
    work for security_inode_setxattr(). Modules are allowed
    to return -ENOSYS if the attribute specified isn't one
    they manage. Fix the code to accommodate this unusal case.
    This requires changes to the hooks in SELinux and Smack.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit e4091685f2fa95d8746784180086c24617cbe881
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e21e5ddbf21314ebbd6dc35dac6f693e8e767a33
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Nov 16 11:47:29 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [37/90]: LSM stacking v39: LSM: Infrastructure management of the mnt_opts security blob
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Move management of the mnt_opts->security blob out of the
    individual security modules and into the security
    infrastructure. Blobs are atill allocated within the modules
    as they are only required when mount options are present.
    The modules tell the infrastructure how much space is required,
    and the space is allocated if needed. Modules can no longer
    count on the presence of a blob implying that mount options
    specific to that module are present, so flags are added
    to the module specific blobs to indicate that this module
    has options.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit f1a60cb717d4684994e6a92ee4f7f2d0184f0ad2
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c0a0f50c6529de26c0c4959699841c4663e0970
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Oct 24 17:20:49 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [36/90]: LSM stacking v39: LSM: Infrastructure management of the key security blob
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Move management of the key->security blob out of the
    individual security modules and into the security
    infrastructure. Instead of allocating the blobs from within
    the modules the modules tell the infrastructure how much
    space is required, and the space is allocated there.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 5773066e51becfcdb0a0f2ebd87a2541a05eddef
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 89df5390e9ff56b29619e714b67385641fc42d8b
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Nov 16 10:32:42 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [35/90]: LSM stacking v39: LSM: allocate mnt_opts blobs instead of module specific data
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace allocations of LSM specific mount data with the
    shared mnt_opts blob.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 82587147aafee1cd0d3ef871cb9bf842235c281d
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 788fc1fcfbfb8aaf2172b8fa15b7c0f1f8404e20
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Nov 16 10:06:35 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [34/90]: LSM stacking v39: LSM: Add mount opts blob size tracking
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add mount option data to the blob size accounting in anticipation
    of using a shared mnt_opts blob.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 2247022e3a9378ef8a843a430e74d4e282dbf22c
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5b7f2355ba66e21a97b81d1ccba38709cde929ea
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Sun Aug 20 15:09:27 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [33/90]: LSM stacking v39: AppArmor: Remove the exclusive flag
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    With the inclusion of the interface LSM process attribute
    mechanism AppArmor no longer needs to be treated as an
    "exclusive" security module. Remove the flag that indicates
    it is exclusive. Remove the stub getpeersec_dgram AppArmor
    hook as it has no effect in the single LSM case and
    interferes in the multiple LSM case.
    
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: John Johansen <john.johansen@canonical.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 225f4f691ce47f87ba8ddbece3836a5386a5c56a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 091542a90c1b689979b7543baefaf441b6c2ba2a
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Nov 15 16:41:08 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [32/90]: LSM stacking v39: LSM: Identify which LSM handles the context string
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The security_secctx_to_secid() call can only interpret the
    context string for a single LSM. Use the first LSM that supplies a hook.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 511160cd033a7b1d4caa080a465147b1e98913f4
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ffb940121db7c6a3d755fab71f6c51fcc0efec53
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Dec 11 10:56:53 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [31/90]: LSM stacking v39: LSM: Exclusive secmark usage
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The network secmark can only be used by one security module
    at a time. Establish mechanism to identify to security modules
    whether they have access to the secmark. SELinux already
    incorparates mechanism, but it has to be added to Smack and
    AppArmor.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit c0c9497b3b4153c7cea3e7dec321996b24b96c04
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3cdd327b4c8fa5bd30a5e24f6b5e256563bc7d1e
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Sun Aug 20 14:45:09 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [29/90]: LSM stacking v39: LSM: secctx provider check on release
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Verify that the LSM releasing the secctx is the LSM that
    allocated it. This was not necessary when only one LSM could
    create a secctx, but once there can be more than one it is.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 2e26924a9155d6e5d5de80f66e77192b951e0a99
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9591a2ddb429c70b7afa52949494782d6e55c0e5
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Nov 14 09:26:03 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [28/90]: LSM stacking v39: LSM: Improve logic in security_getprocattr
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The conditional in security_getprocattr() can be simplified
    and made clearer. This change does that.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 5f2df36aeb13d0d659d4355fd399e028c64de737
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f94d3a64ba258c53ad2cb06752f299d7c75f2da0
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Jun 28 15:13:30 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [27/90]: LSM stacking v39: LSM: Remove unused lsmcontext_init()
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The lsmcontext init functing is no longer used.
    Remove it.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 2eb231bf638779144b0b91678999a00474772cbf
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2fbec7483d69e90e266f77e0d2616cacafa06cd2
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Fri Aug 18 12:44:32 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [26/90]: LSM stacking v39: Audit: Add record for multiple object contexts
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Create a new audit record AUDIT_MAC_OBJ_CONTEXTS.
    An example of the MAC_OBJ_CONTEXTS (1421) record is:
    
        type=MAC_OBJ_CONTEXTS[1421]
        msg=audit(1601152467.009:1050):
        obj_selinux=unconfined_u:object_r:user_home_t:s0
    
    When an audit event includes a AUDIT_MAC_OBJ_CONTEXTS record
    the "obj=" field in other records in the event will be "obj=?".
    An AUDIT_MAC_OBJ_CONTEXTS record is supplied when the system has
    multiple security modules that may make access decisions based
    on an object security context.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    (cherry picked from commit 946f32aa61af47b0280f42100d3ace0454e1b068
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cdb7b839cfa791f61895d4c59c1d6851da5295da
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Fri Aug 18 09:24:05 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [25/90]: LSM stacking v39: audit: multiple subject lsm values for netlabel
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Refactor audit_log_task_context(), creating a new
    audit_log_subject_context(). This is used in netlabel auditing
    to provide multiple subject security contexts as necessary.
    
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 58a600950ecf3e279a11df4df273e3bbd5a83a44
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 079a0e5680acda9e0a96e983d46cbc42063e3c92
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Sun Dec 10 10:14:39 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [24/90]: LSM stacking v39: Audit: Add record for multiple task security contexts
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Create a new audit record AUDIT_MAC_TASK_CONTEXTS.
    An example of the MAC_TASK_CONTEXTS (1420) record is:
    
        type=MAC_TASK_CONTEXTS[1420]
        msg=audit(1600880931.832:113)
        subj_apparmor=unconfined
        subj_smack=_
    
    When an audit event includes a AUDIT_MAC_TASK_CONTEXTS record
    the "subj=" field in other records in the event will be "subj=?".
    An AUDIT_MAC_TASK_CONTEXTS record is supplied when the system has
    multiple security modules that may make access decisions based
    on a subject security context.
    
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 47750a2eb56fb2e1f9d2e055a3e70b393b10b528
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b33a069b460a72fbff9c791cb7a3785124ad932b
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Fri Aug 18 07:58:33 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [23/90]: LSM stacking v39: Audit: Allow multiple records in an audit_buffer
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the single skb pointer in an audit_buffer with
    a list of skb pointers. Add the audit_stamp information
    to the audit_buffer as there's no guarantee that there
    will be an audit_context containing the stamp associated
    with the event. At audit_log_end() time create auxiliary
    records (none are currently defined) as have been added
    to the list. Functions are created to manage the skb list
    in the audit_buffer.
    
    Suggested-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit f62c5b605a528afb9048fad5b2bfe5a1feb92638
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit edc4afa093a9b05a3563f7b164645876f0ce26a5
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Aug 30 13:43:23 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [22/90]: LSM stacking v39: Audit: Create audit_stamp structure
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the timestamp and serial number pair used in audit records
    with a structure containing the two elements.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    (cherry picked from commit d53c83c9c429e3cdcbfd0820b4c3617ece5ace0a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 350772954a740071fdd62e12dd95d7ef473fc84f
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Aug 30 12:13:16 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [21/90]: LSM stacking v39: LSM: security_lsmblob_to_secctx module selection
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add a parameter lsmid to security_lsmblob_to_secctx() to identify which
    of the security modules that may be active should provide the security
    context. If the value of lsmid is LSM_ID_UNDEF the first LSM providing
    a hook is used. security_secid_to_secctx() is unchanged, and will
    always report the first LSM providing a hook.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit ed41de7417b55f261370bc5090095ed4d3f53d7a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8a9981f38854f16c44abdfbe29052b50076420b2
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Sep 18 14:16:01 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [20/90]: LSM stacking v39: LSM: Use lsmcontext in security_dentry_init_security
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the (secctx,seclen) pointer pair with a single
    lsmcontext pointer to allow return of the LSM identifier
    along with the context and context length. This allows
    security_release_secctx() to know how to release the
    context. Callers have been modified to use or save the
    returned data from the new structure.
    
    Special care is taken in the NFS code, which uses the
    same data structure for its own copied labels as it does
    for the data which comes from security_dentry_init_security().
    In the case of copied labels the data has to be freed, not
    released.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: ceph-devel@vger.kernel.org
    Cc: linux-nfs@vger.kernel.org
    (cherry picked from commit 824f7031cdc2b5984dc4bff28ef397e0bfe90620
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 20c41e25539d2676d38209cb932f529d2dde955f
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Dec 13 13:00:50 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [19/90]: LSM stacking v39: LSM: Use lsmcontext in security_inode_getsecctx
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Change the security_inode_getsecctx() interface to fill
    a lsmcontext structure instead of data and length pointers.
    This provides the information about which LSM created the
    context so that security_release_secctx() can use the
    correct hook.
    
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Acked-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: linux-nfs@vger.kernel.org
    (cherry picked from commit 993925fb8cfb87b0d7ffde9c37ccb75329c63080
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8d4a2109149886fa0fddefc47763957edad7f6e8
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Aug 17 12:26:02 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [18/90]: LSM stacking v39: LSM: Use lsmcontext in security_lsmblob_to_secctx
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the (secctx,seclen) pointer pair with a single
    lsmcontext pointer to allow return of the LSM identifier
    along with the context and context length. This allows
    security_release_secctx() to know how to release the
    context. Callers have been modified to use or save the
    returned data from the new structure.
    
    security_lsmblob_to_secctx() will now return the length value
    on success instead of 0.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: netdev@vger.kernel.org
    Cc: audit@vger.kernel.org
    Cc: netfilter-devel@vger.kernel.org
    Cc: Todd Kjos <tkjos@google.com>
    (cherry picked from commit b2a3a4be21bfc71ee961103fb2d638ebc031541e
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8764391fe448bde8fd1ec2624f73153094baf0ff
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Dec 12 14:21:57 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [17/90]: LSM stacking v39: LSM: Use lsmcontext in security_secid_to_secctx
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the (secctx,seclen) pointer pair with a single
    lsmcontext pointer to allow return of the LSM identifier
    along with the context and context length. This allows
    security_release_secctx() to know how to release the
    context. Callers have been modified to use or save the
    returned data from the new structure.
    
    security_secid_to_secctx() will now return the length value
    on success instead of 0.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: netdev@vger.kernel.org
    Cc: audit@vger.kernel.org
    Cc: netfilter-devel@vger.kernel.org
    Cc: Todd Kjos <tkjos@google.com>
    (cherry picked from commit f2be390a1a158bf2b08006e4e58a2b6920c08c83
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9e5a8aafd37304e41445ccc8e18b66c362f8f088
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Dec 13 12:37:57 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [16/90]: LSM stacking v39: LSM: Ensure the correct LSM context releaser
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add a new lsmcontext data structure to hold all the information
    about a "security context", including the string, its size and
    which LSM allocated the string. The allocation information is
    necessary because LSMs have different policies regarding the
    lifecycle of these strings. SELinux allocates and destroys
    them on each use, whereas Smack provides a pointer to an entry
    in a list that never goes away.
    
    Update security_release_secctx() to use the lsmcontext instead
    of a (char *, len) pair. Change its callers to do likewise.
    The LSMs supporting this hook have had comments added to
    remind the developer that there is more work to be done.
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: linux-integrity@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Cc: audit@vger.kernel.org
    Cc: netfilter-devel@vger.kernel.org
    To: Pablo Neira Ayuso <pablo@netfilter.org>
    Cc: linux-nfs@vger.kernel.org
    Cc: Todd Kjos <tkjos@google.com>
    (cherry picked from commit ff955dc9c08dfa96a404f52269ea8c0ec192be6d
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3ec7f0fd532a73fad2739244c63838dec73b7147
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Aug 16 08:14:41 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [15/90]: LSM stacking v39: Netlabel: Use lsmblob for audit data
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the secid in the netlbl_audit structure with an lsmblob.
    Remove stacking scaffolding that was required when the value
    was a secid.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit b06ee4ffb12d53aa5de887623603b6b6534dd387
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 14dc9c57250d0329a945dea191de3c17aee609ca
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Aug 15 19:02:43 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [14/90]: LSM stacking v39: Audit: Change context data from secid to lsmblob
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Change the LSM data stored in the audit transactions from a secid
    to an LSM blob. This is done in struct audit_context and struct
    audit_aux_data_pids. Several cases of scaffolding can be removed.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit cb291a37fa232412f3a6ac83445915dd87d4cd2b
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9bd5660449e76136b579f84b1fa24fdcb3816399
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Aug 29 16:40:29 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [13/90]: LSM stacking v39: LSM: Create new security_cred_getlsmblob LSM hook
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Create a new LSM hook security_cred_getlsmblob() which, like
    security_cred_getsecid(), fetches LSM specific attributes from the
    cred structure.  The associated data elements in the audit sub-system
    are changed from a secid to a lsmblob to accommodate multiple possible
    LSM audit users.
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: linux-integrity@vger.kernel.org
    Cc: audit@vger.kernel.org
    Cc: Todd Kjos <tkjos@google.com>
    (cherry picked from commit 337cca8d8de8e42b04bd3fa1290eb8a59ecbecf8
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c56266b5454ba604df74086e31cc765de3151a62
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Aug 29 15:34:45 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [12/90]: LSM stacking v39: Audit: use an lsmblob in audit_names
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the osid field in the audit_names structure with a
    lsmblob structure. This accommodates the use of an lsmblob in
    security_audit_rule_match() and security_inode_getsecid().
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit a80f8c2737d32220bbaf44e14445209baa2429c4
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit efe7e770afb947196c5e63d1016035961b6b4d43
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Tue Aug 29 14:49:19 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [11/90]: LSM stacking v39: LSM: Use lsmblob in security_inode_getsecid
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Change the security_inode_getsecid() interface to fill in a
    lsmblob structure instead of a u32 secid. This allows for its
    callers to gather data from all registered LSMs. Data is provided
    for IMA and audit. Change the name to security_inode_getlsmblob().
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: linux-integrity@vger.kernel.org
    Cc: audit@vger.kernel.org
    (cherry picked from commit 73e3677d926612a0861d4d16040df058a38e364a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c1628e63021f6349d2a0b9a76fd9c78246c46630
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Fri Nov 10 14:34:27 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [10/90]: LSM stacking v39: LSM: Use lsmblob in security_current_getsecid
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Change the security_current_getsecid_subj() and
    security_task_getsecid_obj() interfaces to fill in
    a lsmblob structure instead of a u32 secid in support of
    LSM stacking. Audit interfaces will need to collect all
    possible security data for possible reporting.
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: linux-integrity@vger.kernel.org
    Cc: linux-audit@redhat.com
    Cc: netdev@vger.kernel.org
    (cherry picked from commit 1577b1489d4ff3fedc8f2be782f7a7e52561b2b7
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 26c7bf3883bae67dbc26558e89f9acd4705eff34
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Aug 14 17:10:34 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [09/90]: LSM stacking v39: Audit: Update shutdown LSM data
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    The audit process LSM information is changed from a secid audit_sig_sid
    to an lsmblob in audit_sig_lsm. Update the users of this data
    appropriately. Calls to security_secid_to_secctx() are changed to use
    security_lsmblob_to_secctx() instead. security_current_getsecid_subj()
    is scaffolded. It will be updated in a subsequent patch.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 059ded26046c6c143a87f9125ad32cbd9fa63477
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ad5eb37215aa9a0925a7b5b5b7a523d576fc8816
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Aug 14 16:36:27 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [08/90]: LSM stacking v39: LSM: Use lsmblob in security_ipc_getsecid
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    There may be more than one LSM that provides IPC data for auditing.
    Change security_ipc_getsecid() to fill in a lsmblob structure instead
    of the u32 secid.  Change the name to security_ipc_getlsmblob() to
    reflect the change.  The audit data structure containing the secid
    will be updated later, so there is a bit of scaffolding here.
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Cc: linux-audit@redhat.com
    Cc: audit@vger.kernel.org
    (cherry picked from commit 19223166f32ff8bdefe5ff71b49f15f7e18fdf3f
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7897aff2d1981b97982a27903cde54a083d50d01
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Wed Sep 13 12:39:37 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [07/90]: LSM stacking v39: Audit: maintain an lsmblob in audit_context
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Replace the secid value stored in struct audit_context with a struct
    lsmblob. Change the code that uses this value to accommodate the
    change. security_audit_rule_match() expects a lsmblob, so existing
    scaffolding can be removed. A call to security_secid_to_secctx()
    is changed to security_lsmblob_to_secctx().  The call to
    security_ipc_getsecid() is scaffolded.
    
    A new function lsmblob_is_set() is introduced to identify whether
    an lsmblob contains a non-zero value.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit 5dd32c02526efa2bb270dba1977b2807577c5814
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6b9c37216c0deee6e976785a0c616ad6d7a155e4
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Fri Nov 10 09:22:00 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [06/90]: LSM stacking v39: LSM: Add lsmblob_to_secctx hook
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Add a new hook security_lsmblob_to_secctx() and its LSM specific
    implementations. The LSM specific code will use the lsmblob element
    allocated for that module. This allows for the possibility that more
    than one module may be called upon to translate a secid to a string,
    as can occur in the audit code.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit a2b36b5dcaca7e31c3c80c9ae9198ae864d2827a
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fe5290020a50ffb109c545b8393d20b3ff5d09f1
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Aug 28 16:59:26 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [05/90]: LSM stacking v39: LSM: Use lsmblob in security_audit_rule_match
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Change the secid parameter of security_audit_rule_match
    to a lsmblob structure pointer. Pass the entry from the
    lsmblob structure for the approprite slot to the LSM hook.
    
    Change the users of security_audit_rule_match to use the
    lsmblob instead of a u32. The scaffolding function lsmblob_init()
    fills the blob with the value of the old secid, ensuring that
    it is available to the appropriate module hook. The sources of
    the secid, security_task_getsecid() and security_inode_getsecid(),
    will be converted to use the blob structure later in the series.
    At the point the use of lsmblob_init() is dropped.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Cc: linux-audit@redhat.com
    (cherry picked from commit ec1eb9be88908dcb7e040a27c40f247b20ca5f21
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3c61cba5e97eca98ba9c491e7fa9dd9314d0ced7
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Aug 28 16:24:30 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [04/90]: LSM stacking v39: IMA: avoid label collisions with stacked LSMs
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Integrity measurement may filter on security module information
    and needs to be clear in the case of multiple active security
    modules which applies. Provide a boot option ima_rules_lsm= to
    allow the user to specify an active security module to apply
    filters to. If not specified, use the first registered module
    that supports the audit_rule_match() LSM hook. Allow the user
    to specify in the IMA policy an lsm= option to specify the
    security module to use for a particular rule.
    
    This requires adding the LSM of interest as a parameter
    to three of the audit hooks.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    To: Mimi Zohar <zohar@linux.ibm.com>
    To: linux-integrity@vger.kernel.org
    To: audit@vger.kernel.org
    (cherry picked from commit d177f98409d82dbb23763122fd1e4eb9897cf6ac
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cda8a41071864ccc72b7325f5a9d4d2be8f41276
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Aug 28 15:24:23 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [03/90]: LSM stacking v39: LSM: Add the lsmblob data structure.
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    When more than one security module is exporting data to audit and
    networking sub-systems a single 32 bit integer is no longer
    sufficient to represent the data. Add a structure to be used instead.
    
    The lsmblob structure definition is intended to keep the LSM
    specific information private to the individual security modules.
    The module specific information is included in a new set of
    header files under include/lsm. Each security module is allowed
    to define the information included for its use in the lsmblob.
    SELinux includes a u32 secid. Smack includes a pointer into its
    global label list. The conditional compilation based on feature
    inclusion is contained in the include/lsm files.
    
    Suggested-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit d3e05576b36f2e19e14956bc2a9043316c817ddb
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cec780d9b19f63c526db7b8602f2f1836b428e8a
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Dec 7 16:53:51 2023 -0800

    UBUNTU: SAUCE: apparmor4.0.0 [02/90]: LSM stacking v39: SM: Infrastructure management of the sock security
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Move management of the sock->sk_security blob out
    of the individual security modules and into the security
    infrastructure. Instead of allocating the blobs from within
    the modules the modules tell the infrastructure how much
    space is required, and the space is allocated there.
    
    Acked-by: Paul Moore <paul@paul-moore.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    (cherry picked from commit c493287fe3495fcf3854f246b42cbaa88ed130da
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3196331c1e9c6c36e04b1c4244f62d7358dbc455
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu May 18 13:54:20 2023 -0700

    UBUNTU: SAUCE: apparmor4.0.0 [01/90]: LSM stacking v39: integrity: disassociate ima_filter_rule from security_audit_rule
    
    BugLink: http://bugs.launchpad.net/bugs/2028253
    
    Create real functions for the ima_filter_rule interfaces.
    These replace #defines that obscure the reuse of audit
    interfaces. The new functions are put in security.c because
    they use security module registered hooks that we don't
    want exported.
    
    Acked-by: Paul Moore <paul@paul-moore.com>
    Reviewed-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    To: Mimi Zohar <zohar@linux.ibm.com>
    Cc: linux-integrity@vger.kernel.org
    (cherry picked from commit ceac4ac3a986cd84c6b83ff962fbc4206e42bd99
    https://git.launchpad.net/~apparmor-dev/ubuntu-kernel-next)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4e7e33c3bfdb728fa074dc9b9862dbd3fe04a663
Author: Frank Heimes <frank.heimes@canonical.com>
Date:   Tue Mar 19 14:04:15 2024 +0100

    UBUNTU: [Config] enable CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE and CONFIG_MHP_MEMMAP_ON_MEMORY for s390x
    
    BugLink: https://bugs.launchpad.net/bugs/2051835
    
    These two kernel config options need to be enabled for
    "memmap on memory" / memory hotplug vmem pages support on s390x.
    
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 301837f3d40520b3cae4b561999f612b1366301f
Author: Sumanth Korikkar <sumanthk@linux.ibm.com>
Date:   Tue Mar 19 14:04:14 2024 +0100

    s390: enable MHP_MEMMAP_ON_MEMORY
    
    BugLink: https://bugs.launchpad.net/bugs/2051835
    
    Enable MHP_MEMMAP_ON_MEMORY to support "memmap on memory".
    memory_hotplug.memmap_on_memory=true kernel parameter should be set in
    kernel boot option to enable the feature.
    
    Link: https://lkml.kernel.org/r/20240108132747.3238763-6-sumanthk@linux.ibm.com
    Reviewed-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 9eda317c15ff13be621d219a5de365d1550f41f7)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 377a757ef21ed3e1d3422743dacd5aeebd0f429a
Author: Sumanth Korikkar <sumanthk@linux.ibm.com>
Date:   Tue Mar 19 14:04:13 2024 +0100

    s390/mm: implement MEM_PREPARE_ONLINE/MEM_FINISH_OFFLINE notifiers
    
    BugLink: https://bugs.launchpad.net/bugs/2051835
    
    MEM_PREPARE_ONLINE memory notifier makes memory block physical
    accessible via sclp assign command. The notifier ensures self-contained
    memory maps are accessible and hence enabling the "memmap on memory" on
    s390.
    
    MEM_FINISH_OFFLINE memory notifier shifts the memory block to an
    inaccessible state via sclp unassign command.
    
    Implementation considerations:
    * When MHP_MEMMAP_ON_MEMORY is disabled, the system retains the old
      behavior. This means the memory map is allocated from default memory.
    * If MACHINE_HAS_EDAT1 is unavailable, MHP_MEMMAP_ON_MEMORY is
      automatically disabled. This ensures that vmemmap pagetables do not
      consume additional memory from the default memory allocator.
    * The MEM_GOING_ONLINE notifier has been modified to perform no
      operation, as MEM_PREPARE_ONLINE already executes the sclp assign
      command.
    * The MEM_CANCEL_ONLINE/MEM_OFFLINE notifier now performs no operation, as
      MEM_FINISH_OFFLINE already executes the sclp unassign command.
    
    Link: https://lkml.kernel.org/r/20240108132747.3238763-5-sumanthk@linux.ibm.com
    Reviewed-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 890a4212de718fcbb4ba4ee36569af31908d9dc5)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6f693c0b36492dca2f16198e7a73d05affcff7ef
Author: Sumanth Korikkar <sumanthk@linux.ibm.com>
Date:   Tue Mar 19 14:04:12 2024 +0100

    s390/sclp: remove unhandled memory notifier type
    
    BugLink: https://bugs.launchpad.net/bugs/2051835
    
    Remove memory notifier types which are unhandled by s390.  Unhandled
    memory notifier types are covered by default case.
    
    Link: https://lkml.kernel.org/r/20240108132747.3238763-4-sumanthk@linux.ibm.com
    Suggested-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit fb6d5eb9f4c9620acbd8a78dafff0164c1b8824e)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 602370615f9c7c1ac53e0073c9e0a2f4d69c798d
Author: Sumanth Korikkar <sumanthk@linux.ibm.com>
Date:   Tue Mar 19 14:04:11 2024 +0100

    s390/mm: allocate vmemmap pages from self-contained memory range
    
    BugLink: https://bugs.launchpad.net/bugs/2051835
    
    Allocate memory map (struct pages array) from the hotplugged memory
    range, rather than using system memory. The change addresses the issue
    where standby memory, when configured to be much larger than online
    memory, could potentially lead to ipl failure due to memory map
    allocation from online memory. For example, 16MB of memory map
    allocation is needed for a memory block size of 1GB and when standby
    memory is configured much larger than online memory, this could lead to
    ipl failure.
    
    To address this issue, the solution involves introducing "memmap on
    memory" using the vmem_altmap structure on s390.  Architectures that
    want to implement it should pass the altmap to the vmemmap_populate()
    function and its associated callchain. This enhancement is discussed in
    commit 4b94ffdc4163 ("x86, mm: introduce vmem_altmap to augment
    vmemmap_populate()")
    
    Provide "memmap on memory" support for s390 by passing the altmap in
    vmemmap_populate() and its callchain. The allocation path is described
    as follows:
    * When altmap is NULL in vmemmap_populate(), memory map allocation
      occurs using the existing vmemmap_alloc_block_buf().
    * When altmap is not NULL in vmemmap_populate(), memory map allocation
      still uses vmemmap_alloc_block_buf(), but this function internally
      calls altmap_alloc_block_buf().
    
    For deallocation, the process is outlined as follows:
    * When altmap is NULL in vmemmap_free(), memory map deallocation happens
      through free_pages().
    * When altmap is not NULL in vmemmap_free(), memory map deallocation
      occurs via vmem_altmap_free().
    
    While memory map allocation is primarily handled through the
    self-contained memory map range, there might still be a small amount of
    system memory allocation required for vmemmap pagetables. To mitigate
    this impact, this feature will be limited to machines with EDAT1
    support.
    
    Link: https://lkml.kernel.org/r/20240108132747.3238763-3-sumanthk@linux.ibm.com
    Reviewed-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit 1a65b73ae9abd608575e9bfbaa003d829d39fab9)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eb93a57bb8aee1125223dc350fb4da6f67b77707
Author: Sumanth Korikkar <sumanthk@linux.ibm.com>
Date:   Tue Mar 19 14:04:10 2024 +0100

    mm/memory_hotplug: introduce MEM_PREPARE_ONLINE/MEM_FINISH_OFFLINE notifiers
    
    BugLink: https://bugs.launchpad.net/bugs/2051835
    
    Patch series "implement "memmap on memory" feature on s390".
    
    This series provides "memmap on memory" support on s390 platform.  "memmap
    on memory" allows struct pages array to be allocated from the hotplugged
    memory range instead of allocating it from main system memory.
    
    s390 currently preallocates struct pages array for all potentially
    possible memory, which ensures memory onlining always succeeds, but with
    the cost of significant memory consumption from the available system
    memory during boottime.  In certain extreme configuration, this could lead
    to ipl failure.
    
    "memmap on memory" ensures struct pages array are populated from self
    contained hotplugged memory range instead of depleting the available
    system memory and this could eliminate ipl failure on s390 platform.
    
    On other platforms, system might go OOM when the physically hotplugged
    memory depletes the available memory before it is onlined.  Hence, "memmap
    on memory" feature was introduced as described in commit a08a2ae34613
    ("mm,memory_hotplug: allocate memmap from the added memory range").
    
    Unlike other architectures, s390 memory blocks are not physically
    accessible until it is online.  To make it physically accessible two new
    memory notifiers MEM_PREPARE_ONLINE / MEM_FINISH_OFFLINE are added and
    this notifier lets the hypervisor inform that the memory should be made
    physically accessible.  This allows for "memmap on memory" initialization
    during memory hotplug onlining phase, which is performed before calling
    MEM_GOING_ONLINE notifier.
    
    Patch 1 introduces MEM_PREPARE_ONLINE/MEM_FINISH_OFFLINE memory notifiers
    to prepare the transition of memory to and from a physically accessible
    state.  New mhp_flag MHP_OFFLINE_INACCESSIBLE is introduced to ensure
    altmap cannot be written when adding memory - before it is set online.
    This enhancement is crucial for implementing the "memmap on memory"
    feature for s390 in a subsequent patch.
    
    Patches 2 allocates vmemmap pages from self-contained memory range for
    s390.  It allocates memory map (struct pages array) from the hotplugged
    memory range, rather than using system memory by passing altmap to vmemmap
    functions.
    
    Patch 3 removes unhandled memory notifier types on s390.
    
    Patch 4 implements MEM_PREPARE_ONLINE/MEM_FINISH_OFFLINE memory notifiers
    on s390.  MEM_PREPARE_ONLINE memory notifier makes memory block physical
    accessible via sclp assign command.  The notifier ensures self-contained
    memory maps are accessible and hence enabling the "memmap on memory" on
    s390.  MEM_FINISH_OFFLINE memory notifier shifts the memory block to an
    inaccessible state via sclp unassign command.
    
    Patch 5 finally enables MHP_MEMMAP_ON_MEMORY on s390.
    
    This patch (of 5):
    
    Introduce MEM_PREPARE_ONLINE/MEM_FINISH_OFFLINE memory notifiers to
    prepare the transition of memory to and from a physically accessible
    state.  This enhancement is crucial for implementing the "memmap on
    memory" feature for s390 in a subsequent patch.
    
    Platforms such as x86 can support physical memory hotplug via ACPI.  When
    there is physical memory hotplug, ACPI event leads to the memory addition
    with the following callchain:
    
    acpi_memory_device_add()
      -> acpi_memory_enable_device()
         -> __add_memory()
    
    After this, the hotplugged memory is physically accessible, and altmap
    support prepared, before the "memmap on memory" initialization in
    memory_block_online() is called.
    
    On s390, memory hotplug works in a different way.  The available hotplug
    memory has to be defined upfront in the hypervisor, but it is made
    physically accessible only when the user sets it online via sysfs,
    currently in the MEM_GOING_ONLINE notifier.  This is too late and "memmap
    on memory" initialization is performed before calling MEM_GOING_ONLINE
    notifier.
    
    During the memory hotplug addition phase, altmap support is prepared and
    during the memory onlining phase s390 requires memory to be physically
    accessible and then subsequently initiate the "memmap on memory"
    initialization process.
    
    The memory provider will handle new MEM_PREPARE_ONLINE /
    MEM_FINISH_OFFLINE notifications and make the memory accessible.
    
    The mhp_flag MHP_OFFLINE_INACCESSIBLE is introduced and is relevant when
    used along with MHP_MEMMAP_ON_MEMORY, because the altmap cannot be written
    (e.g., poisoned) when adding memory -- before it is set online.  This
    allows for adding memory with an altmap that is not currently made
    available by a hypervisor.  When onlining that memory, the hypervisor can
    be instructed to make that memory accessible via the new notifiers and the
    onlining phase will not require any memory allocations, which is helpful
    in low-memory situations.
    
    All architectures ignore unknown memory notifiers.  Therefore, the
    introduction of these new notifiers does not result in any functional
    modifications across architectures.
    
    Link: https://lkml.kernel.org/r/20240108132747.3238763-1-sumanthk@linux.ibm.com
    Link: https://lkml.kernel.org/r/20240108132747.3238763-2-sumanthk@linux.ibm.com
    Signed-off-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Suggested-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Suggested-by: David Hildenbrand <david@redhat.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Cc: Alexander Gordeev <agordeev@linux.ibm.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    (cherry picked from commit c5f1e2d1890935a734c302b9b8579748222b8e1e)
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 687f5232929368d1a67e2a5f6f5c91f2cd84c3fb
Author: Hamza Mahfooz <hamza.mahfooz@amd.com>
Date:   Mon Mar 11 12:55:53 2024 +0800

    drm/amdgpu: respect the abmlevel module parameter value if it is set
    
    BugLink: https://bugs.launchpad.net/bugs/2056716
    
    Currently, if the abmlevel module parameter is set, it is possible for
    user space to override the ABM level at some point after boot. However,
    that is undesirable because it means that we aren't respecting the
    user's wishes with regard to the level that they want to use. So,
    prevent user space from changing the ABM level if the module parameter
    is set to a non-auto value.
    
    Tested-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    (cherry picked from commit 040fdcde288a2830edc31dd507963d6aadf990d2 linux-next)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 36dbc8c0a550e6006253b4609cfd2479e00a58cc
Author: Hamza Mahfooz <hamza.mahfooz@amd.com>
Date:   Mon Mar 11 12:55:52 2024 +0800

    drm/amd/display: add panel_power_savings sysfs entry to eDP connectors
    
    BugLink: https://bugs.launchpad.net/bugs/2056716
    
    We want programs besides the compositor to be able to enable or disable
    panel power saving features. However, since they are currently only
    configurable through DRM properties, that isn't possible. So, to remedy
    that issue introduce a new "panel_power_savings" sysfs attribute.
    
    v2: squash in fix from Hamza (Alex)
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Tested-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    (cherry picked from commit 63d0b87213a0ba241b3fcfba3fe7b0aed0cd1cc5 linux-next)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f40905555207d8163ca12aa5d4b44f38199a4f48
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Mon Mar 4 18:32:06 2024 +0800

    UBUNTU: SAUCE: x86/cacheinfo: Clean out init_cache_level()
    
    BugLink: https://bugs.launchpad.net/bugs/2049793
    
    init_cache_level() no longer has a purpose on x86. It no longer needs to
    set num_leaves, and it never had to set num_levels, which was unnecessary
    on x86.
    
    Replace it with "return 0" simply to override the weak function, which
    would return an error.
    
    Cc: Andreas Herrmann <aherrmann@suse.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chen Yu <yu.c.chen@intel.com>
    CC: Huang Ying <ying.huang@intel.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Radu Rendec <rrendec@redhat.com>
    Cc: Pierre Gondois <Pierre.Gondois@arm.com>
    Cc: Pu Wen <puwen@hygon.cn>
    Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Zhang Rui <rui.zhang@intel.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Reviewed-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    (cherry-picked from https://lore.kernel.org/all/20231212222519.12834-5-ricardo.neri-calderon@linux.intel.com/raw)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b36c138a0c39ca3d130f0be517389324c374a210
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Mon Mar 4 18:32:05 2024 +0800

    UBUNTU: SAUCE: x86/cacheinfo: Delete global num_cache_leaves
    
    BugLink: https://bugs.launchpad.net/bugs/2049793
    
    Linux remembers cpu_cachinfo::num_leaves per CPU, but x86 initializes all
    CPUs from the same global "num_cache_leaves".
    
    This is erroneous on systems such as Meteor Lake, where each CPU has a
    distinct num_leaves value. Delete the global "num_cache_leaves" and
    initialize num_leaves on each CPU.
    
    Cc: Andreas Herrmann <aherrmann@suse.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chen Yu <yu.c.chen@intel.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Radu Rendec <rrendec@redhat.com>
    Cc: Pierre Gondois <Pierre.Gondois@arm.com>
    Cc: Pu Wen <puwen@hygon.cn>
    Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Zhang Rui <rui.zhang@intel.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Reviewed-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    (cherry-picked from https://lore.kernel.org/all/20231212222519.12834-4-ricardo.neri-calderon@linux.intel.com/raw)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9b77ef6b38ee1493a3b499cf013fe98e085973aa
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Mon Mar 4 18:32:04 2024 +0800

    UBUNTU: SAUCE: cacheinfo: Allocate memory for memory if not done from the primary CPU
    
    BugLink: https://bugs.launchpad.net/bugs/2049793
    
    Commit 5944ce092b97 ("arch_topology: Build cacheinfo from primary CPU")
    adds functionality that architectures can use to optionally allocate and
    build cacheinfo early during boot. Commit 6539cffa9495 ("cacheinfo: Add
    arch specific early level initializer") lets secondary CPUs correct (and
    reallocate memory) cacheinfo data if needed.
    
    If the early build functionality is not used and cacheinfo does not need
    correction, memory for cacheinfo is never allocated. x86 does not use the
    early build functionality. Consequently, during the cacheinfo CPU hotplug
    callback, last_level_cache_is_valid() attempts to dereference a NULL
    pointer:
    
         BUG: kernel NULL pointer dereference, address: 0000000000000100
         #PF: supervisor read access in kernel mode
         #PF: error_code(0x0000) - not present page
         PGD 0 P4D 0
         Oops: 0000 [#1] PREEPMT SMP NOPTI
         CPU: 0 PID 19 Comm: cpuhp/0 Not tainted 6.4.0-rc2 #1
         RIP: 0010: last_level_cache_is_valid+0x95/0xe0a
    
    Allocate memory for cacheinfo during the cacheinfo CPU hotplug callback if
    not done earlier.
    
    Cc: Andreas Herrmann <aherrmann@suse.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chen Yu <yu.c.chen@intel.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Radu Rendec <rrendec@redhat.com>
    Cc: Pierre Gondois <Pierre.Gondois@arm.com>
    Cc: Pu Wen <puwen@hygon.cn>
    Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Zhang Rui <rui.zhang@intel.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Reviewed-by: Radu Rendec <rrendec@redhat.com>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Fixes: 6539cffa9495 ("cacheinfo: Add arch specific early level initializer")
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    (cherry-picked from https://lore.kernel.org/all/20231212222519.12834-3-ricardo.neri-calderon@linux.intel.com/raw)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9f5822eb2872080c195bd416106f1e5ea5f9ef64
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Mon Mar 4 18:32:03 2024 +0800

    UBUNTU: SAUCE: cacheinfo: Check for null last-level cache info
    
    BugLink: https://bugs.launchpad.net/bugs/2049793
    
    Before determining the validity of the last-level cache info, ensure that
    it has been allocated. Simply checking for non-zero cache_leaves() is not
    sufficient, as some architectures (e.g., Intel processors) have non-zero
    cache_leaves() before allocation.
    
    Dereferencing NULL cacheinfo can occur in update_per_cpu_data_slice_size().
    This function iterates over all online CPUs. However, a CPU may have come
    online recently, but its cacheinfo may not have been allocated yet.
    
    Cc: Andreas Herrmann <aherrmann@suse.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chen Yu <yu.c.chen@intel.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Radu Rendec <rrendec@redhat.com>
    Cc: Pierre Gondois <Pierre.Gondois@arm.com>
    Cc: Pu Wen <puwen@hygon.cn>
    Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Zhang Rui <rui.zhang@intel.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    (cherry-picked from https://lore.kernel.org/all/20231212222519.12834-2-ricardo.neri-calderon@linux.intel.com/raw)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8523dc74458d8525ba882b9ad00736f2c655c86c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 23:00:49 2024 +0200

    UBUNTU: Ubuntu-6.8.0-22.22
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 349b74bf81a057cee679cb056886e0bd356274fe
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 22:57:38 2024 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060238
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b2495c2f07713f3d23640acece20e68826349866
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 22:41:32 2024 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a813ab61e0442bdb7878c62dae3172f4c1f82340
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 22:20:27 2024 +0200

    UBUNTU: Ubuntu-6.8.0-21.21
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5ba47cce2285af45737603d82c4e031b7a06e5a4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 22:19:45 2024 +0200

    UBUNTU: [Config] update toolchain version in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0de204b06c46158c3ebf66bc21641b28758d0f26
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 22:17:27 2024 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2060225
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c34df17e15cbc1982f3ad548aab330ddd2a13acc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 4 22:09:42 2024 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 72268efca4e9e7e974b7f3e727b7464f89aace23
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 18 11:08:14 2024 +0100

    UBUNTU: Ubuntu-6.8.0-20.20
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a3171e21b9d11abb56b24f1619a0d3d73238cc9b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 18 11:03:58 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2058221
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fbf2d5b3099ff4b46c5bbedd521a80da293b8a46
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 18 11:02:42 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 983ee60297f8678b6057f76ec9ce1ce9461e8b7e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 18 11:00:49 2024 +0100

    UBUNTU: [Config] amd64: MITIGATION_RFDS=y
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c02092e7a866406eb88de5726717cda0a9e302e8
Author: Sasha Levin <sashal@kernel.org>
Date:   Wed Mar 13 07:41:34 2024 -0400

    Linux 6.8.1
    
    BugLink: https://bugs.launchpad.net/bugs/2058224
    
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Luna Jernberg <droidbittin@gmail.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Tested-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9234697fbb583c637c7b975d99275fc1e933a464
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Mar 11 12:29:43 2024 -0700

    KVM/x86: Export RFDS_NO and RFDS_CLEAR to guests
    
    BugLink: https://bugs.launchpad.net/bugs/2058224
    
    commit 2a0180129d726a4b953232175857d442651b55a0 upstream.
    
    Mitigation for RFDS requires RFDS_CLEAR capability which is enumerated
    by MSR_IA32_ARCH_CAPABILITIES bit 27. If the host has it set, export it
    to guests so that they can deploy the mitigation.
    
    RFDS_NO indicates that the system is not vulnerable to RFDS, export it
    to guests so that they don't deploy the mitigation unnecessarily. When
    the host is not affected by X86_BUG_RFDS, but has RFDS_NO=0, synthesize
    RFDS_NO to the guest.
    
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65ed68cb0a756a1a81f914a68f628debc133b6c0
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Mar 11 12:29:43 2024 -0700

    x86/rfds: Mitigate Register File Data Sampling (RFDS)
    
    BugLink: https://bugs.launchpad.net/bugs/2058224
    
    commit 8076fcde016c9c0e0660543e67bff86cb48a7c9c upstream.
    
    RFDS is a CPU vulnerability that may allow userspace to infer kernel
    stale data previously used in floating point registers, vector registers
    and integer registers. RFDS only affects certain Intel Atom processors.
    
    Intel released a microcode update that uses VERW instruction to clear
    the affected CPU buffers. Unlike MDS, none of the affected cores support
    SMT.
    
    Add RFDS bug infrastructure and enable the VERW based mitigation by
    default, that clears the affected buffers just before exiting to
    userspace. Also add sysfs reporting and cmdline parameter
    "reg_file_data_sampling" to control the mitigation.
    
    For details see:
    Documentation/admin-guide/hw-vuln/reg-file-data-sampling.rst
    
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f92371e20ee7c40812fdbd7733a48c0d26857493
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Mar 11 12:29:43 2024 -0700

    Documentation/hw-vuln: Add documentation for RFDS
    
    BugLink: https://bugs.launchpad.net/bugs/2058224
    
    commit 4e42765d1be01111df0c0275bbaf1db1acef346e upstream.
    
    Add the documentation for transient execution vulnerability Register
    File Data Sampling (RFDS) that affects Intel Atom CPUs.
    
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 667dd34dbd992ed992cd7be3b00707955ddb32c4
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Mar 11 12:29:43 2024 -0700

    x86/mmio: Disable KVM mitigation when X86_FEATURE_CLEAR_CPU_BUF is set
    
    BugLink: https://bugs.launchpad.net/bugs/2058224
    
    commit e95df4ec0c0c9791941f112db699fae794b9862a upstream.
    
    Currently MMIO Stale Data mitigation for CPUs not affected by MDS/TAA is
    to only deploy VERW at VMentry by enabling mmio_stale_data_clear static
    branch. No mitigation is needed for kernel->user transitions. If such
    CPUs are also affected by RFDS, its mitigation may set
    X86_FEATURE_CLEAR_CPU_BUF to deploy VERW at kernel->user and VMentry.
    This could result in duplicate VERW at VMentry.
    
    Fix this by disabling mmio_stale_data_clear static branch when
    X86_FEATURE_CLEAR_CPU_BUF is enabled.
    
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f940fdb6776dcc735e9f311810c477b1a1e3f0ee
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 18 07:39:34 2024 +0100

    UBUNTU: [Packaging] update to clang-18
    
    BugLink: https://bugs.launchpad.net/bugs/2048768
    
    Update Rust build dependency to clang-18.  This should also help with
    LP: #2048768.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ee3e48b06cd85430673b6cd5b99d9d32da9abee2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Mar 14 14:36:14 2024 +0100

    UBUNTU: Ubuntu-6.8.0-19.19
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 580989f7ca17c36109ff69ded3c6d5782fc0936a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Mar 14 14:35:13 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2057910
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3f9f64db3e800fe4399f0a221b9bd2c0fbbc35ae
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Mar 14 14:32:55 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 63060a7e2ab4ac4d05922f29e9d52f06a4f8a449
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 6 18:51:35 2024 +0100

    UBUNTU: [Packaging] re-introduce linux-doc as an empty package
    
    In commit fd8ee93c3a38 ("UBUNTU: [Packaging] drop useless linux-doc") we
    decided to remove the linux-doc package, saving in this way a lot of
    space required to produce the documentation content (that can be easily
    found online).
    
    However, this change broke some user-space packages that are still
    requiring linux-doc as a dependency.
    
    Therefore, re-introduce an empty linux-doc package to prevent the
    breakgage and at the same time avoid to re-introduce the expensive build
    dependencies.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    [esmil: handle linux-doc like the linux-source package]
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>

commit 283ec62fbf97ee16694804338a035a341f020c17
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Mar 12 14:44:14 2024 +0100

    UBUNTU: Ubuntu-6.8.0-18.18
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0ac263bc74ed4b86f81807b382871e3f9fbffee9
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Mar 12 14:43:08 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2057456
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b049157d5f0471533963e4d21e8c423b117d8460
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Mar 12 14:41:44 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8b54e4472f53fbbede97f912788afe409d8956e6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 12 07:44:15 2024 +0100

    UBUNTU: [Packaging] drop dependency on libclang-17
    
    We don't need to depend on libclang, only depending on clang-17 should
    be enough to support Rust.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 98c5e97376b73782a6adcbee05a4ca07a24367d9
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 12:46:38 2024 +0100

    UBUNTU: Ubuntu-6.8.0-17.17
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 93651d91f25715c55ee817dbbb2374fa922f758e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 12:44:16 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2056745
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 519d1f5e0d6cf1bd0b5207acb81bea7431fca8d2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 12:43:00 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 81914dd14ed51eccc2ce3d012c31f3092ae69aab
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 11:57:37 2024 +0100

    Revert "UBUNTU: [Packaging] Add debian/control sanity check"
    
    This reverts commit 848235005079d4f0f04e202ac7bcff03791041fd.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 61e21a64e399387a905c3b773ec9910328e5e33d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 10:14:11 2024 +0100

    UBUNTU: Ubuntu-6.8.0-16.16
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cab7fd9632c9832279ad26bf61789c30524885e3
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 10:12:50 2024 +0100

    UBUNTU: [Config] toolchain version update
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c209a066b91603e104ea1ac0e4cdeae0bc55ef4a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 09:50:36 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2056738
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 950c23a9dec4f416ff29511ba279ee25cfd4a4a6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 09:49:02 2024 +0100

    UBUNTU: rebase on v6.8
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 412cc12816a5be993885e098c3542a3216e87bc2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 11 09:46:27 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3424df28990cd6a97d38369e8e209334b5095679
Author: John Cabaj <john.cabaj@canonical.com>
Date:   Fri Mar 8 22:25:27 2024 -0600

    Revert "UBUNTU: SAUCE: ceph: make sure all the files successfully put before unmounting"
    
    BugLink: https://bugs.launchpad.net/bugs/2056616
    
    This reverts commit 603b74b4176fdf6ab2fb83306136947296e7aeb4.
    
    Signed-off-by: John Cabaj <john.cabaj@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 056f4386aa0487b145f7cdd6d80c56fe022963ef
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Mar 1 18:16:35 2024 +0900

    UBUNTU: [Packaging] remove debian/scripts/misc/arch-has-odm-enabled.sh
    
    On Ubuntu, /bin/sh is a symlink to /bin/dash by default.
    
    While this is a rare use case, when /bin/sh is a symlink to /bin/bash,
    the annotation check fails due to a mismatch of CONFIG_UBUNTU_ODM_DRIVERS.
    
    debian/scripts/misc/arch-has-odm-enabled.sh always fails with bash.
    
    You can see it if you directly execute it.
    
    [with dash]
    
      $ dash debian/scripts/misc/arch-has-odm-enabled.sh amd64
      cat: debian/scripts/misc/../../../debian.master/rules.d/hooks.mk: No such file or directory
      $ echo $?
      0
    
    [with bash]
    
      $ bash debian/scripts/misc/arch-has-odm-enabled.sh amd64
      cat: debian/scripts/misc/../../../debian.master/rules.d/hooks.mk: No such file or directory
      debian/scripts/misc/arch-has-odm-enabled.sh: line 26: return: can only `return' from a function or sourced script
      $ echo $?
      2
    
    Bash provides stricter checks, hence the 'return' statement outside
    a function leads to an error.
    
    While it is trivial to fix, I wonder if we need this script in the
    first place. Its purpose is to make CONFIG_UBUNTU_ODM_DRIVERS a
    user-unconfigurable option.
    
    Given debian.*/config/annotations specifying the CONFIG set for each
    arch/flavour, why not handle CONFIG_UBUNTU_ODM_DRIVERS just like
    other normal CONFIG options? Users are still allow to toggle it from
    menuconfig etc., but I do not see a significant issue, as any trouble
    comes to users' responsibility when they change CONFIG options by
    themselves.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9c85bd8126521647e7b00ae6ab79e62fbfc48cd9
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Thu Mar 7 23:05:51 2024 +0100

    Documentation: qat: fix auto_reset section
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    Remove unneeded colon in the auto_reset section.
    
    This resolves the following errors when building the documentation:
    
        Documentation/ABI/testing/sysfs-driver-qat:146: ERROR: Unexpected indentation.
        Documentation/ABI/testing/sysfs-driver-qat:146: WARNING: Block quote ends without a blank line; unexpected unindent.
    
    Fixes: f5419a4239af ("crypto: qat - add auto reset on error")
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Closes: https://lore.kernel.org/linux-kernel/20240212144830.70495d07@canb.auug.org.au/T/
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 2ecd43413d7668d67b9b8a56f882aa1ea12b8a62 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5fd7cc8c5090bd2299c86dee18405d44d43795d2
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Thu Mar 7 23:05:50 2024 +0100

    crypto: qat - resolve race condition during AER recovery
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    During the PCI AER system's error recovery process, the kernel driver
    may encounter a race condition with freeing the reset_data structure's
    memory. If the device restart will take more than 10 seconds the function
    scheduling that restart will exit due to a timeout, and the reset_data
    structure will be freed. However, this data structure is used for
    completion notification after the restart is completed, which leads
    to a UAF bug.
    
    This results in a KFENCE bug notice.
    
      BUG: KFENCE: use-after-free read in adf_device_reset_worker+0x38/0xa0 [intel_qat]
      Use-after-free read at 0x00000000bc56fddf (in kfence-#142):
      adf_device_reset_worker+0x38/0xa0 [intel_qat]
      process_one_work+0x173/0x340
    
    To resolve this race condition, the memory associated to the container
    of the work_struct is freed on the worker if the timeout expired,
    otherwise on the function that schedules the worker.
    The timeout detection can be done by checking if the caller is
    still waiting for completion or not by using completion_done() function.
    
    Fixes: d8cba25d2c68 ("crypto: qat - Intel(R) QAT driver framework")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 7d42e097607c4d246d99225bf2b195b6167a210c linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 86dfe352777679be9f4c5d682f6a2642dddf3191
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Thu Mar 7 23:05:49 2024 +0100

    crypto: qat - change SLAs cleanup flow at shutdown
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    The implementation of the Rate Limiting (RL) feature includes the cleanup
    of all SLAs during device shutdown. For each SLA, the firmware is notified
    of the removal through an admin message, the data structures that take
    into account the budgets are updated and the memory is freed.
    However, this explicit cleanup is not necessary as (1) the device is
    reset, and the firmware state is lost and (2) all RL data structures
    are freed anyway.
    
    In addition, if the device is unresponsive, for example after a PCI
    AER error is detected, the admin interface might not be available.
    This might slow down the shutdown sequence and cause a timeout in
    the recovery flows which in turn makes the driver believe that the
    device is not recoverable.
    
    Fix by replacing the explicit SLAs removal with just a free of the
    SLA data structures.
    
    Fixes: d9fb8408376e ("crypto: qat - add rate limiting feature to qat_4xxx")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit c2304e1a0b8051a60d4eb9c99a1c509d90380ae5 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36920487e12ffbe435bffc9a838db619a853cda2
Author: Mun Chun Yep <mun.chun.yep@intel.com>
Date:   Thu Mar 7 23:05:48 2024 +0100

    crypto: qat - improve aer error reset handling
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    Rework the AER reset and recovery flow to take into account root port
    integrated devices that gets reset between the error detected and the
    slot reset callbacks.
    
    In adf_error_detected() the devices is gracefully shut down. The worker
    threads are disabled, the error conditions are notified to listeners and
    through PFVF comms and finally the device is reset as part of
    adf_dev_down().
    
    In adf_slot_reset(), the device is brought up again. If SRIOV VFs were
    enabled before reset, these are re-enabled and VFs are notified of
    restarting through PFVF comms.
    
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 9567d3dc760931afc38f7f1144c66dd8c4b8c680 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fa783d88466935d60fb2c276f9b9b93f70da54cd
Author: Furong Zhou <furong.zhou@intel.com>
Date:   Thu Mar 7 23:05:47 2024 +0100

    crypto: qat - limit heartbeat notifications
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    When the driver detects an heartbeat failure, it starts the recovery
    flow. Set a limit so that the number of events is limited in case the
    heartbeat status is read too frequently.
    
    Signed-off-by: Furong Zhou <furong.zhou@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 750fa7c20e60926431ec50d63899771ffcd9fd5c linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2b053893526717bbaeadf20bf9fdbae39e19f27b
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Thu Mar 7 23:05:46 2024 +0100

    crypto: qat - add auto reset on error
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    Expose the `auto_reset` sysfs attribute to configure the driver to reset
    the device when a fatal error is detected.
    
    When auto reset is enabled, the driver resets the device when it detects
    either an heartbeat failure or a fatal error through an interrupt.
    
    This patch is based on earlier work done by Shashank Gupta.
    
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit f5419a4239af8b3951f990c83d0d8c865a485475 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d900a48eea40ae4244cca82e341e05be17b16f29
Author: Mun Chun Yep <mun.chun.yep@intel.com>
Date:   Thu Mar 7 23:05:45 2024 +0100

    crypto: qat - add fatal error notification
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    Notify a fatal error condition and optionally reset the device in
    the following cases:
      * if the device reports an uncorrectable fatal error through an
        interrupt
      * if the heartbeat feature detects that the device is not
        responding
    
    This patch is based on earlier work done by Shashank Gupta.
    
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 2aaa1995a94a3187e52ddb9f127fa1307ee8ad00 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 97fa00b1a76385ef0e0ab82b871807e48f0bed7c
Author: Mun Chun Yep <mun.chun.yep@intel.com>
Date:   Thu Mar 7 23:05:44 2024 +0100

    crypto: qat - re-enable sriov after pf reset
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    When a Physical Function (PF) is reset, SR-IOV gets disabled, making the
    associated Virtual Functions (VFs) unavailable. Even after reset and
    using pci_restore_state, VFs remain uncreated because the numvfs still
    at 0. Therefore, it's necessary to reconfigure SR-IOV to re-enable VFs.
    
    This commit introduces the ADF_SRIOV_ENABLED configuration flag to cache
    the SR-IOV enablement state. SR-IOV is only re-enabled if it was
    previously configured.
    
    This commit also introduces a dedicated workqueue without
    `WQ_MEM_RECLAIM` flag for enabling SR-IOV during Heartbeat and CPM error
    resets, preventing workqueue flushing warning.
    
    This patch is based on earlier work done by Shashank Gupta.
    
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 4469f9b2346834085fe4478ee1a851ee1de8ccb2 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6d14179201cc06cd6eda4d010d3d0c37a26f38bf
Author: Mun Chun Yep <mun.chun.yep@intel.com>
Date:   Thu Mar 7 23:05:43 2024 +0100

    crypto: qat - update PFVF protocol for recovery
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    Update the PFVF logic to handle restart and recovery. This adds the
    following functions:
    
      * adf_pf2vf_notify_fatal_error(): allows the PF to notify VFs that the
        device detected a fatal error and requires a reset. This sends to
        VF the event `ADF_PF2VF_MSGTYPE_FATAL_ERROR`.
      * adf_pf2vf_wait_for_restarting_complete(): allows the PF to wait for
        `ADF_VF2PF_MSGTYPE_RESTARTING_COMPLETE` events from active VFs
        before proceeding with a reset.
      * adf_pf2vf_notify_restarted(): enables the PF to notify VFs with
        an `ADF_PF2VF_MSGTYPE_RESTARTED` event after recovery, indicating that
        the device is back to normal. This prompts VF drivers switch back to
        use the accelerator for workload processing.
    
    These changes improve the communication and synchronization between PF
    and VF drivers during system restart and recovery processes.
    
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit ec26f8e6c784ae391e69b19f4738d7196ed7794d linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fe3d9e2c3a7a01ac5bc8e789f9625a3ecfb21be2
Author: Furong Zhou <furong.zhou@intel.com>
Date:   Thu Mar 7 23:05:42 2024 +0100

    crypto: qat - disable arbitration before reset
    
    BugLink: https://bugs.launchpad.net/bugs/2056354
    
    Disable arbitration to avoid new requests to be processed before
    resetting a device.
    
    This is needed so that new requests are not fetched when an error is
    detected.
    
    Signed-off-by: Furong Zhou <furong.zhou@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 758a0087db98fa23a3597289dbf3643ba9db2700 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e8f2224372e61bc1aae69973379335f956147bed
Author: Furong Zhou <furong.zhou@intel.com>
Date:   Thu Mar 7 23:05:41 2024 +0100

    crypto: qat - add fatal error notify method
    
    Buglink: https://bugs.launchpad.net/bugs/2056354
    
    Add error notify method to report a fatal error event to all the
    subsystems registered. In addition expose an API,
    adf_notify_fatal_error(), that allows to trigger a fatal error
    notification asynchronously in the context of a workqueue.
    
    This will be invoked when a fatal error is detected by the ISR or
    through Heartbeat.
    
    Signed-off-by: Furong Zhou <furong.zhou@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit ae508d7afb753f7576c435226e32b9535b7f8b10 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3f2fe404d1c4d215b588fff3442a6e8517c30915
Author: Thibault Ferrante <thibault.ferrante@canonical.com>
Date:   Thu Mar 7 23:05:40 2024 +0100

    UBUNTU: [Config] Disable CONFIG_CRYPTO_DEV_QAT_ERROR_INJECTION
    
    Introduced in previous patches, only useful for developers.
    
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit acfa85ff778a7f8b311daf51ae1952fedcc99909
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Thu Mar 7 23:05:39 2024 +0100

    crypto: qat - add heartbeat error simulator
    
    BugLink: https://bugs.launchpad.net/ubuntu/+bug/2056354
    
    Add a mechanism that allows to inject a heartbeat error for testing
    purposes.
    A new attribute `inject_error` is added to debugfs for each QAT device.
    Upon a write on this attribute, the driver will inject an error on the
    device which can then be detected by the heartbeat feature.
    Errors are breaking the device functionality thus they require a
    device reset in order to be recovered.
    
    This functionality is not compiled by default, to enable it
    CRYPTO_DEV_QAT_ERROR_INJECTION must be set.
    
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Reviewed-by: Lucas Segarra Fernandez <lucas.segarra.fernandez@intel.com>
    Reviewed-by: Ahsan Atta <ahsan.atta@intel.com>
    Reviewed-by: Markas Rapoportas <markas.rapoportas@intel.com>
    Signed-off-by: Mun Chun Yep <mun.chun.yep@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit e2b67859ab6efd4458bda1baaee20331a367d995 linux-next)
    Signed-off-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8fd91127cbb738a2a3a97c5f7f2439100e11dc20
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 31 14:53:51 2024 +0100

    UBUNTU: [Config] enable low-latency settings
    
    BugLink: https://bugs.launchpad.net/bugs/2051342
    
    Enable low-latency oriented configs by default in the generic kernel.
    
    Link: https://discourse.ubuntu.com/t/enable-low-latency-features-in-the-generic-ubuntu-kernel-for-24-04/42255
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2cc9c4315e06beb42830fcb96dc7905a89616a82
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:44 2024 +0800

    hwmon: (coretemp) Use dynamic allocated memory for core temp_data
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    The total memory needed for saving per core temperature data depends on
    the number of cores in a package. Using static allocated memory wastes
    memories on systems with low per package core count.
    
    Improve the code to use dynamic allocated memory so that it can be
    improved further when per package core count information becomes
    available.
    
    No functional change intended.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-12-rui.zhang@intel.com
    [groeck: Fixed continuation line alignment]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 1a793caf6f6991716cb07583ed7c27de84ef0cba linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bd06ef4db2baa4a9364337143ccd3a06b44db0c6
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:43 2024 +0800

    hwmon: (coretemp) Remove redundant temp_data->is_pkg_data
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    temp_data->index saves the index in pdata->core_data[]. It is not used
    by package temp_data.
    
    Use temp_data->index as the indicator of package temp_data and remove
    redundant temp_data->is_pkg_data.
    
    No functional change.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-11-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 18b24a5f9ca3f180f0be72b98f170f043a5d8961 linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b0ee85a22f1a18a2a149f3c2fc623c9ca8ce7c76
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:42 2024 +0800

    hwmon: (coretemp) Split package temp_data and core temp_data
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    Saving package temp_data and core temp_data in one array with different
    offsets is fragile.
    
    Split them and clean up crabbed maths and macros. This also fixes a
    problem that pdata->core_data[0] was never used.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-10-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 326241f71f3d8de3c62236b559ce3f2f201aec4d linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 12f6573f4d0131a3dfac78b39ab2f57b379356b9
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:41 2024 +0800

    hwmon: (coretemp) Abstract core_temp helpers
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    coretemp driver has an obscure and fragile logic for handling package
    and core temperature data.
    
    Place the logic in newly introduced helpers for further optimizations.
    
    No functional change.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-9-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit b0b01414a26105b68cbce308df076ec66c72bddd linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9ebd81ca6ac3dbd745db86496dfabb04e1aa02de
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:40 2024 +0800

    hwmon: (coretemp) Remove redundant pdata->cpu_map[]
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    pdata->cpu_map[] saves the mapping between cpu core id and the index in
    pdata->core_data[]. This is used to find the temp_data structure using
    cpu_core_id, by traversing the pdata->cpu_map[] array. But the same goal
    can be achieved by traversing the pdata->core_temp[] array directly.
    
    Remove redundant pdata->cpu_map[].
    
    No functional change.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-8-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 87eb801925a0a391dce0d7519eb1d45a9d7e0953 linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 780648d51fc6ec74c6ef9a9cea2c1da94c9e7229
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:39 2024 +0800

    hwmon: (coretemp) Replace sensor_device_attribute with device_attribute
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    Replace sensor_device_attribute with device_attribute because
    sensor_device_attribute->index is no longer used.
    
    No functional change.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-7-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 18d8f5583388f38094b3b17ad3149d2a93a23646 linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8d5104bc79f010299a8aa0f692ea9601c4189b96
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:38 2024 +0800

    hwmon: (coretemp) Remove unnecessary dependency of array index
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    When sensor_device_attribute pointer is available, use container_of() to
    get the temp_data address.
    
    This removes the unnecessary dependency of cached index in
    pdata->core_data[].
    
    No functional change.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-6-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit 25f8e01baa05dfeb1b477112b1fec94f768f27b4 linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 89a5d5c9fd455a8d4dfa3319877e393f790fc368
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Fri Feb 2 17:21:37 2024 +0800

    hwmon: (coretemp) Introduce enum for attr index
    
    BugLink: https://bugs.launchpad.net/bugs/2056126
    
    Introduce enum coretemp_attr_index to better describe the index of each
    sensor attribute.
    
    No functional change.
    
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lore.kernel.org/r/20240202092144.71180-5-rui.zhang@intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    (cherry picked from commit c8c2074020a878ca6c6106a2cf224b536247e11a linux-next)
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c9ee76ed966894992f32a32cd740fe68c7231d94
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 4 11:50:51 2024 +0100

    UBUNTU: Ubuntu-6.8.0-15.15
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 261e2c579dd1ff794f634d70db9c11d19d8fffec
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 4 11:49:51 2024 +0100

    Revert "UBUNTU: [Packaging] Transition laptop-23.10 to generic"
    
    This reverts commit cf2a72258261f649b13deae589ccef59ce0dcc23.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8a1d1c37d18e6432b77e8cac2bc2e069a33a5354
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 4 11:33:14 2024 +0100

    UBUNTU: rebase on v6.8-rc7
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5c471560485a1f55d310a6cae72d2302466b465b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 4 11:29:09 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2055871
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a8ce9e7d3e8af9a0fca9bd88dd0d63d3e6ef15cb
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Mar 4 10:19:24 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5ea48f3b44e80ce7e640f735c00fb98fccbb5236
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Mar 1 11:45:12 2024 +0100

    UBUNTU: Ubuntu-6.8.0-14.14
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b561df22cfa18e7d7d44cc58349e770eac058a91
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Mar 1 11:43:28 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2055551
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8be287f598f59042a3dc9227b0d60119ab92f96f
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Mar 1 15:09:13 2024 +0900

    UBUNTU: [packaging] remove debian/stamps/keep-dir
    
    Ubuntu kernel touches a stamp file in debian/stamps/ without creating
    the directory.
    
    Since git cannot track an empty directory, debian/stamps/keep-dir was
    added to keep the debian/stamps/ directory.
    
    Import the 'stamp' macro from Debian kernel to create the stamps
    directory.
    
    [1]: https://salsa.debian.org/kernel-team/linux/-/blob/debian/6.5.10-1/debian/rules.real#L40
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dcb2aa91c99b51128a2696436a4eadc24d01d9c9
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Mar 1 15:00:00 2024 +0900

    UBUNTU: [packaging] do not include debian/ directory in a binary package
    
    Both Debian kernel and Ubuntu kernel provide a linux-source package,
    but a difference is that Debian's one does not include the debian/
    directory, while Ubuntu's one includes debian/ and debian.*/ directories.
    
    Including a debian/ directory in a binary package is odd.
    
    If you want to rebuild the kernel in the Ubuntu way, you can get the
    source package by 'apt-get source'. It is not what the linux-source
    package should offer.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5edb40e0ca0af01d487acb1431bbbfb596b375e6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Feb 29 15:17:00 2024 +0100

    UBUNTU: [Config] reduce verbosity when booting in quiet mode
    
    BugLink: https://bugs.launchpad.net/bugs/2049390
    
    Set CONFIG_CONSOLE_LOGLEVEL_QUIET=3 by default when the kernel boots
    with the 'quiet' option.
    
    This can help to silent ACPI errors with a buggy firmware/BIOS,
    preventing false alarms / bug reports.
    
    NOTE: our testing won't be affected by this change, since we are not
    booting the kernel with 'quiet' in our testing systems.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4088ddf6da2bac06d05c278899a96d569379360
Author: Daan De Meyer <daan.j.demeyer@gmail.com>
Date:   Fri Feb 23 14:25:59 2024 +0100

    UBUNTU [Packaging]: Include erofs in linux-modules instead of linux-modules-extra
    
    BugLink: https://bugs.launchpad.net/bugs/2054809
    
    erofs is starting to see more use as a modern alternative to squashfs.
    Since squashfs is already included in linux-modules, let's include erofs
    in linux-modules as well so that it can be used as a filesystem in virtual
    machines with just linux-virtual installed.
    
    Signed-off-by: Daan De Meyer <daan.j.demeyer@gmail.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 420a2928b9c7249b806e2b8025a0f1194774affa
Author: You-Sheng Yang <vicamo.yang@canonical.com>
Date:   Fri Feb 23 01:58:26 2024 +0800

    UBUNTU: [Packaging] Move dmi-sysfs.ko into linux-modules
    
    BugLink: https://bugs.launchpad.net/bugs/2045561
    
    The dmi-sysfs.ko module (CONFIG_DMI_SYSFS) is currently shipped in
    linux-modules-extra. This makes it hard to pull in via the linux-virtual
    package, it can only come from the linux-generic one that also pulls in
    the firmware and everything else needed for baremetal, and that serves
    no purpose in a qemu VM. This stops VMs using these kernels from being
    configurable using qemu or cloud-hypervisor's SMBIOS type 11 strings.
    
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 77e530c1a864c601b96622db03bc1f38e51155f1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Feb 21 09:46:24 2024 +0100

    UBUNTU: [Config] enable Intel DMA remapping by default
    
    BugLink: https://bugs.launchpad.net/bugs/1951440
    
    We have tried in the past to enable CONFIG_INTEL_IOMMU_DEFAULT_ON and
    CONFIG_INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON (starting with Jammy), but
    there were multiple issues (especially with old hardware), so we ended
    up disabling these options afterwards, see LP: #1971699.
    
    Considering that IOMMU is enabled by default in upstream kernels,
    probably most of these issues are solved now (or old hardware has been
    decommissioned).
    
    Moreover, having this enabled by default can prevent potential issues
    with modern hardware and drivers (see for example LP #1958004).
    
    Acked-by: Philip Cox <philip.cox@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9f9563d7cb55bddba3aef636958cd25e59498561
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Feb 22 19:45:00 2024 +0100

    UBUNTU: SAUCE: modpost: Replace 0-length array with flex-array member
    
    Fake flexible arrays (zero-length and one-element arrays) are deprecated,
    and should be replaced by flexible-array members. This fixes the following
    compiler warning:
    
     CC      kernel/module/version.o
    ../kernel/module/version.c: In function 'check_version':
    ../kernel/module/version.c:37:21: warning: 'strcmp' reading 1 or more bytes from a region of size 0 [-Wstringop-overread]
       37 |                 if (strcmp(versions->name, symname) != 0)
          |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    In file included from ../kernel/module/version.c:8:
    ../include/linux/module.h:41:14: note: source object 'name' of size 0
       41 |         char name[0];
          |              ^~~~
    
    Fixes: 08bc01030daa ("UBUNTU: SAUCE: modpost: support arbitrary symbol length in modversion")
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2f004a47f18c1b49486cd5a07aca6cee493c9cb2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Feb 9 08:23:20 2024 +0100

    UBUNTU: [Config] update tracking bug for CONFIG_INTEL_IOMMU_DEFAULT_ON
    
    BugLink: https://bugs.launchpad.net/bugs/1971699
    
    In commit 0c3c0650379e ("UBUNTU: [Config] disable Intel DMA remapping
    options by default") we disabled Intel IOMMU by default, but the entry
    in annotations is missing a direct reference to the tracking bug. Fix it
    by adding the tracker bug to the note.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 149a3046ffba8925ef281da7c0ccf1da896c3a4e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Mar 1 10:59:17 2024 +0100

    UBUNTU: debian.master/dkms-versions -- update from kernel-versions (main/d2024.02.29)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7e971df08ceb3a03e0894c742f88ae046c5e66f6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Mar 1 10:37:13 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b77fb099e50ec8c354b6f1007e9b56de64378de2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 29 15:02:24 2024 +0100

    UBUNTU: Ubuntu-6.8.0-13.13
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 02c69a01ed8b5b4d9a9f1f8b32dec674d1a3e048
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 29 14:58:51 2024 +0100

    UBUNTU: debian.master/dkms-versions -- update from kernel-versions (main/d2024.02.29)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b44d9ca1a87918d40af38f32edbcd3f175ed47e1
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 29 14:56:59 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2055421
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 91d930a4e96d905e6ed8822d0ff134f233517687
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 27 12:26:02 2024 +0100

    UBUNTU: [Config] updateconfifs following v6.8-rc6 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5e0c52390f556375d52ac436c67a4cd0f741e1ff
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 27 12:23:37 2024 +0100

    UBUNTU: rebase on v6.8-rc6
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2d30be7ad527aed1a3d5c97aa62fe48e3df8b1fd
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 27 12:19:26 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6857846f0dc9d2a91724afbe303a867c9ebca9a5
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 22 14:31:00 2024 +0100

    UBUNTU: Ubuntu-6.8.0-12.12
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 96f5644763c40c58e4569f9bea82805200dcd384
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 22 14:30:14 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 77d2bcae15ee75cb13f5fe3965d0442afdd8a773
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Feb 19 13:55:19 2024 +0100

    UBUNTU: [Packaging] rules: Put usbip manpages in the correct directory
    
    BugLink: https://bugs.launchpad.net/bugs/2054094
    
    *.8 manpages need to go into man8/.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3a3ba6a2bc7376eab0a2194198fb85c251bd775f
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Jan 19 17:02:25 2024 +0000

    UBUNTU: [Config] Turn off 31-bit COMPAT on s390x
    
    BugLink: https://bugs.launchpad.net/bugs/2038583
    
    31-bit support no longer needed, and is not clear if it actually was
    ever used on Ubuntu. Despite providing bare-bones 31-bit
    libraries. 31-bit libraries can continue to be compiled (they switch
    to "cross-compilation"), but can probably be dropped.
    
    This makes s390x port year 2038 safe.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 848235005079d4f0f04e202ac7bcff03791041fd
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Nov 20 16:34:19 2023 +0100

    UBUNTU: [Packaging] Add debian/control sanity check
    
    BugLink: https://bugs.launchpad.net.bugs/2043994
    
    Only the main linux source packages should produce linux-source-PKGVER
    binary packages. Add a simple check that fails if debian/control looks
    fishy.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bb79fba482974c11f5442988fc8bcd1120ee64ea
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 20 17:15:08 2024 +0100

    UBUNTU: [Packaging] Transition laptop-23.10 to generic
    
    The linux-laptop kernel no longer serves any purpose and is removed in
    Noble. The generic kernel now supports the ARM X13s laptop.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ab8844993caf795ba4691e194fd14932904f5c51
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Feb 7 12:24:46 2024 +0100

    UBUNTU: [Packaging] Build linux-source package only for the main kernel
    
    BugLink: https://bugs.launchpad.net/bugs/2052439
    
    The linux-source package only makes sense for the main linux kernel.
    Building it for derivatives is useless and just confuses users. By
    default it is enabled globally in 0-common-vars.mk so make sure it is
    turned off afterwards for non-linux source packages.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c2451215f5826075cb84d87ccd0803ef70766364
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Feb 7 12:24:45 2024 +0100

    UBUNTU: [Packaging] Move linux-source package stub to debian/control.d
    
    BugLink: https://bugs.launchpad.net/bugs/2052439
    
    The linux-source-<version> package may only be built for the main linux
    source package. Similar to linux-libc-dev, move the packaging stub to
    debian/control.d and only include it if the source package name is
    indeed 'linux'.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 75135fd28653076073ff624663c1c979422c53a8
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Feb 7 12:15:15 2024 +0100

    UBUNTU: [Packaging] Build indep tools packages only for the main kernel
    
    BugLink: https://bugs.launchpad.net/bugs/2048183
    
    The indep tools packages provide symlinks and other generic files and
    as such may only be built for the main source package. Ensure that
    by turning on the package build only for the main linux source package.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a2e24f00c12d97d53f4674b44caf51e7483206fc
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Feb 7 12:15:14 2024 +0100

    UBUNTU: [Packaging] Move indep tools package stubs to debian/control.d
    
    BugLink: https://bugs.launchpad.net/bugs/2048183
    
    The following packages may only be built for the main linux source
    package. Similar to linux-libc-dev, move the packaging stubs to
    debian/control.d and only include them if the source package name is
    indeed 'linux':
      - linux-tools-common
      - linux-cloud-tools-common
      - linux-host-tools
    
    Also change the package names in the rules to linux-* to further make
    sure that we don't accidentially build linux-<variant>-* packages should
    a derivative's control file contain incorrect package stanzas.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8bcd213df1e4afa48d782e93e28823f995c08fdb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Feb 21 09:56:33 2024 +0100

    UBUNTU: [Config] enable Intel DMA remapping by default
    
    BugLink: https://bugs.launchpad.net/bugs/1951440
    
    We have tried in the past to enable CONFIG_INTEL_IOMMU_DEFAULT_ON and
    CONFIG_INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON (starting with Jammy), but
    there were multiple issues (especially with old hardware), so we ended
    up disabling these options afterwards, see LP: #1971699.
    
    Considering that IOMMU is enabled by default in upstream kernels,
    probably most of these issues are solved now (or old hardware has been
    decommissioned).
    
    Moreover, having this enabled by default can prevent potential issues
    with modern hardware and drivers (see for example LP #1958004).
    
    Acked-by: Philip Cox <philip.cox@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9dc90a1581a93483b1f9f7c2157bbb2a3078d684
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Feb 9 08:23:20 2024 +0100

    UBUNTU: [Config] update tracking bug for CONFIG_INTEL_IOMMU_DEFAULT_ON
    
    BugLink: https://bugs.launchpad.net/bugs/1971699
    
    In commit 0c3c0650379e ("UBUNTU: [Config] disable Intel DMA remapping
    options by default") we disabled Intel IOMMU by default, but the entry
    in annotations is missing a direct reference to the tracking bug. Fix it
    by adding the tracker bug to the note.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d699afc224b9693f3f60f118d4e21a0a565653d1
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 14 00:04:32 2024 +0100

    UBUNTU: Ubuntu-6.8.0-11.11
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ad8e8568b6ad60e01c5090d6d9f75077a507563d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 14 00:03:31 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2053094
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3335c686c7c7cf8801393a40813168e5d15d4285
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 23:02:37 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f29c5bba69bb9d2a258cae110a99716b0ee70654
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 23:02:18 2024 +0100

    UBUNTU: [Packaging] riscv64: disable building unnecessary binary debs
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 614056b3ce54fe15279a54265867e4472c5f10c0
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 13:23:47 2024 +0100

    UBUNTU: Ubuntu-6.8.0-10.10
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4625eeddc8209f5452b9003be52493a652848387
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 13:22:24 2024 +0100

    UBUNTU: [Packaging] add Rust build-deps for riscv64
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 106d2dde88abaca33e83a7d8509e0df13d8cb9f5
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 13:20:40 2024 +0100

    Revert "Revert "UBUNTU: [Packaging] temporarily disable Rust dependencies on riscv64""
    
    This reverts commit 6980efdb31895f954ec445cd42fe3e01d21e1d74.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2b40e81f9ba96f14f44d0d47c3355ef021613b60
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 13:19:07 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2053015
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 842e6f5633ee20edb71cb2849be5fe97ada7acca
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Feb 13 12:32:31 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 53db43d93ac05da9db8758e132bd749f6854b91d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 15:49:21 2024 +0100

    UBUNTU: Ubuntu-6.8.0-9.9
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd9a7b6f8a3930534df56809491885201141b835
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 15:43:46 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2052945
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 12f99fddba801d06b3bebb305f6cebcafa7f2e30
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 14:34:48 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 71c9fd3148397854674f38033195e9099b1e764b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 14:29:50 2024 +0100

    Revert "UBUNTU: [Packaging] temporarily disable Rust dependencies on riscv64"
    
    This reverts commit 2d502536bdd3969ecb89b4b3f5746b5f265cb493.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 70cd1cbacc791e2ca1ce55d82910de038b9481c9
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 10:13:34 2024 +0100

    UBUNTU: Ubuntu-6.8.0-8.8
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 11ebb35a8bbe35079970b10e5da33470dd48976a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 10:10:48 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2052918
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ebfd4c060df9302cfacad4d5abafecfa7776a41b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 10:09:29 2024 +0100

    UBUNTU: v6.8-rc4 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b2cab7268b58fae7c889681d62241efec5b7a033
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 10:02:50 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c71e9eab76d3d64fa50646588e84d56124f61d90
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Feb 12 09:55:19 2024 +0100

    UBUNTU: [Packaging] riscv64: enable linux-libc-dev build
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 41c91e25f14686a17ae23718ee121db5270cf4cc
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 8 12:05:44 2024 +0100

    UBUNTU: Ubuntu-6.8.0-7.7
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1448f83b8fd0b4127c7d30009f3d8c1d7129c529
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 8 12:04:44 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2052691
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f1985fae168c8ea8f324b3443e7f69f04be24276
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 8 11:09:13 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 22a918e8f025f0e77afe33c1d2981b9e873d73ba
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 15:13:52 2024 +0100

    UBUNTU: Ubuntu-6.8.0-6.6
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5f3960c5693522090d9fa38708f4b5025f6b379e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 15:11:59 2024 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 976eb93e05fecacc539a32d524e7c0247c841239
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 15:07:22 2024 +0100

    UBUNTU: [packaging] disable signing for ppc64el
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f8a6bb7c730d670126cebb5abe40c5ea28b2063e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 14:23:56 2024 +0100

    UBUNTU: debian.master/dkms-versions -- update from kernel-versions (main/d2024.02.07)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1aeace95a08fb3a7609e12578869b652767b427b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 14:22:18 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2052592
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4db23c5283649be82d9732c9ae34f86ccd63b929
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 13:43:37 2024 +0100

    UBUNTU: [packaging] rebase on v6.8-rc3
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 16d8a9f20636c21012c30d9a2620bad6d4b49ac6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 13:42:13 2024 +0100

    UBUNTU: [packaging] rename to linux
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c47bd4423963913f7ecd10bd453e88586a78a619
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 13:34:52 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6642ce87d9e121271ff2cbac6748f4e64e70ff39
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Feb 7 10:05:58 2024 +0100

    UBUNTU: [Config] updateconfigs following v6.8-rc3 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 781aec4c13b7902a0268532cf7a4d2965515197d
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 6 14:00:12 2024 +0100

    UBUNTU: [Packaging] Remove update-dkms-versions and move dkms-versions
    
    Remove the update-dkms-versions script from the tree, it's replaced by
    'cranky update-dkms-versions', move the dkms-versions file and fix all
    references to the old location.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 59e862f342dc2ab299e118a31910f03d091d7af3
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jan 25 09:19:52 2024 +0100

    UBUNTU: [Packaging] Remove do_full_source variable (fixup)
    
    This was missed in the below commit, fix it.
    
    Fixes: af3f324f1cb3 ("UBUNTU: [Packaging] Remove do_full_source variable")
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit fe947da0d59baace44a2a4c46001f9104fe5db3e
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Feb 1 13:19:35 2024 +0000

    UBUNTU: SAUCE: Enable fips mode by default, in FIPS kernels only
    
    BugLink: https://bugs.launchpad.net/bugs/2049082
    
    Ensure that kernels built with CONFIG_CRYPTO_FIPS=y default to fips
    mode. Such that testing FIPS kernels in FIPS mode requires no
    additional bootloader configuration. This will ease testing,
    deployment, downgrades/upgrades, certification.
    
    Tested by building unstable kernel with a minimal FIPS configuration
    enabled, and observing that default boot goes into fips mode, as well
    as when fips=1 passed on the cmdline. Also verified that fips=0 turns
    off fips mode correctly.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 2938ff83901ae014df187b15ca269f5999a498f7
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Feb 6 17:29:34 2024 +0000

    UBUNTU: [Packaging] Remove old snapcraft.yaml
    
    This file was added more than a decade ago, and is no longer working.
    
    BugLink: https://bugs.launchpad.net/bugs/2051468
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 8b2f3c3d309c84e77c0ee952b92fda83eefb887a
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Feb 2 15:21:37 2024 +0000

    UBUNTU: [Packaging] drop abi files with clean
    
    fdr clean will now remove obsolete and now unused in-tree abi files,
    as only linux-buildinfo contents is compared out of band.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 5f068dd3bc581885d72981395dc489b3e4f1d296
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Dec 6 11:48:06 2023 +0000

    UBUNTU: [Packaging] Remove in-tree abi checks
    
    linux-buildinfo packages are now externally compared by swm, with
    results approving or rejecting updates based on the stable
    tracker. Those checks also allow hints and overrides to accept
    intentional changes.
    
    Also these are done on the correct pair-wise comparisons, especially
    when two streams are being cranked.
    
    The above eliminates the need to identify previous build abi,
    download, extract it, vendor it in, and assert it at build time.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit ac677c9773dfbc0229e9c85972e4d44cfd4886e1
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Feb 2 12:59:09 2024 +0100

    UBUNTU: Ubuntu-unstable-6.8.0-5.5
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1e933f533e31a4f2bbb88a0a89314cf2fb450305
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Feb 2 12:58:14 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2052136
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fb757607bd031a85169b8c99a651c7075febbadd
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Feb 2 12:58:03 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 14edc614078a285fdfe23696e1c8fa23ee7d78cf
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 14:49:49 2024 +0100

    UBUNTU: Ubuntu-unstable-6.8.0-4.4
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 82d095ee28c23ac2f54b1e99fde70486b14f420e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 29 11:25:28 2024 +0100

    UBUNTU: [Config] enable simpledrm and DRM fbdev emulation layer
    
    BugLink: https://bugs.launchpad.net/bugs/1965303
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d3e58e50ce1a2bb95d5bce08efbd63fd13058681
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 14:13:06 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2051502
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 52622baacdffdaa9d33c55fe504334589b4e0a8a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 12:38:26 2024 +0100

    UBUNTU: [Config] toolchain update
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f607b132b79823cb096f2c9d4dce932513cfebd6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 10:01:16 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 58976f064ae074243d135f19011696d0c6d11f98
Author: Miguel Ojeda <ojeda@kernel.org>
Date:   Sun Dec 24 18:21:28 2023 +0100

    rust: upgrade to Rust 1.75.0
    
    This is the next upgrade to the Rust toolchain, from 1.74.1 to 1.75.0
    (i.e. the latest) [1].
    
    See the upgrade policy [2] and the comments on the first upgrade in
    commit 3ed03f4da06e ("rust: upgrade to Rust 1.68.2").
    
    # Unstable features
    
    The `const_maybe_uninit_zeroed` unstable feature [3] was stabilized in
    Rust 1.75.0, which we were using in the PHYLIB abstractions.
    
    The only unstable features allowed to be used outside the `kernel` crate
    are still `new_uninit,offset_of`, though other code to be upstreamed
    may increase the list.
    
    Please see [4] for details.
    
    # Other improvements
    
    Rust 1.75.0 stabilized `pointer_byte_offsets` [5] which we could
    potentially use as an alternative for `ptr_metadata` in the future.
    
    # Required changes
    
    For this upgrade, no changes were required (i.e. on our side).
    
    # `alloc` upgrade and reviewing
    
    The vast majority of changes are due to our `alloc` fork being upgraded
    at once.
    
    There are two kinds of changes to be aware of: the ones coming from
    upstream, which we should follow as closely as possible, and the updates
    needed in our added fallible APIs to keep them matching the newer
    infallible APIs coming from upstream.
    
    Instead of taking a look at the diff of this patch, an alternative
    approach is reviewing a diff of the changes between upstream `alloc` and
    the kernel's. This allows to easily inspect the kernel additions only,
    especially to check if the fallible methods we already have still match
    the infallible ones in the new version coming from upstream.
    
    Another approach is reviewing the changes introduced in the additions in
    the kernel fork between the two versions. This is useful to spot
    potentially unintended changes to our additions.
    
    To apply these approaches, one may follow steps similar to the following
    to generate a pair of patches that show the differences between upstream
    Rust and the kernel (for the subset of `alloc` we use) before and after
    applying this patch:
    
        # Get the difference with respect to the old version.
        git -C rust checkout $(linux/scripts/min-tool-version.sh rustc)
        git -C linux ls-tree -r --name-only HEAD -- rust/alloc |
            cut -d/ -f3- |
            grep -Fv README.md |
            xargs -IPATH cp rust/library/alloc/src/PATH linux/rust/alloc/PATH
        git -C linux diff --patch-with-stat --summary -R > old.patch
        git -C linux restore rust/alloc
    
        # Apply this patch.
        git -C linux am rust-upgrade.patch
    
        # Get the difference with respect to the new version.
        git -C rust checkout $(linux/scripts/min-tool-version.sh rustc)
        git -C linux ls-tree -r --name-only HEAD -- rust/alloc |
            cut -d/ -f3- |
            grep -Fv README.md |
            xargs -IPATH cp rust/library/alloc/src/PATH linux/rust/alloc/PATH
        git -C linux diff --patch-with-stat --summary -R > new.patch
        git -C linux restore rust/alloc
    
    Now one may check the `new.patch` to take a look at the additions (first
    approach) or at the difference between those two patches (second
    approach). For the latter, a side-by-side tool is recommended.
    
    Link: https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1750-2023-12-28 [1]
    Link: https://rust-for-linux.com/rust-version-policy [2]
    Link: https://github.com/rust-lang/rust/issues/91850 [3]
    Link: https://github.com/Rust-for-Linux/linux/issues/2 [4]
    Link: https://github.com/rust-lang/rust/issues/96283 [5]
    Reviewed-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>
    Reviewed-by: Martin Rodriguez Reboredo <yakoyoku@gmail.com>
    Tested-by: Boqun Feng <boqun.feng@gmail.com>
    Link: https://lore.kernel.org/r/20231224172128.271447-1-ojeda@kernel.org
    Signed-off-by: Miguel Ojeda <ojeda@kernel.org>
    (cherry picked from commit c5fed8ce65493f71611280f225826e7bd5e49791)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 45ab0a4f6a8d6479e964c587955f8b9dfba7530c
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 08:59:32 2024 +0100

    UBUNTU: Ubuntu-unstable-6.8.0-3.3
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 85b3dd50f1e506c6c7bf792307ef379ae525b585
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 08:57:26 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2051488
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2d3f545c504953c329478a3c3f90e7b8ce5bf28d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 08:57:05 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0dd0d99f8cb6c86b63477f00a368a227d61564ba
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Jan 29 08:51:02 2024 +0100

    UBUNTU: [Config] updateconfigs following v6.8-rc2 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 294456889651bc2fe6fddbc7d6092cf4bde97d0c
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 13:10:08 2024 +0100

    UBUNTU: Ubuntu-unstable-6.8.0-2.2
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 753b041425725f45489304951d257e7951f8cffd
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 13:09:18 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2051110
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d22da93e03ddcadd852107e8cc14b39edb433778
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 13:09:05 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 54c6f380c4965d60eef933227ce7b1ca22b19a3a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 13:08:58 2024 +0100

    UBUNTU: [Config] enable Rust
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 27833e73480833d057a4946dd7b3c04ddce06814
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 12:33:48 2024 +0100

    UBUNTU: [Config] toolchain update
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ae989cd314392b22abf32afbf5cd01ac73a3da8e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 10:48:37 2024 +0100

    UBUNTU: Ubuntu-unstable-6.8.0-1.1
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ca8131b626a4688ae68bd8a77733b6e1bffa8cd9
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jan 24 10:47:36 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2051102
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9ba024da192c2297bcc7b64596cdd982c5572d3f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 18:02:08 2024 +0100

    UBUNTU: debian/dkms-versions -- temporarily disable v4l2loopback
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 35dbc104d379817155519f38b9c1610e3383428e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 17:33:42 2024 +0100

    UBUNTU: debian/dkms-versions -- temporarily disable ipu6 and isvsc dkms
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 79b0d6bafa685dff96a23ca54d5e02f55f678766
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 17:06:14 2024 +0100

    UBUNTU: debian/dkms-versions -- temporarily disable zfs dkms
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ec6ce70d215e84aa0a272aa322b2085ae92b0335
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 16:28:52 2024 +0100

    UBUNTU: SAUCE: cpufreq: s/strlcpy/strscpy/
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c9fe0066316702531e57bde0c2089ece90610899
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 16:33:16 2024 +0100

    UBUNTU: SAUCE: export file_close_fd() instead of close_fd_get_file()
    
    Following the refactor done in:
    
    commit a88c955fcfb49727d0ed86b47410f6555a8e69e4
    Author: Christian Brauner <brauner@kernel.org>
    Date:   Thu Nov 30 13:49:07 2023 +0100
    
        file: s/close_fd_get_file()/file_close_fd()/g
    
    update the export directive we added in:
    
    commit 17f7fa4baad268cc4a93205747222be931699788
    Author: Christian Brauner <brauner@kernel.org>
    Date:   Wed Jan 16 23:13:25 2019 +0100
    
        UBUNTU: SAUCE: binder: turn into module
    
    Anbox probably needs a review too.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ca03be747372779de3e68940c40f3c0bf4d9eefb
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 16:04:13 2024 +0100

    UBUNTU: [Config] updateconfigs following v6.8-rc1 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9cb22f08a691cb89fc363868a079db809e220933
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 11:37:52 2024 +0100

    UBUNTU: [packaging] move to v6.8-rc1
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b0f8a8f5fcd0794597247bb5bd9780a6f4c3045f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Jan 23 11:36:41 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit abdcb132cf2c2e5905131fb5ad57bb3574678383
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 15 08:41:12 2024 +0100

    UBUNTU: Ubuntu-unstable-6.7.0-7.7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9926a838cdd6fb324981e202a80f0980842f5f97
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 15 08:37:13 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2049357
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7cc0840ae2190406abaadccb0a4da59598f31300
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 15 08:34:02 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cda9362dcf07bb73853b038c56cc477a1c35cadf
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 15 08:41:51 2024 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 180710ca81e7f9621faa4112af56d62f2f9f2307
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 15 08:35:27 2024 +0100

    UBUNTU: [Packaging] re-enable signing for s390x and ppc64el
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7b20a06c5709a7fc2fdd794f6286403e9bb17c4f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 15 08:31:53 2024 +0100

    UBUNTU: [Packaging] move to linux-unstable
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b6b556e3738d14f8f6da5ce26448205924abe198
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 12 09:21:57 2024 +0100

    UBUNTU: Ubuntu-6.7.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 597005be9b16918c58d7c34cfa3006785ddddbb3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 12 08:47:19 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2049182
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7a5ebc9350ed5305e10e79873c0cbc64d490d854
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 12 08:42:57 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 699c70c42e3f7f1bf0d6d5dc31026152927d9286
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 12 08:42:12 2024 +0100

    UBUNTU: [Packaging] resync getabis
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c42e60a62ef6859280eb20f7759df70eecbc3776
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 21:57:54 2024 +0100

    UBUNTU: update dropped.txt
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6d5f9e4244175600f9d7eccfd6d83099acaa5665
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 12 09:18:02 2024 +0100

    UBUNTU: [Packaging] temporarily disable Rust dependencies on riscv64
    
    clang-17 / llvm are currently out of sync on riscv64:
    
      The following packages have unmet dependencies:
       clang-17 : Depends: libclang-common-17-dev (= 1:17.0.6-3) but 1:17.0.6-5 is to be installed
      E: Unable to correct problems, you have held broken packages.
    
    To avoid this and unblock the the build simply disable the clang and
    Rust dependencies on riscv64 for now.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 275ec10505376857b3e8f2771886df1f6eafc486
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 5 12:24:48 2024 +0100

    UBUNTU: [Packaging] temporarily disable riscv64 builds
    
    Disable riscv64 build for now, since the ABI files are completely
    removed every time we start a new kernel release.
    
    Moreover, building riscv64 in generic consistently increase the overall
    build time of the packages (3 days or more), slowing down the testing
    process of the new published kernels.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b0ee8e282e95cbc24e324cd3529de6b127147696
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 10:22:10 2024 +0100

    Revert "UBUNTU: SAUCE: apm -- annotate indirect calls within firmware_restrict_branch_speculation_{start,end}"
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Not needed anymore with the change to make objtool warnings as fatal
    errors for RETPOLINE and SLS.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3852ab840061d0a87bceb04ebb35ae82b937df91
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 10:21:27 2024 +0100

    Revert "UBUNTU: SAUCE: early/late -- annotate indirect calls in early/late initialisation code"
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Not needed anymore with the change to make objtool warnings as fatal
    errors for RETPOLINE and SLS.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f8303bf23e7d1cf30cf0035ec03a69dba7a00853
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 10:21:49 2024 +0100

    Revert "UBUNTU: SAUCE: vga_set_mode -- avoid jump tables"
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Not needed anymore with the change to make objtool warnings as fatal
    errors for RETPOLINE and SLS.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bd433ee34b7b92fabec8d8da83e784d5cc67a61e
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Dec 14 12:14:32 2023 +0000

    UBUNTU: [Packaging] Remove all custom retpoline-extract code
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Now that retpoline & SLS mitigration checks are enforced during build
    via objtool patch, drop all custom retpoline packaging, abi files, and
    checks.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f921eba36bcdae7ff255964ea667c95635a47fd3
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Dec 14 12:09:50 2023 +0000

    UBUNTU: SAUCE: scripts: remove generating .o-ur objects
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Remove patch to upstream build system to generate Ubuntu retpoline
    data files, as used to be used for a defunct retpoline build time
    check.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9c888e2099119ff57fe47175bc2e1f6a13ba588b
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Dec 13 12:38:23 2023 +0000

    UBUNTU: SAUCE: objtool: make objtool RETPOLINE validation fatal when building with CONFIG_RETPOLINE=y
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Make objtool RETPOLINE validation fatal when building with
    CONFIG_RETPOLINE=y, currently it is a build.log warning only.
    
    This is a standalone patch, such that if regressions are identified
    (with any config or toolchain configuration) it can be reverted until
    relevant identified code is fixed up or otherwise
    ignored/silecned/marked as safe.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Link: https://lore.kernel.org/all/20231213134303.2302285-4-dimitri.ledkov@canonical.com/
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 640a8fa0d20cc7b2a9ac32aab004aca65ad7a1cf
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Dec 13 12:34:12 2023 +0000

    UBUNTU: SAUCE: objtool: make objtool SLS validation fatal when building with CONFIG_SLS=y
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Make objtool SLS validation fatal when building with CONFIG_SLS=y,
    currently it is a build.log warning only.
    
    This is a standalone patch, such that if regressions are identified
    (with any config or toolchain configuration) it can be reverted until
    relevant identified code is fixed up or otherwise
    ignored/silecned/marked as safe.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Link: https://lore.kernel.org/all/20231213134303.2302285-3-dimitri.ledkov@canonical.com/
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ab1f721f5dad49eb218b60d5e9bd1b8f8a61685f
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Dec 6 01:49:12 2023 +0000

    UBUNTU: SAUCE: objtool: Make objtool check actually fatal upon fatal errors
    
    BugLink: https://bugs.launchpad.net/bugs/2046440
    
    Currently function calls within check() are sensitive to fatal errors
    (negative return codes) and abort execution prematurely. However, in
    all such cases the check() function still returns 0, and thus
    resulting in a successful kernel build.
    
    The only correct code paths were the ones that escpae the control flow
    with `return ret`.
    
    Make the check() function return `ret` status code, and make all
    negative return codes goto that instruction. This makes fatal errors
    (not warnings) from various function calls actually fail the
    build. E.g. if create_retpoline_sites_sections() fails to create elf
    section pair retpoline_sites the tool now exits with an error code.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Link: https://lore.kernel.org/all/20231213134303.2302285-2-dimitri.ledkov@canonical.com/
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 977108e6326a2170b9fc4af6fa9b6c25ebeac05d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 11 11:49:07 2024 +0100

    UBUNTU: Ubuntu-6.7.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cf3dc60ae81f426f1f1c01946d9150bb16be979f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 10:13:40 2024 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2024.01.02)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ac9373053af5dd05a33c5f405d90f1df3e0d955d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 11:17:45 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2048859
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f1f7f75ba881fd159954fd380ed670ace1bd7f0c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 10:13:19 2024 +0100

    UBUNTU: Rebase to v6.7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e3a611e9b0f4deabb7661ae72fb21b1be6a010b8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 10 10:12:47 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b33762d59b25db45eb090f2c5f3936becf9c602a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 9 19:33:31 2024 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5b43cab4d03778f4b2f3a57e36e3f7cd932ce627
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 9 09:28:26 2024 +0100

    UBUNTU: [Packaging] move linux-unstable to linux
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 239785fec233d83447a08494be4e4f118ac97399
Author: Stefan Bader <stefan.bader@canonical.com>
Date:   Thu Jan 11 11:28:52 2024 +0100

    UBUNTU: [Config] Enable S390_UV_UAPI (built-in)
    
    BugLink: https://bugs.launchpad.net/bugs/2048919
    
    In 22.04/Jammy LTS this driver was backported post-release and enabled
    (built-in) but since this happened after release the config change got
    missed on later releases. Enable it again as it was in 22.04.
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a5e0a3aef854a1412b8ddc92ff223b122057bad1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 9 19:32:17 2024 +0100

    UBUNTU: [Config] annotations clean-up
    
    No functional change, just some reordering in annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6f554c2c1575faedae50c5887192dabdba9191f7
Author: Hao Yao <hao.yao@intel.com>
Date:   Thu Oct 26 00:06:42 2023 +0800

    UBUNTU: SAUCE: platform/x86: int3472: Add handshake GPIO function
    
    BugLink: https://bugs.launchpad.net/bugs/2031412
    
    Handshake pin is used for Lattice MIPI aggregator to enable the
    camera sensor. After pulled up, recommend to wail ~250ms to get
    everything ready.
    
    Signed-off-by: Hao Yao <hao.yao@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    (cherry-picked from https://lore.kernel.org/all/20231007021225.9240-1-hao.yao@intel.com)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1a409665380bf5cdf1de110ea1606010477760f7
Author: You-Sheng Yang <vicamo.yang@canonical.com>
Date:   Thu Oct 26 00:06:41 2023 +0800

    UBUNTU: SAUCE: iommu: intel-ipu: use IOMMU passthrough mode for Intel IPUs on Meteor Lake
    
    BugLink: https://bugs.launchpad.net/bugs/2031412
    
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fff232c35507ccce43fd5bf3786d6b99df5c45a8
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Thu Oct 12 20:54:00 2023 +0200

    UBUNTU: [Packaging] Make WWAN driver loadable modules
    
    BugLink: https://bugs.launchpad.net/bugs/2033406
    
    The CONFIG_WWAN config is set to 'Y' for the generic and most derivative
    kernels. This is affecting custom driver development for some partners.
    
    Change this config to be a loadable module and include it in linux-modules-*.
    
    Make this change to -generic kernels, so all derivatives will inherit it.
    
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    [roxanan: Removed the duplicated config option]
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3228f3f601f21119c5f66df3981bac30f4c843d2
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Oct 17 13:52:00 2023 +0200

    UBUNTU: [Packaging] Make linux-tools-common depend on hwdata
    
    BugLink: https://bugs.launchpad.net/bugs/2039439
    
    usbip from linux-tools wants to query /usr/share/hwdata/usb.ids from the
    hwdata package so make linux-tools-common depend on it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 843eb28f79aeded015d0633b4b5aff5709edf2b9
Author: Jian Hui Lee <jianhui.lee@canonical.com>
Date:   Wed Sep 27 07:55:00 2023 +0200

    UBUNTU: [Config] Enable CONFIG_MTK_IOMMU on arm64
    
    BugLink: https://bugs.launchpad.net/bugs/2036587
    
    Enable CONFIG_MTK_IOMMU as module for multimedia and PCIE peripherals on Mediatek platform.
    
    Signed-off-by: Jian Hui Lee <jianhui.lee@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 668f17b97440c44c427fab2c5b4ea9ef4865b17e
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Thu May 11 20:50:00 2023 +0200

    UBUNTU: [Config] CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING=y
    
    BugLink: https://bugs.launchpad.net/bugs/2019040
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5fd6b9ebadd54bd45ef7592624f7e2f364c7c3b9
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Sep 26 18:02:02 2023 +0100

    UBUNTU: [Packaging] Revert arm64 image format to Image.gz
    
    The ZBOOT zstd compressed image is not recognised by kexec preventing
    kexec load. This is considered release critical functionality.
    
    This option can be attempted to be turned on again, once kexec-tools
    are fixed.
    
    BugLink: https://bugs.launchpad.net/bugs/2037398
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fce6217a4f9870ab28ae9dc45a5a0f5a4654acc0
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Sep 25 13:33:14 2023 +0100

    UBUNTU: [Config] Enable virtio-net as built-in to avoid race
    
    Currently cloud-init is racy, and may or may not come up correctly
    when virtio-net is a module, and the datasource is accessible via
    virtio-net. To ensure minimal images are robust on Canonical
    Distribution of Openstack, mark virtio-net as built-in. We can try to
    modularize virtio-net again, if and when cloud-init race is resolved.
    
    BugLink: https://bugs.launchpad.net/bugs/2036968
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    [ arighi: add LP reference to annotations ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e45b1cda283d20d5deb0bb64f13185aee67f1c86
Author: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
Date:   Wed Sep 13 18:03:13 2023 +0800

    UBUNTU: SAUCE: ACPI: video: Dell AIO UART backlight detection
    
    BugLink: https://launchpad.net/bugs/2008882
    
    The similar functionality has been reverted by below commit as the
    function acpi_video_set_dmi_backlight_type() has been removed from
    upstream.
    2a773621f3495 ("UBUNTU: SAUCE: platform/x86: dell-uart-backlight: remove acpi_video_set_dmi_backlight_type()")
    
    Now, we use new way to auto detect the Dell AIO platforms which
    contains "DELL0501" HID.
    
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a6867dcf402e9ffdc700092dcaf2371ddc8aef12
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:20 2023 +0200

    UBUNTU: [Config] Default to performance CPUFreq governor on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/2021364
    
    Using our latest u-boot for the Allwinner D1 SoC the kernel has problems
    switching from the low to high CPU clock frequency and will get stuck at
    408MHz and unable to reboot. Even at 1008MHz these SoCs are not fast, so
    let's make sure they stay at that speed.
    So far there are no battery powered RISC-V devices supported by Ubuntu,
    and if power consumption is still important users can easily switch to
    the ondemand governor from userspace.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ce160ef7cdd5cec1cc5db37b26a7bb220418135d
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:19 2023 +0200

    UBUNTU: [Config] Disable unneeded sunxi pinctrl drivers on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1975592
    
    When riscv enabled ARCH_SUNXI it opened up for compiling all the sunxi
    (Allwinner) pinctrl drivers. Unfortunately they can't be compiled as a
    module, so disable all but the driver for the Allwinner D1 RISC-V SoC.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3117ca5cb414f068421970e088610969c2143045
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:18 2023 +0200

    UBUNTU: [Config] Disable SUN50I_DE2_BUS on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1975592
    
    This bus driver is not needed on any RISC-V SoC, but can't be built as a
    module, so disable it.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 54cb53bc0aef03161ec9aea757e8f58fec2e9738
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:17 2023 +0200

    UBUNTU: [Config] Enable CONFIG_SUNXI_WATCHDOG on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1975592
    
    This watchdog driver is not autoloaded, so build it in.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2a3bbf14861222378662d1aecb17a8ff75cd9b2e
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:16 2023 +0200

    UBUNTU: [Config] Enable CONFIG_SUN6I_RTC_CCU on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1975592
    
    Although the driver name includes RTC these clocks are needed for
    pinctrl/gpio on the Allwinner D1 RISC-V SoC.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3423be3ad4cdc0d9782d03f7b8156d5de1138a04
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:15 2023 +0200

    UBUNTU: [Config] Build in D1 clock drivers on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1975592
    
    These clock drivers are required to boot the Allwinner D1 RISC-V SoC.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 00be0d3b030afba6f224a9006680b9888d8ab38a
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:12 2023 +0200

    UBUNTU: [Config] Enable CONFIG_STARFIVE_WATCHDOG on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/2013232
    
    This watchdog driver is not autoloaded, so build it in.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 24b55a66eb6e8831f8071ecf364f8e91f3739d70
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:11 2023 +0200

    UBUNTU: [Config] Enable CONFIG_PINCTRL_STARFIVE_JH7110_SYS on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/2013232
    
    This driver needs to be built in to set up pins for basic stuff like
    serial debugging output on the StarFive JH7110 SoC.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36881d9e0dc3f0aaafba5190bf9b9e70be4f17fa
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Thu Aug 31 12:24:10 2023 +0200

    UBUNTU: [Config] Enable virtually mapped stacks on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1967130
    
    On RISC-V there used to be a problem with accessing the EFI runtime
    services/variables if the kernel was configured with
    CONFIG_VMAP_STACK=y. This issue should now be resolved with the
    following upstream commit, so let's enable virtually mapped stacks
    again:
    
    3f105a742725 ("riscv: Sync efi page table's kernel mappings before switching")
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ac9b3fe07b25df1207d494458000f9af7134927a
Author: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
Date:   Wed Sep 6 18:24:46 2023 -0300

    UBUNTU: [Packaging] Add a new fips-checks script
    
    BugLink: https://bugs.launchpad.net/bugs/1945989
    
    Add a new script responsible for checking if any FIPS relevant commit
    was added since the last version. If a new change is found, a
    corresponding entry should exist in the justifications file otherwise
    the check will fail.
    
    The justifications file is located at "${DEBIAN}/fips.justifications"
    and should follow the following format for each commit justification:
    
    <commit short message>
    
      <commit justification>
    
    Signed-off-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Kelsey Skunberg <kelsey.skunberg@canonical.com>
    (ported from commit 68d02506ae6b236d7df155cdcaa64456e9153d5e focal)
    [magalilemes: added arch/arm64/crypto and lib/crypto/{sha1,aes}.c to
    crypto_files; changed the way tag_prefix is set]
    Signed-off-by: Magali Lemes <magali.lemes@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit af0383d10c52e71e80b1f3b083014cba1ab27ceb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Sep 13 07:38:55 2023 +0200

    UBUNTU: [Config] build Renesas RZ/G2L USBPHY control driver statically
    
    BugLink: https://bugs.launchpad.net/bugs/2030525
    
    Allow installation on Renesas SMARC platform.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c2a69e80995bf0c045d11f8c20287cc8d08a7d84
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Sep 8 19:21:28 2023 +0100

    UBUNTU: [Config]: Turn on CONFIG_EFI_ZBOOT on ARM64
    
    On UEFI platforms, since v6.2 Linux, with new enough grub2 (2.12~rc1),
    EFI_ZBOOT can be used. This enables UEFI boot to use Linux EFI stub
    decompressors to supports Zstd compressed kernel image, like on other
    architectures.
    
    Other boot-types should continue to use compressed images for now
    (i.e. u-boot, piboot, abootimg) kernels. See comment in arm64.mk.
    
    BugLink: https://bugs.launchpad.net/bugs/2002226
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fb458edf005e05ef7f48e0a46cc2712b978a7e0b
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Sep 4 17:02:54 2023 +0100

    UBUNTU: [Config] Default module signing algo should be accelerated
    
    Default module signing algo should be accelerated. This is to ensure
    the most optimal boot speed of lockedown systems that enforce kernel
    module signature verification. Usually the accelerated version of
    sha512 is loaded, but possibly much later during the boot.
    
    BugLink: https://bugs.launchpad.net/bugs/2034061
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4064f9391ba12aff5d35b144f527864966a643fc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 5 12:33:10 2024 +0100

    UBUNTU: Ubuntu-unstable-6.7.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a5f37d1d4f639b74565eb4325a16e81745ae1e59
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 5 12:17:05 2024 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2024.01.02)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 14d9c73130f5e8a098c641081fdc115fc5feb8b3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 4 20:58:49 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2048118
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fecb3bc5f4cc99fb38d32f3e27a1f27e7f687798
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 4 20:58:25 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 634f47674093c73315ca387dfb91bdbd7e244338
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 4 21:13:57 2024 +0100

    UBUNTU: [Packaging] re-enable Rust support
    
    Now that the toolchain dependencies are all satisfied we can re-enable
    Rust support.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b2fe2970a5bfd411885c612d5c1b4b7df8537a15
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 14:57:21 2024 +0100

    UBUNTU: Ubuntu-unstable-6.7.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 20a4909cdcda1cc81fc2c4498a59376b5ff9862f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 14:33:42 2024 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2047807
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 48c87e79a961d9c85ac8b626a266c8ae0bcbfc2e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 11:44:25 2024 +0100

    UBUNTU: [Config] update annotations after rebase to v6.7-rc8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a3a84f9890d8d2fa73d199257eca9c387f120d44
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 10:58:31 2024 +0100

    UBUNTU: Rebase to v6.7-rc8
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c3de0684b3db5444bf0484f1e99ea00cecb37f0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 10:57:36 2024 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0100028c980a5dfde83f8d757f3775e9c6a9b9c8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 14:41:07 2024 +0100

    UBUNTU: [Config] disable CONFIG_SECURITY_APPARMOR_RESTRICT_USERNS
    
    BugLink: https://bugs.launchpad.net/bugs/1990064
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 96f2c6d05edb296c372d1b86dfd4b9e2fc0c0b35
Author: Koba Ko <koba.ko@canonical.com>
Date:   Mon Nov 20 16:27:54 2023 +0000

    UBUNTU: SAUCE: r8169: Add quirks to enable ASPM on Dell platforms
    
    BugLink: https://bugs.launchpad.net/bugs/2042385
    
    Some non-Dell platforms equipped with r8168h/r8111 have issue on ASPM,
    It's very hard to fix all known issues in a short time and
    r8168h/r8111 is not a brand new NIC chip,
    so introduce the quirk for Dell platfroms.
    It's also easier to track the Dell platform and ask Realtek's effort.
    
    Ref. https://bugzilla.kernel.org/show_bug.cgi?id=217814
    Signed-off-by: Koba Ko <koba.ko@canonical.com>
    Signed-off-by: Timo Aaltonen <timo.aaltonen@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6c7018723952af143d5caf45199df748dddb9666
Author: Roxana Nicolescu <roxana.nicolescu@canonical.com>
Date:   Mon Dec 4 16:15:25 2023 +0100

    UBUNTU: [Debian] autoreconstruct - Do not generate chmod -x for deleted files
    
    BugLink: https://bugs.launchpad.net/bugs/2045562
    
    Debian source format 1.0 cannot remove files, create symlinks and change
    permission in the .diff.gz tarball. Therefore any changes in these 3
    categories cannot be represented without any tricks. To solve this,
    the `reconstruct` script is used every time we build the source package.
    The script is generated by `gen-auto-reconstruct` script by the `cranky
    close`. It checks if there has been any changes in the 3 categories
    mentioned above between the upstream version (i.e v6.5) and the current one.
    The problem with the script is that in case a file A was removed since the
    upstream version was released, the `reconstruct` script will contains
    these commands in this exact order:
            rm -f A
            chmod -x A
    The second command will fail because file A does not exist anymore.
    This is solved by generating the `chmod +/-x` commands before `rm`.
    Which results in:
            chmod -x A
            rm -f A
    But because the reconstruct script is used during `clean` rule which is
    triggered pretty much during every cranky step which is run in the
    source repo, the first command will always file because file is not
    present anymore in the tree. To solve this, any `chmod` change is added
    only if the file has not been deleted. Therefore if file A has been
    deleted, the `reconstruct` script will contain only this:
            rm -f A
    
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Manuel Diewald <manuel.diewald@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bda48e7481cd887a73abb1e6f471c6c417bf5a3a
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Mon Dec 11 17:54:43 2023 -0300

    UBUNTU: [Config]: disable CONFIG_LEGACY_TIOCSTI
    
    BugLink: https://bugs.launchpad.net/bugs/2046192
    
    TIOCSTI has been abused as a malicious privilege escalation mechanism and
    provides little real-world utility these days.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c53bae33f9eb4163782e03c57cf862a2726f88ba
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Dec 15 12:45:38 2023 +0100

    UBUNTU: [Packaging] rules: Remove unused dkms make variables
    
    The make variables nvidia_desktop_series and nvidia_server_series are no longer
    used since [1], so remove them.
    
    [1] fa6c8ea55822 ("UBUNTU: [Debian] remove nvidia dkms build support")
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 63a035ca10c1e30fdcc1f10b64ddfee8b05fec90
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 10:56:35 2024 +0100

    UBUNTU: [Packaging] update annotations scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit de99603f2007951a658780862f5abefb9a8f5132
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 10:56:34 2024 +0100

    UBUNTU: [Packaging] remove helper scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c024c490de2bcd3521d5af0d62eea3bbde6a072f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 2 10:56:34 2024 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e05a88fcc1754303f6ba39e4f95193315bf95985
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 11 15:56:11 2023 +0100

    UBUNTU: Ubuntu-unstable-6.7.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c5228f633481afc3cce107debafd905073ab978b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sun Dec 10 13:05:48 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2046060
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 271f85d61fcb9e934fffd4730b9904b1d329127f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Dec 9 17:57:49 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.7-rc4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0ede167836e41f05cfd8c8a36557820c74675137
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Dec 9 17:56:41 2023 +0100

    UBUNTU: Rebase to v6.7-rc4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0690d2c1944be1ddac2628736d71e8e41957b469
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Dec 9 17:56:00 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ae6c3bab14d8c7500faa68361d75acefc3e3165e
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Dec 7 09:01:40 2023 +0100

    UBUNTU: [Packaging] Remove debian/commit-templates
    
    The only consumer of a commit template was the old in-tree 'close'
    helper. That script has moved to cranky and modified to not rely on
    a template, so we can remove all templates from the tree.
    
    Jira: https://warthogs.atlassian.net/browse/KERNTT-711
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dcc90f99e683d512cc5b0a9b72d37ee9d0bfab0d
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Dec 7 09:01:00 2023 +0100

    UBUNTU: [Packaging] rules: Remove startnewrelease target
    
    There is 'cranky startnewrelease' now so the in-tree make target is no
    longer needed. Remove it.
    
    Jira: https://warthogs.atlassian.net/browse/KERNTT-711
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1bc090fb1715f61faaab039779f04f2929f4ac82
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Dec 9 19:41:40 2023 +0100

    UBUNTU: [Config] enable CONFIG_INTEL_TDX_HOST
    
    BugLink: https://bugs.launchpad.net/bugs/2046040
    
    Intel Trust Domain Extensions (TDX) protects guest VMs from malicious
    host and certain physical attacks.
    
    CONFIG_INTEL_TDX_HOST adds the TDX support for the host to run
    confidential VMs (TDX guests).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3a793be2758b224dd008d34857b2f79f19b25e01
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Dec 7 07:42:01 2023 +0000

    UBUNTU: [Packaging] Update check to build linux-libc-dev to the source package name
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 41c77aa8d7f7fcdee6995d16ed1705b5d6e8b736
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Wed Dec 6 17:29:26 2023 +0900

    UBUNTU: [Packaging] move linux-libc-dev.stub to debian/control.d/
    
    linux-libc-dev is provided only by the master kernel, so there is
    no conflict even if we have it under debian/.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit c5108944aff13a5fe67c3168cee78e3bd57242da
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Wed Dec 6 17:29:25 2023 +0900

    UBUNTU: [Packaging] remove do_libc_dev_package variable
    
    We should make a decision about linux-libc-package when constructing
    debian/control.
    
    Once debian/control is generated, builders must follow it. In other
    words, we should not re-evaluate the do_libc_dev_package variable at
    the build time.
    
    Debian kernel commit fdd6dadb4aee ("Use dh_listpackages to determine
    which packages to build") [1] introduced the if_package macro.
    
    Import it to consult dh_listpackage to check if linux-libc-package is
    listed in debian/control.
    
    [1]: https://salsa.debian.org/kernel-team/linux/-/commit/fdd6dadb4aeea81342effdebd5edbf4bc19ccf4d
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 3744987cf0bd32623375fbbbbdba9d0ea3254363
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Wed Dec 6 17:29:25 2023 +0900

    UBUNTU: [Packaging] remove debian.*/variants
    
    Now 'variants' is no longer used for building packages.
    
    It is true that the 'variants' is used in linux-meta, but there is
    no good reason to have it in linux-main.
    
    Only the remaining function is to check the variants from
    'debian/rules printenv', but it is not so useful.
    
    Remove it.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 12489d44e9dd50d9c26e8a1a9490891b8855b4d6
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Wed Dec 6 17:29:25 2023 +0900

    UBUNTU: [Packaging] check debian.env to determine do_libc_dev_package
    
    The linux-libc-dev package provides UAPI headers. The Linux kernel
    promises backward compatibile API to userspace. That is the reason
    why there exists only one linux-lib-dev per series. Its package name
    does not contain any ABI number or flavour string since there is no
    point in installing multiple instances of linux-lib-dev.
    
    This leads to an obvious conclusion; only the master kernel should
    provide linux-libc-dev.
    
    Currently, it is checked at compile-time. If you attempt to build
    linux-libc-dev on a non-master kernel, it errors out with
    "non-master branch building linux-libc-dev, aborting".
    
    When constructing debian/control, the linux-libc-dev enablement is
    determined by do_libc_dev_package, which is set to true if the
    'variants' variable contains '--'. This is tricky, and it is difficult
    to understand the intention. In fact, do_libc_dev_package is true for
    most kernels except linux-unstable. Derivative kernels disable
    linux-libc-dev by removing linux-libc-dev.stub.
    
    This commits adopts a simpler logic; enable linux-libc-dev if
    debian/debian.env contains DEBIAN=debian.master.
    
    Please note this commit changes the behaviour of linux-unstable.
    linux-unstable previously disabled linux-lib-dev because it defined
    variants=-wip, but it is enabled now. It should not be a big deal
    since we do not publish linux-unstable.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit b4c9addfdbdbffb14701c0e1547b2db726d2d9f4
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Wed Dec 6 17:29:25 2023 +0900

    UBUNTU: [Packaging] remove the last sub-flavours bit
    
    Remove the left-over.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 145d57b83352af036415143ed8592774b69f5efe
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Mon Dec 4 13:14:49 2023 +0100

    UBUNTU: [Packaging] enable riscv64 builds
    
    Add ABI files, sync riscv64.mk with linux-riscv and add riscv64 to the
    arch list.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit a457ccd24f7960b61528b2a2a7a2ed8f0d5c2389
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Dec 4 14:04:50 2023 +0100

    UBUNTU: [Packaging] scripts: Rewrite insert-ubuntu-changes in Python
    
    Jira: https://warthogs.atlassian.net/browse/KERNTT-666
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 7fbdfbf31955c3c1c5547d8f4ee46c0fc0162135
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Dec 6 00:00:24 2023 +0000

    UBUNTU: [Packaging] Statically link libcpupower into cpupower tool
    
    BugLink: https://bugs.launchpad.net/bugs/2035971
    
    Currently we ship tools for every kernel flavour and backport, and
    each one of them may have new features in cpupower &
    libcpupower. Statically link those in, such that there are no
    installation conflicts. This resolves all current file conflicts
    between multiple kernel flavours in the Ubuntu Archive.
    
    Separately, a public libcpupower1 & libcpupower-dev for non-kernel /
    non-linux-tools use cases will be provided separately, under a stable
    soname (not flavour or kernel version specific).
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Acked-by: Manuel Diewald <manuel.diewald@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit e4ccb0c342afbf2947a099dfb83729cdc700a3a3
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Dec 1 13:46:48 2023 +0000

    UBUNTU: [Packaging] drop useless linux-doc
    
    Sometime between bionic and focal, linux-doc build became
    broken. Meaning it has stopped producing sphinx html build, and was
    only doing compressed installation of the Restructured Text
    documentation. But such compressed restructured text is not readable,
    navigatable or searchable by any edoc readers.
    
    Separately, our tree doesn't actually contain any Ubuntu-delta
    specific documentation, meaning the upstream linux/linux-next docs
    that are published at https://kernel.org/doc/html/ are directly
    applicable to the Ubuntu kernel. And provide a much nicer experience
    in terms of searching, rendering, reading.
    
    If we do have any significant Documentation delta, we are better off
    linking to correct upstream documentation, and publishing delta-only
    Documentation on our public instance of read-the-docs. Or point users
    at our source package and/or git repo to read Documentation/ from
    there.
    
    Droping this build doesn't save any significant build-time (as it was
    already practically doing nothing). But it does save a lot of
    disk-space due to reduced build-dependencies on the full TeX Live
    installation. In minimal noble chroot, build dependencies installation
    goes down from requiring 1,269 MB to just 542 MB. Thus significantly
    reducing the size of all our chroots (locally on developer machines,
    during launchpad builds, during outside of launchpad builds).
    
    Manpages (generated using asciidoc & rst2man) are preserved and are
    still produced. As those are genuinely useful, and are republished to
    manpages.ubuntu.com as well.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Magali Lemes <magali.lemes.do.sacramento@canonical.com>
    Acked-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 79c16916059e33a2826f1c124a2ee39a4d14e726
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Dec 5 00:38:36 2023 +0000

    UBUNTU: [Config] update toolchain versions in annotations
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 9f45e866d35ea12e4a8f98184e7ddec7f6d17cb4
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 4 11:05:45 2023 +0900

    UBUNTU: [Packaging] override KERNELRELEASE instead of KERNELVERSION
    
    It is wrong to override KERNELVERSION, as doing so does not ensure
    the expected KERNELRELEASE. KERNELRELEASE is the essential part and
    must agree with debian/control because it results in the 'uname -r'
    in the compiled kernel.
    
    scripts/setlocalversion may append additional strings depending on
    CONFIG options and localversion* files. For example, if there exists
    'localversion' file in the top directory, scripts/setlocalversion
    will append a string written in it. This must not happen.
    
    Debian kernel [1] and the upstream kernel [2] correctly override
    KERNELRELEASE.
    
    Let's fix Ubuntu kernel now.
    
    [1]: https://salsa.debian.org/kernel-team/linux/-/blob/debian/6.5.10-1/debian/rules.real#L141
    [2]: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/scripts/package/debian/rules?id=v6.7-rc3#n18
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    (fixed up subject line as per Emil's comment)
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 508589c829378a1d4c56570f147661afbe1fd9bc
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 4 10:50:41 2023 +0900

    UBUNTU: [Packaging] remove unneeded trailing slash for INSTALL_MOD_PATH
    
    You can see that the trailing slash is unneeded from the code in
    the top Makefile:
    
      MODLIB  = $(INSTALL_MOD_PATH)/lib/modules/$(KERNELRELEASE)
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 5eccec0868adfbbcf3c68f235b8f524ed1ca8e12
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 4 10:49:49 2023 +0900

    UBUNTU: [Packaging] Allow to run debian/rules without (fake)root
    
    While DEB_RULES_REQUIRES_ROOT is set by build drivers like
    dpkg-buildpackage, we often run debian/rules directly.
    
    Typing "fakeroot debian/rules ..." can be tedious, so we introduced
    a shorthand
    
      alias fdr="fakeroot debian/rules"
    
    By setting DEB_RULES_REQUIRES_ROOT=no, debhelpers will function as
    intended even when debian/rules is directly executed without fakeroot.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit a8c08a21982eda0a1d58e34259ce03cb1df38eac
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 4 10:49:48 2023 +0900

    UBUNTU: [Packaging] Enable rootless builds
    
    Let the build driver (e.g. dpkg-buildpackage) know this can be built
    without root privilege. DEB_RULES_REQUIRES_ROOT will be set to "no"
    instead of "binary-targets".
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 2d590ff08faf396703d466a28342da4c64c4c012
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 4 10:49:47 2023 +0900

    UBUNTU: [Packaging] make $(stampdir)/stamp-build-perarch depend on build-arch
    
    Since commit ("UBUNTU: [Packaging] bpftool: always use vmlinux to
    generate headers"), tools/bpf/bpftool/vmlinux must be created before
    building the bpftool.
    
    This is not guaranteed because the $(stampdir)/stamp-build-perarch
    target does not depend on build-arch.
    
    Running 'debian/rules binary' results in the following build error:
    
      mv [...]/linux/debian/build/tools-perarch/tools/bpf/bpftool/vmlinux [...]/linux/debian/build/tools-perarch/vmlinux
      mv: cannot stat '[...]/linux/debian/build/tools-perarch/tools/bpf/bpftool/vmlinux': No such file or directory
    
    This potential issue has been hidden, relying on build drivers such as
    dpkg-buildpackage running 'debian/rules build' and 'debian/rules binary'
    as separate steps.
    
    Without rootless builds, the (fake) root privilege is required for the
    binary target, hence dpkg-buildpackage splits the build process into
    three stages:
    
      - fakeroot debian/rules clean
      - debian/rules build
      - fakeroot debian/rules binary
    
    To support rootless builds, you need to specify all dependencies
    correctly without such an assumption.
    
    Once we transition to rootless builds, the 'binary' target will not
    require the root privilege any more, so dpkg-buildpackage will merge
    'build' and 'binary' into a single step. We need to assume only the
    following two will be executed:
    
      - debian/rules clean
      - debian/rules binary
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 106510ac07b10785401a7d3f51eca0d5b1d5f24f
Author: Qais Yousef <qyousef@layalina.io>
Date:   Sun Dec 3 09:58:06 2023 +0100

    UBUNTU: SAUCE: rcu: Provide a boot time parameter to control lazy RCU
    
    BugLink: https://bugs.launchpad.net/bugs/2045492
    
    To allow more flexible arrangements while still provide a single kernel
    for distros, provide a boot time parameter to enable/disable lazy RCU.
    
    Specify:
    
            rcutree.enable_rcu_lazy=[y|1|n|0]
    
    Which also requires
    
            rcu_nocbs=all
    
    at boot time to enable/disable lazy RCU.
    
    To disable it by default at build time when CONFIG_RCU_LAZY=y, the new
    CONFIG_RCU_LAZY_DEFAULT_OFF can be used.
    
    Signed-off-by: Qais Yousef (Google) <qyousef@layalina.io>
    (cherry picked from https://lore.kernel.org/lkml/20231203011252.233748-1-qyousef@layalina.io/T/#u)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit bee52f2f1ebed58bb4885f3eed409f7a0a8ab1d1
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 14:28:36 2023 +0100

    UBUNTU: [Packaging] Remove README.inclusion-list
    
    It's an old README from 2010 that contains some notes for kernel
    maintainers. It hasn't been updated since and is not packaged, so
    drop it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit c016043fd3125962e624995f63c81a1342a202fb
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 14:28:35 2023 +0100

    UBUNTU: [Packaging] Remove obsolete scripts
    
    Remove the following old scripts which are no longer used:
      - fw-to-ihex.sh
      - insert-mainline-changes
      - retag
      - sanitize-annotations
      - splitconfig.pl
      - update-aufs.sh
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 72cef12a97115bf862b3fa8dfeb8d47b8823b302
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 14:28:34 2023 +0100

    UBUNTU: [Packaging] Remove old linux-libc-dev version hack
    
    Back in the 2.6.35 days, there was some broken linux-libc-dev
    package versioning that needed to be hacked around. Finally
    get rid of it 13 years later...
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 70242d8162286ce2373bd42cc3237859742d4ee5
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 14:28:33 2023 +0100

    UBUNTU: [Packaging] Remove support for sub-flavors
    
    Sub-flavors were a concept in Maverick and earlier. In fact, it was
    removed later in Maverick but that commit was not carried forward to
    Natty so it's still here. Finally get rid of it.
    
    (forwardported from commit db54f0fec701e97b829f0abb2750c30464b38dec maverick/linux)
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 2fdf3ac718285fc064a93af98c497198bd8b3426
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 14:28:32 2023 +0100

    UBUNTU: [Packaging] Remove obsolete config handling
    
    Remove hopefully the last remaining leftovers from the old
    pre-annotations-only config scheme.
    
    While at it, drop the duplicate/redundant 'sed' call. Or am I missing
    something?
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 1aebdd48f382ee8ed650dc9acc161e220af26e06
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 14:28:31 2023 +0100

    UBUNTU: [Packaging] Remove do_full_source variable
    
    do_full_source was introduced in Lucid but hasn't been used in ages,
    so remove it.
    
    This reverts commit 11fe82b00ff2428967c83055ba7ae8102f4140a6
    ("UBUNTU: add configuration option for a full source build tree -- master")
    from lucid/linux.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Agathe Porte <agathe.porte@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit b448cf64c98261fa15a3aa1e217559c4cfb383c5
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Nov 24 11:51:38 2023 +0100

    UBUNTU: [Packaging] Fix kernel module compression failures
    
    BugLink: https://bugs.launchpad.net/bugs/2044512
    
    The kernel module compression step is run for every binary package,
    not just the modules packages. This results in a build failure when
    run in a console for packages that don't contain any .ko files:
    
    \# Compress kernel modules
    find debian/linux-unstable-tools-6.6.0-12 -name '*.ko' -print0 | xargs -0 -n1 -P 8 zstd -19 --quiet --rm
    stdout is a console, aborting
    make: *** [debian/rules.d/2-binary-arch.mk:769: binary-perarch] Error 123
    
    Basically, if find returns nothing, zstd tries to read from stdin:
    $ echo | xargs zstd
    stdout is a console, aborting
    $ echo $?
    123
    
    To fix that, tell xargs not to run the command if stdin is empty:
    $ echo | xargs -r zstd
    $ echo $?
    0
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Manuel Diewald <manuel.diewald@canonical.com>
    Acked-by: Thibault Ferrante <thibault.ferrante@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit b6bffb0e8bb11920c779690d2aae7b56491e218d
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Nov 24 00:16:45 2023 +0000

    UBUNTU: [Config] y2038: Turn off COMPAT and COMPAT_32BIT_TIME on arm64 64k
    
    BugLink: https://bugs.launchpad.net/bugs/2038582
    
    Servers and workloads that benefit from generic-64k kernel do not run
    32bit binaries. Disable COMPAT and COMPAT_32BIT_TIME on generic-64k
    flavour.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 47c1b27cf0965168f590117e9b62358c707e8f35
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Nov 24 00:16:44 2023 +0000

    UBUNTU: [Config] y2038: Disable COMPAT_32BIT_TIME on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/2038584
    
    COMPAT has never been enabled on riscv64 thus COMPAT_32BIT_TIME should
    never have been enabled either.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit ed28bf942138bfd33667ec77e9c735bd57e00125
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Nov 24 00:16:43 2023 +0000

    UBUNTU: [Config] y2038: Disable COMPAT and COMPAT_32BIT_TIME on ppc64le
    
    BugLink: https://bugs.launchpad.net/bugs/2038587
    
    ppc64le is exclusively little endian and 64-bit, thus there is no need
    for COMPAT_32BIT_TIME, nor COMPAT.
    
    diffconfig result of these changes is:
    
     -ARCH_MMAP_RND_COMPAT_BITS 13
     -ARCH_WANT_COMPAT_IPC_PARSE_VERSION y
     -ARCH_WANT_OLD_COMPAT_IPC y
     -COMPAT_BINFMT_ELF y
     -COMPAT_NETLINK_MESSAGES y
     -COMPAT_OLD_SIGACTION y
     -HAVE_ARCH_MMAP_RND_COMPAT_BITS y
     -KVM_COMPAT y
     -NETFILTER_XTABLES_COMPAT y
     -SYSVIPC_COMPAT y
     -VDSO32 y
      COMPAT y -> n
      COMPAT_32BIT_TIME y -> n
     +ARCH_HAS_SYSCALL_WRAPPER y
     +INTERRUPT_SANITIZE_REGISTERS y
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 324fcb9cd7fa47b38a3c8be6b3f575dfb801e48a
Author: Frank Heimes <frank.heimes@canonical.com>
Date:   Tue Nov 21 13:54:50 2023 +0100

    UBUNTU: [Config] CONFIG_VFIO_PCI_ZDEV_KVM=y
    
    BugLink: https://bugs.launchpad.net/bugs/2042853
    
    Enable VFIO zPCI pass-through for s390x (CONFIG_VFIO_PCI_ZDEV_KVM=y),
    to allow pass-through of any kind of s390x-specific vfio-pci devices,
    like RoCE devices, ISM devices, NVMe drives.
    
    Signed-off-by: Frank Heimes <frank.heimes@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Manuel Diewald <manuel.diewald@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 77087f6c67ed20097116ef134c56b3a803d54cc8
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Nov 20 22:32:17 2023 +0000

    UBUNTU: [Packaging] make ZSTD module compression conditional
    
    BugLink: https://bugs.launchpad.net/bugs/2045593
    
    Make ZSTD module compression conditional. Only enable it when building
    on recent series, such that backports of v6.5 kernels to jammy keep
    uncompressed modules, with zstd compressed .deb.
    
    Fixes: b2638e9702 ("UBUNTU: [Packaging] ZSTD compress modules")
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 0d83bfeb20e5d370b85e741008f817cdbdc24cab
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 29 07:51:17 2023 +0100

    UBUNTU: Ubuntu-unstable-6.7.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f495b85eeaae09812b107c8c43876d703dd638a8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 29 07:50:31 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.7-rc3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5bd15d255dec52ddd97d5f96ab8ed1cee912811e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 29 07:48:50 2023 +0100

    UBUNTU: [Packaging] disable Rust support
    
    We are missing the required toolchain in noble, so we need to disable
    Rust support for now.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b3e1e870e3ba541660da5099b3cbb45e64f72ac9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 29 07:46:32 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2045107
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 14287acdbeb5e82133ba6153795855bb5ebdf2eb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 29 07:44:46 2023 +0100

    UBUNTU: Rebase to v6.7-rc3
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5e5cc310efcedafc9323805425e6ebbb62cf1d66
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 29 07:44:19 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0696dba37061853df742130bdbb1bcd68776a5e1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Nov 23 10:37:40 2023 +0100

    UBUNTU: [Config] disable Softlogic 6x10 capture card driver on armhf
    
    Temporarily disable this driver on armhf, because the build seems to
    trigger this out-of-memory failure with gcc:
    
     cc1: out of memory allocating 301930784 bytes after a total of 244011008 bytes
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2fc179bee24817d61f662461b3ceef28fdd4ddb3
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Nov 22 10:21:05 2023 +0100

    UBUNTU: [Packaging] Remove do_enforce_all variable
    
    This is an old variable from the pre-annotations-only days and is no
    longer used, so remove it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e2a00036abb8e77dd1d4030c5fd7eb156416d467
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 16:03:55 2023 +0100

    UBUNTU: [Config] enable Rust in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36ea6a61c7947e6b5393cfdb0972523a21a19c5d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 15:29:10 2023 +0100

    UBUNTU: [Packaging] re-enable Rust
    
    Update Rust dependencies and re-enable Rust for Linux.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 73cf01d878cef9aa044c6c69230a1301a71f424b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 10:45:24 2023 +0100

    UBUNTU: Ubuntu-unstable-6.7.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7a6c5d36c6de6d8f5fbb685e25e23108c7db871b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 08:23:19 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2044069
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit db7b047eb19c79ecd6e0008363df0effc7f05a1e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 08:22:23 2023 +0100

    UBUNTU: Rebase to v6.7-rc2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7a33301fcfdc8d5f51a72c19976f583be6c78cb2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 08:21:30 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 391e856f92f2724811898d37e7a1b5d4ed8d8b21
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 10:44:16 2023 +0100

    UBUNTU: [Packaging] update helper scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0b411127d232b94077773a546ec2fc8570397c73
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 10:44:16 2023 +0100

    UBUNTU: [Packaging] update annotations scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9db32684174197f9832a004f2d682b980a865f93
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 08:15:45 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.7-rc2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7b11ce2adefe35d7eb69021b4810955a0d3e3119
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 08:19:11 2023 +0100

    UBUNTU: update dropped.txt
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3c4994ab29ae0cc8d8e1dc4ed546c1c07242eef4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 21 07:27:39 2023 +0100

    UBUNTU: [Packaging] move to linux 6.7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7e37992d0eab1d03de8c362096269676813bf582
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 16 10:20:26 2023 +0100

    UBUNTU: Ubuntu-unstable-6.6.0-12.12
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6cfbd75bb43cc1da257e8855f68fc3802e6dac11
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 16 10:09:48 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2043664
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 511371df0c2d0969c020514967537efe06f747a2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 16 10:08:00 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8817d778d688442889b6a76616376056fd9c85d7
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 16 10:00:23 2023 +0100

    UBUNTU: [Packaging] temporarily disable zfs dkms
    
    Until the abigail-2.4 regression is resolved:
    
    https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1055637
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 853d56a586751899d32ab95cc9ead442355de0b4
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 15 14:50:40 2023 +0100

    UBUNTU: Ubuntu-unstable-6.6.0-11.11
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0330d951069b125924a8893ee960b40f1be3e6a9
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 15 14:50:02 2023 +0100

    UBUNTU: [Config] toolchain version update
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1a7191e09e8482e045b10e3a27781946b799b9c3
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 15 14:45:41 2023 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2023.11.14)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 58cae5b90b3038f43317dc4a9fbc37eff1e3f33d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 15 14:45:24 2023 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c884c3da7082ec0c6dca25516fa3c2e91bc43dde
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 15 14:45:24 2023 +0100

    UBUNTU: [Packaging] resync update-dkms-versions helper
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8f621360fc3e2b82b15af8a594b931e9482ebcb3
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 15 14:45:23 2023 +0100

    UBUNTU: [Packaging] resync git-ubuntu-log
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6c1d3bd9dec750f8991b8d75566df3eb907c128f
Author: Paolo Pisati <p.pisati@gmail.com>
Date:   Tue Nov 14 15:55:13 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2043480
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <p.pisati@gmail.com>

commit 3333ce64eead9ddf145f35d8610d5f9ee85d7016
Author: Paolo Pisati <p.pisati@gmail.com>
Date:   Tue Nov 14 15:54:15 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <p.pisati@gmail.com>

commit 4f1d6a59abd93a9948d3d50ed7b05df7c2132347
Author: Paolo Pisati <p.pisati@gmail.com>
Date:   Tue Nov 14 15:42:08 2023 +0100

    UBUNTU: [Packaging] move to Noble
    
    Signed-off-by: Paolo Pisati <p.pisati@gmail.com>

commit e90dce8e5e2843d009bad916c9afd2dd42472a8a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 9 12:05:12 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-10.10
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7939eccec076b1442c3290c727864254b61323af
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 9 12:02:50 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2043088
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 35fc1d317a4fbd5e23cc7056275e6644dc7c8aac
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 9 11:56:22 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 77d02b29e87ccb45403e48633625ce4a6f7e12d1
Author: dann frazier <dann.frazier@canonical.com>
Date:   Tue Nov 7 23:19:37 2023 +0200

    UBUNTU: [Config] Bump CONFIG_NR_CPUS to 512 for arm64
    
    BugLink: https://bugs.launchpad.net/bugs/2042897
    
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Acked-By: Dimitri John Ledkov <[1]dimitri.ledkov@canonical.com>
    Acked-by: Jacob Martin <jacob.martin@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d6f5b05818184089b86edfdf9b714e0cefb89229
Author: dann frazier <dann.frazier@canonical.com>
Date:   Tue Nov 7 23:19:36 2023 +0200

    UBUNTU: [Config] Include a note for the NR_CPUS setting on riscv64
    
    The previous note references an s390x-specific bug.
    
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Acked-By: Dimitri John Ledkov <[1]dimitri.ledkov@canonical.com>
    Acked-by: Jacob Martin <jacob.martin@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5584f0ccefc5bcf74f1f365f094a81f1660fe682
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Nov 3 11:59:13 2023 +0100

    UBUNTU: Ubuntu-unstable-6.6.0-9.9
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 03a7f106d104b6abffa6eeaa6ee588cea4342389
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Nov 3 11:58:08 2023 +0100

    UBUNTU: [Config] SECURITY_APPARMOR_RESTRICT_USERNS=y
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 11153a796e4c9f96319f15922ee3508c5fdeaa10
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Sun Oct 29 03:47:07 2023 +0200

    UBUNTU: [Config] Switch IMA_DEFAULT_HASH from sha1 to sha256
    
    BugLink: https://bugs.launchpad.net/bugs/2041735
    
    ppc64el already used sha256, sha256 is accelerated on most arches, and
    is widely used.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1aeac8c7441f485895817166173675a290ddab6f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Nov 3 10:55:08 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2041852
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c2902e7fb1b2123400dc862c11cb5baba27cdb8c
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 2 16:02:19 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 74164b5f43d4b396ef231f3c0eb4e5e6d5fe4b1c
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 24 10:55:34 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-8.8
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8648bfe71322e1d96d6e93253bf049a16bb80453
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 24 10:54:40 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2040243
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6ddbb9121125a43e5b3124cbfc7a2774d40ad258
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 24 10:53:44 2023 +0200

    UBUNTU: abi: gc reference to phy-rtk-usb2/phy-rtk-usb3
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 86b7ea77638f1d7620f96de8a5cdcc8e87c36d1d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 24 10:52:01 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 871b8c490606edee8eb346029da32e650d26cc02
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Oct 23 11:51:14 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-7.7
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit db7c987d858b91baf003c6c9c5dc1526f8d25d00
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Oct 23 11:50:36 2023 +0200

    UBUNTU: [Config] updateconfigs following v6.6-rc7 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c8b942fa0c1d1a659fb0ce6b1f540260292a3361
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Oct 23 11:30:15 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2040147
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c6092f556a43b66816a95f127d6b7d760b5e9614
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Oct 23 11:09:33 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 21d154159bc3d2de922d405d39f6b9bf8569e061
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Thu Oct 19 17:12:59 2023 -0300

    UBUNTU: [Config]: set ARCH_MMAP_RND_{COMPAT_, }BITS to the maximum
    
    BugLink: https://bugs.launchpad.net/bugs/1983357
    
    Specially given that some mappings may now be aligned to the PMD, a big
    chunk of the randomization is being lost. In some cases, like 32-bit
    programs on x86, there are no random bits left when defaulting to the
    minimum.
    
    Defaulting to the maximum may lead to programs breaking, specially the ones
    running on limited virtual address space. Those should have moved to 64-bit
    anyway.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7f34927151ca49d8d182e1444b5ea3d7aa4f43e5
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Oct 19 12:09:17 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-6.6
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 22a872644c7193ac7968d4c3b523f1e0f72036bc
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Oct 19 12:08:38 2023 +0200

    UBUNTU: [Config] updateconfigs following v6.6-rc6 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit da873bb98aa7e40b22b583c7048996d7bea48565
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Oct 19 12:06:31 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2039780
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 43788c67d57d9fa82c33c3b649c718596364e60f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Oct 19 12:06:19 2023 +0200

    UBUNTU: rebase on v6.6-rc6
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e342f5da3168afa7df7b55527f71622d41a50d49
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Oct 19 12:05:31 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 228ffa134ccd291d77440e0971c231845dfb5bec
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 10 11:18:42 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-5.5
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 80902a127f76d0f9fc554426abc14f06f9c007f4
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 10 11:17:58 2023 +0200

    UBUNTU: [Config] updateconfigs following v6.6-rc5 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5a0c3b1e880950fae0d4adccab44bfe33ba48b44
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 10 11:15:20 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2038899
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9d657e886bbe1316c949901b25ba3e678a930d2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 10 11:08:03 2023 +0200

    UBUNTU: rebase on v6.6-rc5
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 72cca7f6fddffd361e2d1c1b054e9cff7bc4ea8a
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 10 11:07:34 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4f0c757d97a57d4ff99bbca0baea45e2ac87ce9e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Oct 4 11:16:25 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-4.4
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b294ef3f16e64acefeaa3b8990d73c2e88d93e6b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Oct 4 11:15:43 2023 +0200

    UBUNTU: rebase on v6.6-rc4
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f5ef9bdf47f2a7fdfe4688dc20717a2a2869ddc9
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Oct 4 11:13:22 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2038423
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1f2395c45017058cf77f1f46b3e40d5a77b63f26
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Oct 4 10:56:00 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9fa0ba20f8e1d7731795cd18f2acf48b01f55f7d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 28 10:45:39 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-3.3
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e00f0ddbb14a721019452e39c18c487b182b806d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 28 10:45:03 2023 +0200

    UBUNTU: [Config] updateconfigs following v6.6-rc3 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7025e40e8908f4b392c4761c278b4f676b3a2d83
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 28 10:28:08 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2037622
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd1714396f6fefd5da768a9a77fd26dda4c197ca
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 28 10:12:39 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7a5e589200a27f9dc766b2e42323cd3139d83c12
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Sep 18 14:42:56 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-2.2
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 10fe3a17a7d12628da5a6be563764cd78320bdf6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Sep 18 14:42:11 2023 +0200

    UBUBNTU: [Config] build all COMEDI drivers as modules
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit bda418836dc8ecef51e4108201a7b20499da7559
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Sep 18 14:35:48 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 04cbe95f6b5316ac686a9239be4c21a311b03f2f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Sep 15 14:42:18 2023 +0200

    UBUNTU: Ubuntu-unstable-6.6.0-1.1
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 58e2d09faee1b9b4f1e82ef4c48ef73da5f887d7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Aug 24 17:39:22 2023 +0200

    UBUNTU: [Packaging] temporarily disable signing for s390x
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9e360ba05c8aabe1bbda0750afcd8361de5b93fe
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Sep 15 08:35:45 2023 +0000

    UBUNTU: [Packaging] debian/dkms-versions: temporarily disable dkms
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ef1ace700fb5f6c22180a658f2a3cd4a7ee18559
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Sep 15 10:16:25 2023 +0200

    UBUNTU: [Config] DELL_UART_BACKLIGHT FTBFS with Linux 6.6, disable it
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 751eb3417f86d02c9ae207c7c21a36d3300c069d
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Sep 15 10:12:45 2023 +0200

    UBUNTU: [Config] SHIFT_FS FTBFS with Linux 6.6, disable it
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e43e7d1aa3df9dcd1fd7a2bda710807da04e5098
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Sep 15 09:52:38 2023 +0200

    UBUNTU: update dropped.txt
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2fa1a67a37392f2dc34cf344f46a0ad2dcd81141
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 14 16:10:37 2023 +0200

    UBUNTU: [packaging] skip ABI, modules and retpoline checks
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cbb2548c0a2e27fecaa056c309e1a634a6d2bf01
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 14 15:56:51 2023 +0200

    UBUNTU: [Config] updateconfigs following v6.6-rc1 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9d02c65721a264a048417cb0ac5686e7276138cb
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 14 15:12:29 2023 +0200

    UBUNTU: [Packaging] rebase on v6.6-rc1
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7ae3663bbdfe5f0f01055841e24c1cf553c91057
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 14 15:10:47 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit ad68e972d3bcc29f0b034276ce35c8d1e36ddb40
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Sep 14 15:04:28 2023 +0200

    UBUNTU: [Packaging] move linux to linux-unstable
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cec6db049e937881eed31dd157b8fe78a537d303
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Sep 6 15:51:04 2023 +0200

    UBUNTU: Ubuntu-6.5.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8fa1bbdb8c0f0de3a81d88be819eb59b7050b60a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Sep 6 15:49:53 2023 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2023.08.23)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9589ba62853cd22bd7b77f346fa80063a790f410
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Sep 6 15:46:30 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2034546
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a6e5a5ee1dcfc13478036836f05f26d93c70ccf4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Sep 6 15:43:36 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5dc1f73659e8fd24a0dac376ff0bcd106b0aee67
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Sep 6 15:43:14 2023 +0200

    UBUNTU: [Packaging] update helper scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4a4fd874231b325a0dc8182b87a5cde3c0559dd7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 4 16:55:44 2023 +0200

    UBUNTU: Ubuntu-6.5.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 82f19853dc655e3991468f9cf8d7fba4a0601809
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 4 16:54:38 2023 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2023.08.23)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2b1346c54e521691a739ecbd843229e6c3a77c43
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 4 16:48:40 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2034042
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b14311d5146e5089d2085393623b01fdd67c9a89
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 4 16:18:15 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2eb5c84f2e8be9c57b080cc9692f853d77149b35
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Sep 1 16:15:34 2023 +0200

    UBUNTU: Ubuntu-6.5.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ee190db544c60b4c40e1e9028bc50b642dcaa4d3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Sep 1 16:14:13 2023 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2023.08.23)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4cd01c3a6177f3f1aa52e86add82e00916b736ea
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Sep 1 16:13:52 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2033904
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 71bcde9fecd7d2cb11d685ec1b55c79428f82104
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Sep 1 16:08:26 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f05761f928c781f46f4b8affaed96bd3da1e670c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 29 16:46:10 2023 +0200

    UBUNTU: [Packaging] re-enable signing for s390x
    
    BugLink: https://bugs.launchpad.net/bugs/2026833
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4a9a98500523060ca0bc178a9cc400f74591a186
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 28 08:53:19 2023 +0200

    UBUNTU: Ubuntu-6.5.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3e7ebcdb7b765d2dc31510595b9381fbffc04c68
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 28 08:43:40 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2033240
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5523e4cfa408cf4a5557f3ff761e5d09c0a98878
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 28 08:41:05 2023 +0200

    UBUNTU: Rebase to v6.5
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 37a64fda38e3bbaaba4dd6e7499fe2ba479c9590
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 28 08:40:33 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 04cc3c1d6e483c9d7b1f66e75012f650b4b52807
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Aug 25 16:19:45 2023 +0800

    UBUNTU: SAUCE: PCI/DPC: Disable DPC service during suspend, again
    
    BugLink: https://bugs.launchpad.net/bugs/2033025
    
    When the power rail gets cut off, the hardware can create some electric
    noise on the link that triggers AER. If IRQ is shared between AER with
    PME, such AER noise will cause a spurious wakeup on system suspend.
    
    When the power rail gets back, the firmware of the device resets itself
    and can create unexpected behavior like sending PTM messages. For this
    case, the driver will always be too late to toggle off features should
    be disabled.
    
    As Per PCIe Base Spec 5.0, section 5.2, titled "Link State Power
    Management", TLP and DLLP transmission are disabled for a Link in L2/L3
    Ready (D3hot), L2 (D3cold with aux power) and L3 (D3cold) states. So if
    the power will be turned off during suspend process, disable DPC service
    and re-enable it during the resume process. This should not affect the
    basic functionality.
    
    Since DPC depends on AER to function, also disable DPC.
    
    This patch was in the Ubuntu kernel but was dropped later in the hope of
    upstream version would come to light soon. However, the patch is still
    under discussion, and PCI maintainer and reviewers don't have a
    concensus on the final approach (D3hot vs D3cold), so let's reinstate
    the fix until upstream has a final version.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209149
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216295
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    [ arighi: rewrite dpc_enable() to match the new implementation in v6.7 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9050d2f837b72f088ac0aa476640aed916e87132
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Aug 25 16:19:44 2023 +0800

    UBUNTU: SAUCE: PCI/AER: Disable AER service during suspend, again
    
    BugLink: https://bugs.launchpad.net/bugs/2033025
    
    When the power rail gets cut off, the hardware can create some electric
    noise on the link that triggers AER. If IRQ is shared between AER with
    PME, such AER noise will cause a spurious wakeup on system suspend.
    
    When the power rail gets back, the firmware of the device resets itself
    and can create unexpected behavior like sending PTM messages without PTM
    being enabled. For this case, the driver will always be too late to
    toggle off features should be off.
    
    As Per PCIe Base Spec 5.0, section 5.2, titled "Link State Power
    Management", TLP and DLLP transmission are disabled for a Link in L2/L3
    Ready (D3hot), L2 (D3cold with aux power) and L3 (D3cold) states. So if
    the power will be turned off during suspend process, disable AER service
    and re-enable it during the resume process. This should not affect the
    basic functionality.
    
    This patch was in the Ubuntu kernel but was dropped later in the hope of
    upstream version would come to light soon. However, the patch is still
    under discussion, and PCI maintainer and reviewers don't have a
    concensus on the final approach (D3hot vs D3cold), so let's reinstate
    the fix until upstream has a final version.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209149
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216295
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4d21b45595c39c02b850daa2a35a28bfee9a9413
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Aug 24 17:47:11 2023 +0200

    UBUNTU: Ubuntu-6.5.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 42589982929639f8ea67d1a78dd2233a053bcb12
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Aug 24 17:42:49 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2032750
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7fed5acfa83e937e07ebe0d7480a49385da0fb4c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 23 11:52:37 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 89415fb64a456d16a812bc198b2093fd299a5c58
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 23 09:18:17 2023 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/d2023.07.26)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7f40829f488b4f1f186bd51d6c70530ec893b38d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 23 09:18:01 2023 +0200

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4470fe92053448a04f3b9d39e5afa5d9b2ae5b3c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 23 09:18:01 2023 +0200

    UBUNTU: [Packaging] resync update-dkms-versions helper
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4ddb15e537b65b9e5118d0df4ae7682dfaab5908
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Aug 24 17:39:22 2023 +0200

    UBUNTU: [Packaging] temporarily disable signing for s390x
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 77dc7c0f919487dda259f26b72d0a7442954d4d1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 23 09:21:11 2023 +0200

    UBUNTU: [Packaging] temporarily disable signing for ppc64el
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 06845c6b4498a7eeec0b4b8115baae7d1f1d2dfc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 23 08:15:30 2023 +0200

    UBUNTU: [Packaging] move linux-unstable to linux
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7257fdbc20a199889e23fb4f8411a2cf314a89d8
Author: Xiubo Li <xiubli@redhat.com>
Date:   Mon Jun 12 15:41:10 2023 +0800

    UBUNTU: SAUCE: ceph: move mdsmap.h to fs/ceph/
    
    BugLink: https://bugs.launchpad.net/bugs/2032959
    
    The mdsmap.h is only used by the kcephfs and move it to fs/ceph/
    
    URL: https://tracker.ceph.com/issues/61590
    Cc: Patrick Donnelly <pdonnell@redhat.com>
    Reviewed-by: Patrick Donnelly <pdonnell@redhat.com>
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    (cherry picked from https://github.com/ceph/ceph-client.git)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ebffd0e9c45cf10adfe410d962ee74ea7c95392f
Author: Xiubo Li <xiubli@redhat.com>
Date:   Wed Nov 30 18:04:50 2022 +0800

    UBUNTU: SAUCE: ceph: make sure all the files successfully put before unmounting
    
    BugLink: https://bugs.launchpad.net/bugs/2032959
    
    When close a file it will be deferred to call the fput(), which
    will hold the inode's i_count. And when unmounting the mountpoint
    the evict_inodes() may skip evicting some inodes.
    
    If encrypt is enabled the kernel generate a warning when removing
    the encrypt keys when the skipped inodes still hold the keyring:
    
    WARNING: CPU: 4 PID: 168846 at fs/crypto/keyring.c:242 fscrypt_destroy_keyring+0x7e/0xd0
    CPU: 4 PID: 168846 Comm: umount Tainted: G S  6.1.0-rc5-ceph-g72ead199864c #1
    Hardware name: Supermicro SYS-5018R-WR/X10SRW-F, BIOS 2.0 12/17/2015
    RIP: 0010:fscrypt_destroy_keyring+0x7e/0xd0
    RSP: 0018:ffffc9000b277e28 EFLAGS: 00010202
    RAX: 0000000000000002 RBX: ffff88810d52ac00 RCX: ffff88810b56aa00
    RDX: 0000000080000000 RSI: ffffffff822f3a09 RDI: ffff888108f59000
    RBP: ffff8881d394fb88 R08: 0000000000000028 R09: 0000000000000000
    R10: 0000000000000001 R11: 11ff4fe6834fcd91 R12: ffff8881d394fc40
    R13: ffff888108f59000 R14: ffff8881d394f800 R15: 0000000000000000
    FS:  00007fd83f6f1080(0000) GS:ffff88885fd00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f918d417000 CR3: 000000017f89a005 CR4: 00000000003706e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
    <TASK>
    generic_shutdown_super+0x47/0x120
    kill_anon_super+0x14/0x30
    ceph_kill_sb+0x36/0x90 [ceph]
    deactivate_locked_super+0x29/0x60
    cleanup_mnt+0xb8/0x140
    task_work_run+0x67/0xb0
    exit_to_user_mode_prepare+0x23d/0x240
    syscall_exit_to_user_mode+0x25/0x60
    do_syscall_64+0x40/0x80
    entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7fd83dc39e9b
    
    URL: https://tracker.ceph.com/issues/58126
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    (cherry picked from https://github.com/ceph/ceph-client.git)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e4493d37e76ec97b056e5b80b61533bfd3def749
Author: Jeff Layton <jlayton@kernel.org>
Date:   Fri May 13 10:23:25 2022 -0400

    UBUNTU: SAUCE: mm: BUG if filemap_alloc_folio gives us a folio with a non-NULL ->private
    
    BugLink: https://bugs.launchpad.net/bugs/2032959
    
    We've seen some instances where we call __filemap_get_folio and get back
    one with a ->private value that is non-NULL. Let's have the allocator
    bug if that happens.
    
    For now, let's just put this into the testing kernel. We can let Willy
    decide if he wants it in mainline.
    
    URL: https://tracker.ceph.com/issues/55421
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Xiubo Li <xiubli@redhat.com>
    Cc: Luís Henriques <lhenriques@suse.de>
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    (cherry picked from https://github.com/ceph/ceph-client.git)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ba9abcc0b8b487c50ccff27f35b90c9f86030ba1
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Sat Feb 20 18:26:57 2016 +0100

    UBUNTU: SAUCE: rbd: bump RBD_MAX_PARENT_CHAIN_LEN to 128
    
    BugLink: https://bugs.launchpad.net/bugs/2032959
    
    Bump RBD_MAX_PARENT_CHAIN_LEN from 16 to 128 to avoid fsx failures.
    
    (The alternative is changing fsx to flatten unconditionally when the
    limit of 16 is reached, which is ugly and not needed for librbd.)
    
    (cherry picked from https://github.com/ceph/ceph-client.git)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3a144fcb5f755c967cec41ac497f9c89d858d9a9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 31 08:32:41 2023 +0200

    UBUNTU: [Packaging] temporarily disable Rust support
    
    Kernel 6.5 requires rustc-1.68, but this version is not currently
    available in the archive, so disable Rust support for now.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 795e5a2ca9df55db46323646301ca2d74c38391b
Author: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
Date:   Tue Aug 22 11:57:40 2023 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: replace chars_in_buffer() with flush_chars()
    
    BugLink: https://bugs.launchpad.net/bugs/2032174
    
    After v6.5, calls tty->driver->ops->chars_in_buffer() may lead to a
    deadlock and got soft lockup error. Try using tty->driver->ops->flush_chars()
    to archive to same scenario.
    
    There is no functional change, even if uart_flush_chars() doesn't do what
    we expected, the driver should be able to keep working, as the backlight
    commands is only 3 or 4 bytes short and has little chance to stay in the
    queue partially.
    
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 782b744249dc03160868d143a87d09e865a13d11
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 21 08:20:21 2023 +0200

    UBUNTU: [Config] update toolchain version in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c045bfb688c3980b479518b82699437f265a8d8b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 15 14:53:03 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.5-rc6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 03fabd1022986023092954593718cc4bc71a0fbb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 15 08:13:57 2023 +0200

    UBUNTU: [Config] update toolchain versions in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8b1ed53e62c0cc124d12acdd55af582cd4f4feb8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 15 14:45:47 2023 +0200

    UBUNTU: [Packaging] depend on clang/libclang-15 for Rust
    
    Make sure to use clang/libclang-15 for Rust, since the default
    clang/libclang-16 has some build incompatibilities with gcc-13,
    triggering the following error:
    
      BINDGEN rust/bindings/bindings_generated.rs
      thread 'main' panicked at '"ftrace_branch_data_union_(anonymous_at__/_/include/linux/compiler_types_h_146_2)" is not a valid Ident',
      +/build/rust-bindgen-0.56-DgAMvF/rust-bindgen-0.56-0.56.0/debian/vendor/proc-macro2-1.0.24/src/fallback.rs:693:9
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4cfe71a697f4ce7fe6a19b6b28a78bc060538231
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 15 08:08:20 2023 +0200

    UBUNTU: [Packaging] rust: use Rust 1.68.2
    
    Add Rust 1.68.2 dependency (required by kernel 6.5) and re-enable Rust
    support in the kernel.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e9851ded1d282b2087a532d57e9e7f9b231444da
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Aug 15 15:07:49 2023 +0100

    UBUNTU: [Config] set VIRTIO_BLK=y for default qemu/openstack boot
    
    Default qemu & openstack virtio models use virtio-blk, instead of
    virtio-scsi. Until this is true, keep both virtio-blk & virtio-scsi as
    builtin.
    
    BugLink: https://bugs.launchpad.net/bugs/2030745
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 28d58a4481a4c6c75e539db8f2ef8c88c147ddcd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 31 08:41:59 2023 +0200

    UBUNTU: Ubuntu-unstable-6.5.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cb6a83e0ac41ffd2fe517f27f008dea4fa623764
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 31 08:36:38 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2029086
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1bddaf18616d6cca7d71958a2cbcdec2dd2bbfb1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 31 08:15:50 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.5-rc4
    
    Drop CONFIG_AUTOFS4_FS that has been removed by the following commit:
    
     1f2190d6b711 ("arch/*/configs/*defconfig: Replace AUTOFS4_FS by AUTOFS_FS")
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 51be3a4a443911e9763feb6be6707509241055ce
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 31 08:16:54 2023 +0200

    UBUNTU: Rebase to v6.5-rc4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3ca223a2f418357755bf2e99f8b165d73fe8a36b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 31 08:12:44 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b3b1b6e3b934d8d45ed05e5fa2908f1f1dbacf7f
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Jul 31 13:54:04 2023 +0900

    UBUNTU: [Config] define CONFIG options for arm64 instead of arm64-generic
    
    Many derivative kernels include "../../debian.master/config/annotations"
    to define the diff from debian.master.
    
    Define the CONFIG options for arm64/arm64-generic-64k instead of
    arm64-generic/arm64-generic-64k.
    
    This allows derivative kernels to reuse more 'arm64' CONFIG options.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ef7a670e1321fa0cac118e0094efd0662db7b91d
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Jul 28 22:38:17 2023 +0900

    UBUNTU: [Packaging] install headers to debian/linux-libc-dev directly
    
    The header installation is somewhat complex; 'make headers_install'
    installs headers to debian/tmp-headers, then cpio copies them to
    debian/linux-libc-dev, pruning '.*' files.
    
    My best guess for the reason of this indirection is to avoid garbage
    files contained in the packages.
    
    In fact, "make headers_install" used to create dot files '.install'
    and '.check' in the install destination.
    
    Since Linux 5.3 (or more specifically since commit 59b2bd05f5f4),
    headers_install does not install any dot files.
    
    Specify the final destination to INSTALL_HDR_PATH, and you can get
    clean installation.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c1250cc30806299ae18185bb01d626de6e321d9f
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Jul 28 22:38:16 2023 +0900

    UBUNTU: [Packaging] remove hmake
    
    There is no good reason to use a different variable only for
    'make headers_install'.
    
    Just use $(kmake) like the other targets.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 16cc2770d605fb04632554398860cd6b39a7cea6
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Jul 28 22:38:15 2023 +0900

    UBUNTU: [Packaging] clean debian/linux-* directories
    
    'rm -rf $(DEBIAN)/linux-*' does not clean up anything because the
    staging directories are created in debian/, not in debian.*/.
    
    Fix it to 'rm -rf debian/linux-*/'. The trailing slash is needed because
    the regular files debian/linux*.{service,udev,upstart} are check-in.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 142e94252e4c23183e9833d78662e0073abe42fd
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Jul 28 22:38:14 2023 +0900

    UBUNTU: [Packaging] Fix File exists error in install-arch-headers
    
    Our debian build scripts only work in a pristine source tree.
    
    If you build the packages second time, the following code
    
        mkdir $(headers_dir)/usr/include/$(DEB_HOST_MULTIARCH)
    
    ... will fail with this message:
    
        mkdir: cannot create directory '...': File exists
    
    Irrespective of the error, $(headers_dir) should be removed because
    garbage files from the previous build might be remaining.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit de7282851c4dfa504edc2ef9db51b71e200e5415
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Jul 28 22:38:13 2023 +0900

    UBUNTU: [Packaging] Remove meaningless $(header_arch)
    
    $(build_arch) and $(header_arch) are always the same.
    
    As far as I know, there is no situation where 'make headers_install'
    uses a different ARCH=.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7d85883a901e95a88773888e1261e7c13115c4e3
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Fri Jul 28 22:38:12 2023 +0900

    UBUNTU: [Packaging] Add .NOTPARALLEL
    
    The targets in debian/rules are not intended to run in parallel.
    
    Add .NOTPARALLEL like the Debian kernel.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 82f6261e9b0df72dbcf85640651fee420fd5ea7e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jul 28 07:44:20 2023 +0200

    UBUNTU: Ubuntu-unstable-6.5.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ee774c0b91a608db6eee8c018111da7e651162c3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 27 09:07:21 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2028779
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e379d03e7bb2b18c4d41cfe46ce5fbe27305cdc2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 27 09:06:56 2023 +0200

    UBUNTU: Rebase to v6.5-rc3
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 63bf3ac5b4d76ba0a2de2e64473248a71b756623
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 27 09:06:24 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 28cc92b2c02e8d2bec742b1f2e3f478cb8616573
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 27 08:12:18 2023 +0200

    UBUNTU: [Packaging] resync getabis
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 264f254a82b26d9af40b2587b7a00d967ab3646e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 27 08:12:16 2023 +0200

    UBUNTU: [Packaging] resync update-dkms-versions helper
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8e5f6e5fb432902649bdc175beb8f67c3127b403
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Jul 26 20:24:53 2023 +0100

    UBUNTU: [Packaging] ZSTD compress modules
    
    Compress modules with zstd, this significantly reduced install-size of
    the linux kernel, but also improves initrd creation time and boot
    speed with the upcoming initramfs-tools changes.
    
    Note that upstream modinst compression is not used. During our package
    build time the modules are copied and processed multiple times. If
    they are compressed during modinst time, it will mean they will all be
    uncompressed, again, during processing. Separately 3rd-party module
    signing performed by various tools relies on uncompressed modules as
    well. For Zstd higher compression level is used.
    
    BugLink: https://bugs.launchpad.net/bugs/2028568
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 03345691b132fff8ed7d16bb471989db3f46c0fd
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Jul 26 20:24:52 2023 +0100

    UBUNTU: [Config] Enable support for ZSTD compressed modules
    
    This enables sysfs file declaring in-kernel supported module
    decompression method which allows kmod to load compressed modules
    without inflating them in userspace first.
    
    BugLink: https://bugs.launchpad.net/bugs/2028568
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    [ move CONFIG_MODULE_COMPRESS_ZSTD to the annotated section ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 14463ba6a4afe20b360a4cea6a7a713c61342d71
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Jul 26 20:24:51 2023 +0100

    UBUNTU: SAUCE: Support but do not require compressed modules
    
    During build and install of kernel tree modules are read and copied
    multiple times around. Similarly, many external dkms packages are
    built signed and passed around. Those external tools do not support
    handling compressed module, or cannot process them directly for
    example for signing.
    
    BugLink: https://bugs.launchpad.net/bugs/2028568
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 57861dbb15ebc253885d4f900995ed216019e6d6
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Jul 25 19:10:06 2023 +0100

    UBUNTU: [Packaging] Use consistent llvm/clang for rust
    
    rust-1.62 and bindgen-0.56 were build against llvm-14, continue to use
    the same llvm at runtime. As bindgen-0.56 has not yet been fixed to
    use clang-16 at runtime.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    [ we do not use rust-1.62 anymore, but we still use bindgen-0.56 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0b132e38a6c73729dcfed8dc9ce2e5c90dd5324e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jul 18 10:14:14 2023 +0200

    UBUNTU: Ubuntu-unstable-6.5.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 000750f4da430d0b12845c4ffd413228e35c0ad1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 17 09:34:42 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.5-rc2
    
    Update annotations after rebase and update toolchain versions as well.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d69fec31d6d72d7afa9cf2c3c7131375cc0b63cd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 17 09:26:53 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2027953
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9131ca8cdff124e7c5e5c594ed4f03b259d84bc1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 17 09:27:13 2023 +0200

    UBUNTU: Rebase to v6.5-rc2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 40efbe7cb7d082ccafc4e49709199d7a16f481f0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 17 09:26:27 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 63b283256344e7b63f6eac33aadb8c2e098cc9f3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jul 18 10:12:07 2023 +0200

    UBUNTU: [Packaging] add libstdc++-dev to the build dependencies
    
    perf now requires libstdc++-dev to build.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c1620311d85cc0dc7e69653d17c48b252fe597ca
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 17 09:56:54 2023 +0200

    UBUNTU: [Packaging] move to gcc-13 by default
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fcda365ceb2d6bfd312fbbfd393617886edef246
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jul 4 10:25:40 2023 +0200

    UBUNTU: [Packaging] checks/final-checks: Fix shellcheck issues
    
    Fix the following shellcheck reported issues:
      - SC2145 (error): Argument mixes string and array. Use * or separate argument.
      - SC2166 (warning): Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.
      - SC2086 (info): Double quote to prevent globbing and word splitting.
      - SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?
      - SC2181 (style): Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?.
      - SC2001 (style): See if you can use ${variable//search/replace} instead.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6fd7f75e20f4f0cdaa694edbd25ce57e8f9a8ba8
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jul 4 10:25:39 2023 +0200

    UBUNTU: [Packaging] checks/final-checks: check existance of Makefile first
    
    Check that the per-arch Makefile exists before trying to read it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 72456d5e26279322afe81436a5be9f5804de5b66
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jul 4 10:25:38 2023 +0200

    UBUNTU: [Packaging] checks/final-checks: Remove old configs handling
    
    There are still some references to the old config/config.common.ubuntu file
    which no longer exists, so remove them.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e8e18e25a0a1fe8950d8a8b09244a762b4dddf09
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jul 4 10:19:14 2023 +0200

    UBUNTU: [Packaging] snap: Remove old configs handling
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5eb0465e6298fd12a3834eb3fb751f610410d750
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 17 08:40:35 2023 +0200

    UBUNTU: [Packaging] add missing riscv64 ABI directory
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4dcbe044c4e33ff3cb1d2e5d326aecb07f7b5397
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jun 29 12:14:31 2023 +0200

    UBUNTU: [Packaging] Rename armhf generic-lpae flavor to generic
    
    BugLink: https://bugs.launchpad.net/bugs/2025265
    
    We currently provide two armhf kernel flavors: generic (LPAE disabled) and
    generic-lpae (LPAE enabled). We no longer need a non-LPAE flavor, so keep
    the generic-lpae flavor but rename it to generic (and therefore drop the
    non-LPAE flavor).
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c975d8b0e48cc89f84fc9ca1423759844d3067f1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 10 11:04:19 2023 +0200

    UBUNTU: [Config] enable hihope RZ/G2M serial console
    
    BugLink: https://bugs.launchpad.net/bugs/2022361
    
    Statically build SERIAL_SH_SCI console so that the Ubuntu installer can
    work via serial port on Renesas boards.
    
    Reported-by: John Vincent <john.vincent.xa@bp.renesas.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 12e8b4962473d585f6eaf61b4c352b753e19e739
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 10 09:15:26 2023 +0200

    UBUNTU: Ubuntu-unstable-6.5.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5380609feab1455252a3c74b6d065470a935ad14
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 10 08:51:15 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2026689
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 56f0162b0a55f6b104484d2521dc65b313351699
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 10 08:50:49 2023 +0200

    UBUNTU: Rebase to v6.5-rc1
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ef30f105c07b9e88b86ac9e48a3575fad7ebfbcb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 10 08:50:15 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1c5bb333505e62a3704e27eec802edb581b7abe8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 29 15:48:41 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.5-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f32417bfc6bf963cb98c6fd4322e8c8d28c53128
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Thu Jul 6 17:45:17 2023 -0300

    UBUNTU: SAUCE: overlayfs: default to userxattr when mounted from non initial user namespace
    
    Also add a nouserxattr for the cases where it is desirable to mount without
    userxattr under such namespaces.
    
    This allows cases where such xattrs are necessary for certain operations to
    work out, instead of failing due to not being able to use the
    trusted.overlay.* xattrs.
    
    CVE-2023-2640
    CVE-2023-32629
    LP: #1531747
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    [ arighi: adjust context to support the new mount api ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3c5c968454e38874ca7534327e6d0c1b70f500a6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jul 5 12:47:47 2023 +0200

    UBUNTU: [Packaging] resync update-dkms-versions helper
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 92481daf10d1bef75fc8d0dac5c1756d9aaecbd8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jul 5 12:49:14 2023 +0200

    UBUNTU: [Packaging] move to linux 6.5
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 739b484ebad57025945edc7c8134bc4f1fa24552
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Feb 11 11:24:04 2023 +0100

    UBUNTU: [Packaging] rust: add the proper make flags to enable rust support
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 92840bef668816983d08a7e86de5d06af8c825b1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Feb 11 11:37:38 2023 +0100

    UBUNTU: [Packaging] add rust dependencies
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ff13733f64baee87dbcf7435ce7f15cdb18c5933
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jun 28 15:16:46 2023 +0200

    UBUNTU: update dropped.txt
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 410c85fb033aabd1429d5140aae9092249f702f5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 26 09:14:02 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-8.8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3109593776fbe4094baf88207b34a6e70852be6e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 26 09:13:02 2023 +0200

    UBUNTU: [Config] update toolchain version (gcc) in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9cdc35f19a68a608ddf2910012eff1f052ff4529
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 26 09:11:16 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2025018
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 94bc3b46cad97ba3706d012f34f8144c07aff2d4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 26 09:09:47 2023 +0200

    UBUNTU: Rebase to v6.4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a70f02306cf056a884b3ffc626e53c3681e92c1d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 26 08:59:18 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8595d199393822f391761e886289d6997cb269de
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 19 08:51:27 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-7.7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 661b31e3113ebc5e3ae46496457cf7959837259a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 19 08:06:47 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2024338
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 39f449d0af0b209e939b270100b165acfeffd949
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 19 08:04:27 2023 +0200

    UBUNTU: Rebase to v6.4-rc7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f5e81544302252bd2aa7faa38df592ea2c50ddaf
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 19 08:04:02 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d73adcfc921524232d08a5860e94850a0712a52d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 15 20:11:07 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-6.6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a9a79d3fea2b69bb7ab6b5eec2eac6ac0600e12d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 15 20:04:26 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.4-rc6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit badbb9a4e4c4c4433f936f0cee009bfbe5892b3a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 15 20:02:12 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2023966
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bd657090a1e95fd0ebd6b4ae1e8f4f7edde26805
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 15 09:53:06 2023 +0200

    UBUNTU: Rebase to v6.4-rc6
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dc5738066f0671e4cd2f64a6881214d170a036dc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 15 09:52:23 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 81311e5461421d231f0c088eb63573af851e7519
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 15 20:09:18 2023 +0200

    UBUNTU: [Packaging] update annotations scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f95079889e0b4a4902db77ef2c8f04311e14e8bc
Author: Stefan Bader <stefan.bader@canonical.com>
Date:   Fri Dec 16 10:53:26 2022 +0100

    UBUNTU: [Packaging] dkms: increase directory prefix max length to 140 characters
    
    With longer kernel names (such as linux-lowlatency-hwe-5.15) we may
    exceed the dkms directory prefix limit of 100 characters, used when we
    build zfs for example.
    
    Simply increse this limit to 140 to prevent dkms from multiple flavours
    clashing on each other.
    
    Ignore: yes
    (backported from focal:linux-lowlatency-hwe-5.15)
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit acd6bbf177c4de1646d0f3c434d9d65f9b8bbbe8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 12:24:04 2023 +0200

    UBUNTU: [Packaging] introduce do_lib_rust and enable it only on generic amd64
    
    Introduce the new variable do_lib_rust to enable or disable the
    packaging of linux-lib-rust and enable it only on the generic amd64
    kernel.
    
    This allows to avoid building any kind of Rust artifact in other
    kernels, except for the generic one and only on amd64.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1dc82463046473e8966871681dc2b8582533d74f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 13 09:01:01 2023 +0200

    UBUNTU: [Config] enable multi-gen LRU by default
    
    BugLink: https://bugs.launchpad.net/bugs/2023629
    
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3e97a281a11efc89b5a772c58974b89fc2d8512a
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Jun 13 11:31:12 2023 +0100

    UBUNTU: [Config] Add CONFIG_AS_HAS_NON_CONST_LEB128 on riscv64
    
    riscv64 now too has CONFIG_AS_HAS_NON_CONST_LEB128 available with the
    new binutils (>= 2.40.50).
    
    Also update AS_VERSION and LD_VERSION.
    
    Link: https://sourceware.org/bugzilla/show_bug.cgi?id=27215
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7476939ed96497d2c0ff28e2095a0477d6587323
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Jun 12 11:50:30 2023 +0100

    UBUNTU: [Packaging] remove the signing tarball support
    
    All signing tarball support is now removed (previously only disabled)
    as all kernels now use generate out of linux-signed to submit signing.
    
    Fixes: 6fecc30361 ("UBUNTU: [Packaging] neuter the signing tarball")
    BugLink: https://bugs.launchpad.net/bugs/2012776
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit eff316babae5ce525e3216dd0d11348e52f14c59
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Tue Jun 6 12:27:41 2023 -0400

    UBUNTU: [Config] Enable OSNOISE_TRACER and TIMERLAT_TRACER configs
    
    BugLink: https://bugs.launchpad.net/bugs/2018591
    
    Enable these two configs to allow the use of the osnoise and timerlat tracers.
    
    The osnoise tracer leverages the hwlat_detector by running a similar loop with
    preemption, SoftIRQs and IRQs enabled, thus allowing all the sources of
    osnoise during its execution. The osnoise tracer takes note of the entry and
    exit point of any source of interferences, increasing a per-cpu interference
    counter. It saves an interference counter for each source of interference. The
    interference counter for NMI, IRQs, SoftIRQs, and threads is increased anytime
    the tool observes these interferences' entry events. When a noise happens
    without any interference from the operating system level, the hardware noise
    counter increases, pointing to a hardware-related noise. In this way, osnoise
    can account for any source of interference. At the end of the period, the
    osnoise tracer prints the sum of all noise, the max single noise, the
    percentage of CPU available for the thread, and the counters for the noise
    sources.
    
    The timerlat tracer creates a per-cpu kernel thread with real-time priority.
    The tracer thread sets a periodic timer to wakeup itself, and goes to sleep
    waiting for the timer to fire. At the wakeup, the thread then computes a wakeup
    latency value as the difference between the current time and the absolute time
    that the timer was set to expire.
    
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 22c02ef48374ffba292674b1962a24ceb791329f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 6 08:18:01 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e3ed2514cc3713b0c5a3933ebd8704f716f72462
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 6 07:24:06 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2022886
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4bdf0ff2d403f20d1e501ff3cfca932bc6904162
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 5 08:53:51 2023 +0200

    UBUNTU: Rebase to v6.4-rc5
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0bc633c29ecbe2747addb59a17049c518cdc77cb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 5 08:53:09 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 50e8bfb2d2d776667ee9035754f74b07f548e479
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 6 08:15:38 2023 +0200

    UBUNTU: [Config]: disable hibernation on riscv64
    
    With commit ed309ce52218 ("RISC-V: mark hibernation as nonportable")
    hibernation has been marked as "non-portable" for riscv64.
    
    Therefore disable it by default, since we want the generic kernel to
    be portable.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 64577d020967aa6694be513aee191f8956cc47ce
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 5 08:52:36 2023 +0200

    UBUNTU: [Packaging] update getabis to support linux-unstable
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ed398e91ee5927e7f2fba877ed660926e5db1a6a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 11:55:41 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit af9e3390a810e4219cc5b7a1b1d2431a4549ee61
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 11:48:13 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2021597
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1747667ed625d921711a56552566279a4df35583
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 11:37:02 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6ce89cc298099ea9260c1e499de296e30cbece7a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 11:36:01 2023 +0200

    UBUNTU: [Config] udpate annotations after rebase to v6.4-rc4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c67e14f9ec30240265a6f26721fc24a254d77fb9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 08:38:10 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 92550b568d33f82de1ac24cb912082ff31aa43ba
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 30 07:27:51 2023 +0200

    UBUNTU: [Packaging] perf: build without libtraceevent
    
    Disable libtraceevent in perf to avoid adding extra build dependencies
    for now.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2d640faab14c71751a3ea708f3aef486b6ec3528
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 17:35:07 2023 +0200

    UBUNTU: [Config] drop CONFIG_SMBFS_COMMON from annotations
    
    This config option has been removed with commit:
     38c8a9a52082 ("smb: move client and server files to common directory fs/smb")
    
    Simply drop it from annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 97cb0b5b8bc95c55c386717ffff2b084cd2696d2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 15:19:36 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2021497
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1c8d5d2be56eb8daecd524ce0f9f7d801b68ce6b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 15:17:49 2023 +0200

    UBUNTU: Rebase to v6.4-rc4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b4eba7d260d5c70b18076d003b798f40a121cc6b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 15:14:42 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 047ad5bf46e54a1423e7e6c4b3a7d774abcf3fba
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 15:13:46 2023 +0200

    UBUNTU: [Packaging] resync getabis
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ce4766e520b9c9efb8606a630faf5480acff5d5e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 15:13:45 2023 +0200

    UBUNTU: [Packaging] resync git-ubuntu-log
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4795aa23f8b1a763b8f8a085856e5ca2119d6a3f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 29 15:02:00 2023 +0200

    UBUNTU: [Packaging] annotations: never drop configs that have notes different than the parent
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b9670726134f0d25caa2ae2807dac42664523a56
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 23 08:27:07 2023 +0200

    UBUNTU: [Packaging] kconfig/annotations.py: support older way of merging dicts
    
    BugLink: https://bugs.launchpad.net/bugs/2020531
    
    The '|=' update operator for merging dicts is available starting in
    python 3.9 however in focal we have python 3.8, which causes the
    annotation parsing script to crash.
    
    Support also the old way of merging dicts available since python 3.5
    that uses dict unpacking, e.g. dict1 = {**dict1, **dict2}
    
    Signed-off-by: Luke Nowakowski-Krijger <luke.nowakowskikrijger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ebc2f12e8c514ef9ceb50c58bb76a50f910293cb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 22 13:14:03 2023 +0200

    UBUNTU: [Packaging] generate linux-lib-rust only on amd64
    
    BugLink: https://bugs.launchpad.net/bugs/2020356
    
    Rust is only supported by amd64 at the moment, so there is no reason to
    generate linux-lib-rust packages on the other architectures.
    
    This can prevent generating empty packages or even build errors.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1b4226f746ae8805809f0e1f1253545b22d61e5d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 22 11:22:14 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5ffb4cf2f015a333439f3cd058d635634c3991b2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 22 11:19:18 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2020330
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8f3935e720961f2e06847f4aba49164e33bd3805
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 22 10:30:44 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.4-rc3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2d8fa29ce792b0d2f00e03e47c3a60ae1163a1ab
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 22 10:19:41 2023 +0200

    UBUNTU: Rebase to v6.4-rc3
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b4dff6a48109a49e00ebbdcd0390969795ae715b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 22 10:19:10 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c66e49e483eeccfe9001abb5748956a7105faef8
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue May 9 16:29:51 2023 +0200

    UBUNTU: [Packaging] Drop support of old config handling
    
    All kernels and their derivatives have been migrated to the new annotations
    scheme by now so clean up the tree and drop the support of the old config
    handling.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d739a08a84c0d00d60589dcd368ce6f1a519ec29
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed May 3 14:08:53 2023 +0200

    UBUNTU: [Config]: Disable CONFIG_INTEL_ATOMISP
    
    BugLink: https://bugs.launchpad.net/bugs/2017444
    
    The ATOMISP module makes Atom systems unbootable on kernel 6.2.
    
    Hans, the driver dev suggests to disable the module until it's out of
    staging tree.
    
    So disable the module and enable the dummy driver for powersaving.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: John Cabaj <john.cabaj@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit aae0beffdbf30106df9f1356183856361173065e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu May 18 07:34:09 2023 +0200

    UBUNTU: Ubuntu-unstable-6.4.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2c712a7f5289f2b7b3e3ad5acd9807d406602284
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 21:06:49 2023 +0200

    UBUNTU: [Config] ppc64el: reduce CONFIG_ARCH_FORCE_MAX_ORDER from 9 to 8
    
    This is required to prevent the following build error:
    
     linux/mmzone.h:1735:2: error: #error Allocator MAX_ORDER exceeds SECTION_SIZE
      1735 | #error Allocator MAX_ORDER exceeds SECTION_SIZE
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d72e5b4efe6800a65a614a9b56ead709c33960a6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 16:36:41 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2019965
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a226b16c1951ba4890e0d1d4e44165304c864106
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 16:31:27 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.4-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f576d3738c66110247aa3015c3d9d406dc34aa7d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 15:48:36 2023 +0200

    UBUNTU: Rebase to v6.4-rc2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a657e385f958a1f83cde512d3dbbb35ace266f53
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 15:46:49 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 982457eeb1691214b6bfc548d2b16a2c943dbef9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 15:30:39 2023 +0200

    UBUNTU: [Packaging] update helper scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6286391af5dffdd71979dbc9c05e359b860ad60e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 15:30:38 2023 +0200

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 85747bc05d4977b9dbfdecf00c83e491b3d28798
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed May 17 15:30:05 2023 +0200

    UBUNTU: [Packaging] move to v6.4 and rename to linux-unstable
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ebc5a672c7044ecdc3d7f45d12989b104e4b3954
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sun May 7 12:39:06 2023 +0200

    UBUNTU: [Packaging] introduce a separate linux-lib-rust package
    
    BugLink: https://bugs.launchpad.net/bugs/2015867
    
    After enabling Rust in the kernel, the size of linux-headers increased
    consistently.
    
    Some work has been done to reduce the size, such as dropping the binary
    artifacts (*.o and *.cmd), but it would be nice to keep the size of
    linux-headers reasonably small to avoid wasting too much space in the
    cloud images.
    
    For this reason introduce a new package linux-lib-rust to ship all the
    Rust headers and libraries required to build out-of-tree kernel modules
    in Rust.
    
    Before this patch: 96M  /usr/src/linux-headers-6.2.0-21-generic
     After this patch: 29M  /usr/src/linux-headers-6.2.0-21-generic
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a6e925fc6252476ba25939707e4dfcdfd0ef4972
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri May 5 09:07:01 2023 +0200

    UBUNTU: [Packaging] annotations: use python3 in the shebang
    
    Make sure to not depend on python-is-python3 and explicitly use python3
    for the main script.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 98a61cafe9fb06298c8eb54416c167dad24fc7c5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri May 5 08:58:46 2023 +0200

    UBUNTU: [Config] enable CONFIG_BLK_DEV_UBLK on amd64
    
    There is no reason to have this option disabled only on amd64 and
    enabled on the other architectures. Even if it's marked as experimental
    this feature can be used to implement block drivers in user-space, so it
    makes sense to provide this interface.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 70fb5e542bb8fd37ba500c834614d53c8499712a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu May 4 23:57:53 2023 +0200

    UBUNTU: update dropped.txt
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d94960c1cd50435557edd38221afcbee438afe73
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Apr 24 19:54:12 2023 +0100

    UBUNTU: [Config] Add bug reference note to CONFIG_X86_X32_ABI
    
    Add bug reference note to CONFIG_X86_X32_ABI, documenting change of
    policy since v5.16 kernel.
    
    Ignore: yes
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 84fd05b226cfd5d770085dd110d489fad30e9bcc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 21:52:13 2023 +0200

    UBUNTU: Ubuntu-unstable-6.3.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1de4c651cda705ffc66f3afb30ed04ddad2466d4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 21:50:34 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2017788
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 56bfe7fc4d4948c3a92ecdc8961b1de5e45bdea2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 16:44:53 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 18f50a6cdfea50888cb276db8f742f33225c0a14
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 16:43:02 2023 +0200

    UBUNTU: [Packaging] move python3-dev to build-depends
    
    python3-dev is now required by the regular kernel build process, move it
    to build-depends.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d30b45de696dc837db528a0f6e9854d6d43f826e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 14:53:52 2023 +0200

    UBUNTU: Ubuntu-unstable-6.3.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a2cc9a3a5727cd9ea123ba84be67f9f638a48514
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 14:50:45 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2017776
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ef799cd54de6b0835d0feaac2e4fa550f2994644
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 07:46:59 2023 +0200

    UBUNTU: Rebase to v6.3
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b05e1e1702dac3936d00d8a978fc244914817666
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 07:46:09 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 211af978214b85671ec225e63f9f1f9c91cdf12e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Apr 24 11:49:01 2023 +0200

    UBUNTU: add dropped.txt
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e17e18b1a0b2f7cc8e358493bab592702bd80d9c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 09:23:56 2023 +0200

    UBUNTU: [Packaging] temporarily disable dkms
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c3d69ef5e4af1c88f0a9cbb98953781a40962a69
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 07:45:45 2023 +0200

    UBUNTU: [Config] update annotations after rebase to v6.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8300a9eda3429650d516604df5bec4872de6c214
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Apr 25 10:24:48 2023 +0200

    UBUNTU: [Packaging] move to v6.3 and rename to linux-unstable
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 337c7eeb4a49da72cea9ba4f51be5ceb24641a10
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 26 11:20:49 2023 +0200

    UBUNTU: [Packaging] ignore KBUILD_VERBOSE in arch-has-odm-enabled.sh
    
    Recent kernels don't seem to set KBUILD_VERBOSE anymore, also checking
    this variable to determine if we need to enable/disable Ubuntu ODM
    drivers does not make any sense, so simply disable this check.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ffea222f23bb9a57f16c689c5377dd0d17bd602a
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Apr 21 11:15:36 2023 +0200

    UBUNTU: [Packaging] debian/rules: Add DKMS info to 'printenv' output
    
    Show DKMS info and build flags when running 'debian/rules printenv':
    
    $ ./debian/rules printenv | tail
     do_tools_x86             = true
    do_cloud_tools            = true
     do_tools_hyperv          = true
    
    all_dkms_modules          = zfs ipu6 ivsc iwlwifi v4l2loopback
     do_zfs                   = true
     do_ipu6                  = true
     do_ivsc                  = true
     do_iwlwifi               = true
     do_v4l2loopback          = true
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e75699df47ab41e231c18ed39c57fd9a1347a4eb
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Apr 20 13:15:55 2023 +0200

    UBUNTU: [Packaging] Remove update-version-dkms
    
    It's a legacy script that doesn't do anthing since 2021 so finally
    remove it.
    
    Fixes: 5cc78bf956c7 ("UBUNTU: [Packaging] switch to kernel-versions")
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 487b0742a31f2968ba2c70143772e067868b2dea
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Apr 19 08:52:13 2023 +0200

    UBUNTU: [Packaging] Drop wireguard DKMS
    
    The wireguard module is now part of the regular kernel source so we don't
    need the DKMS any longer. Drop it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0aa941a69a5abe40f768a57914a02aac30dbe846
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Apr 18 14:26:38 2023 +0100

    UBUNTU: [Config] Mark CONFIG_SCSI_VIRTIO built-in
    
    BugLink: https://bugs.launchpad.net/bugs/1685291
    
    This enables initrd-less boot on generic kernel, enabling any Ubuntu
    installation to be lifted from any hardware and converted into a VM
    which will, even with corrupted initrd and missing modules, be able to
    boot by default. This is an extremly useful property to have on all
    ubuntu kernels. Separately, this also removes the need for linux-kvm
    kernel flavour, as all the changes it has are now incorporated into
    generic flavour & cloud-images.
    
    Other related bugs in related projects, that this change alone
    improves, but doesn't resolve in full alone:
    Reference: https://bugs.launchpad.net/bugs/1931841
    Reference: https://bugs.launchpad.net/bugs/2006488
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit fafa7da28c9cbe13a2c21f69e3c97f3ec6b6e871
Author: Roxana Nicolescu <roxana.nicolescu@canonical.com>
Date:   Thu Apr 6 19:49:05 2023 +0200

    UBUNTU: [Debian] autoreconstruct - fix restoration of execute permissions
    
    BugLink: http://bugs.launchpad.net/bugs/2015498
    
    Debian source package diffs cannot represent that a file should be
    executable.
    gen-auto-reconstruct detects the situations where a file has changed
    its permissions and restores the execute permissions in the
    reconstruct script, assuming the file has always had execute permission.
    This does not work in case a file removed the execute permission because
    the script will change it back.
    
    The script now adds either `chmod +x` or `chmod -x` based on the actual
    permission change.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Acked-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5468fb2b629e64b1ab0272b1b1247359532c1686
Author: Isaac True <isaac.true@canonical.com>
Date:   Mon Mar 27 14:23:25 2023 +0200

    UBUNTU: [Config] arm64: Enable PCI_MESON module
    
    BugLink: https://bugs.launchpad.net/bugs/2007745
    
    This driver is important for some Amlogic systems like the ODROID HC4, which
    uses a PCIE-SATA bridge to provide a storage interface.
    
    Signed-off-by: Isaac True <isaac.true@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e2b1afd8f92c78f0e9ad6e6448fe6f3da3477418
Author: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
Date:   Wed Mar 15 17:55:03 2023 +0800

    UBUNTU: SAUCE: PCI: vmd: guard device addition and removal
    
    BugLink: https://bugs.launchpad.net/bugs/2011389
    
    vmd may fail to create sysfs entry while `pci_rescan_bus()` called in
    some other drivers like wwan.
    
      sysfs: cannot create duplicate filename '/devices/.../resource0'
      Call Trace:
       <TASK>
       sysfs_warn_dup.cold+0x17/0x34
       sysfs_add_bin_file_mode_ns+0xc0/0xf0
       sysfs_create_bin_file+0x6d/0xb0
       pci_create_attr+0x117/0x260
       pci_create_resource_files+0x6b/0x150
       pci_create_sysfs_dev_files+0x18/0x30
       pci_bus_add_device+0x30/0x80
       pci_bus_add_devices+0x31/0x80
       pci_bus_add_devices+0x5b/0x80
       vmd_enable_domain.constprop.0+0x6b7/0x880 [vmd]
       vmd_probe+0x16d/0x193 [vmd]
    
    Fixes: 185a383ada2e ("x86/PCI: Add driver for Intel Volume Management Device (VMD)")
    Suggested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f5844a1e3666ac415168b5497950608020f44389
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Apr 18 15:27:01 2023 +0200

    UBUNTU: [Config] ppc64: updateconfigs following v6.2.9 stable updates
    
    BugLink: https://bugs.launchpad.net/bugs/2016877
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8b09873a5ee304cfd5b6e6551a57de3602cf4355
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Apr 18 15:20:48 2023 +0200

    UBUNTU: [Config] ppc64: updateconfigs following v6.2.8 stable updates
    
    BugLink: https://bugs.launchpad.net/bugs/2016876
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6cee3921f9760b34b34e3c7bbd118551e2004b97
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Mar 27 09:12:33 2023 +0200

    UBUNTU: [Packaging] checks/final-checks: Honor 'do_skip_checks'
    
    The final-checks script is doing some final ABI checkig that should be
    skipped if 'do_skip_checks' is true. Just like the other checker scripts
    in debian/scripts/checks.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 2a272fbe407b53d2f0e3097d1d1d0045135b2433
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Mar 27 09:12:32 2023 +0200

    UBUNTU: [Packaging] Move final-checks script to debian/scripts/checks
    
    Move the final-checks script to debian/scripts/checks so that all the
    checker scripts are in one place.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 65586f290d5643464cab1185b46bdfd607053e93
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Apr 14 12:11:49 2023 +0200

    UBUNTU: Ubuntu-6.2.0-21.21
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 68efa5a9569fe30d44c6bb9498da8d814375ecf5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Apr 14 12:05:50 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2016249
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 40a48dc8e867acaf0405b7117545eb7c4849d4c0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Apr 14 11:51:18 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 85cdf839865d8161e4afd6129405342197bb63e2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 12 15:50:29 2023 +0200

    UBUNTU: [Packaging] get rid of unnecessary artifacts in linux-headers
    
    There is no sane reason to ship .o and .cmd artifacts in linux-headers,
    so simply drop them (this allows to save ~25MB in the latest
    linux-headers-generic).
    
    Moreover, strip Rust's libmacros.so shipped in linux-headers to reduce
    the size even more.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4887aa770edf097485429668bd7c062deb40d8e8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 12 13:39:03 2023 +0200

    UBUNTU: SAUCE: selftests/bpf: avoid conflicting data types in profiler.inc.h
    
    In profiler.inc.h we define some structs that may conflict with the
    names that bpftool emits when it generates vmlinux.h from
    /sys/kernel/btf/vmlinux.
    
    Make sure these local data types don't conflict with those generated by
    bpftool.
    
    [ arighi: drop this when we move to pahole >= 1.25 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a49e0498c3a396326db443662345888844bea06b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 12 11:48:13 2023 +0200

    UBUNTU: SAUCE: selftests/bpf: ignore pointer types check with clang
    
    Building bpf selftests with clang can trigger errors like the following:
    
      CLNG-BPF [test_maps] bpf_iter_netlink.bpf.o
    progs/bpf_iter_netlink.c:32:4: error: incompatible pointer types assigning to 'struct sock *' from 'struct sock___17 *' [-Werror,-Wincompatible-pointer-types]
            s = &nlk->sk;
              ^ ~~~~~~~~
    1 error generated.
    
    This is due to the fact that bpftool emits duplicate data types with
    different names in vmlinux.h (i.e., `struct sock` in this case) and
    these types, despite having a different name, represent in fact the same
    object.
    
    Add -Wno-incompatible-pointer-types to CLANG_CLAGS to prevent these
    errors.
    
    (cherry picked from https://lore.kernel.org/lkml/20230412095912.188453-1-andrea.righi@canonical.com/T/#u)
    [ arighi: drop this when we move to pahole >= 1.25 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0ace404c3a57729c4168aa43820f62009fdd96c6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 6 08:33:14 2023 +0200

    UBUNTU: Ubuntu-6.2.0-20.20
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 56c390c53109db284fe14380043b4e8260f3f9fb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 6 08:32:11 2023 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2015429
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cd20e281a407618883a93b61e53971e921a26dc2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 6 08:29:25 2023 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3a0383f093a54a88fe9c3760eddc456956b6a310
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 5 16:16:00 2023 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8e3cefc20afeae5ced5afbad3316386eab7042e7
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Apr 5 15:09:33 2023 +0100

    UBUNTU: [Packaging] FTBFS with different dkms or when makeflags are set
    
    BugLink: https://bugs.launchpad.net/bugs/2015361
    
    dkms upstream, debian, lunar-proposed is changing return code for skip
    from 9 to 77. To support either editions of the dkms, update
    build_dkms invocation to support either return codes.
    
    lunar kernel started to export MAKEFLAGS to speed up and optimize our
    packaging builds. However, this can cause build_dkms to FTBFS if a
    given dkms module uses submake and relies on built-in Make variables
    to be set. Address this by unsetting MAKEFLAGS when invoking
    build-dkms.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 066dc4d7cdb4c352a1f917233c82fd5e72e9722d
Author: Andrei Gherzan <andrei.gherzan@canonical.com>
Date:   Thu Mar 30 15:32:06 2023 +0100

    UBUNTU: [Packaging] Copy expoline.o only when produced by the build
    
    BugLink: https://bugs.launchpad.net/bugs/2013209
    
    CONFIG_EXPOLINE_EXTERN has been enabled for s390x [LP:#2013209]. While
    this works as expected on the base kernels, it might not work on some
    derivatives: for example focal:hwe-5.15 (derived from Jammy). On Focal,
    this config can't be enabled due to the GCC version it comes with.
    CONFIG_EXPOLINE_EXTERN requires >= 110200 while Focal comes with 90400.
    
    This change adds a check on the existence of the expoline object file(s)
    that are packaged later. This also makes the code more robust generally.
    
    Signed-off-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 281ad73637fb54bed2e68f066664645168b6207b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 28 12:50:39 2023 +0200

    UBUNTU: [Packaging] annotations: prevent duplicate include lines
    
    Includes are always parsed recursively, but when we save them (e.g.,
    when the annotations file is updated) we should always save only the
    top-level includes, without repeating the recursive ones.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 18f0cda30d74d3d56006ec1706122ab319c6095f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Mar 25 07:37:30 2023 +0100

    UBUNTU: Ubuntu-6.2.0-19.19
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit abc4d529cde4f08679a117838593776987c40386
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 22 10:45:53 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2012488
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 13497273d8211702761e4f9ca60a96e01f86af6a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 22 10:16:32 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4e51a769a0c63e96cf34b1e2016f295e857eb0e0
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Mar 24 21:50:46 2023 +0000

    UBUNTU: [Packaging] neuter the signing tarball
    
    We now produce the signing tarball from the generate package so we no
    longer this to be produced from the main package.  However, in the short
    term we wish to produce and publish out empty signing tarballs.  We will
    do this until we have cleared out the dists versions.  Later we will
    eliminate the tarball from this package entirely.
    
    BugLink: https://bugs.launchpad.net/bugs/2012776
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

commit d9943cd4a3f295e7ed71deb5d449ef90a8790a17
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 15 23:54:19 2023 +0100

    UBUNTU: Ubuntu-6.2.0-18.18
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e2537f054fc8c581af977991f922ddc0db50b0c5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 15 23:52:48 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2011750
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2a9d506e23bd4db5ca9ee880ec112ecf83e31c30
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 15 23:50:55 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a07f6bcc42e719016a6d6cec00dbc3cf00f4c351
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 14 16:43:44 2023 +0100

    UBUNTU: Ubuntu-6.2.0-17.17
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b9935f784716cff1f0d16a0bcd43cef7c0a0c040
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 14 16:38:58 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2011593
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 203115497fd529e3b1e08b1f0bd84021403fb32b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 14 16:35:30 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5d14a175db684ff7234585c7a15020672861dbb2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 13 13:27:00 2023 +0100

    UBUNTU: [Config] update annotations after applying 6.2.6 stable patches
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c0c5d15eebe5c6df6b8105b841738f1911c3420a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 13 13:08:59 2023 +0100

    UBUNTU: [Config] update annotations after applying 6.2.3 stable patches
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7f52f9ae00b615ef509158181e393ffce1366632
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 10 18:34:28 2023 +0100

    UBUNTU: Ubuntu-6.2.0-16.16
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3bd56010e8750cdf86ba0bc5c61addf8d04d3905
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 10 18:28:27 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009914
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a90e3574c2968818deafb0437c8b88fe7ff0adcc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 10 18:23:25 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 42ed258ef15af3f4a887b8059e15eb53d05bfbc7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 10 15:58:40 2023 +0100

    UBUNTU: [Config] enable CONFIG_SERIAL_8250_MID=y
    
    BugLink: https://bugs.launchpad.net/bugs/2009283
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 03535ce2c2f28dd61d48d0b148ebf9d4ef39b2dd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 10 07:37:00 2023 +0100

    UBUNTU: Ubuntu-6.2.0-15.15
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cc2544295abd6e3a06d22c8254763f804b56ea4b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 10 07:35:57 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2488fc69ee5f57448f3d09b01980ba3e376cb359
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 9 22:17:21 2023 +0100

    UBUNTU: [Packaging] annotations: document annotations headers
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a5484caf97d3f8eabb7929c8f78aa69be75319a0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 9 16:40:36 2023 +0100

    UBUNTU: Ubuntu-6.2.0-14.14
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a25cb0c65a830a2658974681917303b95ea4f8f9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 9 16:36:26 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009856
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8de715048aa432d961605242f685a357332cc9e9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 9 16:31:27 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 78b85f96274d73352927302f87893a0a4a665948
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 9 16:30:36 2023 +0100

    UBUNTU: [Packaging] update getabis
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f9071966816d281fc0dfa4a5f2e33abbc1c3ec1b
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Feb 27 14:49:52 2023 +0000

    UBUNTU: [Packaging] Preserve the correct log file variable value
    
    In successful builds, ensure that log variable remains set to the
    correct value, such that further processing can be done on it for the
    lrm builds.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 57467905046b9924b43bb2fdc3ad5fe6b6eaf737
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Feb 27 14:49:53 2023 +0000

    UBUNTU: [Packaging] actually enforce set -e in dkms-build--nvidia-N
    
    The current code is effectively this:
    
      set -e; (false; true) || exit "$?"
    
    Due to historical reasons any code inside a pipeline is executed with
    `set +e` mode effective, meaning false command doesn't return, the
    rest of commands are executed, and the error code from () is set to
    the last (usually successful) command.
    
    This is the reason, why my previous buggy behaviour despite generating
    errors inside the dkms-build--nvidia-N didn't abort the build, but
    happily produced linux-nvidia-objects.deb which contained empty
    SHA256SUMS file and broken BUILD CLEAN scripts that did nothing.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8b1d918149da253f422e6960e210bfba69bfa501
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Feb 27 14:49:51 2023 +0000

    UBUNTU: [Packaging] Support skipped dkms modules
    
    In recent releases we have fixed up most dkms modules to correctly
    detect, and skip building dkms modules when compiling against
    incompatible kernels. For example, trying to build a WiFi driver
    against a kernel without 80221 config enabled, results in dkms
    returning error code 9 skipped build, due to incompatibility. Our DKMS
    autopkgtests already honor such cases, and mark test results as
    passing for skipped {kernel, dkms-module} combinations.
    
    Improve kernel's dkms-build script to distinguish failed versus
    skipped builds, by propagating exact status code. For standalone
    skipped dkms modules, skip generating an empty deb packages.
    
    Also do not fail over missing make.log for the skipped dkms builds,
    which do not have one.
    
    This change will enable us to use a static list of dkms-versions
    across all kernels, without need to do anything special for cases were
    a vendored dkms module is declared incompatible in dkms.conf for a
    given kernel.
    
    For example, v4l2loopback incompatible with cloud kernels that do not
    enable CONFIG_VIDEO, or backports-iwlwifi incompatible with kvm
    kernel.
    
    This patch is tested against working, skipepd, and FTBFS dkms modules,
    which correctly built the full kernel, skipped some dkms modules, or
    failed the overall build.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7c9d10c978c8996915e2f5076b4404ccc7c9f784
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 14:40:26 2023 +0100

    UBUNTU: Ubuntu-6.2.0-13.13
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 18c6ee479be76e00838500ea0ee12984c9e8647b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 14:34:32 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009704
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c61b6b129ff863deb6807f0dbeb496c639cea85
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 14:28:52 2023 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0713c51a43307149d9ec55bcc45804d2b9110873
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 14:27:45 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ffffe12e20a184c5f44306a6b4feff5663c05525
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:50:16 2023 +0100

    UBUNTU: Ubuntu-6.2.0-12.12
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 031ed8cfb510911b057e99726aa7a6e470f86f15
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:49:22 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009698
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d9b8cbf0d102b921feb5ca927de1d597d7963c34
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:47:07 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 353e8c3108f963237669f7eef9385ebb9d7ac18e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:46:51 2023 +0100

    UBUNTU: [Config] update CONFIG_RUST_IS_AVAILABLE
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ce8ddb8dc467fbb8aac5c3e30ab7e719fec0d2e2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:24:55 2023 +0100

    UBUNTU: Ubuntu-6.2.0-11.11
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ad315d4b53d636e08dea5398903f4e2ee83125ea
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:22:55 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009697
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9547c66166132b2d733f31c3ff2255547f6ec8b6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:14:42 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 87962815a378cf9d92732d7538bd5a42c73cdee6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:14:17 2023 +0100

    UBUNTU: [Packaging] do not stop the build if rust is not available
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 03fd868c2c591f4ae4cff2481c8430fda7a72bd3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:01:56 2023 +0100

    UBUNTU: Ubuntu-6.2.0-10.10
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ede8efbdfc67a75c6957e4cf9ce1fe3c657ed674
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 12:00:17 2023 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8ffdf880f35f2918992cba8bf21ec87f128b11cd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 11:57:30 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009673
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ef857fac5910b61c7a94202f3c9937513a314600
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 07:20:05 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d66289bc0309380f72d196e569c576f786da66ce
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Feb 11 11:48:35 2023 +0100

    UBUNTU: [Config] enable Rust support
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 56f27c485707bbe4f2bcc044708d4b40302d3f66
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Feb 11 12:40:47 2023 +0100

    UBUNTU: [Packaging] run rustavailable target as debugging before build
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e242c3c3928a91df7aaad8053f01a9ceaf69d921
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Feb 16 22:47:57 2023 +0100

    UBUNTU: [Packaging] bpftool: always use vmlinux to generate headers
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8c68f11e4185c371e8e13318a4b51eaccacc1e5b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 17:18:43 2023 +0100

    UBUNTU: SAUCE: allows to enable Rust with modversions
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    The following commit allows to relax the constraint !CONFIG_MODVERSIONS
    with CONFIG_RUST enabled:
    
     20e01f8abba2 ("UBUNTU: SAUCE: modpost: support arbitrary symbol length in modversion")
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0a4e704ad1a9800a7d24179c9d14aae6f43c4813
Author: Gary Guo <gary@garyguo.net>
Date:   Wed Jan 11 16:11:51 2023 +0000

    UBUNTU: SAUCE: modpost: support arbitrary symbol length in modversion
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Currently modversion uses a fixed size array of size (64 - sizeof(long))
    to store symbol names, thus placing a hard limit on length of symbols.
    Rust symbols (which encodes crate and module names) can be quite a bit
    longer. The length limit in kallsyms is increased to 512 for this reason.
    
    It's a waste of space to simply expand the fixed array size to 512 in
    modversion info entries. I therefore make it variably sized, with offset
    to the next entry indicated by the initial "next" field.
    
    In addition to supporting longer-than-56/60 byte symbols, this patch also
    reduce the size for short symbols by getting rid of excessive 0 paddings.
    There are still some zero paddings to ensure "next" and "crc" fields are
    properly aligned.
    
    This patch does have a tiny drawback that it makes ".mod.c" files generated
    a bit less easy to read, as code like
    
            "\x08\x00\x00\x00\x78\x56\x34\x12"
            "symbol\0\0"
    
    is generated as opposed to
    
            { 0x12345678, "symbol" },
    
    because the structure is now variable-length. But hopefully nobody reads
    the generated file :)
    
    Link: b8a94bfb3395 ("kallsyms: increase maximum kernel symbol length to 512")
    Link: https://github.com/Rust-for-Linux/linux/pull/379
    
    Signed-off-by: Gary Guo <gary@garyguo.net>
    (backported from https://lore.kernel.org/lkml/20230111161155.1349375-1-gary@garyguo.net/)
    [ fix build error on s390x: always use a variable with TO_NATIVE() ]
    [ add dummy NULL entry at the end of the modversion array ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ad500f1b65337657dce7f4eab9147ed6838ad5ef
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Feb 11 11:31:09 2023 +0100

    UBUNTU: [Packaging] propagate makefile variables to kernelconfig
    
    BugLink: https://bugs.launchpad.net/bugs/2007654
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5ddf9aec3474a08bda2b5fac05330951e152c5ff
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 8 11:40:32 2023 +0100

    UBUNTU: SAUCE: Makefile: replace rsync with tar
    
    rsync has been removed from the i386 archives starting with lunar,
    causing build errors when generating kernel packages for this
    architecture.
    
    Replace rsync with tar for now, until we decide to drop i386 completely.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bfc84f468c68eacc00a0695da89cee23fe5ee8d1
Author: Chris Chiu <chris.chiu@canonical.com>
Date:   Wed Mar 8 01:19:01 2023 +0800

    UBUNTU: [Config] Enable CONFIG_SND_HDA_INTEL_HDMI_SILENT_STREAM
    
    BugLink: https://bugs.launchpad.net/bugs/2009024
    
    Enable it to make sure the audio output is working when system
    booting with the external monitor connected via docking station.
    
    Signed-off-by: Chris Chiu <chris.chiu@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit eb38688bb716ce685daa65af9c50fdc34d4d11e0
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Mar 8 09:25:25 2023 +0100

    UBUNTU: [Packaging] debian/rules: Honor 'do_skip_checks' for builds
    
    One of the build steps is a config check to ensure that the generated
    configs are as expected. For mainline builds, this sometimes isn't the
    case but we don't care so skip that check if 'do_skip_checks' is true
    (which is the case for mainline builds).
    
    Ignore: yes
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 270cfdb8ad521b3b08a8d20b262bbca13ede48d6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 7 18:45:32 2023 +0100

    UBUNTU: Ubuntu-6.2.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2a146e38a400f87454375502ffa99cb1c7f1f953
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 7 18:10:47 2023 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a1a481eb450c672636276a270a08ab0005d001b8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 7 17:47:20 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2009621
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0825d7ef1318ebcf96d2783ab320f124e86d8e5e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 7 17:44:31 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6c07e7653368a93a834c15d02738a4fceebeae83
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Mar 7 18:43:18 2023 +0100

    UBUNTU: SAUCE: Revert "arm64/fpsimd: Make kernel_neon_ API _GPL"
    
    Temporarily revert commmit aaeca9845643 ("arm64/fpsimd: Make
    kernel_neon_ API _GPL"), that is currently breaking zfs.
    
    When zfs will be fixed we can drop this SAUCE patch.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 35f73a1f5270d402a514fc707b480407e45c7573
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 3 08:47:52 2023 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit eadb19edec5b0e4498fdccc7947e0df0c05bb0ff
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Mar 3 08:43:54 2023 +0100

    UBUNTU: [Packaging] rename package to linux
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f4a807b79570c15637cb3753de2108f84cb3acd7
Author: Andrei Gherzan <andrei.gherzan@canonical.com>
Date:   Mon Feb 20 13:04:57 2023 +0000

    UBUNTU: SAUCE: selftest: rtcpie: Force passing unreliable subtest
    
    BugLink: https://bugs.launchpad.net/bugs/1814234
    
    Since 0b63accf87225b5eb7e52814c374cf02d733d4bb, the test includes a
    verification of time passage that is unstable as it is prone to
    different results based on the system load.
    
    Other investigations led to disabling this test in various other
    places/projects. For example, Linaro also disabled it[1].
    
    We have chosen to keep this test but to force its result unconditionally
    successful as opposed to reverting the aforementioned commit because:
    1. it keeps running the test with results and data that we can use in
       the future for any "smarter" way to deal with it - eg. statistical
       approach
    2. it minimizes the maintenance burden of this patch kept in our kernel
       trees
    
    It is worth mentioning that upstream was contacted via the mailing list
    with no feedback[2]. The request was to increase the current tolerance
    set at 10%.
    
    [1] https://bugs.linaro.org/show_bug.cgi?id=3402#c9
    [2] https://lore.kernel.org/lkml/a304b6f1-11db-543b-2cb3-372f34dc7697@linaro.org/
    
    Signed-off-by: Andrei Gherzan <andrei.gherzan@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cddffb6d568b78123e77c84ed5a5d7b42375b10c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 20 10:36:20 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-10.10
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 321815a67453a4c82ed78b2b528181d5d102ebea
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 20 09:41:25 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.2
    
    Drop CONFIG_DRM_USE_DYNAMIC_DEBUG that has been marked as broken by
    commit: bb2ff6c27bc9 ("drm: Disable dynamic debug as broken")
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dcb4a238aab7453c0b1e67198b70563dd906d5a7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 20 09:14:09 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2007818
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9eeded2c91cc4c5ca37f8f5462cf038168d7d88d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 20 09:11:14 2023 +0100

    UBUNTU: Rebase to v6.2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9a16a41b4ec7ccd87b0a5a781b73033f39146606
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 20 09:07:51 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit aa6704796b5e67f369232b9f928675ac6ce7ece7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 09:32:18 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-9.9
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d1bf1a6689c25271bf4ab6b4f86252762071137f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 09:30:12 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.2-rc8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b5015d98da221962f841d4c6c999b9c355cc50a4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 08:57:56 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2007069
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8514ac7ab3bd5588b090359cbbe5773d8ae5e407
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 09:31:02 2023 +0100

    UBUNTU: Rebase to v6.2-rc8
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 80fbab48bf0ae49646d5253b031004d2d6b2c057
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 08:55:20 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7ecfc3dd9df157975940f84c28758549098ab6f8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 13 08:33:41 2023 +0100

    UBUNTU: [Packaging] annotations: various code cleanups
    
    kconfig: Fix pylint violations
    
    Fix the following:
    R0205: Class 'Config' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
    E1101: Instance of 'Config' has no '_parse' member (no-member)
    W0613: Unused argument 'arch' (unused-argument)
    W0613: Unused argument 'flavour' (unused-argument)
    W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
    R0201: Method could be a function (no-self-use)
    E1101: Instance of 'Config' has no 'config' member (no-member)
    W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
    W0105: String statement has no effect (pointless-string-statement)
    W0123: Use of eval (eval-used)
    W0102: Dangerous default value [] as argument (dangerous-default-value)
    R1723: Unnecessary "elif" after "break" (no-else-break)
    R1705: Unnecessary "elif" after "return" (no-else-return)
    R1704: Redefining argument with the local name 'arch' (redefined-argument-from-local)
    
    Signed-off-by: Juerg Haefliger <juergh@proton.me>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 17aa0ecba62221c1302d05fd68bfac97c6d0c3a7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Feb 11 11:44:44 2023 +0100

    UBUNTU: [Config] update annotations to split configs with/without notes
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f1781299e3a1e1dc6c4b47b45f92bedde7c6f202
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 7 11:08:17 2023 +0100

    UBUNTU: [Packaging] annotations: Check validity of FLAVOUR_DEP
    
    FLAVOUR_DEP is used to map flavors from the main annotations file to
    flavors from includes. Currently, there is no check that any of the
    listed flavors exists or is valid so the resulting behavior is
    (probably) undefined/unexpected. Add a sanity check to verify the
    FLAVOUR_DEP flavors.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 007607d60cf5f3e076f79857b95604003ffc68f4
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 7 08:36:07 2023 +0100

    UBUNTU: [Packaging] annotations: Write out annotations with notes first
    
    When writing the annotations file, separate them  into two groups: With
    and without a note. Write the group with notes first and separate the
    other group with a visual marker.
    
    The idea is that all configs that are set/modified manually should have
    an annotation note and putting them at the top of the annotations file
    should make it easier to figure out what the config of this kernel is
    about.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e011f2959f6fa36d8217a680ae68d09fc51ccfe9
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 7 08:36:06 2023 +0100

    UBUNTU: [Packaging] annotations: Fail on invalid lines
    
    Currently, invalid lines are silently ignored, which is not good.
    Fix this by raising an exception if the line can't be parsed. While at
    it, remove one level of nesting by using if-continue.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7e9800b36e37f57787adc21c93eca19b23a82cbd
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 7 08:36:05 2023 +0100

    UBUNTU: [Packaging] annotations: Handle tabs in annotations file
    
    Handle tabs in the annotations file by replacing them with spaces.
    While at make the parsing more robust by removing leading and trailing
    whitespaces and ignoring empty lines.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7a79eea193bbe2a77cc48c7404f085f16904f699
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 7 08:36:04 2023 +0100

    UBUNTU: [Packaging] annotations: Clean up policy writes
    
    The logic to determine if policy lines need to be written to the output
    file is a little convoluted. Basically, if there is no 'policy' key in
    a config, there is nothing to do, so put that check at the beginning of
    the loop.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0bd2d18b70043dc9354a1ae9caa349477af0a9e5
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Feb 7 08:36:03 2023 +0100

    UBUNTU: [Packaging] annotations: Fix linter errors
    
    Fix the following flake8 errors:
      - E127 continuation line over-indented for visual indent
      - E722 do not use bare 'except'
      - E203 whitespace before ':'
      - E201 whitespace after '{'
      - E202 whitespace before '}'
      - E713 test for membership should be 'not in'
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7329f4be775b4a585ee811d3347207db3d8b93c6
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Feb 6 08:14:48 2023 +0100

    UBUNTU: [Packaging] annotations: Preserve single-line annotation rules
    
    Currently, rules with notes are written out as separate lines, i. e.,
    one line for the policy and one line for the note, followed by an
    empty line. The parser now supports single line rules so preserve that
    style when writting out the rules.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0c9146f650d9bb3a86050bef07a067ddffe81eeb
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Feb 6 08:14:47 2023 +0100

    UBUNTU: [Packaging] annotations: Handle single-line annoation rules
    
    The old annotations file allowed single-line rules such as:
    CONFIG_FOO  policy<'amd64': 'n'> note<LP: #123456>
    
    The new annotations parser doesn't support that, so add it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a7369177b4230560ba04fcd7ca221945a5aa9b27
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Feb 3 14:24:08 2023 +0000

    UBUNTU: [Packaging] rsync no longer available on lunar
    
    rsync is no longer available on i386.  In lunar we only produce
    linux-libc-dev from the kernel package on i386.  We only use rsync when
    building tools and when building documentation; we do neither on i386.
    Architecture limit our dependency.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    [changed subject Config->Packaging, and lucid->lunar in body]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 82d666f0e3e1dc9e4f351f16826c1ee9505ceff2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Feb 3 11:53:32 2023 +0100

    UBUNTU: [Packaging]: annotations: fix _remove_entry() logic
    
    Drop unnecessary delete statements and fix the code to properly remove
    the entry in _remove_entry().
    
    Reported-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e5fcf54ed71c6f1bb93437af5eef506b81c32ffe
Author: Francis Ginther <francis.ginther@canonical.com>
Date:   Thu Feb 2 09:24:24 2023 -0600

    UBUNTU: [Debian] Use a python3 compatable kernel-testing repo
    
    BugLink: https://bugs.launchpad.net/bugs/2004429
    
    Switch to using a python3 compatible branch for the kernel-testing
    scripts used for running autopkgtest. This in turn uses a python3
    compatible fork of autotest.
    
    Remove the autopkgtest dependency on python2, replacing it with python3.
    Also remove the dependency on bzr as it's unused.
    
    Signed-off-by: Francis Ginther <francis.ginther@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8a6a53cd0ca99fad95a286c3cbe604fd5949001e
Author: M Chetan Kumar <m.chetan.kumar@linux.intel.com>
Date:   Mon Jan 16 17:15:02 2023 +0800

    UBUNTU: SAUCE: net: wwan: t7xx: PCIe reset rescan
    
    BugLink: https://bugs.launchpad.net/bugs/2002089
    
    PCI rescan module implements "rescan work queue".
    In firmware flashing or coredump collection procedure
    WWAN device is programmed to boot in fastboot mode and
    a work item is scheduled for removal & detection.
    
    The WWAN device is reset using APCI call as part driver
    removal flow. Work queue rescans pci bus at fixed interval
    for device detection, later when device is detect work queue
    exits.
    
    Change-Id: I4bc254ae0eae76c41da75b1b76fcef36ec866e84
    Signed-off-by: Haijun Liu <haijun.liu@mediatek.com>
    Co-developed-by: Madhusmita Sahu <madhusmita.sahu@intel.com>
    Signed-off-by: Madhusmita Sahu <madhusmita.sahu@intel.com>
    Signed-off-by: Ricardo Martinez <ricardo.martinez@linux.intel.com>
    Signed-off-by: M Chetan Kumar <m.chetan.kumar@linux.intel.com>
    Signed-off-by: Devegowda Chandrashekar <chandrashekar.devegowda@intel.com>
    (cherry picked from https://patchwork.kernel.org/project/netdevbpf/patch/20230105154245.198858-1-m.chetan.kumar@linux.intel.com/)
    Signed-off-by: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cce5a4b5a8255e9ce461355a369aa20e8f97146a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 31 14:45:15 2023 +0100

    UBUNTU: [Packaging] annotations: do not drop undefined configs in derivatives
    
    Prevent dropping configs that are undefined across all the supported
    architectures in annotations that have includes, because we may want to
    use them to override configs imported from other annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 912be2d149145fe516b6decd053a562d5d4f03a2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 31 08:21:21 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-8.8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a00dd4a76b8657cfa7b7031e3cde1f67878ba035
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 31 08:19:15 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2004229
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 190b0eb592fca2715280895945879e1efc15a4ab
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 31 07:50:34 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit df1deb9a6294e315346629d5489a0eb3017438b3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 31 07:31:43 2023 +0100

    UBUNTU: [Packaging] re-enable signing for ppc64el and s390x
    
    Re-enable signing on these architectures, so that we can test secure
    boot on them.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6df90db71b750a9fa8c3d09d755309bbc8398d4f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 10:23:16 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-7.7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8de5b017d9a9b8cef0c6b5cc523ea7de48cd2902
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 10:20:11 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2004142
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3b9562c784e8eaaba280d9971c3dae0948786420
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 10:18:32 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c539ad54c98b93a19a19b1675c0805631bdecc61
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 09:20:26 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-6.6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9118154b869c34454869155eebdb5eeef5f0404a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 09:18:42 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.2-rc6
    
    CONFIG_BUILD_BIN2C is not needed anymore (undefined across all arches).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ea1d9797de9489648ec562b5045259d827d47ed4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 08:29:50 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2004138
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d6a3960d1aff2d56f6940aed9e038931d0a1395a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 08:25:14 2023 +0100

    UBUNTU: Rebase to v6.2-rc6
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 952ced1554690c0a5d2b85f97e963173c5ff09e5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 08:24:13 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ae281486ddf9b4dfd1a381562fc7d4dc93b398a9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 30 09:11:01 2023 +0100

    UBUNTU: [Packaging] annotations: make sure to always drop undefined configs
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 00cc10f13f70d08f434cf3a99723736f3dc1aa13
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jan 26 11:58:35 2023 +0100

    UBUNTU: [Packaging] debian/rules: 1-maintainer.mk -- Use make's if-else
    
    Use make's built-in if-else conditional rather than the shell's so we
    can drop multi-line shell statements and make the code more readable.
    
    While at it, don't purge the 'build' directory at the end of the config
    operations. That's a directory used internally by the kernelconfig script
    which handles the cleanup.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 59d9bce33221bc1612c6b73625415b0742cb87fd
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jan 24 14:03:12 2023 +0100

    UBUNTU: [Packaging] debian/rules: Bring back 'editconfigs'
    
    With the switch to the new annotations-only mechanism and the new
    annotations script, the 'editconfigs' target was dropped for some
    reason. It's usefull so bring it back.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b97ad396acb9f2ce07183c74cad0f89d739d0b22
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 23 08:20:26 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9d4901c60046c5c10641858b7f7301d151ec36b4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 23 07:52:52 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2003682
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 05e0ae510e18f023d2a6ec34f767adf1e7c5ec1c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 23 07:50:21 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3a1451b132bc49eca8aae4f3e66f2c7144ee0ee0
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Jan 19 15:18:06 2023 +0000

    UBUNTU: [Packaging] Revoke and rotate to new signing key
    
    BugLink: https://bugs.launchpad.net/bugs/2002812
    
    Update revocations, which match the next Ubuntu shim v15.7
    revocations. Specifically - revoke certs that were previously
    protected with by-hash revocations, revoke lost/unused certificates.
    
    Kernels with this patch applied should be signed using ubuntu/4 pro/3
    core/2 signing streams.
    
    TPM PCR values and measurements will change when changing the signing
    key.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 31273be7e7bcc565983d8b12752e749f3388976d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 18 16:49:29 2023 +0100

    UBUNTU: [Packaging] annotations: add CONFIG_GCC_VERSION to the list of ignored configs
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 228475c418c894c99f8da91738500a9a80242634
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Jan 18 08:23:07 2023 +0100

    UBUNTU: [Packaging] scripts/misc/kernelconfig: Disable config checks for mainline builds
    
    For mainline builds, all checks need to be disabled since failures can't
    be tolerated/handled. For that, do_skip_checks is set to 'true' but the
    new kernelconfig script doesn't honor that. Fix it.
    
    While at it, add a header comment listing all supported environment
    variables.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0451e0192c20a2c38e9ccbea7981291cc3542d4b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 18 08:16:14 2023 +0100

    UBUNTU: SAUCE: Revert "PCI/MSI: Mask MSI-X vectors only on success"
    
    BugLink: https://bugs.launchpad.net/bugs/1956780
    
    This reverts commit 83dbf898a2d45289be875deb580e93050ba67529, that seems
    to cause boot issues on c4.large instance types on AWS.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit afb79e508d0f22191a2a4d1f90d6328d888350de
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 17 09:18:54 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7318523c80fb3a48819e2f564a39da7f8424220d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 17 09:14:32 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2003051
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit af2c34b99252fd6c402d6621d84b7f59dad5c039
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 17 08:52:07 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4628038f69fdc6ca43f70dbb21240186b53bd6f4
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 16 17:58:27 2023 +0100

    UBUNTU: [Packaging] scripts/misc/kernelconfig: Rewrite
    
    The kernelconfig script evolved over a long time and accumulated quite
    some cruft. With the switch to using annotations only, that got even
    worse so it's time for a major overhaul. Rather than sending tons of
    little patches, just rewrite the whole script and also ensure shellcheck
    is happy.
    
    No functional changes intended.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1cf616ad37430cf3209c2456b6893ec462828763
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 17 07:41:44 2023 +0100

    UBUNTU: [Packaging] add python3 as a build dependency
    
    python3 is now required to generate annotations, so make sure it's
    always available at build time.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c0686cf56f0d7efe8936a304d0b685065016020
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 16 16:01:41 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a5b2bca9fc2d4126445ac290fd26800b5cf1c3bb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 16 16:00:49 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2002939
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0f8a842edcd4073da70c36b43848ebf930219a15
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 16 10:13:53 2023 +0100

    UBUNTU: Rebase to v6.2-rc4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d7d025b02e9b2ad1b6ab49d9c6d00170a7a3024e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 16 10:12:39 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e1de8884dc067778ae408209e921e2aec9c1d5df
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jan 16 09:16:25 2023 +0100

    UBUNTU: [Config] update annotations after rebase to v6.2-rc4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 13c9db483f83c8856daaae726a46813d3d94ad26
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Jan 13 10:21:33 2023 +0100

    UBUNTU: [Packaging] debian/rules: Add missing 'do_<foo>' variables to 'printenv'
    
    Add all missing 'do_<foo>' variables to the output of the 'printenv'
    target.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2b52134d0b73328f6e87aab49ea6400853097c1b
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jan 10 17:25:53 2023 +0100

    UBUNTU: [Packaging] debian/rules: Clean up 'printenv' target output
    
    The output of the 'printenv' target is misaligned and somewhat in random
    order. Fix the alignment and group the variables by 'type' and put the
    flag variables at the end.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7a808f8822363ea07f3567e2c3a54a5047a2388a
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jan 10 17:10:31 2023 +0100

    UBUNTU: [Packaging] debian/rules: Clean up 'help' target output
    
    The output of the 'help' target is misaligned and - in my opinion - too
    sparse. Fix that.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9afef9c90f1f580d0f0dbfc72f85420abfd8c8ec
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jan 10 17:02:52 2023 +0100

    UBUNTU: [Packaging] debian/rules: Mark PHONY targets individually
    
    Mark all PHONY targets individually in rules.d/1-maintainer.mk rather
    than listing them on a single line. This makes it easier to spot missing
    PHONY markers and also matches the other rules files.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit aa3316ce2e899e607778f6e03e853f726ed05e69
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jan 10 16:56:33 2023 +0100

    UBUNTU: [Packaging] debian/rules: Remove unused target 'diffupstream'
    
    The maintainer make target 'diffupstream' is old/obsolete/unused, so
    remove it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e77127542a943876874ab9fa724afb6ac5e40123
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jan 12 09:22:53 2023 +0100

    UBUNTU: [Packaging] debian/rules: Remove unnecessary 'lockme_<foo>' variables
    
    The variables 'lockme_cmd' and 'lockme_file' are no longer needed
    elsewhere so remove them.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c696a484514a2ef7e53c6198d3b34a5937a17e5b
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jan 12 13:12:57 2023 +0100

    UBUNTU: [Packaging] debian/rules: Remove debug package install directory earlier
    
    Remove the debug package install directory immediately after the
    package has been built.
    
    Note: We do this just to prevent potential out-of-disk-space problems
    on the builders.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 704cb6fc137b2c548898c8991162ca381235336b
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jan 12 09:01:06 2023 +0100

    UBUNTU: [Packaging] debian/rules: Fix PPA debug package builds
    
    Build PPAs have a configuration option 'Build debug symbols'. Currently,
    if we build in a PPA that has this option disabled, we still build
    the debug packages but we remove them from debian/files so they don't
    get published. That seems wrong, we shouldn't even build the packages.
    
    The LP build system adds the option 'noautodgbsym' to the env variable
    DEB_BUILD_OPTIONS in such a case [1]. Use that to disable debug package
    builds.
    
    While at it, clean up the mangling of debian/files and remove logic
    that was added in 2010 to support future LP buildd features that never
    materialized [2].
    
    [1] https://bugs.launchpage.net/bugs/1623256
    [2] https://git.launchpad.net/~ubuntu-kernel/ubuntu/+source/linux/+git/lucid/commit/?id=b56658a9b08b5114d973403fda3cb6216123ace6
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 83f670b10148aefc23da2bfc4f8cbef741223ad4
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Jan 12 08:40:40 2023 +0100

    UBUNTU: [Packaging] debian/rules: Rename 'full_build' to 'do_full_build'
    
    Flag variables (that can take true/false values and drive different build
    behaviors) are named 'do_<foo>'. Rename 'full_build' to follow that
    convention.
    
    While at it, clarify the comment.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f9903f5d4e7545b51406991793cbed96df2d0bf1
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Jan 11 10:09:36 2023 +0100

    UBUNTU: [Packaging] debian/rules: Rename 'skip_checks' to 'do_skip_checks'
    
    Flag variables (that can take true/false values and drive different build
    behaviors) are named 'do_<foo>'. Rename 'skip_checks' to follow that
    convention.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c1456705dd8d77addb47da495f781e7744feb5e
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 9 16:08:56 2023 +0100

    UBUNTU: [Packaging] debian/rules: Rename 'skip_dbg' to 'do_dbgsym_package'
    
    Rename the variable skipdbg' to 'do_dbgsym_package' to match the naming
    convention of the 'do_<foo>' variables, since that is what it really does.
    Obvioulsy inverse the logic.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2e5e63135049704d54f1b48adc7314f2e8b2e5d9
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 9 15:59:35 2023 +0100

    UBUNTU: [Packaging] checks/module-signature-check: Add 'skip_checks' argument
    
    Add an optional 'skip_checks' argument to match the other checker scripts.
    This is used for mainline builds to not fail a build even if the checker
    script finds problems.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9532b18cac385c9f37fc1a89c12733971bf7dee6
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 9 15:37:58 2023 +0100

    UBUNTU: [Packaging] checks/retpoline-check: Make 'skipretpoline' argument optional
    
    Make the 'skipretpoline' argument optional and also more robust to match
    the other checker scripts.
    
    While at it, drop the invalid/unused 5th argument from the call site in
    the rules file.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 07fa07aa498a85b20f6811f68ba2e74c96c3eabf
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 9 15:21:49 2023 +0100

    UBUNTU: [Packaging] debian/rules: Replace skip<foo> variables with skip_checks
    
    There are different skip<foo> variables to disable individual ABI checks
    but they're all set together and only for mainline builds so replace them
    with the single variable skip_checks.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4b3357e85ce5ffa88027ac4960f9be5c2711f6f5
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 9 14:59:07 2023 +0100

    UBUNTU: [Packaging] debian/rules: Drop NOKERNLOG and PRINTSHAS env variables
    
    The env variables NOKERNLOG and PRINTSHAS were introduced in 2007 for
    some special case and to retain old behavior when generating the
    changelog. That hasn't been used in ages and git-ubuntu-log doesn't
    even support it anymore since 2016 so drop it all.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 30b573cfc04fde70907bc10a1e89428afeb25238
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Jan 9 14:44:10 2023 +0100

    UBUNTU: [Packaging] debian/rules: Drop AUTOBUILD
    
    AUTOBUILD is a Ben Collins mechanism introduced in 2007 for daily
    kernel builds on internal builders. It hasn't been used in ages so
    drop it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 97f4653547566a7c496f3aa90b1cc794df03a3fc
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Wed Jan 11 09:08:36 2023 +0900

    UBUNTU: SAUCE: (no-up) do not remove debian directory by 'make mrproper'
    
    If you use only remote build servers such as launchpad, cbd, etc.
    you may not care about this, but if you run 'make mrproper', the
    debian directory is entirely removed because it is a generated
    directory for the upstream kernel.
    
    I do not want to lose the debian directory by accident when I am
    debugging something on my local machine.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2712952f6fc67ceabc54103101bba37371ce82e3
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Thu Jan 12 22:47:27 2023 +0900

    UBUNTU: [Packaging] Fix module-check error when modules are compressed
    
    Some parts in the packaging scripts are written based on the assumption
    that module file names always end with the .ko suffix.
    
    The module suffix might be .ko.gz, .ko.xz, or .ko.zst if module
    compression is enabled.
    
    If CONFIG_MODULE_COMPRESS_GZIP/XZ/ZSTD is enabled, the module-check
    fails with a lot of "MISS" because currently only files with *.ko
    suffix are picked up.
    
    Ubuntu kernels do not enable module compression by default, but users
    may tweak CONFIG options when they build their custom kernel.
    
    Modules are compressed in some distributions, for example in Fedora,
    modules are *.ko.xz.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Ack-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3f14d3e16926cab9b28e93a69fbfe561698243a9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 12 17:07:09 2023 +0100

    UBUNTU: [Config] enable EFI handover protocol
    
    GRUB may include some downstream patches that may rely on the handover
    protocol, so enable it to make sure that everything is still bootable
    using GRUB with EFI.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dc03594ff026d455abf1a23b887af57e0cc77609
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Tue Jan 10 16:45:01 2023 +0900

    UBUNTU: SAUCE: (no-up) re-add ubuntu/ directory
    
    In the previous Kinetic release, ubuntu/ was added in the top Makefile:
    
      drivers-y       := drivers/ sound/ ubuntu/
    
    Upstream commit 5750121ae738 ("kbuild: list sub-directories in ./Kbuild")
    changed how the top-level directories are listed.
    
    It looks like ubuntu/ was lost in the process of rebasing.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ea2946d046e3e9e1f5f2986b8a4d11ff071413cd
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Tue Jan 10 17:18:31 2023 +0900

    UBUNTU: SAUCE: (no-up) Remove obj- += foo.o hack
    
    This is a hack used in the old days. Upstream Kernel stopped doing
    this. Refer to:
    
     f7adc3124da0 ("kbuild: create built-in.o automatically if parent directory wants it")
     bf070bb0e6c6 ("kbuild: remove all dummy assignments to obj-")
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 913c6f59889838ad110e9dc05a32f315ad33f9ac
Author: Timo Aaltonen <timo.aaltonen@canonical.com>
Date:   Thu Jan 5 16:21:46 2023 +0200

    UBUNTU: [Config] Enable CONFIG_HSA_AMD_P2P
    
    BugLink: https://bugs.launchpad.net/bugs/1987394
    
    Enable for same architectures as HSA_AMD.
    
    v2: add a ref to the lp bug
    
    Signed-off-by: Timo Aaltonen <timo.aaltonen@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b12b3ed7c62985b06a96be2d2c3c06de9d912d3d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 5 09:19:56 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 32a8e10b8188624140f0fd36fc2ca98b2013bf75
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 5 09:19:05 2023 +0100

    UBUNTU: [Config] update toolchain version in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ea5172d599d47253bc35e31d34823e8135f7c441
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 5 09:14:53 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2001892
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6a177002ee83feadeceb11f1378550985fe99dff
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jan 5 09:10:10 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d02fb9945d33b226a1460986a0996309320ee65a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 4 12:08:32 2023 +0100

    UBUNTU: Ubuntu-unstable-6.2.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit afd512c6ebeb98f1ad22edd554d26eae5cc460ec
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 4 11:17:21 2023 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2000904
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 24a78baafbfeae05b8879edcbb16371ef0895c80
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 3 10:13:25 2023 +0100

    UBUNTU: [Config] update annotations after rebase to 6.2-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 80d34793736afd730397a1caca1a2a901883d641
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 4 11:04:17 2023 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dcbd7a0989fff3342434dd0bdd9242e80df41905
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 4 11:04:01 2023 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit aba291012ba96fe295b4db389c805319cbd57029
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sun Jan 1 10:17:00 2023 +0100

    UBUNTU: [Packaging] rename package to linux-unstable
    
    Resync lunar:linux to lunar:linux-unstable and prepare for 6.2.
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 43eca617f4cadafb68aa0efd266f99b3a3e66a68
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 4 10:39:30 2023 +0100

    UBUNTU: [Packaging] temporarily disable zfs dkms
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ea57d726fc08ad9ebb907d52cf58d478450020e0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jan 4 11:45:03 2023 +0100

    UBUNTU: [Packaging] abi-check: ignore failures when abi check is skipped
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 93592077df749bae5e6e2e7506f29c8673311dcc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jan 3 10:12:44 2023 +0100

    UBUNTU: [Packaging] annotations: remove configs that are undefined across all arches/flavours
    
    Sometimes certain config options are removed in new kernels, so when
    annotations is updated these options result to be undefined across all
    architectures and flavours, in this case it's much more clean to simply
    drop them from annotations (considering that the kernel doesn't support
    them anymore).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b680888de6d9d066a32b292f19783b1fdb6db704
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 30 11:23:16 2022 +0100

    UBUNTU: Ubuntu-6.1.0-11.11
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e8c3877dad800c6758affc04bbe86efecd16924f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 30 11:20:38 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/2000704
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 55e900e7bb6b913355f50340edab36a042de9e3e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 30 11:18:54 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 820e30f8c28582b4aed35846fdb789e424e16432
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 30 11:18:10 2022 +0100

    UBUNTU: [Packaging] update Ubuntu.md
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e9600defff830c097d103486bebcf6ab5143f9b3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 30 11:17:06 2022 +0100

    UBUNTU: [Packaging] update getabis
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 59f907b5eac9a405dac85c628c079cacb05c6523
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 30 11:14:05 2022 +0100

    UBUNTU: [Packaging] update helper scripts
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 64af9f032546701e9de43e97e5fc36b79bbe1cbe
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Nov 17 16:38:17 2022 +0000

    UBUNTU: [Packaging] Expose built-in trusted and revoked certificates
    
    BugLink: https://bugs.launchpad.net/bugs/1996892
    
    Kernels have a set of builtin trusted and revoked certificates as a
    bundle.
    
    It is not very easy to access them, one needs to either download linux
    kernel package source code; or boot the kernel to look up builtin hashes;
    and then find certificates externally.
    
    It would be more convenient for inspection to expose these in the
    buildinfo package, which already exposes auxiliary kernel information.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d778032fc95798da8172a484c86514030e55c429
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 14:59:23 2022 +0100

    UBUNTU: [Packaging] old-kernelconfig: update config-check path
    
    Fixes: a2e8127f516e ("UBUNTU: [Packaging] Move checker scripts to debian/scripts/checks")
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 28bde6c222205b7f1843cdd7a7547c007875a032
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 14:37:27 2022 +0100

    UBUNTU: debian/dkms-versions -- re-enable zfs
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 66240a79f57e94880f9a5e34ba87f9a6f534395d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 14:03:38 2022 +0100

    UBUNTU: SAUCE: input: i8042: fix section mismatch warning
    
    Fix the following warning introduced by an old sauce patch:
    
      WARNING: modpost: vmlinux.o: section mismatch in reference: i8042_probe (section: .text) -> i8042_quirks (section: .init.rodata)
    
    Fixes: ec05d1e5ffd7 ("UBUNTU: SAUCE: Input: i8042 - add dmi quirk")
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a4bf1b98dbf86e542d2a0d220a34ce1daf59bf08
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Mon Oct 17 11:42:00 2022 +0200

    UBUNTU: SAUCE: riscv: dts: microchip: Disable PCIe on the Icicle Kit
    
    BugLink: https://bugs.launchpad.net/bugs/1993148
    
    After discussing with Microchip we agreed that unfortunately PCIe
    support for the PolarFire-SoC Icicle Kit 2022.10 reference design is not
    yet ready for Kinetic. So don't enable the PCIe node in the device tree
    to make sure it doesn't cause trouble and avoid nasty error messages at
    boot.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 25fbe6525b00a5175ec1d2343a3dccff49ab0900
Author: zouxiaoh <xiaohong.zou@intel.com>
Date:   Wed Feb 23 10:21:25 2022 +0800

    UBUNTU: SAUCE: iommu: intel-ipu: use IOMMU passthrough mode for Intel IPUs on Raptor Lake
    
    BugLink: https://bugs.launchpad.net/bugs/1989041
    
    Intel IPU(Image Processing Unit) has its own (IO)MMU hardware,
    The IPU driver allocates its own page table that is not mapped
    via the DMA, and thus the Intel IOMMU driver blocks access giving
    this error: DMAR: DRHD: handling fault status reg 3 DMAR:
    [DMA Read] Request device [00:05.0] PASID ffffffff
    fault addr 76406000 [fault reason 06] PTE Read access is not set
    As IPU is not an external facing device which is not risky, so use
    IOMMU passthrough mode for Intel IPUs.
    
    (backported from https://github.com/intel/ipu6-drivers/blob/89c6b99e4bec00a04b53f37cd8c3c01ce824a4ab/patch/IOMMU-passthrough-for-intel-ipu.diff)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f0ba482060573cb6aeccc664c9b5855f9c5f42f0
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Sep 9 11:55:34 2022 +0100

    UBUNTU: [Config] Enable EXPOLINE_EXTERN on s390x
    
    BugLink: https://bugs.launchpad.net/bugs/1639924
    
    Enable EXPOLINE_EXTERN and package expoline.o into arch-specific
    headers.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4852fbed9b7f6814920575fb041f44dc2c75f256
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Thu Jul 22 19:19:33 2021 +0800

    UBUNTU: SAUCE: Bluetooth: btusb: Add support for Foxconn Mediatek Chip
    
    BugLink: https://bugs.launchpad.net/bugs/1937004
    
    Add support for another Foxconn / Hon Hai device with MT7921 chip.
    
    T:  Bus=05 Lev=01 Prnt=01 Port=03 Cnt=02 Dev#=  3 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=0489 ProdID=e0cd Rev= 1.00
    S:  Manufacturer=MediaTek Inc.
    S:  Product=Wireless_Device
    S:  SerialNumber=000000000
    C:* #Ifs= 3 Cfg#= 1 Atr=e0 MxPwr=100mA
    A:  FirstIf#= 0 IfCount= 3 Cls=e0(wlcon) Sub=01 Prot=01
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=125us
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    I:  If#= 1 Alt= 6 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  63 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  63 Ivl=1ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=(none)
    E:  Ad=8a(I) Atr=03(Int.) MxPS=  64 Ivl=125us
    E:  Ad=0a(O) Atr=03(Int.) MxPS=  64 Ivl=125us
    I:  If#= 2 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=(none)
    E:  Ad=8a(I) Atr=03(Int.) MxPS= 512 Ivl=125us
    E:  Ad=0a(O) Atr=03(Int.) MxPS= 512 Ivl=125us
    
    Link: https://lore.kernel.org/lkml/20210708131214.695458-1-aaron.ma@canonical.com/
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 757be91205a7f276d5dbd1c5419e5b8959d10260
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Dec 15 09:11:51 2022 +0000

    UBUNTU: [Packaging] Set explicit CC in the headers package
    
    BugLink: https://bugs.launchpad.net/bugs/1999750
    
    Currently Ubuntu Linux kernel header packages use stock Makefile as
    shipped by upstream kernel. During linux kernel package build however
    HOSTCC and CC are typically overridden to use explicit complier
    version $(DEB_HOST_GNU_TYPE)-gcc-12. This can lead to dkms module
    build failures as despite all efforts to reuse matching gcc version
    out of .config, various shell scripts / build systems / makefiles do
    not pass the CC variable as a make variable to the end make call that
    is used to build dkms modules. To avoid this, hardcode the correct
    compiler in the linux headers package shipped Makefile. This is
    similar to the Makefile includes that debian ships, albeit with less
    indirections.
    
    Tested by applying this patch to the hwe-5.19 kernel, rebuilding it,
    and testing that dkms module building is using expected compilers now.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 35c70b7530e31494efa1184ca503594234ea2c38
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 09:36:40 2022 +0100

    UBUNTU: [Config] disable EFI_ZBOOT
    
    Our build and signing rules are expecting to find a kernel image in the
    non-EFI format, so make sure EFI_ZBOOT is disabled.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 92d1ff5ed5a477aebcfb555d5fd86b43de48ef6c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 09:28:30 2022 +0100

    UBUNTU: [Config] annotations: compact annotations file
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 92ef1ebdb8c0e664dfc723d6b951370a2423cee8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 09:03:22 2022 +0100

    UBUNTU: [Packaging] annotations: unify same rule across all flavour within the same arch
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b0712d8ece292f19bd3e1d690849be14e288d712
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 15 08:50:34 2022 +0100

    UBUNTU: [Packaging] kernelconfig: always complete all config checks
    
    Do not exit immediately at the first config-check failure, make sure all
    arches and flavour are checked and then reports all the failures.
    
    Also clean up a little bit the genconfigs code.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bc64df149d8b03e59573a229852c2873ea2a7493
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 22:14:08 2022 +0100

    UBUNTU: Ubuntu-6.1.0-10.10
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d65af185542db71c99438fc0555ae45e2d5eaa6b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 21:41:44 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1999569
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 440677f4c21e3bd4387dfbcba401a0f4693aae2b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 21:31:08 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 66b39161623b86c5f3be4f91e6bc4a381e55ea97
Author: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
Date:   Mon Dec 12 16:48:56 2022 +0800

    UBUNTU: [Config] enable CONFIG_SND_SOC_RT1318_SDW
    
    BugLink: https://bugs.launchpad.net/bugs/1997944
    
    Signed-off-by: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2bce8725eefa7b1e535cfdedd2527ebf3391297a
Author: Luke Nowakowski-Krijger <luke.nowakowskikrijger@canonical.com>
Date:   Thu Dec 8 08:59:35 2022 -0800

    UBUNTU: [Packaging] Reintroduce VM DRM drivers into modules
    
    BugLink: https://bugs.launchpad.net/bugs/1996112
    
    There was the change
    
        UBUNTU: [Packaging] Move VM DRM drivers into modules
    
        https://bugs.launchpad.net/bugs/1960633
    
        We already have vboxvideo included in the linux-modules package which is
        also included when using the linux-virtual meta. But there is a couple
        of other DRM drivers which could be used by various VM installations
        which run a desktop:
    
        - bochs-drm (? Qemu)
        - cirrus (old standard when it comes to emulated graphics)
        - drm_xen_front (Xen)
        - virtio-gpu (KVM)
        - vmwgfx (VMWare)
    
        All of those drivers direct dependencies are already part of
        linux-modules.
    
    that was introduced in jammy but somehow did not make it to kinetic and
    upwards. This leads to a regression on upgrading where these modules don't
    exist if the user does not have linux-modules-extra installed.
    
    Fix this by reintroducing the modules into the generic.inclusion-list to
    include them in linux-modules.
    
    Signed-off-by: Luke Nowakowski-Krijger <luke.nowakowskikrijger@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e71a503704bffa525e6f8ad23375610c5b45f5ee
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 16:45:59 2022 +0100

    UBUNTU: Ubuntu-6.1.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a2f87e33c7c329ab10ff18926ee0ae88d01c2c20
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 16:44:45 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1999534
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cb8e596dd824750317431799c9516d7b0a1de0a7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 16:28:55 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3d0017e24d7739887123c41dc881dae6162bbc2d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 13 16:27:30 2022 +0100

    UBUNTU: [Packaging] annotations: do not add constraints on toolchain versions
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7ca5a6f983335b900c7bb9d2a9b218a68cdfdde7
Author: Stefan Bader <stefan.bader@canonical.com>
Date:   Tue Dec 13 15:35:38 2022 +0100

    UBUNTU: [DEP-8] Fix regression suite to run on lowlatency
    
    BugLink: https://bugs.launchpad.net/bugs/1999528
    
    The debian/tests/ubuntu-regression-suite script contains a list of
    kernel source to be considered running the regression suite. Now
    that lowlatency is its own source package, we have to add it to
    that list.
    Since all derivatives share the same debian/tests, I am submitting the
    change to the parent kernels.
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 83b8b1aedd1eb1d3cb5219dbd640390177cc2239
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 17:05:59 2022 +0100

    UBUNTU: Ubuntu-6.1.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 72274045f55d35a023bfcb8d9d8a6f1101066055
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 17:01:57 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1999411
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e9b81ebf24402a60a2c51eaa1c54b0db30bb0a95
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 16:58:41 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 934fedb5eb092c93e5ae20688aed148374e06bd2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 16:15:39 2022 +0100

    UBUNTU: [Packaging] annotations: do not enforce toolchain versions
    
    Allow to use different versions of gcc, as and ld in the build ppa,
    respect to the version used to produce the kernel packages.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7bcc8316f227577a225b2603eea8363b9afed2bb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 10:05:03 2022 +0100

    UBUNTU: Ubuntu-6.1.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 80ba4d27e4999739810221371426afae82e96702
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 10:01:13 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1999373
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9e7612460db0e8ec01296d267e3e22181444f3b7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 09:58:38 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b432d777c2b0277b522f66437631cf10bccc2754
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 09:58:01 2022 +0100

    UBUNTU: Rebase to v6.1
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8bb0297609072935da5951f3759005c7c57bc7df
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 09:45:23 2022 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8044d04cb176834633716a2440a98b94bfe815e0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 12 09:43:05 2022 +0100

    UBUNTU: [Packaging] rename package to linux
    
    Copy lunar:linux-unstable to lunar:linux.
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit de68c0d70f60ba84d970c371795c4ed307c08982
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 9 16:38:48 2022 +0100

    UBUNTU: [Packaging] annotations: do not hijack CONFIGS/* to update annotations
    
    Files in CONFIGS/* have been always considered as "output" for
    genconfigs. The annotations code changed those to be used both as output
    (by genconfigs) and input (by updateconfigs), potentially breaking old
    behaviors or old scripts that rely on the fact that CONFIGS/* files are
    output-only.
    
    Move temporary configs generated during updateconfigs to a proper
    temporary directory.
    
    Also drop config-check.log, because there's not really much value to
    provide this file, since the changed config values can be easily
    reviewed in annotations simply by running a git diff.
    
    This exactly restores the previous behavior.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2f254426e446c8e777a08030344418283bc4f889
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 9 16:14:55 2022 +0100

    UBUNTU: [Packaging] kernelconfig: drop listnewconfigs
    
    Now that everything is managed in annotations there is not much value to
    provide a listnewconfigs command, the list of new config options can be
    seen easily by looking at annotations after running updateconfigs and if
    really needed new config options can easily generated by running
    `make listnewconfig` directly.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a74d8061a423f62f8718b377ecbfca231f26fdc5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 9 08:41:46 2022 +0100

    UBUNTU: [Packaging] automatically apply changes to annotations and drop importconfigs
    
    Having to run importconfigs to resync the changes from the configs into
    annotations is slightly changing the previous workflow (since we're
    implicitly adding an "importconfigs" step, rather than fixing/reviewing
    the changes and modifying annotations manually).
    
    We can make the whole process look a lot similar as before simply by
    running the 'importconfigs' phase automatically after updateconfigs.
    
    In this way we would still have the failed checks reported in output,
    but we would automatically have all the changes applied to annotations
    already, so they can be reviewed with a simple git diff, inspected and
    adjusted if needed.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 24b855285a444e9ede0306d93dcdf0366084f3ad
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 9 08:48:26 2022 +0100

    UBUNTU: [Config] clean up deprecated notes in annotations
    
    Get rid of old notes in annotations that are related to config options
    that do not exist anymore.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6c13e20228a676b3c1d4e5699f805efcd4cedb60
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:19 2022 +0900

    UBUNTU: [Packaging] Merge install commands
    
    You can install multiple source files with a single 'install' command.
    
    Use $(addprefix ...) to merge the common directory part.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 47861ff01ca547204c391d4b422b68fc1326c3ff
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:18 2022 +0900

    UBUNTU: [Packaging] Remove unused INSTALL_FW_PATH
    
    Upstream commit 5620a0d1aacd ("firmware: delete in-kernel firmware")
    removed the in-tree firmware support.
    
    This is meaningless since Linux 4.14.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ba6901850e209418ecf14d2af734b7e80f348783
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:17 2022 +0900

    UBUNTU: [Packaging] simplify abinum and uploadnum definitions
    
    I do not say that I fully understood this complex regex, but this
    commit splits the debian revision at the first period - the first
    half as abinum and the second as uploadnum.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a1eb7648d3e52f1d2aa1effa5e2e3986823f2d65
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:15 2022 +0900

    UBUNTU: [Packaging] use parralel builds in more places
    
    Kbuild is designed to work correctly with parallel builds.
    For Kconfig stage, header installation, or whatever. I do not
    see any reason why these must run in a single thread.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5e95d9ca58b82ff6bf6a17673026be60ee0d652d
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:14 2022 +0900

    UBUNTU: [Packaging] use olddefconfig in stamp-prepare-tree
    
    You do not need to invoke syncconfig here because Kbuild takes care of
    it before staring the build. prepare and scripts are unneeded for the
    same reason.
    
    All the use of 'syncconfig' in debian/rules is suspicous because
    syncconfig may stop to ask for user's preference when it finds a
    new config option. There is nobody to answer the Kconfig's question
    when the package is being built in auto-builders such as cbd, launchpad.
    
    Presumably what you want here is olddefconfig, which is a non-interactive
    command to set any config option to its default.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 70a9a2fcf81dabbbf5c5282fb178c2804ba22d41
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:13 2022 +0900

    UBUNTU: [Packaging] Remove meaningless code in install-arch-headers
    
    install-arch-headers pointlessly constructs the .config before
    running 'make headers_install'.
    
    The kernel promises the stable interface to userspace; this is
    backward-compatible and of course, independent of the kernel
    configuration.
    
    Kbuild does not include include/config/auto.conf for 'make headers*'
    targets in the first place. [1]
    
    [1]: https://github.com/torvalds/linux/blob/v6.0/Makefile#L271
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 57d3a809bb8ec55f6f8fa8ef060a0ff0469426b6
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:12 2022 +0900

    UBUNTU: [Packaging] simplify custom_override
    
    You do not need to invoke the shell for if/else choice.
    
    You can do it by using the $(if ...) built-in function.
    
      $(if $($(1)_$(2)),$($(1)_$(2)),$($(1)))
    
    GNU Make >= 3.81 supports $(or ...), so the code can be even simpler:
    
      $(or $($(1)_$(2)),$($(1)))
    
    No functional change is intended.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e5da46eb02d06573964f6b65776b1bb42537d41f
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:11 2022 +0900

    UBUNTU: [Packaging] simplify revision/release
    
    Use "dpkg-parsepackage -S version" to get the version, and use Make's
    built-in functions to split it into the upsteam-version and the
    debian revision. This is more readable and works more efficiently.
    
    BTW, GNU Make >= 3.81 supports $(lastword x) as a shorthand of
    $(word $(words x), x).
    
    Drop "revisions" and "prev_revisions", which are unused anywhere
    except "printenv".
    
    I did not get the use of "?=" for revision and prev_revison, but
    I am keeping them in case I am missing something here.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8a68527e6df904f267e83f14274d24597b9a813c
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:10 2022 +0900

    UBUNTU: [Packaging] use dpkg-parsechangelog to get package name and series
    
    dpkg-parsechangelog is more readable than the complex regex matching.
    
    Also, use the simple variables (:=) instead of recursive variables (=)
    since these are used over and over again. Invoking the shell every time
    is not efficient.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit eec04dd012a986683b7fc11a165488c6ab197739
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:09 2022 +0900

    UBUNTU: [Packaging] add -rR MAKEFLAGS to clear implicit rules
    
    Cancel implicit rules, otherwise GNU Make will try to examine a lot of
    internal rules to update makefiles.
    
    Add -rR, as the Kbuild does. [1]
    
    If you want to see what is happening behind the scene:
    
        $ dpkg-buildpackage --rules-file="debian/rules -d"
    
    [Before]
    
      Updating makefiles....
       Considering target file 'debian/rules.d/4-checks.mk'.
        Looking for an implicit rule for 'debian/rules.d/4-checks.mk'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.o'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.c'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.cc'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.C'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.cpp'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.p'.
        Trying pattern rule with stem '4-checks.mk'.
        Trying implicit prerequisite 'debian/rules.d/4-checks.mk.f'.
    
          [  snip a tons of examinations for implicit rules  ]
    
        No implicit rule found for 'debian/rules.d/4-checks.mk'.
        Finished prerequisites of target file 'debian/rules.d/4-checks.mk'.
       No need to remake target 'debian/rules.d/4-checks.mk'.
    
    [After]
    
      Updating makefiles....
       Considering target file 'debian/rules.d/4-checks.mk'.
        Looking for an implicit rule for 'debian/rules.d/4-checks.mk'.
        No implicit rule found for 'debian/rules.d/4-checks.mk'.
        Finished prerequisites of target file 'debian/rules.d/4-checks.mk'.
    
    [1]: https://github.com/torvalds/linux/blob/v6.0/Makefile#L41
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36211bb372c3855fdc985746dc7b79ff1634f45e
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:08 2022 +0900

    UBUNTU: [Packaging] Make the compiler for fix-filenames explicit
    
    The rule for debian/scripts/fix-filenames:
    
            $(CC) -o $@ $^
    
    is fragile because 'CC' is not set anywhere in our Makefiles.
    
    We rely on GNU Make using 'CC' in its internal database. This assumption
    would break if the -R option is given. In this case, the line above
    would expand to:
    
            -o $@ $^
    
    What is worse, GNU Make ignores errors if the recipe line starts with '-'.
    (See the note below)
    
    Then, GNU Make would proceed without building fix-filenames.
    
      $ debian/rules -R debian/scripts/fix-filenames
      o debian/scripts/fix-filenames debian/scripts/fix-filenames.c
      /bin/bash: line 1: o: command not found
      make: [debian/rules.d/2-binary-arch.mk:17: debian/scripts/fix-filenames] Error 127 (ignored)
    
    Make the compiler explicit, and change the posion of -o to make it even
    robust.
    
    [Note]
    
    Make manual "5.5 Errors in Recipes" [1] says:
    
      To ignore errors in a recipe line, write a ‘-’ at the beginning of the
      line’s text (after the initial tab). The ‘-’ is discarded before the
      line is passed to the shell for execution.
    
    [1]: https://www.gnu.org/software/make/manual/make.html#Errors
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f598dcdb6c2925a91ffa41bffdf413f5512be6bb
Author: Masahiro Yamada <masahiro.yamada@canonical.com>
Date:   Mon Dec 5 17:56:07 2022 +0900

    UBUNTU: [Packaging] mark phony targets
    
    I added the .PHONY before each of the target rules.
    
    If we add multiple phony targets to .PHONY in a single line,
    as in debian/rules.d/0-common-vars.mk, it is difficult to parse
    which target is missing the .PHONY marker.
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 78021e8a723045442a44f9d726a6ee68846efe1a
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Dec 8 08:17:28 2022 +0100

    UBUNTU: [Packaging] Move checker scripts to debian/scripts/checks
    
    Tidy up the scripts directory and move all checker scripts to a new
    subdirectory.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f5b739c7d52fb8bcd3a6dc52e772160f5e48a693
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Dec 8 08:17:27 2022 +0100

    UBUNTU: [Packaging] Clean up debian/scripts/module-check
    
    Various cleanups to match the new abi-check script:
     - Comment header
     - Skipmodule argument parsing
     - Script output
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 11ffed1e0d76aaec36666133977ea32288f86e65
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Dec 8 08:17:26 2022 +0100

    UBUNTU: [Packaging] Simplify debian/scripts/module-check
    
    Split the reading of the old modules and the checking of missing/new
    modules into two separate blocks. This makes the code simpler and
    easier to understand and also aligns it with similar code in the new
    abi-check script.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2851ed37750d78ddc7053d0382b1c73996cfa4d3
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Thu Dec 8 08:17:25 2022 +0100

    UBUNTU: [Packaging] Rewrite debian/scripts/abi-check in Python
    
    Rewrite the ABI checker script in Python. While at it, drop the check
    for symbol hash changes since this has been ignored/disabled for ages
    now.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 440c2558b620be888777d3a96bc6246384f61341
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Dec 7 07:08:08 2022 +0100

    UBUNTU: [Packaging] Remove obsolete etc/kernelconfig
    
    etc/kernelconfig is no longer needed with the new annotation scheme so
    drop it. Check for its existence in the kernelconfig script until all
    derivatives have migrated to the new scheme at which point this can be
    dropped as well.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7872ff6f804ea422f0b6d677ba7885c6d03dad86
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Dec 6 08:57:49 2022 +0100

    UBUNTU: [Packaging] annotations: add missing CONFIG_ prefix in main()
    
    This is common for do_query(), do_note(), do_write() (and whatever
    command might be added in the future).
    
    Move it to main().
    
    Signed-off-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e9304411ad0e60223d14836365b87efb6147acd4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 18:08:33 2022 +0100

    UBUNTU: [Packaging] annotations: introduce --source
    
    Add an option to jump to the definition of a specific config option in
    the kernel source code (this requires a prior `make tags` to work).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 34f4bc980c67d36b36ce5c6138c8596f3e805298
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 17:50:24 2022 +0100

    UBUNTU: [Packaging] annotations: add an option to enable config autocompletion in bash
    
    Type `source <(annotations --autocomplete)` to enable auto-completion of
    config options (without the CONFIG_ prefix) in bash when running
    annotations script commands.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a955e640888fc182433a45aae05ad18751dbfd0b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 16:38:46 2022 +0100

    UBUNTU: [Packaging] annotations: allow to specify --write and --note at the same time
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fcf2be6d1bdd244286eb0784e8cd1abafc963b89
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 16:08:43 2022 +0100

    UBUNTU: [Packaging] annotations: prevent python broken pipe errors
    
    Prevent broken pipe errors when showing output in pipe to other tools
    (less for example).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6497e9f38fe24464d18f3edbb74e07aa882f772e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 12:51:25 2022 +0100

    UBUNTU: [Packaging] annotations: prevent generating .pyc files on import
    
    We may end up adding these files to our git repos by mistake, so simply
    prevent generating them in advance.
    
    There's a tiny performance penalty with this change, because python
    needs to re-generate the bytecode on-the-fly every time the annotations
    script is called, but this overhead is absolutely negligible compared
    the rest of the kernel build time.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2bea5dc2f14d8f6dd90009fd2821a71583c4792b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 10:38:25 2022 +0100

    UBUNTU: [Packaging] kernelconfig: report arch and flavour in config-check log
    
    Explicitly report in the config-check log each arch and flavour that is
    processed.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f2df6ca302294b13ec9d6fbecafb631a09643fe1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 09:07:52 2022 +0100

    UBUNTU: [Packaging] annotations: catch syntax errors in annotations
    
    Trigger a syntax error when a policy or note rule is not properly
    closed.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ac91298460dedbecc69e508954036b104a01ed20
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 08:54:59 2022 +0100

    UBUNTU: [Packaging] annotations: properly support multiple levels of inclusion
    
    Moreover, do some refactoring to optimize parsing.
    
    Reported-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 46ff81a1d7bf819f16948c235b4150b530902a17
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 07:52:26 2022 +0100

    UBUNTU: [Packaging] annotations: clarify error message with --import
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4451de3cd44569acb20d38a1ae885cdf553ff27a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 07:41:53 2022 +0100

    UBUNTU: [Packaging] annotations: accept config options with or without CONFIG_ prefix
    
    Allow to specify config options with or without CONFIG_ prefix in the
    commands --write and --note, to be consistent with --query that already
    accepts both formats.
    
    Reported-by: Masahiro Yamada <masahiro.yamada@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d7fd5426bd98b4b62941bbdf76b3c72f1b4b85a9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 5 07:26:10 2022 +0100

    UBUNTU: [Packaging] annotations: properly merge configs with includes
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0ab043100cf1b06673b05f917158fa85845a2978
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sun Dec 4 14:13:10 2022 +0100

    UBUNTU: [Packaging] annotations: support flavour inheritance
    
    Allow to define flavour inheritance relationship in the annotations
    file, such as:
    
     # FLAVOUR_DEP: {'amd64-lowlatency': 'amd64-generic', 'arm64-lowlatency': 'arm64-generic', 'arm64-lowlatency-64k': 'arm64-lowlatency-64k'}
    
    In this case, for example, -lowlatency flavours inherits the config
    values from -generic (both for amd64 and arm64) and -lowlatency-64
    inherits the value from -generic-64k (only on arm64).
    
    This allows to strongly reduce the size of annotations and helps to
    read and review changes in annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0150aad67da73f78de807e4ec4bddfd0044965b2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 1 11:03:05 2022 +0100

    UBUNTU: [Packaging] annotations: allow to query using CONFIG_<option> or <option>
    
    Allow to use CONFIG_FOO or just FOO when querying config options in
    annotations.
    
    This can help to speed up config update/reviews simply by doing
    copy/paste from the console during an updateconfigs when checking values
    from master or other kernels doing queries with annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6392fce604d457f50c75ed9c675389816f6eb450
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 1 10:49:19 2022 +0100

    UBUNTU: [Packaging] annotations: assume --query as default command
    
    This allows to quickly query config options without having to specifcy
    "--query --config CONFIG", but just "--config CONFIG", for example:
    
      $ debian/scripts/misc/annotations -c CONFIG_DEBUG_INFO_BTF
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 50af9ecfd53480420f220d493edbce024ce11f62
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 1 10:47:27 2022 +0100

    UBUNTU: [Packaging] annotations: allow to set note to config options directly
    
    Allow to set a note to config options without changing their values.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0cc14502ba3ea4f40eb5cac3ef60ac35df67a913
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 29 09:59:58 2022 +0100

    UBUNTU: [Packaging] migrate-annotations: properly determine arches in derivatives
    
    Source debian.<kernel>/etc/kernelconfig instead of parsing it to
    properly determine the list of supported architectures (this can fix
    potential issues with derivatives).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 724a43f531d350b94d803de2cb07610b1e76f162
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 29 09:47:59 2022 +0100

    UBUNTU: [Packaging] migrateconfigs: ignore README.rst if it doesn't exist
    
    Derivatives don't have a README.rst in their debian.<kernel>/config/
    directory, so we shouldn't treat this as an error.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 708e12fa469c05ae74f2c7bf5c021529ab517573
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 29 09:01:13 2022 +0100

    UBUNTU: [Packaging] annotations: set and delete configs from command line
    
    Allow to set and delete config options from command line using the
    'annotations' script (instead of manually editing the annotations file).
    
    This also provides an interface to manage the annotations file from
    other scripts.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 99ce966e6301bcf20d00213d21b2452cad075f83
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 11:25:44 2022 +0100

    UBUNTU: Ubuntu-unstable-6.1.0-9.9
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b432d8dae9c4c8635a955238f233d27d360317e3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 11:24:47 2022 +0100

    UBUNTU: [Config] udpate annotations after rebase to v6.1-rc7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 65caa10bb4a6854409b76d4e89126325a632dbea
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 11:04:50 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1998078
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c4c7d02d3f917642b69079b6a8c48c1ee72a45e1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 09:25:38 2022 +0100

    UBUNTU: Rebase to v6.1-rc7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 54bf110f2081a86ae7ce995bddf1cade96080830
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 09:24:28 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 446318c265f0615abba6b85d88c406303ab02819
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Nov 24 08:08:13 2022 +0100

    UBUNTU: [Config] merge configs into annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 095a7d53b33529848f54570fd2411b2f1b3491f7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 11:21:06 2022 +0100

    UBUNTU: [Packaging] annotations: report failed config checks in alphabetic order
    
    This helps to review config failures across different architectures.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1360aa0e7283bd122ac24b0431b25cd554e77e74
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 28 10:23:12 2022 +0100

    UBUNTU: [Packaging] correctly propagate errors during updateconfigs
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3806415d5c67d71fc17e986238121fbc1dac5bfd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Nov 18 09:35:52 2022 +0100

    UBUNTU: [Packaging] provide migrateconfigs debian/rules target
    
    Provide debian/rules migrateconfigs to automatically migrate all configs
    into annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d699f46285c411e94233398182406beb469fa254
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Nov 18 09:20:30 2022 +0100

    UBUNTU: [Packaging] re-introduce previous kernelconfig as old-kernelconfig
    
    Re-introduce the previous kernelconfig script to generate configs (this
    is required for the automatic migration to annotations).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1b215676abdb578b180d79940725531de6116e84
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Nov 18 09:13:43 2022 +0100

    UBUNTU: [Packaging] introduce migrate-annotations
    
    Introduce a script to automatially migrate old configs into annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2df32a8f1b23cd1de3f8a05347ee896565b4e277
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Nov 18 12:03:22 2022 +0100

    UBUNTU: [Packaging] final-checks: support new annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1a234bea1a6a00ecb5675f37b6ef53dd90d5d3cd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Nov 18 11:46:39 2022 +0100

    UBUNTU: [Packaging] snap: support new annotations with snapcraft
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2e126f6b23a5a2276b37ca7d0bbea5155fecf543
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Nov 16 09:32:51 2022 +0100

    UBUNTU: [Packaging] kernelconfig: introduce importconfigs
    
    Introduce an option to automatically resync .config's into annotations.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6426698ae946c8dad7b6c7d3fcd0de03da782c8e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 15 13:17:00 2022 +0100

    UBUNTU: [Packaging] kernelconfig: provide listnewconfigs
    
    Provide a target to generate list of new config options in CONFIGS/new-*
    (this is useful after a rebase to determine only the subset of new
    config options that have been introduced).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e131fd6193c3d614a9a97b1d63ac55b5698d5113
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 15 11:22:12 2022 +0100

    UBUNTU: [Packaging] kernelconfig: always keep configs
    
    Do not delete the CONFIGS folder, now that we only have annotations it
    could be useful to compare the real configs with the information stored
    in the annotations file.
    
    Moreover, also save a log of the config-check and store it in the
    CONFIGS folder to help reviewing the failed config checks.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a2f49eab9b9372c28f2ee0449d45a37a3fb5f25e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Nov 15 08:54:54 2022 +0100

    UBUNTU: [Packaging] simplify kernelconfig
    
    Now that we rely on annotations we can safely drop old unused
    features/options from kernelconfig.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5665645df5754741675ae73d8f2d2d34e8f1b0d4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 14 13:26:53 2022 +0100

    UBUNTU: [Packaging] use annotations to generate initial configs check them
    
    Fix debian build scripts to use annotations to generate initial configs.
    
    Moreover, ignore the old config-check script, since the .config check
    can be done using the annotations script itself (config-check will be
    dropped later).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bb7fd7ee5fdbb715363047d81551eef94a223b8d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 14 11:35:43 2022 +0100

    UBUNTU: [Packaging] drop deprecated script tristate.sh
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8f6fb2df3db5da9c38c3d006471e172c6d6d802d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Nov 12 22:05:40 2022 +0100

    UBUNTU: [Packaging] kernelconfig: automatically generate configs from annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 96c121522175250d0359dbe8001c7471a57bf0cf
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Nov 24 07:47:52 2022 +0100

    UBUNTU: [Packaging] add a README.rst to document the new annotations schema
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b9c962905338805ebcb3582e791ea73879498671
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Nov 12 23:02:50 2022 +0100

    UBUNTU: [Packaging] introduce annotations script
    
    Add a script to manage annotations and .config.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5feb0881e2126ab0b0dac6fa4cdf8d69bae00a14
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Nov 18 15:08:42 2022 +0100

    UBUNTU: [Packaging] config-check: support annotations format 4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1515b674d71c41b5f7432b4e6127a2a84014122e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 14 12:36:40 2022 +0100

    UBUNTU: [Packaging] config-check: do not strictly enforce CONFIG_CC_VERSION_TEXT
    
    Do not check for CONFIG_CC_VERSION_TEXT to allow building the kernel
    with different versions of gcc (otherwise we need to always keep the
    build chroots in sync to run a test build).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit abff305963754779e65f31f80b2afb7afa758037
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Nov 12 15:34:26 2022 +0100

    UBUNTU: [Packaging] config-check: ignore values that are not defined in annotations
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 140b77735276bc399068f2d864b69de562df17e7
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Nov 23 09:21:15 2022 +0100

    UBUNTU: [Config] Set ARM64_ERRATUM_2077057=y
    
    This is the only arm64 erratum config that is disabled. There is no reason
    for that so enable it.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a699ce70334cebc954ed0bec3bbe360287e37d94
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 22 11:56:26 2022 +0100

    UBUNTU: Ubuntu-unstable-6.1.0-8.8
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f292044a82222245febb24f590125f7bbc9d9171
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 22 11:55:59 2022 +0100

    UBUNTU: [Config] update configs following v6.1-rc6 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1a24ba2dd15b90d2cc8ea3e09dca508a05fa0254
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 22 11:45:05 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1997357
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c11ee5a00d91f65b2d665c7edd55831c60abc2d1
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 22 11:43:18 2022 +0100

    UBUNTU: Rebase to v6.1-rc6
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7e88320a69888b8ea61b13da7c9366bfc02e6918
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 22 11:42:27 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit c9acfe171c12fb0aa632cc862954790221f8c994
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 16 11:37:05 2022 +0100

    UBUNTU: Ubuntu-unstable-6.1.0-7.7
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e51ccbb9b848a406afc522ee7b05d0fd262c98b5
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 16 11:36:29 2022 +0100

    UBUNTU: ppc64el: remove missing module
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1009a794b024f99162658e9fa9de7f072df96e8c
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 16 11:34:48 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1996731
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 97b15e1ead52fb9d58bdf984c6263510e7d4286f
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Nov 16 11:33:02 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 35bbc7749624bdedef687d606256ae2e4ee9457b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 15 15:55:34 2022 +0100

    UBUNTU: Ubuntu-unstable-6.1.0-6.6
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6d44277cd1fbf4836886a342ba17a7d400b39263
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 15 15:55:10 2022 +0100

    UBUNTU: [Config] update configs following v6.1-rc5 rebase
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4faab1c55c3ec64f4f3dcdfc30f5de50b6b1853
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 15 15:44:21 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1996616
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cec4d81df08dfa755c370c27bc26338f9bbe8b26
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Nov 15 15:41:02 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7aa19a594877724a7b543fecf7d8544a9553f1fe
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Nov 7 16:43:21 2022 +0100

    UBUNTU: Ubuntu-unstable-6.1.0-5.5
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7edef84d494fa4cb671c3430d5f84724a211bf79
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Nov 7 16:42:50 2022 +0100

    UBUNTU: [Config] toolchian update
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d4d2dd51eda841a98b37c1c3967fe96119e747b2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Nov 7 16:41:31 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1995875
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 39a9ec05b68e89928e03409624903871a217363b
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Nov 7 16:39:32 2022 +0100

    UBUNTU: Rebase to v6.1-rc4
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 511b7564a8e1dd228473063100c6d5ed5514c9cd
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Nov 7 16:37:42 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8a12f29db3c31d6edfce8cf5f254db20993c3b2e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Mon Nov 7 16:37:34 2022 +0100

    UBUNTU: packaging: switch to lunar series
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 70aad45ed0ae79acbfc16bcfa64a6ca614cba1c2
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Fri Nov 4 13:45:01 2022 +0100

    UBUNTU: [Packaging] let linux-tools-common provides bpftool
    
    BugLink: https://bugs.launchpad.net/bugs/1981089
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 0084193878edae97d33bb6aee3a2993b0ff07a2c
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 3 14:00:42 2022 +0100

    UBUNTU: Ubuntu-unstable-6.1.0-4.4
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1d9a834528dda86aeda3fae78bc991eafe5ee731
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 3 13:59:46 2022 +0100

    UBUNTU: [Config] update configs after rebase to 6.1-rc3
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit d5352eeb0a9a5a685c3e080b42655acfab217ab0
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 3 13:50:30 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1995500
    Properties: no-test-build
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dda83f7001720bc1dd84257386bf436c3f1b1914
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 3 13:41:46 2022 +0100

    UBUNTU: Rebase to v6.1-rc3
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 02aa3ef9bb5eae156bfc545b157cd8f3a3327440
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Nov 3 13:39:39 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit eebe23d7b90c9d638ecf582e4cd61e820b9299fa
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Nov 1 09:30:27 2022 +0100

    UBUNTU: [Config] Enable mtune z16
    
    Set mtune to z16
    
    BugLink: https://bugs.launchpad.net/bugs/1982833
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Paolo Pisati <paolo.pisati@canonical.com>
    Acked-by: Cory Todd <cory.todd@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 9e26128fa6aa1b41029355733f70a0384690b299
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Oct 17 12:48:22 2022 +0100

    UBUNTU: [Packaging] Support arch-specific compilers in updateconfigs
    
    BugLink: https://bugs.launchpad.net/bugs/1993120
    
    For some kernels we had to use different toolchain on per-arch
    basis. Introduce support for such scenario in kernelconfig
    script. This will allow to set gcc=gcc-11 in
    debian.flavour/rules.d/arch.mk. Note this doesn't yet generate correct
    build-dependencies.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ea49e4987acdaef136d7da983a916e39058e99a9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 24 15:53:12 2022 +0200

    UBUNTU: Ubuntu-unstable-6.1.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 778014d5f52d099ce35a63126bf25cd6caa10021
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 24 15:52:30 2022 +0200

    UBUNTU: [Config] update configs after rebase to 6.1-rc2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 180dcf579f515bc45cc6709a01b9ad51b6c9a628
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 24 15:34:26 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1994037
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e3037bfa0e1cf4dbdbc03f00e8f4cbcf855fba7c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 24 15:15:16 2022 +0200

    UBUNTU: Rebase to v6.1-rc2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d89ee7ada1fee934be59d584d3c786993685ae53
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 24 15:14:46 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 57f6c02cff45f86a2ce056e1b0f90cf95f17398e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 23:02:31 2022 +0200

    UBUNTU: Ubuntu-unstable-6.1.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0592e49423966b60688122b4e6dcf4b61fdc8e6c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 23:01:09 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1993350
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5751df69d10f3f455b7f157740bce4751d81c22d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 22:58:22 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b60f26100b63ee303667e4a3ef2463cd3ecf96ba
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Tue Oct 18 11:47:30 2022 -0600

    UBUNTU: SAUCE: (no-up) hv: Supply vendor ID and package ABI
    
    BugLink: http://bugs.launchpad.net/bugs/1193172
    
    Even though this buglink is for an ancient kernel, the information
    in the bug is still probably relevant.
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0422e94b48e4fc5e7a309b7fc85fa5952a0b53db
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 17:21:43 2022 +0200

    UBUNTU: Ubuntu-unstable-6.1.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a8351f5b9d5dffb3dac5f32381b9a241d5bf735a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 15:41:33 2022 +0200

    UBUNTU: debian/dkms-versions -- temporarily disable dkms builds
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7c0383a44ad3724c518e6543aa579c7852ad665d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 15:38:42 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1993118
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f18738920dd35e15c75c89baeeaafd8223c71b10
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 11:05:17 2022 +0200

    UBUNTU: [Config] update configs and annotations after rebase to 6.1-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 22e088d31dadd07cc7ef7eaf9b02575162226c97
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 16:18:11 2022 +0200

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: remove acpi_video_set_dmi_backlight_type()
    
    acpi_video_set_dmi_backlight_type() is troublesome because it may end
    up getting called after other backlight drivers have already called
    acpi_video_get_backlight_type() resulting in the other drivers already
    being registered even though they should not.
    
    Removing this should be ok now, since other drivers have done a similar
    change to get rid of this function call (that has been removed
    completely).
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fe7b0e326b44dfcef6b780c1bb656479c4def1bd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 10:48:17 2022 +0200

    UBUNTU: Rebase to v6.1-rc1
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dab126dbd3afecbefa0ee0d0dc4034ca5309f6f6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 18 10:44:17 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9c5083d6095f2d18ed549c6f05dd46bc2b468dd4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 17 08:58:54 2022 +0200

    UBUNTU: [Packaging] move to kernel 6.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 14a244054a9a50aa04cdc3444e215c86bbc1e1f4
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri May 13 13:14:05 2022 +0100

    UBUNTU: [Packaging] sameport -- add support for sameport versioning
    
    We currently support two types of kernels which are programatically
    configured (marked "backports" in kernel-series and having
    copy/local-mangle support):
    
      backports: those who express in an older series (~20.04.N)
      forwardports: those who express in a newer series (+22.04.N)
    
    Add a new third type which represents "backports" into the same series:
    
      sameports: those which express in the same series (.N)
    
    These will simply number with an additional upload number to allow local
    respins, for example linux/5.15.0-30.31 -> linux-lowlatency/5.15.0-30.31.1.
    
    Add support for BACKPORT_SUFFIX to be present and empty using `--` to
    represent this situation (in a similar fashion to variants).
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    (amend syntax to use bash variable expansion)
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit f5a85b3104ea382f8ab52781ac8c8f0b57e48cb9
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Aug 31 14:24:14 2022 +0200

    UBUNTU: [Config] Raise riscv64 CONFIG_NR_CPUS to 32
    
    BugLink: https://bugs.launchpad.net/bugs/1967889
    
    The QEMU 7.0 virt machine supports up to 512 virtual CPUs, so raise this
    limit to the maximum of 32 so we can use more of them.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d0fbb2c751d1cac8b93b018f79f3c70e90ca4dea
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Oct 10 15:52:49 2022 +0100

    UBUNTU: [Config] Disable VMAP_STACK on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1967130
    
    Port existing config change from kinetic:linux-riscv.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 5f9b39bd79026abd5f470a8379f6923b34895997
Author: Alexandre Ghiti <alex@ghiti.fr>
Date:   Mon Oct 10 13:27:29 2022 +0200

    UBUNTU: SAUCE: riscv: mm: Force disable sv57
    
    BugLink: https://launchpad.net/bugs/1991790
    
    The Kinetic userspace is not yet ready for 5-level page tables. Eg. Go
    programs use too many of the higher bits for pointer tagging.
    So force disable sv57 even on Qemu which advertices support for it.
    
    Signed-off-by: Alexandre Ghiti <alexandre.ghiti@canonical.com>
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit dcd3c7c9563294186e64e529c39551e6d68b1118
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Mon Oct 10 12:46:07 2022 +0200

    UBUNTU: [Config] Set CONFIG_PWM_SIFIVE=m for riscv64
    
    BugLink: https://launchpad.net/bugs/1988984
    
    Only the SoCs on the SiFive Unleashed and Unmatched boards use this
    driver, but none of them needs it at boot time. So compile it as a
    module to save memory on other systems.
    
    This also works around a bug in the UART driver fixed by
    643792048ee8 ("serial: sifive: enable clocks for UART when probed")
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit a18354c5a4491356dcb9bff56848d37970271a6d
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Oct 6 16:33:21 2022 +0100

    UBUNTU: [Config] Harmonize RCU_CPU_STALL_TIMEOUT
    
    BugLink: https://bugs.launchpad.net/bugs/1991951
    
    Harmonize our RCU and RCU_EXP CPU_STALL_TIMEOUTS to be 60s on all
    architectures, and the upstream default/maximum 21,000ms for the
    EXPEDITED one.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9438a9ecdc52931495b7a0f8620d574b9e97dbf4
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Oct 4 14:54:56 2022 +0100

    UBUNTU: [Packaging] Update configs with versioned compiler version
    
    BugLink: https://bugs.launchpad.net/bugs/1991664
    
    Update configs with versioned compiler version, no other config key
    changes.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c4a27e83664bc171b6ce0da4520bb9132bfd2d30
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Oct 4 14:54:55 2022 +0100

    UBUNTU: [Packaging] use versioned gcc-12
    
    BugLink: https://bugs.launchpad.net/bugs/1991664
    
    cbd/kteam-tools have been updated to install gcc-12 toolchain. dkms
    dynamically checks and tries to use the same compiler version as the
    kernel build. When backporting, the toolchain version should be set in
    full to the versioned gcc-12, make it so. This is to support building
    dkms modules with matching gcc in jammy.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f1e168d3705eac02ab33a598c8d682070e3241fb
Author: Guo Ren <guoren@kernel.org>
Date:   Wed Sep 28 11:54:50 2022 +0100

    UBUNTU: SAUCE: uapi: Fixup strace compile error
    
    BugLink: https://bugs.launchpad.net/bugs/1990964
    
    Export F_*64 definitions to userspace permanently. "ifndef" usage made it
    vailable at all times to the userspace, and this change has actually broken
    building strace with the latest kernel headers. There could be some debate
    whether having these F_*64 definitions exposed to the user space 64-bit
    applications, but it seems that were no harm (as they were exposed already
    for quite some time), and they are useful at least for strace for compat
    application tracing purposes.
    
    Fixes: 306f7cc1e9061 "uapi: always define F_GETLK64/F_SETLK64/F_SETLKW64 in fcntl.h"
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Guo Ren <guoren@kernel.org>
    Reported-by: Eugene Syromiatnikov <esyr@redhat.com>
    Acked-by: Palmer Dabbelt <palmer@rivosinc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Heiko Stuebner <heiko@sntech.de>
    Link: https://lore.kernel.org/lkml/20220804025448.1240780-1-guoren@kernel.org/raw
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b21fdaec573fd89640ef6c42643c2c90e80ce480
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 3 15:51:57 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-9.9
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9db592fab19f9251a44b177bb15cef355fd6f1ed
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 3 15:50:27 2022 +0200

    UBUNTU: [Config] update toolchain configs after rebase to 6.0
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 696c70ffcc2ca879aeb3a22e542b61b267b5342a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 3 15:49:26 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 96756d7239ed2db87ffcd67c514cd99d45d39281
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 3 15:48:08 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1991521
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3d606b9655652cd4a639724107f9b8821d63bcad
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 3 15:51:02 2022 +0200

    UBUNTU: Rebase to v6.0
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fe175c9ea542779ddf37e21b3a132de7bfbdcf83
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Oct 3 13:34:32 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 95bbc0e72c74db8261dc7544c58eb0b110893886
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Sep 20 10:22:14 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-8.8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c4a087c1039ad104091cc5f63ddb400a74efe2b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Sep 20 10:21:08 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1990101
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f5877943eb5f22c701a73486c2387595b8631c3e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Sep 20 10:17:31 2022 +0200

    UBUNTU: Rebase to v6.0-rc6
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 23dec0d42ce06364dd6a5285b881c869a40dd7a5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Sep 20 10:16:27 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f6d4a467bc4fe7b3cef30182f28763c4ab412170
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 14:03:55 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-7.7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8bd8662cf8d688d687ff1b16bfa5f12cde3c4d38
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 13:57:34 2022 +0200

    UBUNTU: [Config] update configs and annotations after rebase to 6.0-rc5
    
    In particular drop CONFIG_ARM64_BTI_KERNEL that is not supported anymore
    if the kernel is built with gcc, see:
    
     c0a454b9044f ("arm64/bti: Disable in kernel BTI when cross section thunks are broken")
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3a87b14c78a14901a1bc6faf18a8b328409ba201
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 13:59:05 2022 +0200

    UBUNTU: [Packaging[ get rid of unnecessary 'set -x'
    
    Drop a 'set -x' previously added for debugging purposes by commit
    7339f2ad00dc ("UBUNTU: [Packaging]: always use fully qualified <triplet>-gcc-VER toolchain")
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8eb22e7b20a804972498aa9ecb93bcafe5f01a66
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 13:56:32 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 557254efb271874aeed32b2b46b6e8c7a34a9c7c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 11:53:29 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1989331
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e53a353ab34ed83f429d675932a9dcc6994f12fa
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 11:51:44 2022 +0200

    UBUNTU: Rebase to v6.0-rc5
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 45230085c3b69fbc676e8f96409d75c52b790a5d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 11:38:26 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e151e5b71679c5fd706e210ec4e426aecff50efd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 12 11:26:33 2022 +0200

    UBUNTU: [Packaging] resync getabis
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ec362e3f840ab4cfe9a598012c3afe6e0906cb53
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Sep 7 12:23:43 2022 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 04f61ddda8aed83b097cd2182fc77d3ca8655a6f
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Wed Sep 7 12:21:15 2022 +0100

    UBUNTU: [Packaging] Pass kernel build_arch to dkms
    
    This enables dkms-build script to cross-compile dkms modules, for
    example zfs during cross-build.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 1816aa2a935dc4176ef3a39da79d1d06c1fc295d
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Sep 6 15:14:47 2022 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit fda77799b890dd52580c552e25e451e6e02205b0
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Aug 26 15:31:28 2022 +0100

    UBUNTU: [Config] Switch from DECOMP_SINGLE to DECOMP_MULTI_PERCPU
    
    BugLink: https://bugs.launchpad.net/bugs/1980861
    
    Overall MULTI_PERCPU has similar or better performance on the wide
    range of instance types and squashfs filesystems.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3d6d776e8d9b298ddc35b25d98a2fae73a43bfe3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 16:59:41 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-6.6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dafc0fd446ff0e88faa0365de1f9b27e1d337919
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 16:57:19 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1988706
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 32c2ab5de940d88db8835ce2c3c103c97881388d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 16:59:06 2022 +0200

    UBUNTU: Rebase to v6.0-rc4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 919c98b0dcf9d15d167fa99fcac0efebf27d6a7a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 16:55:12 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0a9a1c729a5f4cadd8963314520828c4a9c09718
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 16:54:21 2022 +0200

    UBUNTU: [Packaging] fix URLs used to retrieve kernel ABI
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9062147f150316279cee5d72ff6e84a0c319c2b0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 16:53:42 2022 +0200

    UBUNTU: [Config] update toolchain versions
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d3684f7d65922d6f2d7cf9e6aa596bffae4ee727
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 15:48:10 2022 +0200

    UBUNTU: [Config] enable security-related configs
    
    Make sure that the following config options are enabled to provide an
    additional level of security:
    
     - CONFIG_ZERO_CALL_USED_REGS: automatically zero local registers on
       function exit
    
     - CONFIG_INIT_STACK_ALL_ZERO: automatically initialize variables
       defined in the stack to zero
    
     - CONFIG_SHADOW_CALL_STACK: enables compiler's Shadow Call Stack (see
       https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html#Instrumentation-Options)
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ab327fbc0c991adb8bb26c4a18f08162d9612088
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Sep 5 07:58:35 2022 +0200

    UBUNTU: [Packaging] temporarily disable signing for ppc64el and s390x
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 57050fe73d154f47e2fbbba6e551bb8b94975ad5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 29 09:18:39 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 308c71d350d419f519fe8333fc44b7fb1d939415
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 29 09:18:03 2022 +0200

    UBUNTU: [Config] update configs after rebase to 6.0-rc3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b70aecdb28cbd8545874907ccffe44aaa7a54916
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 29 09:16:57 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1988019
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4d8d647e09604a77d8111d65eb478558af64aa41
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 29 09:14:44 2022 +0200

    UBUNTU: Rebase to v6.0-rc3
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 36ff300928b96800173d8b10b28c4d2a5d18a1f5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 29 09:14:11 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bface3ef933137dcc8e8bda3bbdb7d6d54d84d60
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Aug 25 23:21:34 2022 +0100

    UBUNTU: [Packaging] Remove circular dependency between image & modules
    
    Currently we have circular dependencies between
    linux-image-[unsigned]-ABI and linux-modules[-extra] packages.
    
    Debian policy point of view this is bad and does lead to worse
    dependency resolution cycles in apt upon kernel installs and upgrades,
    but mostly harmless as apt has learned to deal with that a long time
    ago.
    
    It is harmful for kernels that have additional types of debs or snaps
    that deliver vmlinux.
    
    In addition to regular linux-image[-unsigned] we produce various FDE
    linux-images like things with builtin initrds, i.e. linux-fde,
    linux-uc22, FIT images etc. All of them vendor in vmlinuz, and do not
    need to have linux-image[-unsigned] installed. They also often do not
    want to pull in any of the bootloaders listed as recommends by the
    linux-image-ABI package either, as they use alternative methods to
    boot (i.e. gadget snap, nullboot, flashkernel, weird cloud firmware
    provided stuff, etc).
    
    Remove linux-modules[-extra] -> linux-image[-unsigned] dependency. Add
    linux-modules-extra -> linux-modules dependency (because extra modules
    use symbols from the regular modules package).
    
    This will enable us to build clean meta-packages that pull in
    appropriate image, fde, uc22, FIT kernel image with matching modules,
    without installing redudant copies of vmlinux or bootloaders.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a696e66e9261b181d4622eb3a9ea45d546f7d9b1
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Aug 24 12:18:26 2022 +0200

    UBUNTU: [Config] Set CONFIG_MTD_RAW_NAND=m for riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    These modules are built for all other architectures but s390x.
    Let's build them for riscv64 too.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit d068e5590c2971c6df1e6db78c4a85dcaf3aaca4
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Aug 24 12:18:25 2022 +0200

    UBUNTU: [Config] Enable CONFIG_DTPM for riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    Enable power capping for the dynamic thermal power management for
    riscv64. This option is not annotated, but let's enable it just like
    all the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit a7a50f7e11a1dae4ad5bd875fe8170e949588044
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Aug 24 12:18:24 2022 +0200

    UBUNTU: [Config] Enable CONFIG_DRM_RCAR_USE_LVDS for riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option is not annotated, but let's enable this feature for riscv64
    like all the other architectures have.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 9b9c0572e6f5d70a4acb63f128af79a4c994f638
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Aug 24 12:18:23 2022 +0200

    UBUNTU: [Config] Align riscv64 CONFIG_LSM with other architectures
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    The CONFIG_LSM option for riscv64 is doesn't enable the landlock module
    at boot. Add it and align riscv64 with all the other archituctures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 1d87c4bd7aabfb64da653d0b96fb2bb3f23b45bf
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Aug 25 15:46:10 2022 +0100

    UBUNTU: [Packaging] use unversioned default gcc
    
    Whilst cbd/dkms/etc cannot yet dynamically install desired
    build-dependencies, simply use the default gcc compiler without an
    explicit features.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b0978075fd6607f6f9a5ff8ddede5532511d1fd6
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Jul 25 18:15:13 2022 +0100

    UBUNTU: [Packaging]: always use fully qualified <triplet>-gcc-VER toolchain
    
    Always define $(gcc) variable and export it. Always use fully
    qualified <triplet>-gcc-VER toolchains for native (GNU build) and
    cross (GNU host) compilation. Generate matching build-dependencies for
    native and cross builds.
    
    This ensures that native and cross builds use the same fully qualified
    toolchain binary, fixed in time, irrespective of gcc-defaults updates.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 14f7d1363152dac58e90b79c9ef30b9166e072a8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 24 15:10:24 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0c55a97a8b855acd55dcc73978b729cc400f9305
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 24 14:55:53 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1987517
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b9e764292537e9ee04ca43ccec50d0c5bf38e96b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 24 13:44:33 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5301e23dd7be00330ccece04cd851a511abf0860
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Wed Aug 24 13:09:06 2022 +0200

    UBUNTU: [Packaging] getabis: Add modules.builtin to the ABI
    
    Newer buildinfo packages provide a modules.builtin file. Process that file
    when downloading the ABIs.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 49b6fe016e4a82c29357f79fed7b2994784a317c
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Wed Aug 3 09:55:00 2022 +0200

    UBUNTU: SAUCE: igc: wait for the MAC copy when enabled MAC passthrough
    
    BugLink: https://bugs.launchpad.net/bugs/1942999
    
    Such as dock hot plug event when runtime, for hardware implementation,
    the MAC copy takes less than one second when BIOS enabled MAC passthrough.
    After test on Lenovo TBT4 dock, 600ms is enough to update the
    MAC address.
    Otherwise ethernet fails to work.
    
    Link: https://lore.kernel.org/lkml/20210702045120.22855-2-aaron.ma@canonical.com/
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    [note: this is a non-upstream work-around since upstream does not seem to be to hard
           at work to do a proper fix]
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 3f57c23c80ab1fca6f58fcf4f619035ecf2e6729
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 09:09:27 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0ca516ba487f6c5655166870c0970776b6eecd76
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 08:51:17 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1987241
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 95a80a6adb7809560d36f6c630e0e6c7bc394af4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 08:40:21 2022 +0200

    UBUNTU: [Config] update toolchain version
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c465c88bdedd14d03d86c3517472545f20401749
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 09:05:40 2022 +0200

    UBUNTU: [Config] disable CONFIG_QETH_OSX on s390x
    
    BugLink: https://bugs.launchpad.net/bugs/1959890
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit eabc5498e0bab071096d4d25cccbcb4df303f69d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 08:39:45 2022 +0200

    UBUNTU: Rebase to v6.0-rc2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a445c65235903eb3bc529a15bf7b3da85ed88442
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 08:39:20 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 78cf499bd2b851f969d240ab448aae2267226109
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 22 08:35:10 2022 +0200

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 698b4f2da9ec206293fc507f170bd4fd3a913fc3
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Aug 19 15:35:49 2022 +0200

    UBUNTU: [Packaging] Make stamp-install-<flavor> target reentrant
    
    During development or for debugging purposes it's sometimes desirable to
    run 'debian/rules build-<flavor>' multiple times in a row without starting
    from scratch, i.e. without cleaning the build first. Currently this fails
    because make tries to move a subdirectory to an already existing location
    when installing files for the modules extra package:
    
    mv: cannot move '/build/debian/linux-modules-5.15.0-1016-oracle/lib/modules/5.15.0-1016-oracle/kernel' to '/build/debian/linux-modules-extra-5.15.0-1016-oracle/lib/modules/5.15.0-1016-oracle/kernel/kernel': Directory not empty
    make: *** [debian/rules.d/2-binary-arch.mk:155: /build/debian/stamps/stamp-install-oracle] Error 1
    
    Fix that by properly running dh_prep at the beginning of the install
    target.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ac9ad0cf8b99874a5b064f4462bc85f2024f640a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 19:40:07 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6de0fe81066962c023933b7d073778cc654a0b90
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 19:39:33 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1986844
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a73dfa8243f17aab9f07feb7abefeb9f8129eab3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 19:05:10 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ffd47c48377a01c939004ff7697b7a8641310e6a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 16:56:18 2022 +0200

    UBUNTU: Ubuntu-unstable-6.0.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5d4bb16584a7be222d27424d1d91202acec3e6fb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 16:32:49 2022 +0200

    UBUNTU: [Packaging] temporarily disable dkms
    
    Disable dkms in debian/dkms-versions, until they properly support the
    6.0 kernel.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ed252bd2c06ad0e1dd92d3ba2f6cea9d768f1ac6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 13:36:53 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1986784
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6db949e2255febc78a4d60077d40d0f1017eb68b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 12:31:02 2022 +0200

    UBUNTU: Rebase to v6.0-rc1
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 18282709eade3b3eeb01db2ae8c036ddbe25ff67
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 12:29:42 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 583e57ba05b773b6d934fab56581a98b0343d308
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 11:06:47 2022 +0200

    UBUNTU: [Config] update configs and annotations after rebase to 6.0-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ed02c94f425f446fa2becc45887773e52da7c728
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Aug 17 10:24:08 2022 +0200

    UBUNTU: [Packaging] move to kernel 6.0
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5689a264617a35bbbdde281513b6e578f3d9e752
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 2 09:23:01 2022 +0200

    UBUNTU: Ubuntu-5.19.0-15.15
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9118e775df839949087f088f356cd14619a581df
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 2 09:09:19 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1983335
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3ebbc1060d8f145b2cd24ded51680783ce0c31b7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 2 08:53:06 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 879f5fcd4f3dbb770f08d9c3a8772265682c9ff7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Aug 2 08:50:29 2022 +0200

    UBUNTU: [Config] update annotations to support both gcc-11 and gcc-12
    
    Temporarily remove some annotation enforcements so that we can build the
    kernel either with gcc-11 or gcc-12.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a56fa4830692e5587968f1129f0a0fa109d5e3d1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 1 17:19:01 2022 +0200

    UBUNTU: Ubuntu-5.19.0-14.14
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4d51649a9073eeabef5782dc740e7ba39eb36a75
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 1 17:09:58 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1983273
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b2e199aa4d162f4a409748ef6a136d97a772987b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 1 16:32:12 2022 +0200

    UBUNTU: [Config] update configs after moving to gcc-12
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ec0c62cb1387ade36a66c246845f3f6bc86f0f83
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 1 09:05:44 2022 +0200

    UBUNTU: [Config] update configs/annotations after rebase to 5.19
    
    c653c591789b ("drm/amdgpu: Re-enable DCN for 64-bit powerpc") introduced
    CONFIG_PPC_LONG_DOUBLE_128, make sure to add that to the config.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit df2fd7bd8dfa64021274c548b3e697811bd8562f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 1 08:38:16 2022 +0200

    UBUNTU: Rebase to v5.19
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a5c1790350e9690b272bd6aecdfd650447fcbd47
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Aug 1 08:37:30 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 92d45f7cfee22528461990cbee8bbf2968a8d15b
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Jul 29 10:49:21 2022 +0200

    UBUNTU: SAUCE: Switch to using debian/scripts/sign-module
    
    Use the new script debian/scripts/sign-module to determine if a modules
    needs to be signed.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fd1e5c6c549c8a783ad984f4b0ba560c6f4757d1
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Jul 29 10:49:20 2022 +0200

    UBUNTU: [Packaging] Introduce debian/scripts/sign-module
    
    Move the logic that determines if a module needs to be signed to a script
    and extend it to also check the signature-inclusion list of derivatives.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9b0c1771bb40c6c2bed23de59900c61e0ced71b7
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Jul 29 10:49:19 2022 +0200

    UBUNTU: [Packaging] module-signature-check: Check debian.<foo>/signature-inclusion
    
    Derivatives might contain additional signed staging drivers so ensure that
    that list is processed as well when checking module signatures.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3982330348a889562fcb0e2e287fa5cd2df6b132
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 28 17:04:33 2022 +0200

    UBUNTU: Ubuntu-5.19.0-13.13
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 196588e1814cfa77ca9ee2734085b825c86e6edd
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 28 16:54:40 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1983033
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b8f7b152b63b1ce73c1e966f10ac1cfb517e921c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 28 16:52:19 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 06c0527a4998f76f4c8013b944daf3e7b17b4ac1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 28 16:13:25 2022 +0200

    UBUNTU: SAUCE: Revert "rfkill: make new event layout opt-in"
    
    BugLink: https://bugs.launchpad.net/bugs/1971418
    
    This reverts commit 54f586a91532 ("rfkill: make new event layout opt-in")
    since it could cause problems with network-manager. It would require
    adaption so it requests the larger message sizes.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 18023cd9260103efbf1bc89488d2c7bfac082605
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 27 10:54:45 2022 +0200

    UBUNTU: [Config] Fix CONFIG_CPU_LITTLE_ENDIAN annotation
    
    The CONFIG_CPU_LITTLE_ENDIAN option has a , where there should have been
    a : in the policy.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0f8c53b826159959b585bbc8a16524aac26eec63
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 27 10:54:44 2022 +0200

    UBUNTU: [Config] Fix DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING annotation
    
    The CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING option is
    missing whitespace between the option name and the policy<..> tag, so
    isn't picked up by the tooling properly. Fix it by inserting a space and
    adding the riscv64 architecture that is now being checked properly.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3b43227027da79b83cde8f4600ecce1f135cdfdc
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 27 10:54:43 2022 +0200

    UBUNTU: [Config] Use note<> for CONFIG_XEN_ACPI_PROCESSOR
    
    The CONFIG_XEN_ACPI_PROCESSOR has a tag of the form <free text>. This is
    the only time that appears in the annotations file, so should most
    likely have been note<free text>.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f3514e990f45b0fe62c0d12d3fbd2d91a1729404
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 27 10:54:42 2022 +0200

    UBUNTU: [Config] Use flag<DEPRECATED> for CONFIG_HIPPI
    
    The CONFIG_HIPPI option has a note<DEPRECATED> tag, which should most
    like have been flag<DEPRECATED>.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2e91b9c414232bf77cacb72c9000c9a69d80ff0b
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 27 10:54:41 2022 +0200

    UBUNTU: [Config] Use mark<ENFORCED> for CONFIG_DEVTMPFS
    
    The CONFIG_DEVTMPFS and CONFIG_DEVTMPS_MOUNT options have note<ENFORCED>
    tags, which should most likely have been mark<ENFORCED>.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f96205863b0358ade089c6532cce7a5613b668e2
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 27 10:54:40 2022 +0200

    UBUNTU: [Config] Tighten up LP bug links in annotations
    
    There are tools (eg. gnome-terminal) that automatically handles
    LaunchPad bug links in the form LP: #nnn, so let's make sure we use
    that form throughout. The annotations format already allows multiple
    note<>s so let's make sure they all have the form note<LP: #nnn> so
    they're even easier to find and parse.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 39d84928abd0dff871f0a8dd8872259e3084403c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jul 26 15:07:13 2022 +0200

    UBUNTU: Ubuntu-5.19.0-12.12
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7dd4238b7c494e89404cc49189f16b2c8ddaac04
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jul 26 15:06:44 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e636b1a670fa1a3f6a14c8025237fcd361881783
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jul 26 14:49:59 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1982741
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 02397f7fd2a522a30823a161cc405564a12a2eee
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jul 26 14:47:39 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 63c76fb9b384ee9ae01eb694326308025168a9d1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:54:21 2022 +0200

    UBUNTU: Ubuntu-5.19.0-11.11
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6265477e6640bb7ddbaeab723a26a5b1241ac5a8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:53:48 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4de746fda58e3c4b8cc36e3382b06fbf8a28b87e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:52:01 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1982726
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 35c12e44f50ca9b246dcb0f6e461031eedaf0804
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:40:00 2022 +0200

    UBUNTU: [Config] update config after rebase to 5.19-rc8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c1d7be003ab13b147cdaef1df32888324fcc3f8c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:38:41 2022 +0200

    UBUNTU: Rebase to v5.19-rc8
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit eee3cbd318dd2957ff3ad2f6e7757e334e9c4ab2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:38:09 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 50edc34699fb3e52c48efa3d878f6a34d6547016
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 25 08:34:29 2022 +0200

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dad4f52f45fe334e7ff2f8853603465fd9af2787
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Jul 20 12:40:20 2022 +0200

    UBUNTU: [Config] Enable CONFIG_GPIO_CDEV_V1
    
    BugLink: https://bugs.launchpad.net/bugs/1953613
    
    Enable v1 of the character device interface for manipulating GPIOs from
    userspace. The latest released libgpiod2 library and gpiod tools are
    still using this interface and it may be a while before every userspace
    program has been ported to a newer version.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9a1b50223e9cb679f147a401019053c6c3f6f19f
Author: Po-Hsu Lin <po-hsu.lin@canonical.com>
Date:   Fri Apr 8 15:41:44 2022 +0800

    UBUNTU: [Debian] Use kernel-testing repo from launchpad
    
    BugLink: https://bugs.launchpad.net/bugs/1968016
    
    Reflect the change with kernel-testing repo moved from kernel.ubuntu.com
    to launchpad, where we host all of our testing tools.
    
    Use shallow clone to save some bandwidth / time.
    
    Signed-off-by: Po-Hsu Lin <po-hsu.lin@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fd1a73db29e3841f605d3ffe215ed87bcb1147e1
Author: You-Sheng Yang <vicamo.yang@canonical.com>
Date:   Fri Apr 8 10:39:24 2022 +0800

    UBUNTU: [Config] enable X86_AMD_PSTATE as built-in on amd64
    
    BugLink: https://bugs.launchpad.net/bugs/1956509
    
    X86_AMD_PSTATE must be a built-in module so that it may take take
    precedence over acpi-cpufreq.
    
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5d1fe8af23b03101ba6022edd2e02d90f942b39e
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Jul 15 12:12:14 2022 +0100

    UBUNTU: [Packaging] Double the speed of updateconfigs
    
    Use parallel build setting when building menuconfig.
    
    mvo says "funny, make menuconfig feels like it takes the same amount
    of time to compile as it did 15y ago when I used it last"
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 53c9ca0683929003c0cb6047d44c46c4e228d82d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 18 23:45:28 2022 +0200

    UBUNTU: Ubuntu-5.19.0-10.10
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3987fce19a0b442f719e1bc2839a0e716a9c9e49
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 18 23:44:49 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1982013
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d66eaf842381e782acdd05f527e3915b7b7980e4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 18 23:41:31 2022 +0200

    UBUNTU: [Config] update configs and annotations after rebase to 5.19-rc7
    
    Also make sure that all the relevant config options for retbleed
    mitigations are enabled by default.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4e8d75f549da0d470730b2133138ed37185517c6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 18 23:37:11 2022 +0200

    UBUNTU: Rebase to v5.19-rc7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3f67af7f5ee500c70350e495342969e1fc877168
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 18 23:35:37 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 285e65ee51ca2d4d7803ca1db05cd6a4831bffd8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jul 15 19:40:33 2022 +0200

    UBUNTU: [Config] enable configs for fixing kernel won't load mok
    
    BugLink: https://bugs.launchpad.net/bugs/1972802
    
    Signed-off-by: Ivan Hu <ivan.hu@canonical.com>
    Signed-off-by: Timo Aaltonen <timo.aaltonen@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d05cdbce8c8214046b3885eac21fefdb69e89da9
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Jul 14 15:40:59 2022 +0100

    UBUNTU: [Config] Enable CONFIG_KEXEC_FILE on s390x
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    KEXEC_FILE and KEXEC_SIG should also be enabled on s390x, as this
    architecture supports signed kernels as well.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit edfebdb6a8d8f68dfcc61a6596087cc9c19460da
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:12 2022 +0200

    UBUNTU: [Config] Set CONFIG_KFENCE_SAMPLE_INTERVAL=0 on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    Disable KFENCE by default like all other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 44393a2fa8a327ed960efb522151aa4d07e9ab8d
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:11 2022 +0200

    UBUNTU: [Config] Set CONFIG_MTD_PSTORE=m on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This enables the module to log panic/oops to a circular buffer in an MTD
    flash partition. All other architectures enables this module, so let's
    enable it on riscv64 too.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit ab30dee81198ab0335ffccf863d099efce11e800
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:10 2022 +0200

    UBUNTU: [Config] Enable CONFIG_KEXEC_FILE on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This is enabled on all architectures but s390x and was added to RISC-V
    in v5.19-rc1, so let's enable it until we have a reason not to.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit a4fe0ee91895c62b6a4ae5790bae744f2b90bfb4
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:09 2022 +0200

    UBUNTU: [Config] Enable CONFIG_VMAP_STACK on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    Enable virtually-mapped kernel stacks like all other architectures.
    This creates guard pages which will cause kernel stack overflows to be
    caught immediately.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 66ff33f40b3e5de00181e7e56f704e9068079634
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:08 2022 +0200

    UBUNTU: [Config] Enable CONFIG_STRICT_DEVMEM on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    Filter access to /dev/mem like is done on all other architectures. There
    is even a mark<ENFORCED> annotation on this option and yet it is still
    disabled on riscv64. Let's fix that.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 680f769c5f5c5843ab382a76faaeae26f0120bc5
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:07 2022 +0200

    UBUNTU: [Config] Enable CONFIG_SUNRPC_DISABLE_INSECURE_ENCTYPES on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This disables encryption types that were deprecated in Kerberos v5 as is
    done on all other architectures. No setup involving a RISC-V machine
    should use these encryption types.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 0639fbdf3b74f010892a9917c546d54df8ec8554
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 18:08:06 2022 +0200

    UBUNTU: [Config] Enable CONFIG_EFIVAR_FS on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    All other EFI supporting architectures builds this in, so let's do the
    same on riscv64.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 3a93bb2cc75146c1b79bf7a8dcfbcf8d81baa3cd
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Jul 14 15:32:14 2022 +0100

    UBUNTU: [Config] Correct CONFIG_PCIE_EDR annotation on arm64
    
    BugLink: https://bugs.launchpad.net/bugs/1965241
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit e853cbcd178f195f1365e3c9ccfe17ff579ab9e7
Author: Michael Reed <Michael.Reed@canonical.com>
Date:   Tue May 17 16:08:19 2022 -0500

    UBUNTU: [Config] Enable config option CONFIG_PCIE_EDR
    
    BugLink: https://bugs.launchpad.net/bugs/1965241
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 45e1cd89920a7277f7610585072985d689bb89c6
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:47 2022 +0200

    UBUNTU: [Config] Set CONFIG_NFC_S3FWRN82_UART=m on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 41908436125448e6f97e4537f964a48a0b89062a
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:46 2022 +0200

    UBUNTU: [Config] Set CONFIG_MHI_WWAN_CTRL=m on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6455d4b81e8e6564971bb1460f538c35851a6473
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:45 2022 +0200

    UBUNTU: [Config] Enable CONFIG_WLAN_VENDOR_MICROCHIP on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e39d2a32b342b5d9cf976b1ccaa3b19826d3e705
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:44 2022 +0200

    UBUNTU: [Config] Enable CONFIG_PROC_VMCORE_DEVICE_DUMP on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f0c3957af64c667e548075f0d53aad587f9ea6e0
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:43 2022 +0200

    UBUNTU: [Config] Enable CONFIG_NUMA_BALANCING on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4381ff3237f81043f9aff06706e498d3aae79e7b
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:42 2022 +0200

    UBUNTU: [Config] Enable CONFIG_DRM_AMD_DC_SI on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4962e8a088824f59662de07fcbf033b6eadb133a
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:41 2022 +0200

    UBUNTU: [Config] Enable CONFIG_CACHEFILES_ERROR_INJECTION on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9cccf96aa6c3035567f23f398a6dfd3b25535495
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:40 2022 +0200

    UBUNTU: [Config] Enable CONFIG_BPF_KPROBE_OVERRIDE on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit edc3e992fc9b0db27774f1def8e41dd783f2d499
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:39 2022 +0200

    UBUNTU: [Config] Disable CONFIG_VIDEO_ZORAN on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 20832561d8b58ceac41ca16c239a46bc727c1d6e
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:38 2022 +0200

    UBUNTU: [Config] Disable CONFIG_SPI_AX88796C_COMPRESSION on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9f41b43cfe1c54a052985dd529fde44026150e31
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:37 2022 +0200

    UBUNTU: [Config] Disable CONFIG_SCSI_UFS_HWMON on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e3f034b252df37c91de328a89652f31b085b4f56
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:36 2022 +0200

    UBUNTU: [Config] Disable CONFIG_SCSI_IZIP_EPP16 on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d4d247d74545ab8057f24e35fa5f2d75c48fe6d2
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:35 2022 +0200

    UBUNTU: [Config] Disable CONFIG_NTFS3_64BIT_CLUSTER on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8f6b0cdc16b4c01d6c9debd449f6274c9c418212
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:34 2022 +0200

    UBUNTU: [Config] Disable CONFIG_FONT_6x8 on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 30eaf5a41d9f9e9dfb43afefb0d3b031281ca89a
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:33 2022 +0200

    UBUNTU: [Config] Disable CONFIG_EROFS_FS_ZIP_LZMA on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ef7bcb04b283b4c57212991e5442c54bdd7c2aa5
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jul 12 14:04:32 2022 +0200

    UBUNTU: [Config] Disable CONFIG_CXL_MEM_RAW_COMMANDS on riscv64
    
    BugLink: https://bugs.launchpad.net/bugs/1981437
    
    This option was not annotated in the linux-riscv tree, so let's align it
    with the other architectures.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 33b3793a6f8713bc2b70cc31aa65488e9dd45546
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Mar 11 16:07:07 2022 +0000

    UBUNTU: [Packaging] mark dkms-build-configure--zfs executable
    
    Mark dkms-build-configure--zfs script executable, such that one
    doesn't need to call it with an explicit shell.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit f912580a3361053643aa05c6e98614ff32f94968
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Thu Jul 7 13:57:19 2022 +0100

    UBUNTU: [Packaging] Fix dkms builds with linker @module.mod files
    
    v5.19 kernel build stopped passing a long list of .o object files to
    the linker. Instead it started to emit linker .o files into .mod
    file. And then pass said .mod file as a single argument to the linker.
    Adjust dkms-build and dkms-build--nvidia-N scripts to account for this
    behaviour. Copy .mod files in addition to .o files. Post-process .mod
    to remove absolute build paths, and covert them to relative object
    paths.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ecb47a9a63de0147bc1d26de91a8011b1b84b4a4
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Mar 11 16:07:09 2022 +0000

    UBUNTU: [Packaging] Always catch errors in dkms-build scripts
    
    Enforce `set -e` execution of the dkms-build scripts, even when
    overall SHELL is not set to `bash -e`. This enforces that dkms-build
    scripts catch errors, even when building without SHELL variable, like
    it is done by the LRM packages.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c9d276ff3c16d0517e7c7e4d5b2ca7a5db6e3239
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Mar 11 16:07:08 2022 +0000

    UBUNTU: [Packaging] Fix bashism in dkms-build script
    
    dkms-build script uses bashism variable and test comparison, replace
    them with dash compatible invocations. This allows using dkms-build
    scripts without SHELL variable set to "bash -e", like it is done by
    LRM packages.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c4fff60605d49077e10388e4620612e43f11a40a
Author: Ike Panhc <ike.pan@canonical.com>
Date:   Fri Apr 29 14:45:58 2022 +0800

    UBUNTU: [Config] CONFIG_HISI_PMU=m
    
    BugLink: https://launchpad.net/bugs/1956086
    
    Signed-off-by: Ike Panhc <ike.pan@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 77ae5553ca7afb92a4eee2ab60cffc069bf75d3b
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu May 5 14:20:14 2022 +0800

    UBUNTU: SAUCE: net: phy: marvell: Skip setting LED on Dell EMC board
    
    BugLink: https://bugs.launchpad.net/bugs/1971667
    
    The board in question requires certain LED config, which is already
    configured by BIOS, to correctly show its networking status. However,
    Marvell PHY driver hardcodes LED value so we need a way to preserve the
    default set by BIOS.
    
    PHY maintainer asked for a "generic" approach which goes no where [1],
    so let's move on and use a quirk to handle it.
    
    [1] https://lore.kernel.org/lkml/20220420124053.853891-2-kai.heng.feng@canonical.com/
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 611ce131d11c8d394bcced8c305f7f3bb435c9d6
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 4 16:10:40 2022 +0200

    UBUNTU: [Packaging] ignore warnings from the output of ld.bfd
    
    When generating the script BUILD (or CLEAN) we are taking all the ld.bfd
    commands fromt he build log, however if the log contains warnings or
    NOTEs such as:
    
      /usr/bin/ld.bfd: warning: nvidia.o: requires executable stack (because the .note.GNU-stack section is executable)
    
    we would add also that to the script, causing syntax error failures.
    
    Make sure to exclude all warnings to prevent problems like this.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 25546aba782ed27eba84ea266e006a7bb93cde2e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 4 12:05:05 2022 +0200

    UBUNTU: Ubuntu-5.19.0-9.9
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit deaea8eef3fd9cebed979bd81980bf5a264a973d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 4 12:01:41 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1980622
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 600c0390c5d146e256851ae88c5138e04430a1b7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 4 07:51:39 2022 +0200

    UBUNTU: [Config] update config after rebase to 5.19-rc5
    
    Keep CONFIG_VIRTIO_HARDEN_NOTIFICATION disabled for now, since several
    drivers still have bugs with this option and this may cause crashes or
    hangs.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ffa733d4ccdbfb88c17ea92c5bb5eb9e317a11c1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 4 07:49:52 2022 +0200

    UBUNTU: Rebase to v5.19-rc5
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1bfb31729e11644ffd7ce15aa9d5c2e1b02a2aa5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jul 4 07:49:17 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2522199addb743db7815437a00bc0176e4663a90
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jul 1 11:58:56 2022 +0200

    UBUNTU: Ubuntu-5.19.0-8.8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4b1b48105687ce1030aa0a229f0d3aa3b95a6b86
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jul 1 11:58:07 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1980482
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ac0bf3b52a78103367ea620747d2db893336c963
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jul 1 11:39:57 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c2e13120f615d8e45494ea2becc052cec0841a21
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jul 1 11:44:32 2022 +0200

    UBUNTU: [Config] temporarily disable CONFIG_X86_KERNEL_IBT
    
    BugLink: https://bugs.launchpad.net/bugs/1980484
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dd7be9a9f323ded84ba8a018b2fd70b48b1a9721
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 28 12:25:48 2022 +0200

    UBUNTU: Ubuntu-5.19.0-7.7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9bd889e6132f212ecdad75052dd1ed62e335fcd2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 28 12:24:40 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1980056
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 72756f0657212a43594564fc4f0877c06def7d13
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 28 12:22:21 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fc4e326e172dcedf80ed92531946e5410f1d9535
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 28 12:22:08 2022 +0200

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5f702682c44f75eeadcc79441bc6e752771f26f8
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Tue Jun 28 10:00:15 2022 +0200

    UBUNTU: [Config] Disable CONFIG_COMPAT on RISC-V
    
    BugLink: https://bugs.launchpad.net/bugs/1980061
    
    This sets CONFIG_COMPAT=n for riscv64 kernels. Enabling it allows 32bit
    binaries to be run on 64bit kernels, but requires hardware support. So
    far no chips have been released that support it and neither does
    upstream Qemu. Also Ubuntu doesn't ship 32bit RISC-V binaries, so
    disable this feature for now.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-By: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dd973d5649423f8f55ac3b30fb2fc8c88a95f294
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Fri Jun 24 09:31:10 2022 +0100

    UBUNTU: [Config] Merge riscv64 config and annotations
    
    BugLink: https://bugs.launchpad.net/bugs/1979647
    
    This adds the debian.master/config/riscv64 directory and merges
    annotations and configuration from kinetic:linux-riscv.
    
    Merging the riscv64 configuration reveals a lot of differences from the
    other architectures, but this commit tries to keep the configuration as
    close as possible to kinetic:linux-riscv.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4a93caa931e46781a4ac672faf689e81de6a26a4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Jun 28 07:58:16 2022 +0200

    UBUNTU: [Packaging] rename package to linux
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 21b6f1517c1093307cef7447604a3a8e0b97330b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 27 09:16:40 2022 +0200

    UBUNTU: Ubuntu-unstable-5.19.0-6.6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 27e86cf5c3fa87627238a4266c2096f291b296c5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 27 09:15:44 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 914f646d49871ae27c587b7699b39a079d54157d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 27 09:05:46 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1979948
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 04c32127b35fb9f3e6005a9b3107375d4ebd31d5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 27 09:02:50 2022 +0200

    UBUNTU: [Config] update config after rebase to 5.19-rc4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a60a321ceeb6e7ba711117b9ba5c39b35966216e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 27 09:02:03 2022 +0200

    UBUNTU: Rebase to v5.19-rc4
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b83d97c9a51ecc51addadb6d1fc7613092c9473f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 27 09:01:37 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ab28669844e99b681e36416cd198de14dfba1dae
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Jun 24 14:41:53 2022 +0200

    UBUNTU: [Packaging] final-checks: Remove useless sourcing of kernelconfig
    
    kernelconfig only defines 'archs' but 'archs' is overwritten after the
    fact so remove the uselsess sourcing. While at it, remove a stray leading
    space in the following line.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 74dc27abdb679ee1028630faba8eb8902b9fdeb8
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Jun 24 14:41:25 2022 +0200

    UBUNTU: [Packaging] Remove 'family=ubuntu' concept
    
    With the removal of family=ports, all that's left is family=ubuntu, so hard-
    code that and drop the 'family' script and Makefile variables.
    
    No functional changes.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d40641ed3d09d3c665063b861425eaf823a75e7c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 23 11:13:32 2022 +0200

    UBUNTU: Ubuntu-unstable-5.19.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3739fadce9c616863013ad2e353b5a767334f366
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 23 11:13:05 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1979611
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fe0305f7ca0e608281f6e9cd2162ea5ad1902cb0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 23 10:54:37 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1f4d513875026d9d85dc84297683e05a405aa78e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 20 09:02:58 2022 +0200

    UBUNTU: Ubuntu-unstable-5.19.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 087c84ef5e4ce78f21bb3339bb0d1802628ae344
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 20 09:00:20 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1979177
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 63469c94e737e1036b567f95e0ab331d7d1990f4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 20 09:02:08 2022 +0200

    UBUNTU: Rebase to v5.19-rc3
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9fdb8ea036c16547d3309ec06dd7d2ca12e7e213
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 20 08:58:50 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cf1ddffcc0a7421e4838ec4bfbb2c318a55c4dc9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 20 08:58:07 2022 +0200

    UBUNTU: [Config] update configs after rebase to 5.19-rc3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c8d727ea7d9e3c52c020e5e464621d5b8dc25adf
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon May 9 11:12:06 2022 +0200

    UBUNTU: [Packaging] kernelconfig: Bubble up warnings and errors
    
    Config annotation check failures and warnings due to incomplete config
    operations are really bad, so exit the script with a non-zero status if
    such errors or warnings are detected.
    
    Ignore: yes
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d14795e9241c53e1064c768cccff123f05c1d732
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 13 07:16:32 2022 +0200

    UBUNTU: Ubuntu-unstable-5.19.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dd83fe6ab6e7bb9586e0a6e8f9116269c7687980
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 13 07:16:07 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1978439
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4c8f37559dede8784ca67d422f6bd8af2cffdc8c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 13 07:14:15 2022 +0200

    UBUNTU: [Config] update annotations for 5.19
    
    Update configs/annotations with new options introduced in 5.19.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c01c764ae6a3016813340ce407d0ec2be06ee5fb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 13 07:03:57 2022 +0200

    UBUNTU: Rebase to v5.19-rc2
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1dedd6b5756ab63cc5d4968642455e3c12d086ba
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Jun 13 07:03:26 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c2d5b699d357ebe7090805432ee02435883f71fc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jun 10 15:17:20 2022 +0200

    UBUNTU: Ubuntu-unstable-5.19.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit dd8ebb4b07b7526bd77cb5d49fbb6638b92e5b86
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jun 10 15:16:09 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1978313
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6d824c97c23cd9dc73087f822e613eb54efc0a60
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jun 10 15:12:28 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4ffb986218fa01d3b092dfe3d62f737ee14dddea
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jun 10 14:43:46 2022 +0200

    UBUNTU: Ubuntu-unstable-5.19.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 76a795036e903e5d973e08515b8b151250d5cb9a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jun 10 14:42:19 2022 +0200

    UBUNTU: [Packaging] add python3-dev as build dependency
    
    Recent kernels require python3-dev to properly handle build environments
    with only python2 runtime installed.
    
    Make sure to add this package to the list of build dependencies.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 397ee9398c9f1d30d52e07559406037049efc83a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jun 10 11:27:18 2022 +0200

    UBUNTU: [Packaging] workaround missing python3-dev dependency
    
    The following commit is meant to fix build issues in environment where
    python2 runtime is only installed:
    
     630af16eee49 ("perf tools: Use Python devtools for version autodetection rather than runtime")
    
    However, this requires python3-dev that is not specified in the build
    dependencies.
    
    As a temporary workaround set PYTHON=python3 in debian/rules to enforce
    the usage of python3 when python is needed.
    
    TODO: add python3-dev to the build dependencies and update all our build
    chroots.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9d92038d25eb72fca09d634c4c4fce20441d9f80
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 9 18:02:24 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 716c881abb8994bd180422be7ad8ff84940125cb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 9 12:17:41 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4efd6272bdfa15807f1023676df80bfbb7fc3c53
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jun 9 12:13:33 2022 +0200

    UBUNTU: [Packaging] move to kernel 5.19
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 177b0f709558ed83d89d69a49f49bfc10d551d46
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jun 8 16:25:25 2022 +0200

    UBUNTU: [Config] update configs and annotations after rebase to 5.19-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c54957a3f42b24bc9213f8e12d669dc8997f8cd7
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon May 9 16:25:04 2022 +0200

    UBUNTU: [Packaging] Add module-signature-check
    
    BugLink: https://bugs.launchpad.net/bugs/1642368
    
    Check the signature of staging modules during package build.
    
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 47f076fe3a71686bbdb958898592ba345f1dc9e8
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Tue Jun 21 15:18:22 2022 +0200

    UBUNTU: SAUCE: Add selective signing of staging modules
    
    BugLink: https://bugs.launchpad.net/bugs/1642368
    
    'Untrusted' staging modules shouldn't be loadable in a secure boot
    environment so only sign modules listed in debian/signature-inclusion.
    
    Signed-off-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a6ecb4e67481ccbbc7cfedfd7e0dc350143d466e
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon May 9 16:25:02 2022 +0200

    UBUNTU: [Packaging] Move and update signature inclusion list
    
    BugLink: https://bugs.launchpad.net/bugs/1642368
    
    Move the signature inclusion list from the source tree to the debian/
    directory to keep the upstream source clean. While at it, remove modules
    that are no longer in the staging area.
    
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2ba7b4f716cffe8d1d99399fa1b60fb6467873c7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 31 11:05:51 2022 +0200

    UBUNTU: Ubuntu-5.18.0-6.6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b2f5389ba7cac8e783dd93bc5557e16ce4971aec
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 31 11:01:35 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1976327
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ee7ebaf5474b56abedee0b68f6e72493a7c228f2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 31 08:15:38 2022 +0200

    UBUNTU: [Config] enable CONFIG_X86_KERNEL_IBT
    
    The rest of userspace in kinetic is built to support CET (shadow stack
    and IBT), so we want to enable IBT also in the kernel to provide an
    extra level of security against indirect call based attacks for Tiger
    Lake CPUs and newer.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e0f0aa4d262b3b15f6a7dd6d417f0c13030dbbc5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 30 09:44:50 2022 +0200

    UBUNTU: [Config] update toolchain versions
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5fbb3de3f7bdc093230008b2f9f3ab553a79b6a7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 30 09:43:38 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit caf12bc7ccc2b0fb45188cdb55e3d6aab93cc700
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 23 17:00:36 2022 +0200

    UBUNTU: [Packaging] rename kernel to linux
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9599cf295972e5b52e5e9972a7f18aa1ec211a89
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 23 11:21:38 2022 +0200

    UBUNTU: Ubuntu-unstable-5.18.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 613ae5ddd10ab2456911dac6b7fb3e5de0ba910c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 23 11:01:04 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1975458
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 03e94a931bddf77a3da4a1a396fc3e0b56c14943
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 23 10:43:09 2022 +0200

    UBUNTU: Rebase to v5.18
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8b7932be4726f473a8666efb2185f68f6006179c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 23 09:43:58 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9d6d28a6c2829fa11e4026f6fe0ec3ffc773e033
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri May 20 14:55:39 2022 +0200

    UBUNTU: [Config] enable CONFIG_DEVTMPFS_SAFE
    
    BugLink: https://bugs.launchpad.net/bugs/1974442
    
    Mount devtmpfs with nosuid,noexec to prevent mmapping special files in
    /dev with PROT_EXEC or having executables setuid files.
    
    This allows to provide a little bit of extra security in the system.
    
    This change may potentially break some drivers that require to execute
    code by mmapping /dev/mem (e.g., non-KSM video drivers).
    
    Theoretically we shouldn't break any of the officially supported
    drivers, because kernel lockdown is already preventing access to
    /dev/mem.
    
    This is just a little more relaxed constraint than kernel lockdown, but
    it can still provide a reasonable level of extra security in the system
    also when the kernel is not completely locked down.
    
    Acked-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a7ff8883d2680171a042e0c056d2de317f2623b6
Author: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
Date:   Fri May 13 21:17:50 2022 +0800

    UBUNTU: [Packaging] drop do_<mod> arch specific configs
    
    BugLink: https://bugs.launchpad.net/bugs/1969434
    
    They should been assigned automatically based on the latest
    dkms-versions.
    
    Also disable building any dkms for mainline builds.
    
    Signed-off-by: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 608aac0667871516d2d2619b21aac950f80a1906
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 16 14:15:35 2022 +0200

    UBUNTU: Ubuntu-unstable-5.18.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8d2d089093f4f46dc75750831a54250fc611f141
Author: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
Date:   Fri May 13 21:17:45 2022 +0800

    UBUNTU: [Packaging] support standalone dkms module builds
    
    BugLink: https://bugs.launchpad.net/bugs/1969434
    
    Signed-off-by: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit fd3b0bbed21622c42253ed66c89643519b02c864
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Tue May 10 11:54:03 2022 -0600

    UBUNTU: [Config] CONFIG_SPEAKUP=m for all but s390x
    
    BugLink: https://bugs.launchpad.net/bugs/1967702
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 33b745265f67595b1cb3947b008806845f43e80e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 16 12:43:14 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ce208b11ba599835077131b7750eeb344487803c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 16 11:56:18 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1973587
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e1e9276defa92000d1c04ae479eedd15e15c2290
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 16 11:23:46 2022 +0200

    UBUNTU: Rebase to v5.18-rc7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 873df2a9875dcd78ba592eba1e4df37f798dffb9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 16 11:22:31 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3a399da8859e16e54446a4f1aa2c6528b2dcda62
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 9 12:15:40 2022 +0200

    UBUNTU: Ubuntu-unstable-5.18.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b232e718de907651d22c5654dc1c24e285d7d68b
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 9 12:00:44 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1972162
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1d2e610680954c9dcce8e1a1d4700df591bce8d2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 9 11:12:55 2022 +0200

    UBUNTU: Rebase to v5.18-rc6
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 534a1b00ad3a5965c1ea63f3debc816bcd0bc018
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon May 9 11:12:36 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3652041d2a9f8e4f8a8caca44651354819e46449
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu May 5 14:34:59 2022 +0200

    UBUNTU: [Config] disable Intel DMA remapping options by default
    
    BugLink: https://bugs.launchpad.net/bugs/1971699
    
    It seems that enabling IOMMU can cause some weird gfx problems, see for
    example:
    
     https://bugs.launchpad.net/bugs/1971146
     https://bugs.launchpad.net/bugs/1965882
    
    Even if upstream decided to enable these options by default, it is
    probably safer for now to keep IOMMU disabled, to prevent potential
    issues like those mentioned above.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ac1a55644c895a089a351a5f5da986b6a9f6e9d3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 12:24:49 2022 +0200

    UBUNTU: Ubuntu-unstable-5.18.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 755fcacd37475d9817e8756d044fd865b1ce4e60
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 12:24:22 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b89e5ad50a360321e2f536a05d7249e51fee9c9a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 12:22:20 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1971340
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 923b649b4cd63d7e49a07e42391f99b3cd65adcf
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 09:52:53 2022 +0200

    UBUNTU: [Config] update configs after rebase
    
    Disable CONFIG_BLK_DEV_FD_RAWCMD (deprecated) and update toolchain
    versions.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 98f77897ed09e1b56e8e7f6e7dbfe1d0b7b7b23c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 12:20:51 2022 +0200

    UBUNTU: Rebase to v5.18-rc5
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 68b4a194fa12f7659c76b2dc316913747f12a721
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 09:52:05 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f05c3c5d82a16a5be99de96f8ecaabb12aef0b69
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 3 09:49:01 2022 +0200

    UBUNTU: [Packaging] move to kinetic
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b2e2d36edf237f33bd627a0fc36bb6385caf835c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 27 20:26:42 2022 +0200

    UBUNTU: Ubuntu-unstable-5.18.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bfddc5d2897e31c68d0785957c8a71234643e74c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Apr 27 07:43:39 2022 +0200

    UBUNTU: [Config] update configs and annotations after rebase to 5.18
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit bc07a0e7041ae015e54985f6b74de80310b106a7
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Apr 19 17:03:36 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1969476
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b205b0f6b19e026d6a2c61d3bd86e62367d9f978
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Apr 19 16:22:15 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4413cdd1f010634fbdb420339abcc70199e372c5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Apr 19 16:20:54 2022 +0200

    UBUNTU: [Packaging] move to kernel 5.18
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 54962ad6eb2c1f11aa2c612425f2b8fe188e3689
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 10:30:39 2022 +0200

    UBUNTU: Ubuntu-unstable-5.17.0-8.8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 68be1ff676d1eabe0b6e5b0063d1ecec87e56e2a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 10:30:19 2022 +0200

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit aa6ea7ab7c2decdc3be065ed90d9db953230ed03
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 10:29:57 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1969016
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit f0279c683c83fde06b809ffffe3c110cba492b89
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 10:21:40 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5bab10a5b369376d24d0898df7f91ab8352041de
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 08:45:41 2022 +0200

    UBUNTU: Ubuntu-unstable-5.17.0-7.7
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4178abb32fb5dc238acdad09d65c424625c6400e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 08:41:54 2022 +0200

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1968988
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 3c5582bf2bf5ab023ee8306494309e541f1b79cc
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 08:41:05 2022 +0200

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 976eb1b41bc9d877e1c64554815ff0f33922b2a4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 08:40:16 2022 +0200

    UBUNTU: [Packaging] remove references to lowlatency flavor
    
    We have a separate kernel for lowlatency now, so we can drop all the
    references for the lowlatency flavor.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cfbe9dd72a763f75be0d36c5a4c64fa6628f73f1
Author: zouxiaoh <xiaohong.zou@intel.com>
Date:   Wed Feb 23 10:21:25 2022 +0800

    UBUNTU: SAUCE: iommu: intel-ipu: use IOMMU passthrough mode for Intel IPUs
    
    BugLink: https://bugs.launchpad.net/bugs/1958004
    
    Intel IPU(Image Processing Unit) has its own (IO)MMU hardware,
    The IPU driver allocates its own page table that is not mapped
    via the DMA, and thus the Intel IOMMU driver blocks access giving
    this error: DMAR: DRHD: handling fault status reg 3 DMAR:
    [DMA Read] Request device [00:05.0] PASID ffffffff
    fault addr 76406000 [fault reason 06] PTE Read access is not set
    As IPU is not an external facing device which is not risky, so use
    IOMMU passthrough mode for Intel IPUs.
    
    Change-Id: I6dcccdadac308cf42e20a18e1b593381391e3e6b
    Depends-On: Iacd67578e8c6a9b9ac73285f52b4081b72fb68a6
    Tracked-On: #JIITL8-411
    Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
    Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
    Signed-off-by: Xu Chongyang <chongyang.xu@intel.com>
    (cherry picked from https://github.com/intel/ipu6-drivers/blob/5d5526d2b2811aa52590c2fa513ba989e7e594ab/patch/IOMMU-passthrough-for-intel-ipu.diff)
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 5ef7e8302bcfdd9eb906482464368f30ba799df1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Apr 14 08:21:33 2022 +0200

    UBUNTU: [Config] update configs and annotations after stable updates
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 82f85c21e1f1b034f310bc8f36ac37919f6c023a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 21 09:46:03 2022 +0100

    UBUNTU: Ubuntu-unstable-5.17.0-6.6
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9e8c66cb33a6624631c4bb88dbdcf3a138702f54
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 21 09:44:46 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1965731
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4cfbcd4522c99ccdfefc4fe501b0a944204befd5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 21 09:12:49 2022 +0100

    UBUNTU: rebase to v5.17
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 48906f34ac7f803455ae7d9467e6b99e60a96ac5
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 21 09:12:22 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 952bc52212b7bce7fcfc9ba757a660ae0e603389
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Fri Mar 18 13:58:06 2022 +0000

    UBUNTU: [Packaging] switch dependency from crda to wireless-regdb
    
    BugLink: https://bugs.launchpad.net/bugs/1958918
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>

commit 2f755fb3faedaba076dee03678ef0e7e7d9e6caa
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Mar 16 13:24:26 2022 +0100

    UBUNTU: [Config] disable CONFIG_SYSFB_SIMPLEFB on amd64
    
    CONFIG_SYSFB_SIMPLEFB was confirmed to break the fb on several x86-64
    kits, disable it for now.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1cfa68cbfbe043daa33dfbc7032d98de57966c3a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 14 13:15:50 2022 +0100

    UBUNTU: Ubuntu-unstable-5.17.0-5.5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b210aea7f5f7ea766646b69d7b6aebc1c2da36b8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 14 13:15:18 2022 +0100

    UBUNTU: [Config] update configs and annotations after rebase to v5.17-rc8
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e8e9955c680a16a17282701c106a12671b9ee693
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 14 11:53:36 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1964766
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6181054bd4d091857710a0580988d2bcf4f50b45
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 14 12:31:13 2022 +0100

    UBUNTU: rebase to v5.17-rc8
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 54c61da9e7bd7a04b2a90e1f69c9635d6de31dd8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 14 11:52:51 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b641c253eb6037ad6d26af2e58f52e2a9a0ff2f4
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu Mar 10 11:49:06 2022 +0000

    UBUNTU: [Packaging] resync dkms-build{,--nvidia-N} from LRMv5
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

commit 30125e3718feb2ddc4a33e83199b37447c37c7c4
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 7 10:20:48 2022 +0100

    UBUNTU: Ubuntu-unstable-5.17.0-4.4
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 134f96bc53eed50a9437bee9150b99fac59086c8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 7 10:16:33 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1963880
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 6955946fe66901ed26f395bfa17a3b35fc928f39
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 7 10:04:23 2022 +0100

    UBUNTU: rebase to v5.17-rc7
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9440a0725c5bc9bf82a38f204e590e47a1cf46a2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 7 10:01:50 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0b8d1a429c688089a8c609e9a01188934ad17902
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 28 09:42:32 2022 +0100

    UBUNTU: Ubuntu-unstable-5.17.0-3.3
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 701ceca6ebc0f192df093b08608b99e5753f2050
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 28 09:38:49 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1962450
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 2b04caf130ab2c4327d22c865b4fd2b9ef920a44
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 28 09:20:02 2022 +0100

    UBUNTU: rebase to v5.17-rc6
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d25c45736cb43e76aa9964d5b43d152cc56b3a1e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 28 09:19:28 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit ee5d119de12e435ccaa4bd173e35330cbff039ba
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Feb 24 09:41:40 2022 +0100

    UBUNTU: Ubuntu-unstable-5.17.0-2.2
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 126eeaf50b5307152ebad666c4632dd7c9b87cb1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Feb 24 09:39:43 2022 +0100

    UBUNTU: [Config] update configs and annotations after rebase to v5.17-rc5
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1385419c9c4b1330985b14936870e4a0c30ce4c8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Feb 24 09:32:35 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1962137
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit df8c430be840f8177a77f88f4b0bfd87215337c3
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Feb 24 09:05:27 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c246edde6f6be9c2ce45fbf7ff54cf3b753b93f0
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Feb 23 15:44:29 2022 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a9a8c78c25247b4bdeb67dbd21ceeabd6142610a
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Feb 23 15:43:07 2022 +0100

    UBUNTU: [Config] drop unused lowlatency configs
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fc2a8ecaa86d945814c6d0ce30732b043502c07d
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Feb 23 11:46:41 2022 +0100

    UBUNTU: [Packaging] update Ubuntu.md
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 859b325c2db25eb7461b0443e8af03c801891dda
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Feb 14 11:29:36 2022 +0100

    UBUNTU: SAUCE: Makefile: Fix compiler warnings
    
    When building out-of-tree (which we do for package builds), the compiler
    emits the following warning:
    
    cc1: warning: ubuntu/include: No such file or directory [-Wmissing-include-dirs]
    
    Fix that by (always) using the absolute path of the include directory.
    
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e9e40bedd9df9cfbf21cf5aca92304bfca35ac61
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Feb 14 11:29:35 2022 +0100

    UBUNTU: SAUCE: Makefile: Remove inclusion of lbm header files
    
    We haven't produced linux-headers-lbm packages in ages so stop trying
    to include their header files.
    
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Acked-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit cd4edfcfde8f66807e1bca4536252e77c4940f05
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Feb 7 14:21:00 2022 +0000

    UBUNTU: [Packaging] use xz compression for ddebs
    
    ddebs are huge in size, and rarely used. Keep them xz compressed.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a8229e6b3359d2e5b1a219b88bafc7b3f30049a1
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Feb 7 14:20:59 2022 +0000

    UBUNTU: [Packaging] do not use compression for image packages
    
    linux-image-ABI packages contain compressed content only (vmlinuz,
    changelog) and thus the deb does not benefit at all from being
    recompressed again. Only copyring file is compressed. We can actually
    avoid shipping /doc/ at all, by symlinking it to the modules package
    provided /doc/.
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f463107c7c5cd008f0691b299a44e18c0a3adeda
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Mon Feb 7 14:20:58 2022 +0000

    UBUNTU: [Packaging] use default zstd compression
    
    Revert "UBUNTU: [Packaging] enforce xz compression for debs"
    
    This reverts commit 45da4d72dea537910d970211ff8c345f4f9a2775.
    
    The previous commit incorrectly stated that jammy dpkg default has
    switched from xz to zstd. This change was done late in impish
    cycle. [1] It also incorrectly states that there are no evident benefits
    for the kernel packages to use zstd.
    
    It is correct that zstd compression may require more
    resources. However, the decompression speed and decompression memory
    requirements are a lot faster. The choice to switch from xz to zstd by
    default in Ubuntu was done to speed up installation and upgrade of all
    packages, at the expense of slightly larger download sizes.
    
    If we do want to futher optimize compression methods it should
    probably be done on per subpackage type. For example, linux-image-ABI
    already contains compressed kernel image and not much else, we can
    choose to not compress that deb at all with compression method
    none. Debug symbols are usually rarely installed, thus it might make
    sense to keep them small and thus choose compress ddebs with
    xz. However modules and tools should remain compressed with zstd.
    
    [1] https://launchpad.net/ubuntu/+source/dpkg/1.20.9ubuntu2
    
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 5b0160214e44f695990d8d378aa25c617c841b03
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 10 15:34:09 2022 +0100

    UBUNTU: [Config] disable FRAMEBUFFER_CONSOLE_LEGACY_ACCELERATION
    
    BugLink: https://bugs.launchpad.net/bugs/1960516
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a4b47e24e3dfd9278a729f937628450042ec8613
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 3 17:18:21 2022 +0100

    UBUNTU: [packaging] unhook lowlatency flavours from the build
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f2476390afe68fa8d57f133a73f69bc724c30e45
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 16:56:27 2022 +0100

    UBUNTU: [Packaging] Update dependency of pahole / dwarves
    
    We need pahole >= 1.21 to properly support BTF, pahole used to be
    provided by dwarves, but this package is going to be renamed into pahole
    starting with jammy.
    
    So to be as generic as possible, and facilitate the porting of this rule
    across all kernels, specify a single dependency as following:
    
     - if we are in jammy => just depend on pahole
     - all the releases < jammy => depend on dwarves >= 1.21
    
    Also add riscv64 to the list of architectures that require pahole.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4bcf084cad191707d03b8faae975760a1f38f5e8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Feb 22 16:57:08 2022 +0100

    UBUNTU: [Packaging] resync getabis
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c2494f5496f43f54abf2b01d8a8ce29b937581ab
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 21 08:22:18 2022 +0100

    UBUNTU: Ubuntu-unstable-5.17.0-1.1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 047ba7f1637107a3910d9866b827473c70a16459
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 21 07:48:36 2022 +0100

    UBUNTU: debian/dkms-versions -- update from kernel-versions (main/master)
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit b535ffdba33080a0e92afb50bb1661d635fcceeb
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Feb 1 09:09:14 2022 +0100

    UBUNTU: [Config] update configs and annotation after rebase to 5.17-rc1
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 7e7ecca163b623e6be7081ca466b5596cfbd142f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 17:54:58 2022 +0100

    UBUNTU: link-to-tracker: update tracking bug
    
    BugLink: https://bugs.launchpad.net/bugs/1959422
    Properties: no-test-build
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 54be9cea07cd1dea2df5a4f772c84b1930fe8ba2
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 17:27:23 2022 +0100

    UBUNTU: Start new release
    
    Ignore: yes
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d887c98ac058fd7d45bdb7507c43738a0de2f267
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 17:19:00 2022 +0100

    UBUNTU: [Packaging] update Ubuntu.md
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 93a1deb174694b9cd51de2742fb620c646c4d81e
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 17:19:00 2022 +0100

    UBUNTU: [Packaging] resync getabis
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 576ab5f8329f67a7c18c3267e63dd12fbd5698a8
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 17:19:00 2022 +0100

    UBUNTU: [Packaging] update variants
    
    BugLink: https://bugs.launchpad.net/bugs/1786013
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 40410dd0f124befa73805ab91abaeb3e2821fe33
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Jan 28 17:15:40 2022 +0100

    UBUNTU: [Packaging] rename kernel to linux-unstable
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 916106256779f124d5c8b56f28d43537eadbccf1
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Feb 22 14:55:09 2021 +0100

    UBUNTU: [Packaging] initial packaging import from jammy:linux (5.15)
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 293a6e4778989057858f84612b4a45c9bc832e0c
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Wed Jan 12 09:26:20 2022 -0300

    UBUNTU: SAUCE: vfs: test that one given mount param is not larger than PAGE_SIZE
    
    In order to avoid potential overflows, test that one given mount parameter
    is not larger than PAGE_SIZE when parsing it through legacy_parse_param.
    
    Suggested-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    CVE-2022-0185
    Acked-by: Andy Whitcroft <andy.whitcroft@canonical.com>
    Acked-by: Ben Romer <ben.romer@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a5941dcd13fbdbc6e5dff4e94156c12b7d626faf
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Fri Dec 17 11:14:24 2021 +0100

    UBUNTU: SAUCE: allow to use __wake_up_pollfree() from GPL modules
    
    commit ebafbcf7f32d ("UBUNTU: SAUCE: binder: turn into module")
    is changing binder to be a module, but __wake_up_pollfree() can only be
    used internally by the kernel.
    
    Make __wake_up_pollfree an EXPORT_SYMBOL_GPL so that it can be used by
    the binder module.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit de2501762265888ebc951e15d3c74c78e97b150f
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Dec 6 17:34:47 2021 +0100

    UBUNTU: SAUCE: ipv6: fix NULL pointer dereference in ip6_output()
    
    It is possible to trigger a NULL pointer dereference by running the srv6
    net kselftest (tools/testing/selftests/net/srv6_end_dt46_l3vpn_test.sh):
    
    [  249.051216] BUG: kernel NULL pointer dereference, address: 0000000000000378
    [  249.052331] #PF: supervisor read access in kernel mode
    [  249.053137] #PF: error_code(0x0000) - not-present page
    [  249.053960] PGD 0 P4D 0
    [  249.054376] Oops: 0000 [#1] PREEMPT SMP NOPTI
    [  249.055083] CPU: 1 PID: 21 Comm: ksoftirqd/1 Tainted: G            E     5.16.0-rc4 #2
    [  249.056328] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
    [  249.057632] RIP: 0010:ip6_forward+0x53c/0xab0
    [  249.058354] Code: 49 c7 44 24 20 00 00 00 00 48 83 e0 fe 48 8b 40 30 48 3d 70 b2 b5 81 0f 85 b5 04 00 00 e8 7c f2 ff ff 41 89 c5 e9 17 01 00 00 <44> 8b 93 78 03 00 00 45 85 d2 0f 85 92 fb ff ff 49 8b 54 24 10 48
    [  249.061274] RSP: 0018:ffffc900000cbb30 EFLAGS: 00010246
    [  249.062042] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8881051d3400
    [  249.063141] RDX: ffff888104bda000 RSI: 00000000000002c0 RDI: 0000000000000000
    [  249.064264] RBP: ffffc900000cbbc8 R08: 0000000000000000 R09: 0000000000000000
    [  249.065376] R10: 0000000000000040 R11: 0000000000000000 R12: ffff888103409800
    [  249.066498] R13: ffff8881051d3410 R14: ffff888102725280 R15: ffff888103525000
    [  249.067619] FS:  0000000000000000(0000) GS:ffff88813bc80000(0000) knlGS:0000000000000000
    [  249.068881] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  249.069777] CR2: 0000000000000378 CR3: 0000000104980000 CR4: 0000000000750ee0
    [  249.070907] PKRU: 55555554
    [  249.071337] Call Trace:
    [  249.071730]  <TASK>
    [  249.072070]  ? debug_smp_processor_id+0x17/0x20
    [  249.072807]  seg6_input_core+0x2bb/0x2d0
    [  249.073436]  ? _raw_spin_unlock_irqrestore+0x29/0x40
    [  249.074225]  seg6_input+0x3b/0x130
    [  249.074768]  lwtunnel_input+0x5e/0xa0
    [  249.075357]  ip_rcv+0x17b/0x190
    [  249.075867]  ? update_load_avg+0x82/0x600
    [  249.076514]  __netif_receive_skb_one_core+0x86/0xa0
    [  249.077231]  __netif_receive_skb+0x15/0x60
    [  249.077843]  process_backlog+0x97/0x160
    [  249.078389]  __napi_poll+0x31/0x170
    [  249.078912]  net_rx_action+0x229/0x270
    [  249.079506]  __do_softirq+0xef/0x2ed
    [  249.080085]  run_ksoftirqd+0x37/0x50
    [  249.080663]  smpboot_thread_fn+0x193/0x230
    [  249.081312]  kthread+0x17a/0x1a0
    [  249.081847]  ? smpboot_register_percpu_thread+0xe0/0xe0
    [  249.082677]  ? set_kthread_struct+0x50/0x50
    [  249.083340]  ret_from_fork+0x22/0x30
    [  249.083926]  </TASK>
    [  249.090295] ---[ end trace 1998d7ba5965a365 ]---
    
    It looks like commit 0857d6f8c759 ("ipv6: When forwarding count rx stats
    on the orig netdev") tries to determine the right netdev to account the
    rx stats, but in this particular case it's failing and the netdev is
    NULL.
    
    Fallback to the previous method of determining the netdev interface (via
    skb->dev) to account the rx stats when the orig netdev can't be
    determined.
    
    Fixes: 0857d6f8c759 ("ipv6: When forwarding count rx stats on the orig netdev")
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    (cherry picked from https://lore.kernel.org/lkml/20211206163447.991402-1-andrea.righi@canonical.com/T/#u)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1cc7fe1936bf5992f7a0934bf7af2509f4d7d442
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Nov 15 17:52:27 2021 +0100

    UBUNTU: SAUCE: selftests/seccomp: fix check of fds being assigned
    
    There might be an arbitrary free open fd slot when we run the addfd
    sub-test, so checking for progressive numbers of file descriptors
    starting from memfd is not always a reliable check and we could get the
    following failure:
    
      #  RUN           global.user_notification_addfd ...
      # seccomp_bpf.c:3989:user_notification_addfd:Expected listener (18) == nextfd++ (9)
      # user_notification_addfd: Test terminated by assertion
    
    Simply check if memfd and listener are valid file descriptors and start
    counting for progressive file checking with the listener fd.
    
    Fixes: 93e720d710df ("selftests/seccomp: More closely track fds being assigned")
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    (cherry picked from https://lore.kernel.org/all/20211115165227.101124-1-andrea.righi@canonical.com/)
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a2b9c5bf9e95a103691b637a3bf1359c6a4c0bc4
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Mon Oct 11 12:16:24 2021 +0800

    UBUNTU: SAUCE: PCI/ASPM: Introduce a new helper to report ASPM capability
    
    BugLink: https://bugs.launchpad.net/bugs/1946433
    
    Introduce a new helper, pcie_aspm_capable(), to report ASPM capability.
    
    The user will be introduced by next patch.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    (cherry picked from https://patchwork.ozlabs.org/project/linux-pci/patch/20211007161552.272771-2-kai.heng.feng@canonical.com/)
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 07a56967e827151e7f816fc8c1fa1838503d692f
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Fri Nov 12 19:09:06 2021 -0300

    UBUNTU: SAUCE: ACPICA: avoid accessing operands out-of-bounds
    
    BugLink: https://bugs.launchpad.net/bugs/1942215
    
    When the Timer operation is called, there are no arguments, and
    acpi_ex_resolve_operands will be called with an out-of-bounds stack pointer
    as num_operands is 0.
    
    This does not usually cause any problems, as acpi_ex_resolve_operands will
    ignore the parameter when the operation requires no arguments, as is the
    case.
    
    However, when the code is compiled with UBSAN, it will trigger, leading to
    an oops with invalid opcode on Linux.
    
    Fix it by using a NULL parameter when num_operands is 0.
    
    [    8.285428] invalid opcode: 0000 [#1] SMP NOPTI
    [    8.286436] CPU: 18 PID: 1522 Comm: systemd-udevd Not tainted 5.15.0-10-generic #10
    [    8.287505] Hardware name: Intel Corporation S2600WFD/S2600WFD, BIOS SE5C620.86B.0D.01.0395.022720191340 02/27/2019
    [    8.288495] RIP: 0010:acpi_ds_exec_end_op+0x1be/0x7a6
    [    8.289658] Code: 7b 0a 48 89 da 44 89 45 d4 48 98 48 8d 34 c3 e8 f8 3c 01 00 44 8b 45 d4 85 c0 41 89 c6 75 22 eb 9e 44 89 c0 41 80 f8 0b 76 02 <0f> 0b 48 8b 04 c5 c0 c0 ca aa 48 89 df ff d0 0f 1f 00 41 89 c4 eb
    [    8.291858] RSP: 0018:ffffc38561a3f6d0 EFLAGS: 00010286
    [    8.292888] RAX: 0000000000000000 RBX: ffffa0aa87c91800 RCX: 0000000000000040
    [    8.294056] RDX: ffffffffffffffff RSI: ffffffffaacabf40 RDI: 00000000000002cb
    [    8.295839] RBP: ffffc38561a3f700 R08: 0000000000000000 R09: ffffa0aa9f5a1000
    [    8.296030] IPMI message handler: version 39.2
    [    8.297554] R10: ffffa0aa89cdec00 R11: 0000000000000003 R12: 0000000000000000
    [    8.297556] R13: ffffa0aa9f5a10a0 R14: 0000000000000000 R15: 0000000000000000
    [    8.297558] FS:  00007f68ba26b8c0(0000) GS:ffffa0d60ca80000(0000) knlGS:0000000000000000
    [    8.297560] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    8.297561] CR2: 00007fdbb3b9eec8 CR3: 00000001176ba001 CR4: 00000000007706e0
    [    8.297563] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    8.297564] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    8.297565] PKRU: 55555554
    [    8.297566] Call Trace:
    [    8.297569]  acpi_ps_parse_loop+0x587/0x660
    [    8.297574]  acpi_ps_parse_aml+0x1af/0x552
    [    8.297578]  acpi_ps_execute_method+0x208/0x2ca
    [    8.297580]  acpi_ns_evaluate+0x34e/0x4f0
    [    8.297583]  acpi_evaluate_object+0x18e/0x3b4
    [    8.297587]  acpi_evaluate_dsm+0xb3/0x120
    [    8.297593]  ? acpi_evaluate_dsm+0xb3/0x120
    [    8.297596]  nfit_intel_shutdown_status+0xed/0x1a0 [nfit]
    [    8.297606]  acpi_nfit_add_dimm+0x3cb/0x660 [nfit]
    [    8.297614]  acpi_nfit_register_dimms+0x141/0x460 [nfit]
    [    8.297620]  acpi_nfit_init+0x54f/0x620 [nfit]
    [    8.327895]  acpi_nfit_add+0x18c/0x1f0 [nfit]
    [    8.329341]  acpi_device_probe+0x49/0x170
    [    8.330815]  really_probe+0x209/0x410
    [    8.330820]  __driver_probe_device+0x109/0x180
    [    8.330823]  driver_probe_device+0x23/0x90
    [    8.330825]  __driver_attach+0xac/0x1b0
    [    8.330828]  ? __device_attach_driver+0xe0/0xe0
    [    8.330831]  bus_for_each_dev+0x7c/0xc0
    [    8.330834]  driver_attach+0x1e/0x20
    [    8.330835]  bus_add_driver+0x135/0x1f0
    [    8.330837]  driver_register+0x95/0xf0
    [    8.330840]  acpi_bus_register_driver+0x39/0x50
    [    8.344874]  nfit_init+0x168/0x1000 [nfit]
    [    8.344882]  ? 0xffffffffc0735000
    [    8.344885]  do_one_initcall+0x46/0x1d0
    [    8.350927]  ? kmem_cache_alloc_trace+0x18c/0x2c0
    [    8.350933]  do_init_module+0x62/0x290
    [    8.350940]  load_module+0xaa3/0xb30
    [    8.350944]  __do_sys_finit_module+0xbf/0x120
    [    8.350948]  __x64_sys_finit_module+0x18/0x20
    [    8.350951]  do_syscall_64+0x59/0xc0
    [    8.350955]  ? exit_to_user_mode_prepare+0x37/0xb0
    [    8.350959]  ? irqentry_exit_to_user_mode+0x9/0x20
    [    8.350963]  ? irqentry_exit+0x19/0x30
    [    8.350965]  ? exc_page_fault+0x89/0x160
    [    8.350968]  ? asm_exc_page_fault+0x8/0x30
    [    8.350971]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [    8.350975] RIP: 0033:0x7f68ba7fc94d
    [    8.350978] Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d b3 64 0f 00 f7 d8 64 89 01 48
    [    8.350980] RSP: 002b:00007ffc7e0b93c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    [    8.350984] RAX: ffffffffffffffda RBX: 000055bbb29a4a00 RCX: 00007f68ba7fc94d
    [    8.350985] RDX: 0000000000000000 RSI: 00007f68ba9923fe RDI: 0000000000000006
    [    8.350987] RBP: 0000000000020000 R08: 0000000000000000 R09: 0000000000000000
    [    8.350988] R10: 0000000000000006 R11: 0000000000000246 R12: 00007f68ba9923fe
    [    8.350989] R13: 000055bbb28e3a20 R14: 000055bbb297d940 R15: 000055bbb297ea60
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 470ba6d1781601da53296496d8fbf882a678b3db
Author: Kunyang_Fan <kunyang_fan@asus.com>
Date:   Tue Aug 24 15:26:59 2021 +0800

    UBUNTU: ODM: mfd: Check AAEON BFPI version before adding device
    
    BugLink: https://bugs.launchpad.net/bugs/1937897
    
    For the below: error log occurring in some devices:
    gpio gpiochip0: (gpio_aaeon): tried to insert a GPIO chip with zero lines
    gpiochip_add_data_with_key: GPIOs 0..-1 (gpio_aaeon) failed to register
    
    Add the BFPI version checking mechanism to prevent error log bumping.
    
    Fixes: 424945128781 ("UBUNTU: ODM: mfd: Add support for IO functions of AAEON devices")
    Signed-off-by: Kunyang_Fan <kunyang_fan@asus.com>
    Acked-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8c310396950db42215f3fc3b2abd451466d25aca
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Mon Aug 9 17:22:38 2021 +0200

    UBUNTU: SAUCE: arm: Fix instruction set selection for GCC 11
    
    BugLink: https://bugs.launchpad.net/bugs/1939308
    
    GCC 11 on ARM now complains like the following when trying to determine if
    an arch is supported. Presumably because it enforces the default option
    which (in our case) is '--with-float=hard'?
      $ arm-linux-gnueabihf-gcc-11 -march=armv7-a -c -x c /dev/null
      cc1: error: ‘-mfloat-abi=hard’: selected architecture lacks an FPU
    
    Due to that, the kernel build system selects the wrong compiler options
    which throws errros like this:
      /tmp/ccrHfZPj.s: Assembler messages:
      /tmp/ccrHfZPj.s:116: Error: selected processor does not support `dmb ish' in ARM mode
      /tmp/ccrHfZPj.s:150: Error: selected processor does not support `isb ' in ARM mode
      /tmp/ccrHfZPj.s:160: Error: selected processor does not support `mrrc p15,1,r4,r5,c14' in ARM mode
      /tmp/ccrHfZPj.s:245: Error: selected processor does not support `dmb ish' in ARM mode
      /tmp/ccrHfZPj.s:503: Error: selected processor does not support `dmb ish' in ARM mode
      /tmp/ccrHfZPj.s:527: Error: selected processor does not support `dmb ish' in ARM mode
      /tmp/ccrHfZPj.s:698: Error: selected processor does not support `dmb ish' in ARM mode
      /tmp/ccrHfZPj.s:731: Error: selected processor does not support `isb ' in ARM mode
    
    Fix that by moving the option '-msoft-float' up before the
    'arch-$(CONFIG_CPU_<foo>)' instruction selection macros.
    
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit b3a4e9889cb8531c2c1a7eef692ae939106e1852
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Jul 21 16:22:24 2021 +0000

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: update return code for uart_chars_in_buffer(()
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6bb3e8064a856453848165c8a72e2af9d27c596c
Author: Kunyang_Fan <kunyang_fan@asus.com>
Date:   Wed Jun 16 13:56:58 2021 +0800

    UBUNTU: ODM: mfd: Add support for IO functions of AAEON devices
    
    BugLink: https://bugs.launchpad.net/bugs/1929504
    
    This adds the supports for multiple IO functions of the
    AAEON x86 devices and makes use of the WMI interface to
    control the these IO devices including:
    
    - GPIO
    - LED
    - Watchdog
    - HWMON
    
    It also adds the mfd child device drivers to support
    the above IO functions.
    
    Signed-off-by: Kunyang_Fan <kunyang_fan@asus.com>
    Review-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Review-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 93d1e6cb39faa67f5e11f99e83c73b3117970050
Author: Kunyang_Fan <kunyang_fan@asus.com>
Date:   Wed Jun 16 13:56:59 2021 +0800

    UBUNTU: ODM: gpio: add driver for AAEON devices
    
    BugLink: https://bugs.launchpad.net/bugs/1929504
    
    This patch add support for the GPIO pins whose control are
    transported to BIOS through ASUS WMI interface.
    
    Signed-off-by: Kunyang_Fan <kunyang_fan@asus.com>
    Review-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Review-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 0cf531169113c060b9333e4b7c487c2391843a5c
Author: Kunyang_Fan <kunyang_fan@asus.com>
Date:   Wed Jun 16 13:57:02 2021 +0800

    UBUNTU: ODM: leds: add driver for AAEON devices
    
    BugLink: https://bugs.launchpad.net/bugs/1929504
    
    This patch adds support for the led devices which can
    be controlled from sysfs through ASUS WMI interface.
    
    Signed-off-by: Kunyang_Fan <kunyang_fan@asus.com>
    Review-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Review-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1e6e88c0d9505be4de102a115b54ea03110c3e1c
Author: Kunyang_Fan <kunyang_fan@asus.com>
Date:   Wed Jun 16 13:57:01 2021 +0800

    UBUNTU: ODM: hwmon: add driver for AAEON devices
    
    BugLink: https://bugs.launchpad.net/bugs/1929504
    
    This refator patch adds support for the hwmon information
    which are transported to userspace through ASUS WMI interface.
    
    Signed-off-by: Kunyang_Fan <kunyang_fan@asus.com>
    Review-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Review-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8f49f5e43bcf387ffd2e3932e47f5282007dcba8
Author: Seth Forshee <sforshee@kernel.org>
Date:   Thu Jun 17 14:48:08 2021 -0500

    UBUNTU: SAUCE: Revert "net/tls(TLS_SW): Add selftest for 'chunked' sendfile test"
    
    This reverts commit 0e6fbe39bdf71b4e665767bcbf53567a3e6d0623. Based
    on the commit message, this commit was added to demonstrate a problem
    with sendfile when using ktls, but there's no indication that this
    problem has ever been fixed. I'm inquiring about this upstream [1],
    but in the mean time let's remove this test as it looks like its
    expected to fail.
    
    [1] https://lore.kernel.org/netdev/YMumgy19CXCk5rZD@ubuntu-x1/
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 3db45d39b79463e8a1972234cbe3f6ad1778a722
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Wed Jun 16 11:05:12 2021 +0200

    UBUNTU: SAUCE: selftests: seccomp: bump up timeout to 5min
    
     DEBUG| [stdout] # selftests: seccomp: seccomp_benchmark
     DEBUG| [stdout] # net.core.bpf_jit_enable = 1
     DEBUG| [stdout] # net.core.bpf_jit_harden = 0
     DEBUG| [stdout] #
     DEBUG| [stdout] not ok 2 selftests: seccomp: seccomp_benchmark # TIMEOUT 120 seconds
    
    This test can easily fail if the testing environment is a bit
    overloaded, so bump up the timeout to 5min to prevent false positive
    failures.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Colin Ian King <colin.king@canonical.com>

commit efb4129066885290da63cc43f190b85d29d9c27e
Author: Alex Hung <alexhung@gmail.com>
Date:   Fri May 21 18:12:03 2021 -0600

    UBUNTU: SAUCE: iwlwifi: add new pci id for 6235
    
    lspci output:
    Network controller [0280]: Intel Corporation Centrino Advanced-N6235
     [8086:088f] (rev 24)
     Subsystem: Intel Corporation Centrino Advanced-N 6235 [8086:526a]
    
    BugLink: https://bugs.launchpad.net/bugs/1920180
    
    Signed-off-by: Alex Hung <alex.hung@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 6b86032e0503ac776480fde58e4a7921c10a28ad
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue May 18 10:56:42 2021 +0100

    UBUNTU: SAUCE: integrity: add informational messages when revoking certs
    
    integrity_load_cert() prints messages of the source and cert details
    when adding certs as trusted. Mirror those messages in
    uefi_revocation_list_x509() when adding certs as revoked.
    
    Sample dmesg with this change:
    
        integrity: Platform Keyring initialized
        integrity: Loading X.509 certificate: UEFI:db
        integrity: Loaded X.509 cert 'Microsoft Corporation UEFI CA 2011: 13adbf4309bd82709c8cd54f316ed522988a1bd4'
        integrity: Revoking X.509 certificate: UEFI:MokListXRT (MOKvar table)
        blacklist: Revoked X.509 cert 'Canonical Ltd. Secure Boot Signing: 61482aa2830d0ab2ad5af10b7250da9033ddcef0'
        integrity: Loading X.509 certificate: UEFI:MokListRT (MOKvar table)
        integrity: Loaded X.509 cert 'Canonical Ltd. Master Certificate Authority: ad91990bc22ab1f517048c23b6655a268e345a63'
    
    BugLink: https://bugs.launchpad.net/bugs/1928679
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 0ba9d50442228e6dce0d1a9ff7b34a96bb06846b
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue May 18 10:56:41 2021 +0100

    UBUNTU: SAUCE: integrity: Load mokx certs from the EFI MOK config table
    
    Refactor load_moklist_certs() to load either MokListRT into db, or
    MokListXRT into dbx. Call load_moklist_certs() twice - first to load
    mokx certs into dbx, then mok certs into db.
    
    This thus now attempts to load mokx certs via the EFI MOKvar config
    table first, and if that fails, via the EFI variable. Previously mokx
    certs were only loaded via the EFI variable. Which fails when
    MokListXRT is large. Instead of large MokListXRT variable, only
    MokListXRT{1,2,3} are available which are not loaded. This is the case
    with Ubuntu's 15.4 based shim. This patch is required to address
    CVE-2020-26541 when certificates are revoked via MokListXRT.
    
    Fixes: ebd9c2ae369a ("integrity: Load mokx variables into the blacklist keyring")
    BugLink: https://bugs.launchpad.net/bugs/1928679
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 1992df907fa0ba0c1c2fe4ff916ab68e3939594c
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue May 11 09:30:51 2021 +0200

    UBUNTU: SAUCE: make ASYNCB_INITIALIZED available for the kernel
    
    The flag ASYNCB_INITIALIZED is required by our driver
    ubuntu/xr-usb-serial. Make it available to kernel code to prevent the
    following build failure:
    
     ./build/ubuntu/xr-usb-serial/xr_usb_serial_common.c:1613:15: error: 'ASYNCB_INITIALIZED' undeclared (first use in this function); did you mean 'RCU_INITIALIZER'?
      1613 |  if (test_bit(ASYNCB_INITIALIZED, &xr_usb_serial->port.flags))
           |               ^~~~~~~~~~~~~~~~~~
           |               RCU_INITIALIZER
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 342775581d53579cc1dbb5b0a2a74e759341aec8
Author: Daniel Axtens <dja@axtens.net>
Date:   Thu Apr 2 16:16:32 2020 +1100

    UBUNTU: SAUCE: (lockdown) powerpc: lock down kernel in secure boot mode
    
    BugLink: https://bugs.launchpad.net/bugs/1855668
    
    PowerNV has recently gained Secure Boot support. If it's enabled through
    the firmware and bootloader stack, then lock down the kernel.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    (cherry picked from commit d4f3f12e040caf3ec669726efb67b27550a4713f)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit f3f0fc193f9076d7e24069dd943e53a00fd58c2b
Author: Seth Forshee <sforshee@kernel.org>
Date:   Thu Oct 10 11:19:32 2019 -0500

    UBUNTU: SAUCE: (lockdown) security: lockdown: Make CONFIG_LOCK_DOWN_IN_EFI_SECURE_BOOT more generic
    
    s390 supports secure boot which is not based on EFI. Change the
    config option to be more generic, and allow it to be enabled on
    s390.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    (cherry picked from commit dd9548a9eb3f2a34ee7c60abce157f8e2868e7c7)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 9ee8c089e10473518fcff1c2ea4d9655b8f8fee5
Author: Seth Forshee <sforshee@kernel.org>
Date:   Thu Oct 10 10:57:25 2019 -0500

    UBUNTU: SAUCE: (lockdown) arm64: Allow locking down the kernel under EFI secure boot
    
    Add support to arm64 for the CONFIG_LOCK_DOWN_IN_EFI_SECURE_BOOT
    option. When enabled the lockdown LSM will be enabled with
    maximum confidentiality when booted under EFI secure boot.
    
    Based on an earlier patch by Linn Crosetto.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    
    [v2: ported to 5.7-rc1 and adapted to the new fdt parsing mechanism]
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    (cherry picked from commit fb9c9645d977e23e9b494ce008d31507d872ffef)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit dd811724d204a4b5fdf932a2d95d7b0a3c259623
Author: Robert Holmes <robeholmes@gmail.com>
Date:   Tue Apr 23 07:39:29 2019 +0000

    UBUNTU: SAUCE: (lockdown) KEYS: Make use of platform keyring for module signature verify
    
    This patch completes commit 278311e417be ("kexec, KEYS: Make use of
    platform keyring for signature verify") which, while adding the
    platform keyring for bzImage verification, neglected to also add
    this keyring for module verification.
    
    As such, kernel modules signed with keys from the MokList variable
    were not successfully verified.
    
    Signed-off-by: Robert Holmes <robeholmes@gmail.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    (cherry picked from commit b697ff5e26974fee8fcd31a1e221e9dd41515efc
    from https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 8020185fb672bf41dcdaa23e86bcf5f61a25893f
Author: Jeremy Cline <jcline@redhat.com>
Date:   Wed Oct 30 14:37:49 2019 +0000

    UBUNTU: SAUCE: (lockdown) s390: Lock down the kernel when the IPL secure flag is set
    
    Automatically lock down the kernel to LOCKDOWN_CONFIDENTIALITY_MAX if
    the IPL secure flag is set.
    
    Upstream Status: RHEL only
    Suggested-by: Philipp Rudo <prudo@redhat.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    (cherry picked from commit 2384646bf71d8c282cf49bb20321fdf802c61cce
    https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1fbcfa2e26db30a223f6e1c589b85cae2cfb7dcf
Author: David Howells <dhowells@redhat.com>
Date:   Mon Sep 30 21:28:16 2019 +0000

    UBUNTU: SAUCE: (lockdown) efi: Lock down the kernel if booted in secure boot mode
    
    UEFI Secure Boot provides a mechanism for ensuring that the firmware
    will only load signed bootloaders and kernels.  Certain use cases may
    also require that all kernel modules also be signed.  Add a
    configuration option that to lock down the kernel - which includes
    requiring validly signed modules - if the kernel is secure-booted.
    
    Upstream Status: RHEL only
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    (cherry picked from commit 5850c93175b9d2e1081873f4bbe08dead202cb08
    from https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    [ arighi: context adjustment in arch/x86/kernel/setup.c ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit fc077423b84e6ba618043a8894606ad96ce2eaa7
Author: David Howells <dhowells@redhat.com>
Date:   Tue Feb 27 10:04:55 2018 +0000

    UBUNTU: SAUCE: (lockdown) efi: Add an EFI_SECURE_BOOT flag to indicate secure boot mode
    
    UEFI machines can be booted in Secure Boot mode.  Add an EFI_SECURE_BOOT
    flag that can be passed to efi_enabled() to find out whether secure boot is
    enabled.
    
    Move the switch-statement in x86's setup_arch() that inteprets the
    secure_boot boot parameter to generic code and set the bit there.
    
    Upstream Status: RHEL only
    Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    cc: linux-efi@vger.kernel.org
    [Rebased for context; efi_is_table_address was moved to arch/x86]
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    (cherry picked from commit 53250b991f841be025fa4d264850dadc0fae2861
    from https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1cdab98f596e12775b8e689c8963080af61319cd
Author: Jeremy Cline <jcline@redhat.com>
Date:   Mon Sep 30 21:22:47 2019 +0000

    UBUNTU: SAUCE: (lockdown) security: lockdown: expose a hook to lock the kernel down
    
    In order to automatically lock down kernels running on UEFI machines
    booted in Secure Boot mode, expose the lock_kernel_down() hook.
    
    Upstream Status: RHEL only
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    (cherry picked from commit 72223fd1241cc5c70b96a491db14d54c83beadd8 from https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    [ arighi: context adjustments for 6.4-rc1 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d7e68fb4089c8063a690871eb19947cfc0dc224f
Author: Peter Jones <pjones@redhat.com>
Date:   Mon Oct 2 18:18:30 2017 -0400

    UBUNTU: SAUCE: (lockdown) Make get_cert_list() use efi_status_to_str() to print error messages.
    
    Upstream Status: RHEL only
    Signed-off-by: Peter Jones <pjones@redhat.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    (cherry picked from commit 7ba28f03674fa9346610c3fea7fc93bc58f06d2a
    from https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 1498408ec488831f6596f7ae312c18f4155bc6c6
Author: Peter Jones <pjones@redhat.com>
Date:   Mon Oct 2 18:22:13 2017 -0400

    UBUNTU: SAUCE: (lockdown) Add efi_status_to_str() and rework efi_status_to_err().
    
    This adds efi_status_to_str() for use when printing efi_status_t
    messages, and reworks efi_status_to_err() so that the two use a common
    list of errors.
    
    Upstream Status: RHEL only
    Signed-off-by: Peter Jones <pjones@redhat.com>
    (cherry picked from commit 2ae9082db0b54d831a9b3782c049d9917e37d89f
    from https://gitlab.com/cki-project/kernel-ark)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 4c011efab40f6d2d401fdcc111c6a4a92e13acc4
Author: David Abdurachmanov <david.abdurachmanov@sifive.com>
Date:   Tue Mar 16 21:31:04 2021 +0000

    UBUNTU: SAUCE: riscv: sifive: fu740: cpu{1, 2, 3, 4} set compatible to sifive, u74-mc
    
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@sifive.com>
    Signed-off-by: Dimitri John Ledkov <xnox@ubuntu.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit a26259c791679e5382ae5e416e84b5cf100306bd
Author: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
Date:   Mon Mar 15 16:05:40 2021 +0800

    UBUNTU: SAUCE: Input: i8042 - add dmi quirk
    
    BugLink: https://bugs.launchpad.net/bugs/1919123
    
    On some platforms, the EC doesn't support the register reading sequence
    for sentelic[1], and then make the EC can't respond commands for a while
    when probing. It leads to the keyboard non-responsive for around 10
    seconds while waking up from s2idle.
    
    [   44.304488] i8042: [9804] d4 -> i8042 (command)
    [   44.304634] i8042: [9804] f3 -> i8042 (parameter)
    [   44.304787] i8042: [9804] fa <- i8042 (interrupt, 1, 12)
    [   44.304855] i8042: [9804] d4 -> i8042 (command)
    [   44.304938] i8042: [9804] 66 -> i8042 (parameter)
    [   44.337698] i8042: [9813] d4 -> i8042 (command)
    [   44.905695] i8042: [9942] 88 -> i8042 (parameter)
    [   45.497478] i8042: [10102] d4 -> i8042 (command)
    [   46.098041] i8042: [10253] f3 -> i8042 (parameter)
    [   46.098070] i8042: [10253] fe <- i8042 (interrupt, 1, 12)
    [   46.718154] i8042: [10386] d4 -> i8042 (command)
    [   47.309915] i8042: [10386] f4 -> i8042 (parameter)
    [   47.918961] i8042: [10556] d4 -> i8042 (command)
    [   48.402624] i8042: [10556] f6 -> i8042 (parameter)
    
    A DMI quirk to mark this platform doesn't have aux device could avoid those
    commands to be sent. And the system could still using i2c interface to
    communicate with the touchpad.
    
    1. https://www.kernel.org/doc/html/v5.11/input/devices/sentelic.html#programming-sequence-for-register-reading-writing
    
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    (cherry picked from https://lkml.org/lkml/2021/3/15/126)
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9f0040bcae95f981184f06ac4e41bd72b6e2bff4
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Feb 18 15:58:21 2021 +0100

    UBUNTU: SAUCE: selftests: memory-hotplug: bump timeout to 10min
    
    $ sudo make -C tools/testing/selftests/memory-hotplug run_tests
    TAP version 13
    1..1
    ...
    15:11:09 DEBUG| [stdout] not ok 1 selftests: memory-hotplug: mem-on-off-test.sh # TIMEOUT 45 seconds
    
    The memory-hotplug selftest can take up to several minutes, depending on memory
    size and cpu speed of the testbench, so bump timeout to 10 minutes.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 8b08d2137b38f98b5d7d55d388c3579af8c15fe0
Author: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
Date:   Thu Dec 17 16:08:58 2020 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: add get_display_mode command
    
    BugLink: https://bugs.launchpad.net/bugs/1865402
    
    ODM asks us to use get_display_mode command to confirm the scalar's
    behavior, and Windows use this command, too.
    To align the behavior with Windows, remove get_scalar_status command and
    replace it with get_display_mode.
    
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a79f59c0cd9db4ae12b6e568f20de34900da2e63
Author: David Abdurachmanov <david.abdurachmanov@sifive.com>
Date:   Tue Jan 28 02:47:43 2020 -0800

    UBUNTU: SAUCE: Microsemi PCIe expansion board DT entry.
    
    BugLink: https://bugs.launchpad.net/bugs/1910965
    
    Rebased on v5.5 (no actual changes).
    
    Signed-off-by: Atish Patra <atish.patra@wdc.com>
    Signed-off-by: Alistair Francis <alistair.francis@wdc.com>
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@sifive.com>
    Upstream-Status: Inappropriate [enable feature]
    (backported from https://github.com/sifive/meta-sifive/blob/2020.11/recipes-kernel/linux/files/freedom-u540/0002-Microsemi-PCIe-expansion-board-DT-entry.patch)
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4139bd799388719463b6404938f52716b15031ba
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Tue Oct 27 09:43:59 2020 +0000

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: rename kzfree() to kfree_sensitive()
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 654e3da83532e48b0b6a95e35ec1c4d27bc17e4e
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Thu Oct 8 11:33:20 2020 +0200

    UBUNTU: SAUCE: doc: remove python3-venv dependency
    
    BugLink: https://bugs.launchpad.net/bugs/1896801
    
    Since upstream has removed python3-venv, update our build dependencies and let
    linux-doc build outside a virtualenv.
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Acked-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 618a86248b4a270749dde62e83cab616baa96b50
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Thu Aug 27 23:47:47 2020 -0300

    UBUNTU: SAUCE: dccp: avoid double free of ccid on child socket
    
    When a dccp socket is cloned, the pointers to dccps_hc_rx_ccid and
    dccps_hc_tx_ccid are copied. When CCID features are activated on the child
    socket, the CCID objects are freed, leaving the parent socket with dangling
    pointers.
    
    During cloning, set dccps_hc_rx_ccid and dccps_hc_tx_ccid to NULL so the
    parent objects are not freed.
    
    Reported-by: Hadar Manor
    CVE-2020-16119
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Juerg Haefliger <juerg.haefliger@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit e5af36b6c1cba1c7e53ad83d494e3fb46bc2ac0a
Author: Seth Forshee <sforshee@kernel.org>
Date:   Tue Sep 29 20:01:09 2020 -0500

    UBUNTU: Add ubuntu-host module
    
    ubuntu-host is a module for providing data to containers via proc.
    Initially it is populated with a single file, esm-token, for
    supplying ESM access tokens.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit dfc4b452db0e20c4681ef81cada0620973acc103
Author: Markus Heiser <markus.heiser@darmarit.de>
Date:   Sun Apr 26 13:54:00 2020 +0200

    UBUNTU: SAUCE: Documentation: import error c_funcptr_sig_re, c_sig_re (sphinx-doc/sphinx@0f49e30c)
    
    Extension error:
       Could not import extension linuxdoc.cdomain  .. \
       (exception: cannot import name 'c_funcptr_sig_re' from ..
    
    Issue: `sphinx-doc/sphinx#7421`_
    
    .. _0f49e30c:
       https://github.com/sphinx-doc/sphinx/commit/0f49e30c51b5cc5055cda5b4b294c2dd9d1df573#r38750737
    
    .. _sphinx-doc/sphinx#7421:
       https://github.com/sphinx-doc/sphinx/issues/7421
    
    Signed-off-by: Markus Heiser <markus.heiser@darmarit.de>
    Link: https://github.com/return42/linuxdoc/commit/48f09de2aff80169b7b9be5b0f2431ad8954e5cc
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit cf49a654fdca87a62ece5879fed65693aeeacf77
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 30 17:31:37 2020 +0200

    UBUNTU: SAUCE: apply a workaround to re-enable CONFIG_CRYPTO_AEGIS128_SIMD
    
    After the update to gcc 10 we started to experience the following build
    errors on ARM:
    
      crypto/aegis128-neon-inner.c: In function 'crypto_aegis128_init_neon':
      crypto/aegis128-neon-inner.c:151:3: error: incompatible types when initializing type 'unsigned char' using type 'uint8x16_t'
        151 |   k ^ vld1q_u8(const0),
            |   ^
      crypto/aegis128-neon-inner.c:152:3: error: incompatible types when initializing type 'unsigned char' using type 'uint8x16_t'
        152 |   k ^ vld1q_u8(const1),
            |   ^
    
    This seems to be a gcc bug:
    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=96377
    
    The workaround (suggested in the bug report) is to enforce a cast to
    uint8x16_t.
    
    Apply the workaround so that we can re-enable the driver disabled by
    7c950e057db6 ("UBUNTU: [Config] disable CONFIG_CRYPTO_AEGIS128_SIMD").
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit cd70ea0274feecd7b3f68ecd35a1d20d0710042b
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Tue Jun 16 08:08:49 2020 -0300

    UBUNTU: SAUCE: nbd_genl_status: null check for nla_nest_start
    
    CVE-2019-16089
    
    nla_nest_start may fail and return NULL. The check is inserted, and
    errno is selected based on other call sites within the same source code.
    Update: removed extra new line.
    v3 Update: added release reply, thanks to Michal Kubecek for pointing
    out.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Reviewed-by: Michal Kubecek <mkubecek@suse.cz>
    Acked-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit e88769f04a4f050e02980f776942c28431e56faf
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Tue Aug 16 10:27:00 2016 -0600

    UBUNTU: SAUCE: security,perf: Allow further restriction of perf_event_open
    
    https://lkml.org/lkml/2016/1/11/587
    
    The GRKERNSEC_PERF_HARDEN feature extracted from grsecurity.  Adds the
    option to disable perf_event_open() entirely for unprivileged users.
    This standalone version doesn't include making the variable read-only
    (or renaming it).
    
    When kernel.perf_event_open is set to 3 (or greater), disallow all
    access to performance events by users without CAP_SYS_ADMIN.
    Add a Kconfig symbol CONFIG_SECURITY_PERF_EVENTS_RESTRICT that
    makes this value the default.
    
    This is based on a similar feature in grsecurity
    (CONFIG_GRKERNSEC_PERF_HARDEN).  This version doesn't include making
    the variable read-only.  It also allows enabling further restriction
    at run-time regardless of whether the default is changed.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    [ saf: resolve conflicts with v5.8-rc1 ]
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    [ arighi: resolve conflicts with v6.2-rc2 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 4db0d775405b6e5cb67d7718a35f92718218c79a
Author: Seth Forshee <sforshee@kernel.org>
Date:   Wed Jan 8 08:45:12 2020 -0600

    UBUNTU: SAUCE: tools: hv: Update shebang to use python3 instead of python
    
    Focal is removing the unversioned python symlink. Since python2
    is unsupported in focal, update the shebang to use python3.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit b156ed220940175c17e3779182827d1a96ff52f5
Author: Seth Forshee <sforshee@kernel.org>
Date:   Tue Mar 3 11:09:31 2020 -0600

    UBUNTU: SAUCE: selftests/net -- disable timeout
    
    Some of our net selftests are timing out in autopkgtest. These
    tests pass when run in a different (presumably faster)
    environment. It appears that we can't disable the timeout for
    individual test cases, so disable the timeout for the net
    selftests globally.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 0b66f3a3edeaad5269e71f4f46d76b8857f40d86
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Apr 22 14:09:47 2020 +0000

    UBUNTU: SAUCE: fix FTBFS in machine_real_restart()
    
    (focal-amd64)ppisati@kathleen:~/linux$ make -j128
      DESCEND  objtool
      CALL    scripts/atomic/check-atomics.sh
      CALL    scripts/checksyscalls.sh
      CHK     include/generated/compile.h
      CC      arch/x86/kernel/reboot.o
      CHK     kernel/kheaders_data.tar.xz
    arch/x86/kernel/reboot.o: warning: objtool: machine_real_restart()+0x63: retpoline_safe hint not an indirect jump/call
    make[2]: *** [scripts/Makefile.build:275: arch/x86/kernel/reboot.o] Error 255
    make[2]: *** Deleting file 'arch/x86/kernel/reboot.o'
    make[1]: *** [scripts/Makefile.build:496: arch/x86/kernel] Error 2
    make: *** [Makefile:1734: arch/x86] Error 2
    make: *** Waiting for unfinished jobs....
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 67128b5b2bc2de2b1c1995e11f4d2f44a57e3b94
Author: Andy Whitcroft <apw@canonical.com>
Date:   Tue Mar 20 12:50:00 2018 +0000

    UBUNTU: SAUCE: early/late -- annotate indirect calls in early/late initialisation code
    
    BugLink: http://bugs.launchpad.net/bugs/1758856
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit f7e7d26d446c697a010d8ba207fd88a73103fae6
Author: Paolo Pisati <paolo.pisati@canonical.com>
Date:   Wed Apr 22 13:20:47 2020 +0000

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: fix section mismatch warning
    
    ...
    WARNING: modpost: drivers/platform/x86/dell-uart-backlight.o(.text+0x979): Section mismatch in reference from the function dell_uart_bl_add() to the variable .init.rodata:dell_uart_backlight_alpha_platform
    The function dell_uart_bl_add() references
    the variable __initconst dell_uart_backlight_alpha_platform.
    This is often because dell_uart_bl_add lacks a __initconst
    annotation or the annotation of dell_uart_backlight_alpha_platform is wrong.
    
    dell_uart_bl_add() was referencing an __initconst
    dell_uart_backlight_alpha_platform variable without the __init annotation: fix it by removing __initconst
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit 7852b2b85e7aea0ad0c975789bcfcb535e7d6b81
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Mar 26 15:56:19 2020 +0100

    UBUNTU: SAUCE: kselftest/runner: avoid using timeout if timeout is disabled
    
    Avoid using /usr/bin/timeout unnecessarily if timeout is set to 0 in the
    "settings" file for a specific test.
    
    NOTE: this change prevents a syscall_restart failure in the seccomp
    kselftest.
    
    BugLink: https://bugs.launchpad.net/bugs/1870543
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 32aef83cdf229f64fca592de21f41f7ec23b95c9
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Mon Mar 9 18:22:40 2020 +0100

    UBUNTU: SAUCE: ptp: free ptp clock properly
    
    There is a bug in ptp_clock_unregister() where pps_unregister_source()
    can free up resources needed by posix_clock_unregister() to properly
    destroy a related sysfs device.
    
    Fix this by calling pps_unregister_source() in ptp_clock_release().
    
    See also:
    commit 75718584cb3c ("ptp: free ptp device pin descriptors properly").
    
    BugLink: https://bugs.launchpad.net/bugs/1864754
    Fixes: a33121e5487b ("ptp: fix the race between the release of ptp_clock and cdev")
    Tested-by: Piotr Morgwai Kotarbiński <foss@morgwai.pl>
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 9bed638f258f3dc32e156509034bee7cf9eb7796
Author: You-Sheng Yang <vicamo.yang@canonical.com>
Date:   Mon Mar 16 17:27:21 2020 +0800

    UBUNTU: SAUCE: Input: i8042 - fix the selftest retry logic
    
    BugLink: https://bugs.launchpad.net/bugs/1866734
    
    It returns -NODEV at the first selftest timeout, so the retry logic
    doesn't work. Move the return outside of the while loop to make it real
    retry 5 times before returns -ENODEV.
    
    BTW, the origin loop will retry 6 times, also fix this.
    
    Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
    (backported from
    https://lore.kernel.org/linux-input/20200310033640.14440-1-vicamo@gmail.com/)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>

commit e713ebea4ab382baf637857fa474c8a46492afb1
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Wed Feb 12 14:53:15 2020 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: increase retry times
    
    BugLink: https://bugs.launchpad.net/bugs/1862885
    
    From ODM, scalar takes some time to activate panel during booting up,
    it can't respond the UART commands within 1 seconds.
    So, we add retry and wait 2 seconds for the response. But sometimes it
    still fails to read the response.
    During the boot up time, it sometimes takes more than 2 seconds to respond
    the first command, so we enlarge the retry timeout from 2 seconds to 5
    seconds to make sure we get the first response from scalar.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Acked-By: You-Sheng Yang <vicamo.yang@canonical.com>
    Acked-by: Anthony Wong <anthony.wong@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 095b600a5ede1a470325af72ceccee8eff9a7b3e
Author: Stefan Bader <stefan.bader@canonical.com>
Date:   Wed Jan 15 10:14:28 2020 +0100

    UBUNTU: SAUCE: md/raid0: Use kernel specific layout
    
    BugLink: https://bugs.launchpad.net/bugs/1850540
    
    This allows to roll out the support for the alternate layout which
    accidentally got introduced since kernel v3.14+ without causing
    breakage on reboot. The real danger is moving between a 3.13 or
    older kernel and any newer. This either has already happened and
    the damage has potentially been done or is not yet immediate or
    not happening at all (if the raid0 array was created by a 3.14+
    kernel). So it is better to just warn from the kernel or once the
    user-space tool supporting meta-data update gets rolled out, from
    there as well.
    
    Once user-space is in place an with a bit of waiting time this change
    should get reverted later.
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit f95a25ca27786a1e23a7a2c40fbcad21a365d3d5
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Wed Jan 8 15:59:45 2020 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: add retry for get scalar status
    
    BugLink: https://bugs.launchpad.net/bugs/1858761
    
    Found on new platforms that UART require more than 1 second to respond
    commands in the first 10 seconds after booted.
    dell_uart_get_scalar_status() is the first command we send to scalar and
    this command should be more reliable than other commands, and make sure
    we got correct response from scalar. So, add retry and increase the read
    timeout to 2 seconds.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Connor Kuehl <connor.kuehl@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 9fc2bcb6f555c3f3693c334c12bd0878fbe17202
Author: dann frazier <dann.frazier@canonical.com>
Date:   Wed Dec 18 07:29:30 2019 -0700

    UBUNTU: SAUCE: md/raid0: Link to wiki with guidance on multi-zone RAID0 layout migration
    
    BugLink: https://bugs.launchpad.net/bugs/1850540
    
    Helping an administrator understand this issue and how to deal with it
    requires more text than achievable in a kernel error message. Let's
    clarify the issue in the Ubuntu wiki, and have the kernel emit a link
    to it.
    
    I've submitted a similar change upstream:
      https://marc.info/?l=linux-raid&m=157360088014027&w=2
    Should it get merged, we should consider replacing this patch with that one.
    Otherwise, it is probably safe to drop this SAUCE patch after focal.
    
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit ba681a7bac5bad67afa5248aa132557936066188
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Mon Nov 4 13:58:48 2019 +0200

    UBUNTU: SAUCE: net: ena: fix too long default tx interrupt moderation interval
    
    BugLink: https://bugs.launchpad.net/bugs/1853180
    
    Current default non-adaptive tx interrupt moderation interval is 196 us.
    This commit sets it to 0, which is much more sensible as a default value.
    It can be modified using ethtool -C.
    
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Reference: https://lore.kernel.org/netdev/1572868728-5211-1-git-send-email-akiyano@amazon.com/
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit b4e23d7119cd0e080d9d19c27b40b4e35a6e97df
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Dec 5 16:53:03 2019 +0100

    UBUNTU: SAUCE: Add exfat module to signature inclusion list
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit d70c03841c4a47a559fd363bb4f1ea49d2a00d5b
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Nov 8 10:25:46 2019 +0000

    UBUNTU: SAUCE: efi: efi_get_memory_map -- increase map headroom
    
    We are seeing some EFI based machines failing to boot hard in the EFI
    stub:
    
        exit_boot() failed!
        efi_main() failed!
    
    This seems to occur when the bootloader (grub2 in this case) has had
    to manipulate some additional files due to a change in the way MAAS
    boots the machines.  We tracked this down to the memory map dance
    efi_get_memory_map().  Basically we attempt to close boot services and
    it informs us it cannot do so because it failed to record the updated
    memory map.  This occurs when there is insufficient space in the passed
    memory map buffer to record changes during the operation.  At the point
    when this occurs we are unable to call the allocation functions to
    reallocate the buffer so we panic.
    
    To avoid this we allocate some additional entries in the buffer to cover
    any additional entries.  This headroom is currently insufficient for
    these machines under this use case.  Increase EFI_MMAP_NR_SLACK_SLOTS to
    provide space for more memory map modifications.
    
    BugLink: https://bugs.launchpad.net/bugs/1851810
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 8b096e4100a1f67114d0a86077f8adc880943c6d
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Thu Nov 7 14:36:44 2019 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: add quirk for old platforms
    
    BugLink: https://bugs.launchpad.net/bugs/1813877
    
    Old platforms do not support DELL_UART_GET_SCALAR command and the
    behavior of DELL_UART_GET_FIRMWARE_VER command is different as the new
    firmware, so the new way to check if the backlight is controlled by
    scalar IC doesn't work on old platforms. We now add them into a list and
    use the old way to do the check.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 942698d65bf13f042c4940a4474467fdbd31142e
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Thu Nov 7 14:36:43 2019 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: add force parameter
    
    BugLink: https://bugs.launchpad.net/bugs/1813877
    
    Add force parameter to force load the driver if the platform doesn't
    provide a working scalar status command.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 8eaebe47f0e7a9c61e0816afa1b97747a051a570
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Thu Nov 7 14:36:42 2019 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: load driver by scalar status
    
    BugLink: https://bugs.launchpad.net/bugs/1813877
    
    Leverage the scalar status command to determinate whether the driver
    should be loaded or not.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit ebbfb983a1d9e685e6983a8f5c3c18f1c73fbbbc
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Thu Nov 7 14:36:41 2019 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: add missing status command
    
    BugLink: https://bugs.launchpad.net/bugs/1813877
    
    DELL_UART_GET_SCALAR has been declared in
    drivers/platform/x86/dell-uart-backlight.h, but its definition is
    missing. It won't lead to issues on old AIO platforms, since this
    command is newly introduced and is not supported by all old AIOs.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 2cb13bb70a5457c4e30b2c257ceb8b0452f2a32f
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Fri Sep 27 11:41:53 2019 -0300

    UBUNTU: SAUCE: powerpc/vio: drop bus_type from parent device
    
    BugLink: https://bugs.launchpad.net/bugs/1845572
    
    Commit df44b479654f62b478c18ee4d8bc4e9f897a9844 ("kobject: return error code if
    writing /sys/.../uevent fails") started returning failure when writing to
    /sys/devices/vio/uevent.
    
    This causes an early udevadm trigger to fail. On some installer versions of
    Ubuntu, this will cause init to exit, thus panicing the system very early
    during boot.
    
    Removing the bus_type from the parent device will remove some of the extra
    empty files from /sys/devices/vio/, but will keep the rest of the layout for
    vio devices, keeping them under /sys/devices/vio/.
    
    It has been tested that uevents for vio devices don't change after this fix,
    they still contain MODALIAS.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Seth Forshee <seth.forshee@canonical.com>
    Acked-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 5c4372ce0828463e281b896f86990b935f570043
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Jul 9 05:33:49 2019 -0300

    UBUNTU: SAUCE: selftests/powerpc/ptrace: fix build failure
    
    Add -Wno-error=deprecated to its Makefile CFLAGS to avoid build failure.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit 2b4d7ad9b181ee99ed6b8b1c62e84d8d7a44641d
Author: Seth Forshee <sforshee@kernel.org>
Date:   Sun Jul 7 23:15:19 2019 -0500

    UBUNTU: SAUCE: usbip: add -Wno-address-of-packed-member to EXTRA_CFLAGS
    
    Fails to build with gcc 9.1.0 due to
    -Werror=address-of-packed-member. One example:
    
      usbip_network.c: In function 'usbip_net_pack_usb_device':
      usbip_network.c:79:32: error: taking address of packed member of 'struct usbip_usb_device' may result in an unaligned pointer value [-Werror=address-of-packed-member]
         79 |  usbip_net_pack_uint32_t(pack, &udev->busnum);
            |                                ^~~~~~~~~~~~~
    
    All of these are code which is explicitly packing a struct, so
    add -Wno-address-of-packed-member to EXTRA_CFLAGS to disable this
    warning.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit c38e39c7aa23d7f1672e1b812880ffebc9578381
Author: Andy Whitcroft <apw@canonical.com>
Date:   Wed May 8 14:24:40 2019 +0100

    UBUNTU: SAUCE: tools -- fix add ability to disable libbfd
    
    BugLink: https://bugs.launchpad.net/bugs/1826410
    
    In commit 14541b1e7e ("perf build: Don't unconditionally link the libbfd
    feature test to -liberty and -lz") the enablement code changed radically
    neutering our override.  Adapt to that new form.
    
    Fixes: 546d50456e ("UBUNTU: SAUCE: tools -- add ability to disable libbfd")
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    [ arighi: context adjustments for 6.4-rc1 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit a89f22f97406a520ca24fe5c6e0b1f77b320d693
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Sat Apr 20 09:41:00 2019 +0200

    UBUNTU: SAUCE: integrity: downgrade error to warning
    
    BugLink: https://bugs.launchpad.net/bugs/1766201
    
    In 58441dc86d7b the error "Unable to open file: ..." has been downgraded
    to warning in the integrity/ima subsystem. Do the same for a similar
    error message in the generic integrity subsystem.
    
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Acked-by: Connor Kuehl <connor.kuehl@canonical.com>
    Acked-by: Khalid Elmously <khalid.elmously@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Signed-off-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>

commit eeea1f11c5964726cd1b302297086f83972830fe
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Feb 19 13:05:11 2019 -0300

    UBUNTU: SAUCE: prevent a glibc test failure when looking for obsolete types on headers
    
    BugLink: https://bugs.launchpad.net/bugs/1813060
    
    glibc will look for ulong and other obsolete types on headers, including linux
    headers, and warn of their use. That, unfortunately, makes automated testing
    fail.
    
    Though that type is only referred inside a comment, and the test is what needs
    fixing, we are temporarily changing the comment to make tests pass.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit 3f82b39ddd694880cd5862088f15afe0fa9bf75f
Author: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
Date:   Wed Jan 30 14:13:18 2019 -0200

    UBUNTU: SAUCE: selftests: net: fix "from" match test in fib_rule_tests.sh
    
    Fix the IPv4 address of the dummy0 interface and ensure that ip_forward
    is enabled in the network space to get a valid response when checking
    for routes between the gateway and other hosts.
    
    Signed-off-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>

commit 8e83223667ff582e6efbeea70874fe60ec310418
Author: Seth Forshee <sforshee@kernel.org>
Date:   Fri Jan 25 12:43:49 2019 -0600

    UBUNTU: SAUCE: selftests/ftrace: Fix tab expansion in trace_marker snapshot trigger test
    
    When trace lines are passed through echo tabs are being changed
    to spaces, causing later string comparisons to fail. Add quotes
    around the variables to prevent this.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit a5b0763ba63e8df440932dec3279589ddc838d63
Author: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
Date:   Thu Jan 24 17:21:45 2019 -0200

    UBUNTU: SAUCE: selftests: net: replace AF_MAX with INT_MAX in socket.c
    
    Use INT_MAX instead of AF_MAX, since libc might have a smaller value
    of AF_MAX than the kernel, what causes the test to fail.
    
    Signed-off-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>

commit 04c8331eb9d4f059ac867551dac8cf618e426b7c
Author: Christian Brauner <brauner@kernel.org>
Date:   Wed Jan 23 21:54:23 2019 +0100

    UBUNTU: SAUCE: binder: give binder_alloc its own debug mask file
    
    Currently both binder.c and binder_alloc.c both register the
    /sys/module/binder_linux/paramters/debug_mask file which leads to conflicts
    in sysfs. This commit gives binder_alloc.c its own
    /sys/module/binder_linux/paramters/alloc_debug_mask file.
    
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit dd465b2175fa41de7dc12cd98a08feff6311064a
Author: Christian Brauner <brauner@kernel.org>
Date:   Wed Jan 16 23:13:25 2019 +0100

    UBUNTU: SAUCE: binder: turn into module
    
    The Android binder driver needs to become a module for the sake of shipping
    Anbox. To do this we need to export the following functions since binder is
    currently still using them:
    
    - security_binder_set_context_mgr()
    - security_binder_transaction()
    - security_binder_transfer_binder()
    - security_binder_transfer_file()
    - can_nice()
    - __close_fd_get_file()
    - mmput_async()
    - task_work_add()
    - map_kernel_range_noflush()
    - get_vm_area()
    - zap_page_range_single()
    - put_ipc_ns()
    - get_ipc_ns_exported()
    - show_init_ipc_ns()
    
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    [ saf: fix additional reference to init_ipc_ns from 5.0-rc6 ]
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    [ arighi: fix EXPORT_SYMBOL vs EXPORT_SYMBOL_GPL change from 6.0-rc5 ]
    [ arighi: zap_page_range() has been dropped, export zap_page_range_single() in 6.3 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit c9b706ff6a202ffd4483d083260268eaf9582afe
Author: Guilherme G. Piccoli <kernel@gpiccoli.net>
Date:   Thu Nov 8 19:07:21 2018 -0200

    UBUNTU: SAUCE: x86/quirks: Scan all busses for early PCI quirks
    
    BugLink: https://bugs.launchpad.net/bugs/1797990
    
    Recently was noticed in an HP GEN9 system that kdump couldn't succeed
    due to an irq storm coming from an Intel NIC, narrowed down to be lack
    of clearing the MSI/MSI-X enable bits during the kdump kernel boot.
    For that, we need an early quirk to manually turn off MSI/MSI-X for
    PCI devices - this was worked as an optional boot parameter in a
    (~subsequent~) previous patch.
    
    Problem is that in our test system, the Intel NICs were not present in
    any secondary bus under the first PCIe root complex, so they couldn't
    be reached by the recursion in check_dev_quirk(). Modern systems,
    specially with multi-processors and multiple NUMA nodes expose multiple
    root complexes, describing more than one PCI hierarchy domain. Currently
    the simple recursion present in the early-quirks code from x86 starts a
    descending recursion from bus 0000:00, and reach many other busses by
    navigating this hierarchy walking through the bridges. This is not
    enough in systems with more than one root complex/host bridge, since
    the recursion won't "traverse" to other root complexes by starting
    statically in 0000:00 (for more details, see [0]).
    
    This patch hence implements the full bus/device/function scan in
    early_quirks(), by checking all possible busses instead of using a
    recursion based on the first root bus or limiting the search scope to
    the first 32 busses (like it was done in the beginning [1]).
    
    [0] https://bugs.launchpad.net/bugs/1797990
    
    [1] From historical perspective, early PCI scan dates back
    to BitKeeper, added by Andi Kleen's "[PATCH] APIC fixes for x86-64",
    on October/2003. It initially restricted the search to the first
    32 busses and slots.
    
    Due to a potential bug found in Nvidia chipsets, the scan
    was changed to run only in the first root bus: see
    commit 8659c406ade3 ("x86: only scan the root bus in early PCI quirks")
    
    Finally, secondary busses reachable from the 1st bus were re-added back by:
    commit 850c321027c2 ("x86/quirks: Reintroduce scanning of secondary buses")
    
    Reported-by: Dan Streetman <ddstreet@canonical.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    [mfo: v2:
     - gate the bus-scan differences with the cmdline option.
     - update changelog: subsequent/previous patch.]
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Acked-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit 5f12212d2736f28c02b927cac5e4136d6d1a3058
Author: Guilherme G. Piccoli <kernel@gpiccoli.net>
Date:   Thu Nov 8 19:07:20 2018 -0200

    UBUNTU: SAUCE: x86/quirks: Add parameter to clear MSIs early on boot
    
    BugLink: https://bugs.launchpad.net/bugs/1797990
    
    We observed a kdump failure in x86 that was narrowed down to MSI irq
    storm coming from a PCI network device. The bug manifests as a lack of
    progress in the boot process of kdump kernel, and a flood of kernel
    messages like:
    
    [...]
    [ 342.265294] do_IRQ: 0.155 No irq handler for vector
    [ 342.266916] do_IRQ: 0.155 No irq handler for vector
    [ 347.258422] do_IRQ: 14053260 callbacks suppressed
    [...]
    
    The root cause of the issue is that kexec process of the kdump kernel
    doesn't ensure PCI devices are reset or MSI capabilities are disabled,
    so a PCI adapter could produce a huge amount of irqs which would steal
    all the processing time for the CPU (specially since we usually restrict
    kdump kernel to use a single CPU only).
    
    This patch implements the kernel parameter "pci=clearmsi" to clear the
    MSI/MSI-X enable bits in the Message Control register for all PCI devices
    during early boot time, thus preventing potential issues in the kexec'ed
    kernel. PCI spec also supports/enforces this need (see PCI Local Bus
    spec sections 6.8.1.3 and 6.8.2.3).
    
    Suggested-by: Dan Streetman <ddstreet@canonical.com>
    Suggested-by: Gavin Shan <shan.gavin@linux.alibaba.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Acked-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit a6e4673f53db01aaf2e9cf03a253a96307dac52b
Author: Guilherme G. Piccoli <kernel@gpiccoli.net>
Date:   Thu Nov 8 19:07:19 2018 -0200

    UBUNTU: SAUCE: x86/PCI: Export find_cap() to be used in early PCI code
    
    BugLink: https://bugs.launchpad.net/bugs/1797990
    
    This patch exports (and renames) the function find_cap() to be used
    in the early PCI quirk code, by the next patch.
    
    This is being moved out from AGP code to generic early-PCI code
    since it's not AGP-specific and can be used for any PCI device.
    No functional changes intended.
    
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Acked-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit 47d14fd1e3d3b34556f5856c2db81f77a26d218e
Author: Wen-chien Jesse Sung <jesse.sung@canonical.com>
Date:   Wed Oct 17 19:42:10 2018 +0800

    UBUNTU: SAUCE: Bluetooth: Support for LED on Edge Gateways
    
    BugLink: https://launchpad.net/bugs/1798332
    
    For Edge Gateway 5000/5100 only.
    
    Add code for controlling bluetooth LED via firmware, and turns
    the LED on and off when the interface is up and down accordingly.
    
    Signed-off-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 509346111d88e0b6fb44ac351a36d4b231711570
Author: Wen-chien Jesse Sung <jesse.sung@canonical.com>
Date:   Wed Oct 17 19:41:41 2018 +0800

    UBUNTU: SAUCE: mwifiex: Switch WiFi LED state according to the device status
    
    BugLink: https://launchpad.net/bugs/1798330
    
    For Edge Gateway 5000/5100 only.
    
    Add code for controlling WiFi LED via firmware, and turns the LED on
    and off when the interface is up and down accordingly.
    
    Signed-off-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit c00380a8a69907e01365b7df36f9c4c53d483aaa
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Thu Sep 20 16:41:14 2018 +0800

    UBUNTU: SAUCE: platform/x86: dell-uart-backlight: new backlight driver for DELL AIO
    
    BugLink: https://bugs.launchpad.net/bugs/1727235
    
    The Dell AIO machines released after 2017 come with a UART interface
    to communicate with the backlight scalar board. This driver creates
    a standard backlight interface and talks to the scalar board through
    UART.
    
    In DSDT this uart port will be defined as
       Name (_HID, "DELL0501")
       Name (_CID, EisaId ("PNP0501")
    The 8250 PNP driver will be loaded by default, and this driver uses
    "DELL0501" to confirm the uart port is a backlight interface and
    leverage the port created by 8250 PNP driver to communicate with
    the scalar board.
    
    v2:
       1. move struct uart_cmd to .c file
       2. make dell_uart_get_bl_power() inline
       3. add space to ternary operator "bl_cmd->cmd[2] = power ? 0 : 1;"
       4. check return value of kzalloc()
       5. add kzfree()
       6. check return value of backlight_device_register()
       7. check return value of filp_open() at init
    v3:
       1. Fix compiling warning.
    v4:
       1. make *tty and *ftty static
       2. bl_cmd->ret[0] will never be less than 0, fixed the if statement
       3. fix some line over 80 chars warnings.
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Acked-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 0f3750c2f9da54d7bd40e420511ade507ca0e1d3
Author: Seth Forshee <sforshee@kernel.org>
Date:   Mon Feb 26 15:32:55 2018 -0600

    UBUNTU: SAUCE: tools: use CC for linking acpi tools
    
    Prior to 7ed1c1901fe5 ("tools: fix cross-compile var clobbering")
    the acpi tools makefiles were using gcc for linking. That commit
    causes ld to be used instead, however this doesn't work as the
    flags supplied are meant for gcc and not ld. Change the acpi
    tools rules to use $(QUIET_LINK)$(CC) for linking to fix this
    regression.
    
    Fixes: 7ed1c1901fe5 ("tools: fix cross-compile var clobbering")
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 99b903d05c2563441656ef58f8bfeb243a7f8d94
Author: Wen-chien Jesse Sung <jesse.sung@canonical.com>
Date:   Sat Mar 24 00:54:28 2018 +0800

    UBUNTU: SAUCE: drm/i915: make previous commit affects Wyse 3040 only
    
    BugLink: https://launchpad.net/bugs/1736393
    
    Signed-off-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit 5077ba883c7b0635b75a6a8d76f458a4e9ebd5a8
Author: Raymond Liu <raymondx.liu@intel.com>
Date:   Sat Mar 24 00:54:27 2018 +0800

    UBUNTU: SAUCE: drm/i915:Don't set chip specific data
    
    BugLink: https://launchpad.net/bugs/1736393
    
    This chip data is unused and cause panic after
    the cycle of cpu offline/online
    
    Signed-off-by: Raymond Liu <raymondx.liu@intel.com>
    Signed-off-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>

commit ac3bad6b29008dbda1cec2fd1a033891e0405d00
Author: Andy Whitcroft <apw@canonical.com>
Date:   Wed Mar 21 09:49:40 2018 +0000

    UBUNTU: SAUCE: vga_set_mode -- avoid jump tables
    
    BugLink: http://bugs.launchpad.net/bugs/1758856
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit e5e24f40252a27359df3e1810222923d111d2b39
Author: Andy Whitcroft <apw@canonical.com>
Date:   Tue Mar 20 12:19:52 2018 +0000

    UBUNTU: SAUCE: apm -- annotate indirect calls within firmware_restrict_branch_speculation_{start,end}
    
    BugLink: http://bugs.launchpad.net/bugs/1758856
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 6c6de71a94edf5944eb198daf0ed0736f05e27ba
Author: Andy Whitcroft <apw@canonical.com>
Date:   Tue Feb 13 14:48:56 2018 +0000

    UBUNTU: SAUCE: tools -- add ability to disable libbfd
    
    We do not want to be linked to libbfd as this is a tightly versioned
    package which does not maintain its ABI.  This prevents us from have
    multiple tools packages installed.  Turn that off and we will fallback
    to libiberty.
    
    BugLink: http://bugs.launchpad.net/bugs/1748922
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    [ arighi: context adjustments for 6.4-rc1 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit e5fc75ad2b09879cb6e4c3561ba53d5053e969a2
Author: Seth Forshee <sforshee@kernel.org>
Date:   Fri Jan 19 09:21:13 2018 -0600

    UBUNTU: SAUCE: Revert "scsi: libsas: allow async aborts"
    
    BugLink: http://bugs.launchpad.net/bugs/1726519
    
    This reverts commit 909657615d9b3ce709be4fd95b9a9e8c8c7c2be6.
    
    Signed-off-by: Marcelo Henrique Cerri <marcelo.cerri@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit 75d2b86a410eafdf4d5f3c5e93b7fa010689c7c9
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Wed Feb 15 06:14:28 2017 -0700

    UBUNTU: SAUCE: ima: Downgrade error to warning
    
    BugLink: http://bugs.launchpad.net/bugs/1656908
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit d02554f0f2a2e09c6b3e6ead0c703f0851b99f1f
Author: Wen-chien Jesse Sung <jesse.sung@canonical.com>
Date:   Fri Dec 2 17:11:04 2016 +0800

    UBUNTU: SAUCE: cdc-acm: Exclude Exar USB serial ports
    
    BugLink: https://launchpad.net/bugs/1645591
    
    These devices are handled by vendor driver ubuntu/xr-usb-serial.
    
    Signed-off-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit c66b1bf91534577b654fa06d7379ac22fd2ee819
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Wed Nov 30 13:04:39 2016 -0700

    UBUNTU: SAUCE: Add rtl drivers to signature inclusion list
    
    BugLink: http://bugs.launchpad.net/bugs/1642368
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 11ce2c7066efc8900a95932a8400108a2b52674a
Author: Huawei SSD DEV Team <>
Date:   Thu Jul 14 09:13:36 2016 -0700

    UBUNTU: SAUCE: import Huawei ES3000_V2 (2.1.0.23)
    
    BugLink: http://bugs.launchpad.net/bugs/1635594
    
    Source: http://support.huawei.com/enterprisesearch/ebgSearch#sp.keyword=HUAWEI%20ES3000%20V2%20Driver%20SRC
    
      Huawei SSD device driver
      Copyright (c) 2016, Huawei Technologies Co., Ltd.
    
      This program is free software; you can redistribute it and/or modify it
      under the terms and conditions of the GNU General Public License,
      version 2, as published by the Free Software Foundation.
    
      This program is distributed in the hope it will be useful, but WITHOUT
      ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
      FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
      more details.
    
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>
    BugLink: http://bugs.launchpad.net/bugs/1635594
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit cf28dd821ad667490eab976890f460f143b2920f
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Mar 10 17:26:39 2016 +0100

    UBUNTU: SAUCE: [nf,v2] netfilter: x_tables: don't rely on well-behaving userspace
    
    BugLink: http://bugs.launchpad.net/bugs/1555338
    
    Ben Hawkes says:
    
     In the mark_source_chains function (net/ipv4/netfilter/ip_tables.c) it
     is possible for a user-supplied ipt_entry structure to have a large
     next_offset field. This field is not bounds checked prior to writing a
     counter value at the supplied offset.
    
    Problem is that xt_entry_foreach() macro stops iterating once e->next_offset
    is out of bounds, assuming this is the last entry.
    
    With malformed data thats not necessarily the case so we can
    write outside of allocated area later as we might not have walked the
    entire blob.
    
    Fix this by simplifying mark_source_chains -- it already has to check
    if nextoff is in range to catch invalid jumps, so just do the check
    when we move to a next entry as well.
    
    Also, check that the offset meets the xtables_entry alignment.
    
    Reported-by: Ben Hawkes <hawkes@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Chris J. Arges <chris.j.arges@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 57e065ce29535803ed7b18d2e7deb92ae91fb630
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Wed Aug 10 13:25:59 2016 -0600

    UBUNTU: SAUCE: sstep.c: #include <asm/cpu_has_feature.h>
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 98ce614e181b829ff34e970b23c5b4331079835c
Author: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
Date:   Fri Nov 20 14:01:26 2015 -0600

    UBUNTU: SAUCE: Clear Linux: init: do_mounts: recreate /dev/root
    
    Rootfs shows as is mounted in /dev/root, but this devices is not present in
    /dev directory.
    
    Signed-off-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 0ed44f80e4d26df68b98d72d14e27e75f2e67dc7
Author: Arjan van de Ven <arjan@linux.intel.com>
Date:   Thu Jun 2 23:36:32 2016 -0500

    UBUNTU: SAUCE: Clear Linux: Initialize ata before graphics
    
    ATA init is the long pole in the boot process, and its asynchronous.
    move the graphics init after it so that ata and graphics initialize
    in parallel
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 04800b6d02b4b91900e4d1a312cf10c8265b1967
Author: Arjan van de Ven <arjan@linux.intel.com>
Date:   Mon Mar 14 11:06:46 2016 -0600

    UBUNTU: SAUCE: Clear Linux: ksm-wakeups
    
    reduce wakeups in ksm by adding rounding (aligning) when the sleep times are 1 second or longer
    
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    [ saf: update for conflicts when rebasing to v5.0 ]
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

commit e8072899ee2d427945e4c77aaf3879f9b5658c32
Author: Arjan van de Ven <arjan@linux.intel.com>
Date:   Tue Jun 23 01:26:52 2015 -0500

    UBUNTU: SAUCE: Clear Linux: i8042: decrease debug message level to info
    
    Author:    Arjan van de Ven <arjan@linux.intel.com>
    
    Signed-off-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Signed-off-by: Jose Carlos Venegas Munoz <jos.c.venegas.munoz@intel.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 681e07135c15ecf4b274e419d365acb2b2b77f46
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri May 27 13:52:22 2016 +0100

    UBUNTU: SAUCE: tools/hv/lsvmbus -- add manual page
    
    BugLink: http://bugs.launchpad.net/bugs/1585311
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>

commit 8ff05c5f68c464f156fc1aecf32987170dacc0db
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Tue Mar 15 06:30:40 2016 -0600

    UBUNTU: SAUCE: Dump stack when X.509 certificates cannot be loaded
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 7170d7853fa363999a80733111e78d8f8b40825d
Author: Serge Hallyn <serge.hallyn@ubuntu.com>
Date:   Tue Jan 5 20:12:21 2016 +0000

    UBUNTU: SAUCE: add a sysctl to disable unprivileged user namespace unsharing
    
    It is turned on by default, but can be turned off if admins prefer or,
    more importantly, if a security vulnerability is found.
    
    The intent is to use this as mitigation so long as Ubuntu is on the
    cutting edge of enablement for things like unprivileged filesystem
    mounting.
    
    (This patch is tweaked from the one currently still in Debian sid, which
    in turn came from the patch we had in saucy)
    
    Signed-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>
    [bwh: Remove unneeded binary sysctl bits]
    [ saf: move extern unprivileged_userns_clone declaration to
      include/linux/user_namespace.h to conform with 2374c09b1c8a
      "sysctl: remove all extern declaration from sysctl.c" ]
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    [ arighi: adjust context for v6.7 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 485c67c2092770c09d970c7e43f4835849df7163
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu Oct 1 18:01:29 2015 +0100

    UBUNTU: SAUCE: leds: lp55xx -- do not force use of the fallback loader
    
    The lp55xx driver uses the firmware loader to get its firmware.  Do not
    force us to use the fallback the kernel one should be sufficient.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

commit d81725c0a8b629f12367b9348606d9723ccda616
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Thu Sep 17 11:37:43 2015 -0600

    UBUNTU: SAUCE: Add vmlinux.strip to BOOT_TARGETS1
    
    This came in via "UBUNTU: Rebase to v4.2-rc3", but I'm not
    sure why.
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 715311f790480ffaf677ff2054f45ab64134b60f
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Tue Apr 22 17:29:08 2014 +0000

    UBUNTU: SAUCE: export some symbols for powerpc
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 7aa4e7218f4a92f8ce18ffbced6c111069907fc4
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Mon Jul 20 08:58:20 2015 -0600

    UBUNTU: SAUCE: Fix FTBS in proc_version_signature
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 4da1be4c08e948f8798e6eac0b826e7958ae2a76
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Sat Mar 29 15:39:24 2014 +0900

    UBUNTU: SAUCE: kthread: Do not leave kthread_create() immediately upon SIGKILL.
    
    Commit 786235ee "kthread: make kthread_create() killable" changed to
    leave kthread_create() as soon as receiving SIGKILL. But this change
    caused boot failures if systemd-udevd worker process received SIGKILL
    due to systemd's hardcoded 30 seconds timeout while loading fusion
    driver using finit_module() [1].
    
    Linux kernel people think that the systemd's hardcoded timeout is a
    systemd bug. But systemd people think that loading of kernel module
    needs more than 30 seconds is a kernel module's bug.
    
    Although Linux kernel people are expecting fusion driver module not
    to take more than 30 seconds, it will definitely not in time for
    trusty kernel. Also, nobody can prove that fusion driver module is
    the only case which is affected by commit 786235ee.
    
    Therefore, this patch changes kthread_create() to wait for up to 10
    seconds after receiving SIGKILL, unless chosen by the OOM killer,
    in order to give the kthreadd a chance to complete the request.
    The side effect of this patch is that current thread's response to
    SIGKILL is delayed for a bit (likely less than a second, unlikely
    10 seconds).
    
      [1] https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1276705
    
    Reported-by: Pierre Fersing <pierref@pierref.org>
    Reported-by: Faidon Liambotis <paravoid@debian.org>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 1034c29124b335765d0128b854a05e7c34fe0bf0
Author: Andy Whitcroft <apw@canonical.com>
Date:   Wed Dec 2 14:41:53 2009 +0000

    UBUNTU: SAUCE: isapnp_init: make isa PNP scans occur async
    
    The results of scanning for devices is to trigger udev events therefore
    we can push this processing async.
    
    This reduces kernel initialisation time (the time from bootloader to
    starting userspace) by several 10ths of a second x86 32bit systems.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 73e1de945d12e1682b3919ce51d0c8d44c0e8b07
Author: Manoj Iyer <manoj.iyer@canonical.com>
Date:   Mon Apr 6 10:58:49 2009 -0500

    UBUNTU: SAUCE: (no-up) Added quirk to recognize GE0301 3G modem as an interface.
    
    Rejected by upstream, but continue to carry anyway.
    http://lkml.indiana.edu/hypermail/linux/kernel/1303.1/03158.html
    
    OriginalAuthor: Timo Aaltonen <tjaalton@ubuntu.com>
    BugLink: http://bugs.launchpad.net/bugs/348861
    
    Signed-off-by: Manoj Iyer <manoj.iyer@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>

commit e5ed5676170c1ef7468a3f9073616dd54db302b7
Author: Seth Forshee <sforshee@kernel.org>
Date:   Fri Sep 20 13:03:41 2013 -0500

    UBUNTU: SAUCE: (no-up) ACPI: Disable Windows 8 compatibility for some Lenovo ThinkPads
    
    The AML implementation for brightness control on several ThinkPads
    contains a workaround to meet a Windows 8 requirement of 101 brightness
    levels [1]. The implementation is flawed, as only 16 of the brighness
    values reported by _BCL affect a change in brightness. _BCM silently
    discards the rest of the values. Disabling Windows 8 compatibility on
    these machines reverts them to the old behavior, making _BCL only report
    the 16 brightness levels which actually work. Add a quirk to do this
    along with a dmi callback to disable Win8 compatibility.
    
    [1] http://msdn.microsoft.com/en-us/library/windows/hardware/jj128256.aspx
    
    BugLink: http://bugs.launchpad.net/bugs/1183856
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit f97c0196cec782e9789a7290c0b294b1c13cd179
Author: Radha Mohan Chintakuntla <rchintakuntla@cavium.com>
Date:   Wed Aug 20 15:10:58 2014 -0700

    UBUNTU: SAUCE: (no-up) arm64: gicv3: its: Increase FORCE_MAX_ZONEORDER for Cavium ThunderX
    
    BugLink: http://bugs.launchpad.net/bugs/1558828
    
    In case of ARCH_THUNDER, there is a need to allocate the GICv3 ITS table
    which is bigger than the allowed max order. So we are forcing it only in
    case of 4KB page size.
    
    Signed-off-by: Radha Mohan Chintakuntla <rchintakuntla@cavium.com>
    Signed-off-by: Robert Richter <rrichter@cavium.com>
    [ dannf: Depend on ARM64_4K_PAGES instead of !ARM64_64K_PAGES now that
      16K pages are available ]
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    [ arighi: context adjustment for 6.4-rc1 ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 1a011b440162a5b9f166c3b3fa25543656b68fc6
Author: Mehmet Kayaalp <mkayaalp@linux.vnet.ibm.com>
Date:   Thu Mar 10 16:22:13 2016 -0500

    UBUNTU: SAUCE: (noup) KEYS: Support for inserting a certificate into x86 bzImage
    
    BugLink: http://bugs.launchpad.net/bugs/1558553
    
    The config option SYSTEM_EXTRA_CERTIFICATE reserves space in vmlinux file,
    which is compressed to create the self-extracting bzImage. This patch adds the
    capability of extracting the vmlinux, inserting the certificate, and
    repackaging the result into a bzImage.
    
    It only works if the resulting compressed vmlinux is smaller than the original.
    Otherwise re-linking would be required. To make the reserved space allocate
    actual space in bzImage, a null key is inserted into vmlinux before creating
    the bzImage:
    
            make vmlinux
            scripts/insert-sys-cert -b vmlinux -c /dev/null
            make bzImage
    
    After null key insertion, the script populates the rest of the reserved space
    with random bytes, which have poor compression. After receiving a bzImage that
    is created this way, actual certificate can be inserted into the bzImage:
    
            scripts/insert-sys-cert -s <System.map> -z <bzImage> -c <certfile>
    
    Signed-off-by: Mehmet Kayaalp <mkayaalp@linux.vnet.ibm.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 5ac1fa5042aaf84fc2dbe3639fec1e961d5da7a2
Author: Aditya Kali <adityakali@google.com>
Date:   Thu Dec 4 17:03:47 2014 -0800

    UBUNTU: SAUCE: (noup) cgroup: Add documentation for cgroup namespaces
    
    BugLink: http://bugs.launchpad.net/bugs/1546775
    
    Signed-off-by: Aditya Kali <adityakali@google.com>
    Signed-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 77273faf14ef9dee42f26d105ff9d9d2888eb953
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Nov 27 17:38:30 2015 +0000

    UBUNTU: SAUCE: (no-up) add compat_uts_machine= kernel command line override
    
    We wish to use the arm64 buildds to build armhf binaries in 32bit chroots.
    To make this work we need uname to return armv7l machine type.  To achieve
    this add a kernel command line override for the 32bit machine type.
    Add compat_uts_machine=<type> to allow the LINUX32 personality to return
    that type for uname.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

commit 2cfd6bb6ad017976e478c7c1d9be6b28fb9c8c87
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Thu Mar 6 10:20:15 2014 -0700

    UBUNTU: SAUCE: (no-up) mei_me: Add module parameter to disable MSI
    
    mei_me.disable_msi = 1
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 1eb2baa09cc0e40c471cbd3c563dd29ccadf87ac
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Wed Aug 14 12:53:36 2013 -0400

    UBUNTU: SAUCE: (no-up) intel_ips: blacklist ASUSTek G60JX laptops
    
    upstreamed
    
    BugLink: http://bugs.launchpad.net/bugs/1210848
    
    On an ASUSTek G60JX laptop, the intel_ips driver spams the log with a warning message: "ME failed to update for more than 1s, likely hung".  This ME doesn't support the feature, so requesting it be blacklisted for now.
    
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Acked-by: Jesse Barnes <jbarnes@virtuousgeek.org>
    Tested-by: Nick Jenkins <tech.crew.jenkins@gmail.com>
    
    Acked-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit d59640e80038ec099b28ff48a251ff723bf660d1
Author: joseph.salisbury@canonical.com <joseph.salisbury@canonical.com>
Date:   Tue Apr 16 17:03:51 2013 -0400

    UBUNTU: SAUCE: (no-up) x86: reboot: Make Dell Optiplex 390 use reboot=pci
    
    BugLink: http://bugs.launchpad.net/bugs/800660
    
    From: Leann Ogasawara <leann.ogasawara@canonical.com>
    
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 7b94f65e8c42639b3d5f61fe4657b1d7de9eaea3
Author: Xiangliang Yu <yuxiangl@marvell.com>
Date:   Thu Mar 7 14:29:16 2013 +0000

    UBUNTU: SAUCE: (no-up) PCI: fix system hang issue of Marvell SATA host controller
    
    BugLink: http://bugs.launchpad.net/bugs/1159863
    
    Hassle someone if this patch hasn't been removed by 13.10.
    See https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1159863/comments/2
    
    Fix system hang issue: if first accessed resource file of BAR0 ~
    BAR4, system will hang after executing lspci command
    
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 1e89099765f0af143bc354fbb6d41eeace8ad4a0
Author: Kamal Mostafa <kamal@canonical.com>
Date:   Wed Dec 5 13:30:48 2012 -0800

    UBUNTU: SAUCE: (no-up) Input: Cypress PS/2 Trackpad simulated multitouch
    
    Upstream doesn't like this patch.
    
    Instead of SEMI_MT, present a full mt interface with simulated contact
    positions for >=3 fingers.  Enables e.g. multi-finger tap and drag for
    old userspace applications which only count the contact positions.
    
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 3a9edc5210818112d74ef6274c23ee690a85f233
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Wed Nov 28 12:09:30 2012 -0700

    UBUNTU: SAUCE: (no-up) Revert "VFS: don't do protected {sym,hard}links by default"
    
    This reverts commit 561ec64ae67ef25cac8d72bb9c4bfc955edfd415.
    
    BugLink: http://bugs.launchpad.net/bugs/1084192
    
    Reverting this in the kernel as opposed to adding a sysctl
    to the procps package guarentees that this regression will be
    propagated to the Raring LTS kernel.
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 1208220b5f1bb9a644db12844742aa9d2910c1c0
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu Jul 26 11:25:52 2012 +0100

    UBUNTU: SAUCE: (no-up) rds_ib_send() -- prevent local pings triggering BUG_ON()
    
    Pining localhost on an infiniband connection can trigger a BUG_ON()
    and cause a denial of service.
    
    Fix identified by comparison of the RHEL source rpms.
    
    CVE-2012-2372
    BugLink: http://bugs.launchpad.net/bugs/1016299
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 47868c5c71f3f379d2a741807bcc497a6abcf921
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu May 3 16:01:39 2012 +0100

    UBUNTU: SAUCE: (no-up) kconfig: in debug mode some 0 length message prints occur
    
    Has no real kernel impact, so continue to carry.
    
    When we enable the zconfdump() debugging we see assertion failures
    attempting to print the config.  Convert this into a noop.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

commit 12fdc5c1caed35b336f7fe2db2f4104d81626b71
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Tue Apr 24 11:47:18 2012 -0600

    UBUNTU: SAUCE: (no-up) Allow filtering of cpufreq drivers
    
    Harmless patch that allows k8 powernow machines to boot. Carry until
    conflict.
    
    BugLink: http://bugs.launchpad.net/bugs/984288
    
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Herton Krzesinski <herton.krzesinski@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    [ arighi: context adjustment (cpu0_hotplug has been removed) ]
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>

commit 114c27a7c334f3e7876cf999e56db11b650b3ec4
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Apr 6 18:52:42 2012 +0100

    UBUNTU: SAUCE: (no-up) tools/hv: add basic manual pages
    
    BugLink: http://bugs.launchpad.net/bugs/977246
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 9a022ae9617a11f9f2267b72063823d135f6f37a
Author: Leann Ogasawara <leann.ogasawara@canonical.com>
Date:   Fri Aug 26 07:30:16 2011 -0700

    UBUNTU: SAUCE: (no-up) x86: reboot: Make Dell Latitude E6220 use reboot=pci
    
    BugLink: http://bugs.launchpad.net/bugs/838402
    
    The Dell Latitude E6220 doesn't reboot unless reboot=pci is set.
    
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Seth Forshee <seth.forshee@canonical.com>

commit d6c6d7caaa013a142f0dff7ba70db7854d46100c
Author: Leann Ogasawara <leann.ogasawara@canonical.com>
Date:   Wed Sep 14 11:27:20 2011 -0700

    UBUNTU: SAUCE: (no-up) x86: reboot: Make Dell Optiplex 990 use reboot=pci
    
    BugLink: http://bugs.launchpad.net/bugs/768039
    
    The Dell Optiplex 990 doesn't reboot unless reboot=pci is set.
    
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit 0324b07eb42bb2bbe2974e74e18dc3eb79e33159
Author: Leann Ogasawara <leann.ogasawara@canonical.com>
Date:   Fri Sep 9 13:23:51 2011 -0700

    UBUNTU: SAUCE: (no-up) x86: reboot: Make Dell Optiplex 790 use reboot=pci
    
    BugLink: http://bugs.launchpad.net/bugs/818933
    
    The Dell Optiplex 790 doesn't reboot unless reboot=pci is set.
    
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit de06e53d33b0f1741accbf9173139e68b951ea7b
Author: Leann Ogasawara <leann.ogasawara@canonical.com>
Date:   Wed Aug 31 10:25:24 2011 -0700

    UBUNTU: SAUCE: (no-up) x86: reboot: Make Dell Latitude E6520 use reboot=pci
    
    The Dell Latitude E6520 doesn't reboot unless reboot=pci is set.
    
    BugLink: http://bugs.launchpad.net/bugs/833705
    Cc: <stable@kernel.org>
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

commit fa2795d51f55f9639d767d36c58ac6b4924aee2f
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Dec 3 09:51:33 2010 +0000

    UBUNTU: SAUCE: (no-up) add support for installed header files to ubuntu directory
    
    BugLink: http://bugs.launchpad.net/bugs/684666
    
    We need the aufs headers in the linux-libc-headers, add support for
    including files from the ubuntu include directory.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

commit 67e142331ca58a2a29dbc5e62fb5cc859c66e068
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu Mar 11 10:33:36 2010 +0000

    UBUNTU: SAUCE: (no-up) cdrom -- default to not locking the tray when in use
    
    BugLink: http://bugs.launchpad.net/bugs/397734
    
    It seems that users are have a high expectation that the eject button
    on their CDROM drive will eject the disk regardless of whether it is in
    use or not.  To this end we are now changing the default LOCK mode for
    mounted CDROMS to 0 to allow ejects.  This however does not handle the
    direct open cases like music and video players.  From the launchpad bug
    commentary:
    
        So, according to the upstream discussion David Zeuthen recommended
        to just not lock CD-ROM trays by default. Kernel/userspace already
        handles prematurely removed USB storage devices reasonably, and with
        read-only devices like CD-ROMs it is even less of an issue. So we
        should just set /proc/sys/dev/cdrom/lock to 0 by default.
    
    Note that we still will have the drive mounted after the eject.  There is a
    media change uevent generated and this will be used to trigger the unmount
    of the drive in udisks.  The burner software will also have to be looked
    at to ensure they are explicitly locking the drive closed during the burn.
    This will all be handled under the bug above.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Colin King <colin.king@canonical.com>

commit 97446b3c326efbca9698876c41d2d309ea0f229b
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu Nov 27 19:12:07 2008 +0000

    UBUNTU: SAUCE: (no-up) version: Implement version_signature proc file.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Tim Gardener <tim.gardner@canonical.com>

commit e68fec95c4cd2547bc6d1c3b544490d3db72ff6a
Author: Leann Ogasawara <leann.ogasawara@canonical.com>
Date:   Fri Mar 12 17:13:25 2010 -0800

    UBUNTU: [debian] Initial debian and ubuntu directories
    
    Based off Ubuntu-unstable-6.0.0-9.9.
    
    Ignore: yes
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
